{
  "code": [
  {
    "name": "D:\\softwares\\Node.js\\node.exe",
    "type": "SHARED_LIB"
  },
  {
    "name": "C:\\WINDOWS\\SYSTEM32\\ntdll.dll",
    "type": "SHARED_LIB"
  },
  {
    "name": "C:\\WINDOWS\\System32\\KERNEL32.DLL",
    "type": "SHARED_LIB"
  },
  {
    "name": "C:\\WINDOWS\\System32\\KERNELBASE.dll",
    "type": "SHARED_LIB"
  },
  {
    "name": "C:\\WINDOWS\\System32\\WS2_32.dll",
    "type": "SHARED_LIB"
  },
  {
    "name": "C:\\WINDOWS\\System32\\RPCRT4.dll",
    "type": "SHARED_LIB"
  },
  {
    "name": "C:\\WINDOWS\\SYSTEM32\\dbghelp.dll",
    "type": "SHARED_LIB"
  },
  {
    "name": "C:\\WINDOWS\\System32\\ucrtbase.dll",
    "type": "SHARED_LIB"
  },
  {
    "name": "C:\\WINDOWS\\System32\\PSAPI.DLL",
    "type": "SHARED_LIB"
  },
  {
    "name": "C:\\WINDOWS\\System32\\ADVAPI32.dll",
    "type": "SHARED_LIB"
  },
  {
    "name": "C:\\WINDOWS\\System32\\combase.dll",
    "type": "SHARED_LIB"
  },
  {
    "name": "C:\\WINDOWS\\System32\\msvcrt.dll",
    "type": "SHARED_LIB"
  },
  {
    "name": "C:\\WINDOWS\\System32\\OLEAUT32.dll",
    "type": "SHARED_LIB"
  },
  {
    "name": "C:\\WINDOWS\\System32\\sechost.dll",
    "type": "SHARED_LIB"
  },
  {
    "name": "C:\\WINDOWS\\SYSTEM32\\IPHLPAPI.DLL",
    "type": "SHARED_LIB"
  },
  {
    "name": "C:\\WINDOWS\\System32\\msvcp_win.dll",
    "type": "SHARED_LIB"
  },
  {
    "name": "C:\\WINDOWS\\SYSTEM32\\USERENV.dll",
    "type": "SHARED_LIB"
  },
  {
    "name": "C:\\WINDOWS\\System32\\USER32.dll",
    "type": "SHARED_LIB"
  },
  {
    "name": "C:\\WINDOWS\\System32\\win32u.dll",
    "type": "SHARED_LIB"
  },
  {
    "name": "C:\\WINDOWS\\System32\\GDI32.dll",
    "type": "SHARED_LIB"
  },
  {
    "name": "C:\\WINDOWS\\System32\\gdi32full.dll",
    "type": "SHARED_LIB"
  },
  {
    "name": "C:\\WINDOWS\\System32\\CRYPT32.dll",
    "type": "SHARED_LIB"
  },
  {
    "name": "C:\\WINDOWS\\SYSTEM32\\WINMM.dll",
    "type": "SHARED_LIB"
  },
  {
    "name": "C:\\WINDOWS\\SYSTEM32\\bcrypt.dll",
    "type": "SHARED_LIB"
  },
  {
    "name": "C:\\WINDOWS\\SYSTEM32\\CRYPTBASE.DLL",
    "type": "SHARED_LIB"
  },
  {
    "name": "C:\\WINDOWS\\System32\\IMM32.DLL",
    "type": "SHARED_LIB"
  },
  {
    "name": "C:\\WINDOWS\\SYSTEM32\\powrprof.dll",
    "type": "SHARED_LIB"
  },
  {
    "name": "C:\\WINDOWS\\SYSTEM32\\UMPDC.dll",
    "type": "SHARED_LIB"
  },
  {
    "name": "C:\\WINDOWS\\system32\\uxtheme.dll",
    "type": "SHARED_LIB"
  },
  {
    "name": "C:\\WINDOWS\\system32\\mswsock.dll",
    "type": "SHARED_LIB"
  },
  {
    "name": "C:\\WINDOWS\\System32\\bcryptprimitives.dll",
    "type": "SHARED_LIB"
  },
  {
    "name": "C:\\WINDOWS\\SYSTEM32\\kernel.appcore.dll",
    "type": "SHARED_LIB"
  },
  {
    "name": "DeoptimizationEntry_Eager",
    "timestamp": 142439,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DeoptimizationEntry_Lazy",
    "timestamp": 142451,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DeoptimizationEntry_Unused",
    "timestamp": 142455,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RecordWriteEmitRememberedSetSaveFP",
    "timestamp": 142460,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RecordWriteOmitRememberedSetSaveFP",
    "timestamp": 142466,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RecordWriteEmitRememberedSetIgnoreFP",
    "timestamp": 142471,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RecordWriteOmitRememberedSetIgnoreFP",
    "timestamp": 142475,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "EphemeronKeyBarrierSaveFP",
    "timestamp": 142480,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "EphemeronKeyBarrierIgnoreFP",
    "timestamp": 142519,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AdaptorWithBuiltinExitFrame",
    "timestamp": 142526,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallFunction_ReceiverIsNullOrUndefined",
    "timestamp": 142532,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallFunction_ReceiverIsNotNullOrUndefined",
    "timestamp": 142536,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallFunction_ReceiverIsAny",
    "timestamp": 142541,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallBoundFunction",
    "timestamp": 142545,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallWrappedFunction",
    "timestamp": 142550,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Call_ReceiverIsNullOrUndefined",
    "timestamp": 142556,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Call_ReceiverIsNotNullOrUndefined",
    "timestamp": 142560,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Call_ReceiverIsAny",
    "timestamp": 142570,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Call_ReceiverIsNullOrUndefined_Baseline_Compact",
    "timestamp": 142574,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Call_ReceiverIsNullOrUndefined_Baseline",
    "timestamp": 142579,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Call_ReceiverIsNotNullOrUndefined_Baseline_Compact",
    "timestamp": 142584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Call_ReceiverIsNotNullOrUndefined_Baseline",
    "timestamp": 142589,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Call_ReceiverIsAny_Baseline_Compact",
    "timestamp": 142593,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Call_ReceiverIsAny_Baseline",
    "timestamp": 142598,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Call_ReceiverIsNullOrUndefined_WithFeedback",
    "timestamp": 142602,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Call_ReceiverIsNotNullOrUndefined_WithFeedback",
    "timestamp": 142607,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Call_ReceiverIsAny_WithFeedback",
    "timestamp": 142611,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallProxy",
    "timestamp": 142616,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallVarargs",
    "timestamp": 142620,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallWithSpread",
    "timestamp": 142624,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallWithSpread_Baseline",
    "timestamp": 142628,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallWithSpread_WithFeedback",
    "timestamp": 142633,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallWithArrayLike",
    "timestamp": 142637,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallWithArrayLike_WithFeedback",
    "timestamp": 142642,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallForwardVarargs",
    "timestamp": 142647,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallFunctionForwardVarargs",
    "timestamp": 142651,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallFunctionTemplate_CheckAccess",
    "timestamp": 142655,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallFunctionTemplate_CheckCompatibleReceiver",
    "timestamp": 142659,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallFunctionTemplate_CheckAccessAndCompatibleReceiver",
    "timestamp": 142664,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConstructFunction",
    "timestamp": 142669,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConstructBoundFunction",
    "timestamp": 142673,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConstructedNonConstructable",
    "timestamp": 142677,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Construct",
    "timestamp": 142682,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConstructVarargs",
    "timestamp": 142685,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConstructWithSpread",
    "timestamp": 142689,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConstructWithSpread_Baseline",
    "timestamp": 142693,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConstructWithSpread_WithFeedback",
    "timestamp": 142698,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConstructWithArrayLike",
    "timestamp": 142702,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConstructWithArrayLike_WithFeedback",
    "timestamp": 142706,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConstructForwardVarargs",
    "timestamp": 142710,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConstructFunctionForwardVarargs",
    "timestamp": 142715,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Construct_Baseline",
    "timestamp": 142719,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Construct_WithFeedback",
    "timestamp": 142723,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "JSConstructStubGeneric",
    "timestamp": 142727,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "JSBuiltinsConstructStub",
    "timestamp": 142731,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FastNewObject",
    "timestamp": 142735,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FastNewClosure",
    "timestamp": 142739,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConstructProxy",
    "timestamp": 142743,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "JSEntry",
    "timestamp": 142747,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "JSConstructEntry",
    "timestamp": 142751,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "JSRunMicrotasksEntry",
    "timestamp": 142755,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "JSEntryTrampoline",
    "timestamp": 142760,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "JSConstructEntryTrampoline",
    "timestamp": 142764,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ResumeGeneratorTrampoline",
    "timestamp": 142769,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringFromCodePointAt",
    "timestamp": 142773,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringEqual",
    "timestamp": 142777,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringGreaterThan",
    "timestamp": 142782,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringGreaterThanOrEqual",
    "timestamp": 142792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringLessThan",
    "timestamp": 142796,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringLessThanOrEqual",
    "timestamp": 142800,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringSubstring",
    "timestamp": 142804,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "OrderedHashTableHealIndex",
    "timestamp": 142808,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "InterpreterEntryTrampoline",
    "timestamp": 142813,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "InterpreterPushArgsThenCall",
    "timestamp": 142817,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "InterpreterPushUndefinedAndArgsThenCall",
    "timestamp": 142821,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "InterpreterPushArgsThenCallWithFinalSpread",
    "timestamp": 142826,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "InterpreterPushArgsThenConstruct",
    "timestamp": 142830,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "InterpreterPushArgsThenConstructArrayFunction",
    "timestamp": 142834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "InterpreterPushArgsThenConstructWithFinalSpread",
    "timestamp": 142839,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "InterpreterEnterAtBytecode",
    "timestamp": 142843,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "InterpreterEnterAtNextBytecode",
    "timestamp": 142848,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "InterpreterOnStackReplacement",
    "timestamp": 142852,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BaselineOutOfLinePrologue",
    "timestamp": 142856,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BaselineOnStackReplacement",
    "timestamp": 142860,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BaselineLeaveFrame",
    "timestamp": 142864,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BaselineOrInterpreterEnterAtBytecode",
    "timestamp": 142868,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BaselineOrInterpreterEnterAtNextBytecode",
    "timestamp": 142873,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "InterpreterOnStackReplacement_ToBaseline",
    "timestamp": 142877,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CompileLazy",
    "timestamp": 142882,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CompileLazyDeoptimizedCode",
    "timestamp": 142886,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "InstantiateAsmJs",
    "timestamp": 142890,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NotifyDeoptimized",
    "timestamp": 142894,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ContinueToCodeStubBuiltin",
    "timestamp": 142898,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ContinueToCodeStubBuiltinWithResult",
    "timestamp": 142902,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ContinueToJavaScriptBuiltin",
    "timestamp": 142907,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ContinueToJavaScriptBuiltinWithResult",
    "timestamp": 142911,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallApiCallback",
    "timestamp": 142915,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallApiGetter",
    "timestamp": 142919,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "HandleApiCall",
    "timestamp": 142923,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "HandleApiCallAsFunction",
    "timestamp": 142927,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "HandleApiCallAsConstructor",
    "timestamp": 142931,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AllocateInYoungGeneration",
    "timestamp": 142935,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AllocateRegularInYoungGeneration",
    "timestamp": 142940,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AllocateInOldGeneration",
    "timestamp": 142945,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AllocateRegularInOldGeneration",
    "timestamp": 142949,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CopyFastSmiOrObjectElements",
    "timestamp": 142953,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GrowFastDoubleElements",
    "timestamp": 142957,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GrowFastSmiOrObjectElements",
    "timestamp": 142961,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DebugBreakTrampoline",
    "timestamp": 142965,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ToNumber",
    "timestamp": 142969,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ToNumber_Baseline",
    "timestamp": 142973,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ToNumeric_Baseline",
    "timestamp": 142977,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PlainPrimitiveToNumber",
    "timestamp": 142981,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ToNumberConvertBigInt",
    "timestamp": 142985,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Typeof",
    "timestamp": 142989,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BigIntToI64",
    "timestamp": 142993,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BigIntToI32Pair",
    "timestamp": 142998,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "I64ToBigInt",
    "timestamp": 143002,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "I32PairToBigInt",
    "timestamp": 143006,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ToBooleanLazyDeoptContinuation",
    "timestamp": 143010,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "KeyedLoadIC_PolymorphicName",
    "timestamp": 143015,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "KeyedStoreIC_Megamorphic",
    "timestamp": 143019,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DefineKeyedOwnIC_Megamorphic",
    "timestamp": 143023,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadGlobalIC_NoFeedback",
    "timestamp": 143027,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadIC_FunctionPrototype",
    "timestamp": 143032,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadIC_StringLength",
    "timestamp": 143036,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadIC_StringWrapperLength",
    "timestamp": 143040,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadIC_NoFeedback",
    "timestamp": 143044,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreGlobalIC_Slow",
    "timestamp": 143048,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreIC_NoFeedback",
    "timestamp": 143052,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DefineNamedOwnIC_NoFeedback",
    "timestamp": 143056,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "KeyedLoadIC_SloppyArguments",
    "timestamp": 143060,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadIndexedInterceptorIC",
    "timestamp": 143065,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "KeyedStoreIC_SloppyArguments_Standard",
    "timestamp": 143069,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "KeyedStoreIC_SloppyArguments_GrowNoTransitionHandleCOW",
    "timestamp": 143074,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "KeyedStoreIC_SloppyArguments_NoTransitionIgnoreOOB",
    "timestamp": 143079,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "KeyedStoreIC_SloppyArguments_NoTransitionHandleCOW",
    "timestamp": 143084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreFastElementIC_Standard",
    "timestamp": 143088,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreFastElementIC_GrowNoTransitionHandleCOW",
    "timestamp": 143092,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreFastElementIC_NoTransitionIgnoreOOB",
    "timestamp": 143097,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreFastElementIC_NoTransitionHandleCOW",
    "timestamp": 143102,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ElementsTransitionAndStore_Standard",
    "timestamp": 143106,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ElementsTransitionAndStore_GrowNoTransitionHandleCOW",
    "timestamp": 143111,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ElementsTransitionAndStore_NoTransitionIgnoreOOB",
    "timestamp": 143116,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ElementsTransitionAndStore_NoTransitionHandleCOW",
    "timestamp": 143120,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "KeyedHasIC_PolymorphicName",
    "timestamp": 143125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "KeyedHasIC_SloppyArguments",
    "timestamp": 143129,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "HasIndexedInterceptorIC",
    "timestamp": 143133,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "EnqueueMicrotask",
    "timestamp": 143137,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RunMicrotasksTrampoline",
    "timestamp": 143141,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RunMicrotasks",
    "timestamp": 143145,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "HasProperty",
    "timestamp": 143150,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DeleteProperty",
    "timestamp": 143154,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CopyDataProperties",
    "timestamp": 143158,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SetDataProperties",
    "timestamp": 143162,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CopyDataPropertiesWithExcludedPropertiesOnStack",
    "timestamp": 143166,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CopyDataPropertiesWithExcludedProperties",
    "timestamp": 143171,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Abort",
    "timestamp": 143175,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AbortCSADcheck",
    "timestamp": 143183,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "EmptyFunction",
    "timestamp": 143187,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Illegal",
    "timestamp": 143191,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StrictPoisonPillThrower",
    "timestamp": 143195,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "UnsupportedThrower",
    "timestamp": 143199,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ReturnReceiver",
    "timestamp": 143203,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayConstructor",
    "timestamp": 143207,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayConstructorImpl",
    "timestamp": 143211,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayNoArgumentConstructor_PackedSmi_DontOverride",
    "timestamp": 143215,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayNoArgumentConstructor_HoleySmi_DontOverride",
    "timestamp": 143222,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayNoArgumentConstructor_PackedSmi_DisableAllocationSites",
    "timestamp": 143237,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayNoArgumentConstructor_HoleySmi_DisableAllocationSites",
    "timestamp": 143243,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayNoArgumentConstructor_Packed_DisableAllocationSites",
    "timestamp": 143248,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayNoArgumentConstructor_Holey_DisableAllocationSites",
    "timestamp": 143253,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayNoArgumentConstructor_PackedDouble_DisableAllocationSites",
    "timestamp": 143258,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayNoArgumentConstructor_HoleyDouble_DisableAllocationSites",
    "timestamp": 143263,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArraySingleArgumentConstructor_PackedSmi_DontOverride",
    "timestamp": 143267,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArraySingleArgumentConstructor_HoleySmi_DontOverride",
    "timestamp": 143272,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArraySingleArgumentConstructor_PackedSmi_DisableAllocationSites",
    "timestamp": 143277,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArraySingleArgumentConstructor_HoleySmi_DisableAllocationSites",
    "timestamp": 143282,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArraySingleArgumentConstructor_Packed_DisableAllocationSites",
    "timestamp": 143287,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArraySingleArgumentConstructor_Holey_DisableAllocationSites",
    "timestamp": 143292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArraySingleArgumentConstructor_PackedDouble_DisableAllocationSites",
    "timestamp": 143297,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArraySingleArgumentConstructor_HoleyDouble_DisableAllocationSites",
    "timestamp": 143302,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayNArgumentsConstructor",
    "timestamp": 143307,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayConcat",
    "timestamp": 143311,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeFill",
    "timestamp": 143315,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayIncludesSmiOrObject",
    "timestamp": 143319,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayIncludesPackedDoubles",
    "timestamp": 143323,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayIncludesHoleyDoubles",
    "timestamp": 143327,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayIncludes",
    "timestamp": 143331,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayIndexOfSmiOrObject",
    "timestamp": 143335,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayIndexOfPackedDoubles",
    "timestamp": 143339,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayIndexOfHoleyDoubles",
    "timestamp": 143343,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayIndexOf",
    "timestamp": 143348,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPop",
    "timestamp": 143352,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypePop",
    "timestamp": 143355,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeGroupBy",
    "timestamp": 143359,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeGroupByToMap",
    "timestamp": 143363,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPush",
    "timestamp": 143368,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypePush",
    "timestamp": 143371,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayShift",
    "timestamp": 143375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayUnshift",
    "timestamp": 143379,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CloneFastJSArray",
    "timestamp": 143383,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CloneFastJSArrayFillingHoles",
    "timestamp": 143387,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ExtractFastJSArray",
    "timestamp": 143391,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeEntries",
    "timestamp": 143395,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeKeys",
    "timestamp": 143399,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeValues",
    "timestamp": 143404,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayIteratorPrototypeNext",
    "timestamp": 143408,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FlattenIntoArray",
    "timestamp": 143412,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FlatMapIntoArray",
    "timestamp": 143416,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeFlat",
    "timestamp": 143420,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeFlatMap",
    "timestamp": 143424,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayBufferConstructor",
    "timestamp": 143428,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayBufferConstructor_DoNotInitialize",
    "timestamp": 143433,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayBufferPrototypeSlice",
    "timestamp": 143437,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayBufferPrototypeResize",
    "timestamp": 143441,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncFunctionEnter",
    "timestamp": 143445,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncFunctionReject",
    "timestamp": 143450,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncFunctionResolve",
    "timestamp": 143463,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncFunctionLazyDeoptContinuation",
    "timestamp": 143468,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncFunctionAwaitCaught",
    "timestamp": 143473,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncFunctionAwaitUncaught",
    "timestamp": 143477,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncFunctionAwaitRejectClosure",
    "timestamp": 143481,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncFunctionAwaitResolveClosure",
    "timestamp": 143486,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BigIntConstructor",
    "timestamp": 143490,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BigIntAsUintN",
    "timestamp": 143494,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BigIntAsIntN",
    "timestamp": 143498,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BigIntPrototypeToLocaleString",
    "timestamp": 143502,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BigIntPrototypeToString",
    "timestamp": 143507,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BigIntPrototypeValueOf",
    "timestamp": 143511,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallSitePrototypeGetColumnNumber",
    "timestamp": 143515,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallSitePrototypeGetEnclosingColumnNumber",
    "timestamp": 143519,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallSitePrototypeGetEnclosingLineNumber",
    "timestamp": 143524,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallSitePrototypeGetEvalOrigin",
    "timestamp": 143528,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallSitePrototypeGetFileName",
    "timestamp": 143532,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallSitePrototypeGetFunction",
    "timestamp": 143537,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallSitePrototypeGetFunctionName",
    "timestamp": 143541,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallSitePrototypeGetLineNumber",
    "timestamp": 143545,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallSitePrototypeGetMethodName",
    "timestamp": 143549,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallSitePrototypeGetPosition",
    "timestamp": 143555,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallSitePrototypeGetPromiseIndex",
    "timestamp": 143559,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallSitePrototypeGetScriptNameOrSourceURL",
    "timestamp": 143564,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallSitePrototypeGetThis",
    "timestamp": 143568,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallSitePrototypeGetTypeName",
    "timestamp": 143573,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallSitePrototypeIsAsync",
    "timestamp": 143577,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallSitePrototypeIsConstructor",
    "timestamp": 143581,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallSitePrototypeIsEval",
    "timestamp": 143586,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallSitePrototypeIsNative",
    "timestamp": 143590,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallSitePrototypeIsPromiseAll",
    "timestamp": 143598,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallSitePrototypeIsToplevel",
    "timestamp": 143603,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallSitePrototypeToString",
    "timestamp": 143607,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConsoleDebug",
    "timestamp": 143611,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConsoleError",
    "timestamp": 143615,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConsoleInfo",
    "timestamp": 143619,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConsoleLog",
    "timestamp": 143623,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConsoleWarn",
    "timestamp": 143627,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConsoleDir",
    "timestamp": 143631,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConsoleDirXml",
    "timestamp": 143635,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConsoleTable",
    "timestamp": 143639,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConsoleTrace",
    "timestamp": 143643,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConsoleGroup",
    "timestamp": 143647,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConsoleGroupCollapsed",
    "timestamp": 143652,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConsoleGroupEnd",
    "timestamp": 143657,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConsoleClear",
    "timestamp": 143661,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConsoleCount",
    "timestamp": 143665,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConsoleCountReset",
    "timestamp": 143669,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConsoleAssert",
    "timestamp": 143673,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConsoleProfile",
    "timestamp": 143677,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConsoleProfileEnd",
    "timestamp": 143681,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConsoleTime",
    "timestamp": 143685,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConsoleTimeLog",
    "timestamp": 143689,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConsoleTimeEnd",
    "timestamp": 143693,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConsoleTimeStamp",
    "timestamp": 143697,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConsoleContext",
    "timestamp": 143701,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DataViewConstructor",
    "timestamp": 143705,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DateConstructor",
    "timestamp": 143710,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeGetDate",
    "timestamp": 143715,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeGetDay",
    "timestamp": 143719,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeGetFullYear",
    "timestamp": 143723,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeGetHours",
    "timestamp": 143727,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeGetMilliseconds",
    "timestamp": 143731,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeGetMinutes",
    "timestamp": 143736,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeGetMonth",
    "timestamp": 143740,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeGetSeconds",
    "timestamp": 143744,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeGetTime",
    "timestamp": 143748,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeGetTimezoneOffset",
    "timestamp": 143752,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeGetUTCDate",
    "timestamp": 143756,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeGetUTCDay",
    "timestamp": 143761,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeGetUTCFullYear",
    "timestamp": 143765,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeGetUTCHours",
    "timestamp": 143769,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeGetUTCMilliseconds",
    "timestamp": 143773,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeGetUTCMinutes",
    "timestamp": 143778,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeGetUTCMonth",
    "timestamp": 143782,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeGetUTCSeconds",
    "timestamp": 143786,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeValueOf",
    "timestamp": 143790,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeToPrimitive",
    "timestamp": 143795,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeGetYear",
    "timestamp": 143799,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeSetYear",
    "timestamp": 143803,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DateNow",
    "timestamp": 143807,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DateParse",
    "timestamp": 143811,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeSetDate",
    "timestamp": 143815,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeSetFullYear",
    "timestamp": 143819,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeSetHours",
    "timestamp": 143823,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeSetMilliseconds",
    "timestamp": 143827,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeSetMinutes",
    "timestamp": 143831,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeSetMonth",
    "timestamp": 143835,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeSetSeconds",
    "timestamp": 143839,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeSetTime",
    "timestamp": 143843,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeSetUTCDate",
    "timestamp": 143848,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeSetUTCFullYear",
    "timestamp": 143853,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeSetUTCHours",
    "timestamp": 143857,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeSetUTCMilliseconds",
    "timestamp": 143862,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeSetUTCMinutes",
    "timestamp": 143866,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeSetUTCMonth",
    "timestamp": 143870,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeSetUTCSeconds",
    "timestamp": 143874,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeToDateString",
    "timestamp": 143878,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeToISOString",
    "timestamp": 143882,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeToUTCString",
    "timestamp": 143886,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeToString",
    "timestamp": 143890,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeToTimeString",
    "timestamp": 143895,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeToJson",
    "timestamp": 143899,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DateUTC",
    "timestamp": 143903,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ErrorConstructor",
    "timestamp": 143906,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ErrorCaptureStackTrace",
    "timestamp": 143910,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ErrorPrototypeToString",
    "timestamp": 143914,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FunctionConstructor",
    "timestamp": 143918,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FunctionPrototypeApply",
    "timestamp": 143922,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FunctionPrototypeBind",
    "timestamp": 143927,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FunctionPrototypeCall",
    "timestamp": 143931,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FunctionPrototypeToString",
    "timestamp": 143935,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CreateIterResultObject",
    "timestamp": 143939,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CreateGeneratorObject",
    "timestamp": 143943,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GeneratorFunctionConstructor",
    "timestamp": 143947,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GeneratorPrototypeNext",
    "timestamp": 143952,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GeneratorPrototypeReturn",
    "timestamp": 143956,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GeneratorPrototypeThrow",
    "timestamp": 143960,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncFunctionConstructor",
    "timestamp": 143965,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SuspendGeneratorBaseline",
    "timestamp": 143969,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ResumeGeneratorBaseline",
    "timestamp": 143973,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GetIteratorWithFeedbackLazyDeoptContinuation",
    "timestamp": 143977,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GlobalDecodeURI",
    "timestamp": 143981,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GlobalDecodeURIComponent",
    "timestamp": 143986,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GlobalEncodeURI",
    "timestamp": 143990,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GlobalEncodeURIComponent",
    "timestamp": 143994,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GlobalEscape",
    "timestamp": 144001,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GlobalUnescape",
    "timestamp": 144005,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GlobalEval",
    "timestamp": 144009,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GlobalIsFinite",
    "timestamp": 144013,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GlobalIsNaN",
    "timestamp": 144017,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "JsonParse",
    "timestamp": 144021,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "JsonStringify",
    "timestamp": 144025,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadIC",
    "timestamp": 144029,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadIC_Megamorphic",
    "timestamp": 144033,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadIC_Noninlined",
    "timestamp": 144037,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadICTrampoline",
    "timestamp": 144041,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadICBaseline",
    "timestamp": 144045,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadICTrampoline_Megamorphic",
    "timestamp": 144049,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadSuperIC",
    "timestamp": 144053,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadSuperICBaseline",
    "timestamp": 144057,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "KeyedLoadIC",
    "timestamp": 144061,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "KeyedLoadIC_Megamorphic",
    "timestamp": 144065,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "KeyedLoadICTrampoline",
    "timestamp": 144069,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "KeyedLoadICBaseline",
    "timestamp": 144073,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "KeyedLoadICTrampoline_Megamorphic",
    "timestamp": 144077,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreGlobalIC",
    "timestamp": 144081,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreGlobalICTrampoline",
    "timestamp": 144085,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreGlobalICBaseline",
    "timestamp": 144089,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreIC",
    "timestamp": 144093,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreICTrampoline",
    "timestamp": 144097,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreICBaseline",
    "timestamp": 144101,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DefineNamedOwnIC",
    "timestamp": 144105,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DefineNamedOwnICTrampoline",
    "timestamp": 144109,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DefineNamedOwnICBaseline",
    "timestamp": 144113,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "KeyedStoreIC",
    "timestamp": 144117,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "KeyedStoreICTrampoline",
    "timestamp": 144121,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "KeyedStoreICBaseline",
    "timestamp": 144125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DefineKeyedOwnIC",
    "timestamp": 144129,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DefineKeyedOwnICTrampoline",
    "timestamp": 144133,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DefineKeyedOwnICBaseline",
    "timestamp": 144137,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreInArrayLiteralIC",
    "timestamp": 144141,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreInArrayLiteralICBaseline",
    "timestamp": 144145,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LookupContextBaseline",
    "timestamp": 144150,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LookupContextInsideTypeofBaseline",
    "timestamp": 144154,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadGlobalIC",
    "timestamp": 144158,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadGlobalICInsideTypeof",
    "timestamp": 144162,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadGlobalICTrampoline",
    "timestamp": 144166,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadGlobalICBaseline",
    "timestamp": 144170,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadGlobalICInsideTypeofTrampoline",
    "timestamp": 144174,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadGlobalICInsideTypeofBaseline",
    "timestamp": 144178,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LookupGlobalICBaseline",
    "timestamp": 144183,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LookupGlobalICInsideTypeofBaseline",
    "timestamp": 144188,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CloneObjectIC",
    "timestamp": 144193,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CloneObjectICBaseline",
    "timestamp": 144197,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CloneObjectIC_Slow",
    "timestamp": 144201,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "KeyedHasIC",
    "timestamp": 144205,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "KeyedHasICBaseline",
    "timestamp": 144209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "KeyedHasIC_Megamorphic",
    "timestamp": 144213,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "IterableToList",
    "timestamp": 144217,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "IterableToFixedArray",
    "timestamp": 144221,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "IterableToListWithSymbolLookup",
    "timestamp": 144225,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "IterableToFixedArrayWithSymbolLookupSlow",
    "timestamp": 144230,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "IterableToListMayPreserveHoles",
    "timestamp": 144234,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "IterableToFixedArrayForWasm",
    "timestamp": 144238,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringListFromIterable",
    "timestamp": 144243,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FindOrderedHashMapEntry",
    "timestamp": 144247,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MapConstructor",
    "timestamp": 144251,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MapPrototypeSet",
    "timestamp": 144255,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MapPrototypeDelete",
    "timestamp": 144259,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MapPrototypeGet",
    "timestamp": 144263,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MapPrototypeHas",
    "timestamp": 144267,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MapPrototypeClear",
    "timestamp": 144271,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MapPrototypeEntries",
    "timestamp": 144275,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MapPrototypeGetSize",
    "timestamp": 144279,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MapPrototypeForEach",
    "timestamp": 144283,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MapPrototypeKeys",
    "timestamp": 144287,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MapPrototypeValues",
    "timestamp": 144291,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MapIteratorPrototypeNext",
    "timestamp": 144295,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MapIteratorToList",
    "timestamp": 144300,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NumberPrototypeToExponential",
    "timestamp": 144303,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NumberPrototypeToFixed",
    "timestamp": 144308,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NumberPrototypeToLocaleString",
    "timestamp": 144312,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NumberPrototypeToPrecision",
    "timestamp": 144316,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SameValue",
    "timestamp": 144320,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SameValueNumbersOnly",
    "timestamp": 144324,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Add_Baseline",
    "timestamp": 144328,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AddSmi_Baseline",
    "timestamp": 144332,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Subtract_Baseline",
    "timestamp": 144336,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SubtractSmi_Baseline",
    "timestamp": 144340,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Multiply_Baseline",
    "timestamp": 144344,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MultiplySmi_Baseline",
    "timestamp": 144348,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Divide_Baseline",
    "timestamp": 144352,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DivideSmi_Baseline",
    "timestamp": 144356,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Modulus_Baseline",
    "timestamp": 144360,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ModulusSmi_Baseline",
    "timestamp": 144364,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Exponentiate_Baseline",
    "timestamp": 144368,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ExponentiateSmi_Baseline",
    "timestamp": 144372,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BitwiseAnd_Baseline",
    "timestamp": 144376,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BitwiseAndSmi_Baseline",
    "timestamp": 144380,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BitwiseOr_Baseline",
    "timestamp": 144384,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BitwiseOrSmi_Baseline",
    "timestamp": 144388,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BitwiseXor_Baseline",
    "timestamp": 144401,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BitwiseXorSmi_Baseline",
    "timestamp": 144405,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ShiftLeft_Baseline",
    "timestamp": 144410,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ShiftLeftSmi_Baseline",
    "timestamp": 144414,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ShiftRight_Baseline",
    "timestamp": 144418,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ShiftRightSmi_Baseline",
    "timestamp": 144422,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ShiftRightLogical_Baseline",
    "timestamp": 144426,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ShiftRightLogicalSmi_Baseline",
    "timestamp": 144431,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Add_WithFeedback",
    "timestamp": 144435,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Subtract_WithFeedback",
    "timestamp": 144439,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Multiply_WithFeedback",
    "timestamp": 144444,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Divide_WithFeedback",
    "timestamp": 144449,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Modulus_WithFeedback",
    "timestamp": 144453,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Exponentiate_WithFeedback",
    "timestamp": 144458,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BitwiseAnd_WithFeedback",
    "timestamp": 144462,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BitwiseOr_WithFeedback",
    "timestamp": 144466,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BitwiseXor_WithFeedback",
    "timestamp": 144470,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ShiftLeft_WithFeedback",
    "timestamp": 144475,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ShiftRight_WithFeedback",
    "timestamp": 144479,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ShiftRightLogical_WithFeedback",
    "timestamp": 144483,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Equal_Baseline",
    "timestamp": 144488,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StrictEqual_Baseline",
    "timestamp": 144492,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LessThan_Baseline",
    "timestamp": 144496,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GreaterThan_Baseline",
    "timestamp": 144500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LessThanOrEqual_Baseline",
    "timestamp": 144504,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GreaterThanOrEqual_Baseline",
    "timestamp": 144509,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Equal_WithFeedback",
    "timestamp": 144513,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StrictEqual_WithFeedback",
    "timestamp": 144517,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LessThan_WithFeedback",
    "timestamp": 144522,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GreaterThan_WithFeedback",
    "timestamp": 144526,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LessThanOrEqual_WithFeedback",
    "timestamp": 144530,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GreaterThanOrEqual_WithFeedback",
    "timestamp": 144535,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BitwiseNot_Baseline",
    "timestamp": 144539,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Decrement_Baseline",
    "timestamp": 144543,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Increment_Baseline",
    "timestamp": 144547,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Negate_Baseline",
    "timestamp": 144551,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BitwiseNot_WithFeedback",
    "timestamp": 144557,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Decrement_WithFeedback",
    "timestamp": 144561,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Increment_WithFeedback",
    "timestamp": 144565,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Negate_WithFeedback",
    "timestamp": 144569,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectAssign",
    "timestamp": 144573,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectCreate",
    "timestamp": 144577,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectDefineGetter",
    "timestamp": 144581,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectDefineProperties",
    "timestamp": 144585,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectDefineProperty",
    "timestamp": 144591,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectDefineSetter",
    "timestamp": 144595,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectEntries",
    "timestamp": 144599,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectFreeze",
    "timestamp": 144603,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectGetOwnPropertyDescriptor",
    "timestamp": 144607,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectGetOwnPropertyDescriptors",
    "timestamp": 144611,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectGetOwnPropertyNames",
    "timestamp": 144615,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectGetOwnPropertySymbols",
    "timestamp": 144619,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectHasOwn",
    "timestamp": 144624,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectIs",
    "timestamp": 144628,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectIsFrozen",
    "timestamp": 144632,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectIsSealed",
    "timestamp": 144635,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectKeys",
    "timestamp": 144639,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectLookupGetter",
    "timestamp": 144643,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectLookupSetter",
    "timestamp": 144647,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectPrototypeHasOwnProperty",
    "timestamp": 144651,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectPrototypeIsPrototypeOf",
    "timestamp": 144656,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectPrototypePropertyIsEnumerable",
    "timestamp": 144660,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectPrototypeGetProto",
    "timestamp": 144664,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectPrototypeSetProto",
    "timestamp": 144669,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectSeal",
    "timestamp": 144674,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectToString",
    "timestamp": 144678,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectValues",
    "timestamp": 144682,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "OrdinaryHasInstance",
    "timestamp": 144686,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "InstanceOf",
    "timestamp": 144690,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "InstanceOf_WithFeedback",
    "timestamp": 144695,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "InstanceOf_Baseline",
    "timestamp": 144699,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ForInEnumerate",
    "timestamp": 144703,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ForInPrepare",
    "timestamp": 144707,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ForInFilter",
    "timestamp": 144711,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ReflectApply",
    "timestamp": 144715,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ReflectConstruct",
    "timestamp": 144718,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ReflectDefineProperty",
    "timestamp": 144722,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ReflectGetOwnPropertyDescriptor",
    "timestamp": 144727,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ReflectOwnKeys",
    "timestamp": 144731,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ReflectSet",
    "timestamp": 144735,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpCapture1Getter",
    "timestamp": 144739,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpCapture2Getter",
    "timestamp": 144743,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpCapture3Getter",
    "timestamp": 144747,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpCapture4Getter",
    "timestamp": 144751,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpCapture5Getter",
    "timestamp": 144755,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpCapture6Getter",
    "timestamp": 144759,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpCapture7Getter",
    "timestamp": 144763,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpCapture8Getter",
    "timestamp": 144767,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpCapture9Getter",
    "timestamp": 144771,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpConstructor",
    "timestamp": 144775,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpInputGetter",
    "timestamp": 144779,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpInputSetter",
    "timestamp": 144783,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpLastMatchGetter",
    "timestamp": 144787,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpLastParenGetter",
    "timestamp": 144791,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpLeftContextGetter",
    "timestamp": 144795,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpPrototypeCompile",
    "timestamp": 144799,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpPrototypeToString",
    "timestamp": 144807,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpRightContextGetter",
    "timestamp": 144811,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpExecAtom",
    "timestamp": 144815,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpExecInternal",
    "timestamp": 144819,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpInterpreterTrampoline",
    "timestamp": 144823,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpExperimentalTrampoline",
    "timestamp": 144827,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SetConstructor",
    "timestamp": 144832,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SetPrototypeHas",
    "timestamp": 144835,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SetPrototypeAdd",
    "timestamp": 144839,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SetPrototypeDelete",
    "timestamp": 144843,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SetPrototypeClear",
    "timestamp": 144847,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SetPrototypeEntries",
    "timestamp": 144851,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SetPrototypeGetSize",
    "timestamp": 144855,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SetPrototypeForEach",
    "timestamp": 144859,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SetPrototypeValues",
    "timestamp": 144863,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SetIteratorPrototypeNext",
    "timestamp": 144867,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SetOrSetIteratorToList",
    "timestamp": 144872,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ShadowRealmConstructor",
    "timestamp": 144876,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ShadowRealmGetWrappedValue",
    "timestamp": 144880,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ShadowRealmPrototypeEvaluate",
    "timestamp": 144884,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ShadowRealmPrototypeImportValue",
    "timestamp": 144888,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SharedArrayBufferPrototypeGetByteLength",
    "timestamp": 144892,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SharedArrayBufferPrototypeSlice",
    "timestamp": 144897,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SharedArrayBufferPrototypeGrow",
    "timestamp": 144901,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AtomicsLoad",
    "timestamp": 144905,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AtomicsStore",
    "timestamp": 144909,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AtomicsExchange",
    "timestamp": 144913,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AtomicsCompareExchange",
    "timestamp": 144918,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AtomicsAdd",
    "timestamp": 144922,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AtomicsSub",
    "timestamp": 144926,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AtomicsAnd",
    "timestamp": 144930,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AtomicsOr",
    "timestamp": 144934,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AtomicsXor",
    "timestamp": 144938,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AtomicsNotify",
    "timestamp": 144942,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AtomicsIsLockFree",
    "timestamp": 144946,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AtomicsWait",
    "timestamp": 144950,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AtomicsWaitAsync",
    "timestamp": 144954,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringFromCodePoint",
    "timestamp": 144958,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringFromCharCode",
    "timestamp": 144962,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeLastIndexOf",
    "timestamp": 144966,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeMatchAll",
    "timestamp": 144970,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeLocaleCompare",
    "timestamp": 144975,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeReplace",
    "timestamp": 144979,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeSplit",
    "timestamp": 144983,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringRaw",
    "timestamp": 144987,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SymbolConstructor",
    "timestamp": 144991,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SymbolFor",
    "timestamp": 144995,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SymbolKeyFor",
    "timestamp": 144999,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayBaseConstructor",
    "timestamp": 145003,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayConstructor",
    "timestamp": 145007,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeBuffer",
    "timestamp": 145011,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeByteLength",
    "timestamp": 145015,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeByteOffset",
    "timestamp": 145020,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeLength",
    "timestamp": 145024,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeCopyWithin",
    "timestamp": 145028,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeFill",
    "timestamp": 145033,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeIncludes",
    "timestamp": 145037,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeIndexOf",
    "timestamp": 145041,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeLastIndexOf",
    "timestamp": 145045,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeReverse",
    "timestamp": 145049,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeToStringTag",
    "timestamp": 145053,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeMap",
    "timestamp": 145058,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GenericJSToWasmWrapper",
    "timestamp": 145062,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmReturnPromiseOnSuspend",
    "timestamp": 145066,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmSuspend",
    "timestamp": 145070,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmResume",
    "timestamp": 145074,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmCompileLazy",
    "timestamp": 145078,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmDebugBreak",
    "timestamp": 145083,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmOnStackReplace",
    "timestamp": 145087,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmFloat32ToNumber",
    "timestamp": 145092,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmFloat64ToNumber",
    "timestamp": 145096,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmI32AtomicWait32",
    "timestamp": 145100,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmI64AtomicWait32",
    "timestamp": 145104,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "JSToWasmLazyDeoptContinuation",
    "timestamp": 145107,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WeakMapConstructor",
    "timestamp": 145112,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WeakMapLookupHashIndex",
    "timestamp": 145116,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WeakMapGet",
    "timestamp": 145120,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WeakMapPrototypeHas",
    "timestamp": 145124,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WeakMapPrototypeSet",
    "timestamp": 145128,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WeakMapPrototypeDelete",
    "timestamp": 145132,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WeakSetConstructor",
    "timestamp": 145136,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WeakSetPrototypeHas",
    "timestamp": 145140,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WeakSetPrototypeAdd",
    "timestamp": 145144,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WeakSetPrototypeDelete",
    "timestamp": 145148,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WeakCollectionDelete",
    "timestamp": 145152,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WeakCollectionSet",
    "timestamp": 145157,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SharedStructTypeConstructor",
    "timestamp": 145162,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SharedStructConstructor",
    "timestamp": 145166,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncGeneratorResolve",
    "timestamp": 145170,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncGeneratorReject",
    "timestamp": 145174,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncGeneratorYield",
    "timestamp": 145178,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncGeneratorReturn",
    "timestamp": 145182,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncGeneratorResumeNext",
    "timestamp": 145186,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncGeneratorFunctionConstructor",
    "timestamp": 145190,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncGeneratorPrototypeNext",
    "timestamp": 145195,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncGeneratorPrototypeReturn",
    "timestamp": 145199,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncGeneratorPrototypeThrow",
    "timestamp": 145207,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncGeneratorAwaitCaught",
    "timestamp": 145211,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncGeneratorAwaitUncaught",
    "timestamp": 145215,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncGeneratorAwaitResolveClosure",
    "timestamp": 145219,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncGeneratorAwaitRejectClosure",
    "timestamp": 145224,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncGeneratorYieldResolveClosure",
    "timestamp": 145228,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncGeneratorReturnClosedResolveClosure",
    "timestamp": 145232,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncGeneratorReturnClosedRejectClosure",
    "timestamp": 145237,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncGeneratorReturnResolveClosure",
    "timestamp": 145241,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncFromSyncIteratorPrototypeNext",
    "timestamp": 145246,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncFromSyncIteratorPrototypeThrow",
    "timestamp": 145250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncFromSyncIteratorPrototypeReturn",
    "timestamp": 145254,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncIteratorValueUnwrap",
    "timestamp": 145259,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit",
    "timestamp": 145264,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit",
    "timestamp": 145268,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CEntry_Return1_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit",
    "timestamp": 145273,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CEntry_Return1_SaveFPRegs_ArgvOnStack_NoBuiltinExit",
    "timestamp": 145278,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CEntry_Return1_SaveFPRegs_ArgvOnStack_BuiltinExit",
    "timestamp": 145283,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CEntry_Return2_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit",
    "timestamp": 145287,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CEntry_Return2_DontSaveFPRegs_ArgvOnStack_BuiltinExit",
    "timestamp": 145292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CEntry_Return2_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit",
    "timestamp": 145297,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CEntry_Return2_SaveFPRegs_ArgvOnStack_NoBuiltinExit",
    "timestamp": 145302,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CEntry_Return2_SaveFPRegs_ArgvOnStack_BuiltinExit",
    "timestamp": 145308,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DirectCEntry",
    "timestamp": 145313,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringAdd_CheckNone",
    "timestamp": 145316,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SubString",
    "timestamp": 145320,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StackCheck",
    "timestamp": 145324,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DoubleToI",
    "timestamp": 145328,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GetProperty",
    "timestamp": 145332,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GetPropertyWithReceiver",
    "timestamp": 145336,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SetProperty",
    "timestamp": 145340,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CreateDataProperty",
    "timestamp": 145344,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MemCopyUint8Uint8",
    "timestamp": 145348,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MemMove",
    "timestamp": 145352,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "IsTraceCategoryEnabled",
    "timestamp": 145356,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Trace",
    "timestamp": 145360,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FinalizationRegistryUnregister",
    "timestamp": 145364,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncModuleEvaluate",
    "timestamp": 145368,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallAsyncModuleFulfilled",
    "timestamp": 145372,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallAsyncModuleRejected",
    "timestamp": 145376,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalNowTimeZone",
    "timestamp": 145381,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalNowInstant",
    "timestamp": 145385,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalNowPlainDateTime",
    "timestamp": 145389,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalNowPlainDateTimeISO",
    "timestamp": 145393,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalNowZonedDateTime",
    "timestamp": 145398,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalNowZonedDateTimeISO",
    "timestamp": 145402,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalNowPlainDate",
    "timestamp": 145406,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalNowPlainDateISO",
    "timestamp": 145410,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalNowPlainTimeISO",
    "timestamp": 145414,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateConstructor",
    "timestamp": 145418,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateFrom",
    "timestamp": 145423,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateCompare",
    "timestamp": 145427,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeCalendar",
    "timestamp": 145431,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeYear",
    "timestamp": 145435,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeMonth",
    "timestamp": 145440,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeMonthCode",
    "timestamp": 145444,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeDay",
    "timestamp": 145448,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeDayOfWeek",
    "timestamp": 145453,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeDayOfYear",
    "timestamp": 145457,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeWeekOfYear",
    "timestamp": 145462,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeDaysInWeek",
    "timestamp": 145466,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeDaysInMonth",
    "timestamp": 145470,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeDaysInYear",
    "timestamp": 145475,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeMonthsInYear",
    "timestamp": 145479,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeInLeapYear",
    "timestamp": 145484,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeToPlainYearMonth",
    "timestamp": 145488,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeToPlainMonthDay",
    "timestamp": 145492,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeGetISOFields",
    "timestamp": 145497,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeAdd",
    "timestamp": 145502,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeSubtract",
    "timestamp": 145506,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeWith",
    "timestamp": 145510,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeWithCalendar",
    "timestamp": 145514,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeUntil",
    "timestamp": 145519,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeSince",
    "timestamp": 145523,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeEquals",
    "timestamp": 145528,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeToPlainDateTime",
    "timestamp": 145532,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeToZonedDateTime",
    "timestamp": 145536,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeToString",
    "timestamp": 145541,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeToJSON",
    "timestamp": 145545,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeValueOf",
    "timestamp": 145551,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainTimeConstructor",
    "timestamp": 145555,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainTimeFrom",
    "timestamp": 145560,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainTimeCompare",
    "timestamp": 145564,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainTimePrototypeCalendar",
    "timestamp": 145568,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainTimePrototypeHour",
    "timestamp": 145573,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainTimePrototypeMinute",
    "timestamp": 145577,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainTimePrototypeSecond",
    "timestamp": 145581,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainTimePrototypeMillisecond",
    "timestamp": 145586,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainTimePrototypeMicrosecond",
    "timestamp": 145590,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainTimePrototypeNanosecond",
    "timestamp": 145598,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainTimePrototypeAdd",
    "timestamp": 145603,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainTimePrototypeSubtract",
    "timestamp": 145608,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainTimePrototypeWith",
    "timestamp": 145613,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainTimePrototypeUntil",
    "timestamp": 145617,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainTimePrototypeSince",
    "timestamp": 145622,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainTimePrototypeRound",
    "timestamp": 145626,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainTimePrototypeEquals",
    "timestamp": 145631,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainTimePrototypeToPlainDateTime",
    "timestamp": 145635,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainTimePrototypeToZonedDateTime",
    "timestamp": 145640,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainTimePrototypeGetISOFields",
    "timestamp": 145644,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainTimePrototypeToString",
    "timestamp": 145649,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainTimePrototypeToJSON",
    "timestamp": 145655,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainTimePrototypeValueOf",
    "timestamp": 145659,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimeConstructor",
    "timestamp": 145663,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimeFrom",
    "timestamp": 145668,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimeCompare",
    "timestamp": 145672,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeCalendar",
    "timestamp": 145676,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeYear",
    "timestamp": 145680,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeMonth",
    "timestamp": 145685,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeMonthCode",
    "timestamp": 145689,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeDay",
    "timestamp": 145694,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeHour",
    "timestamp": 145698,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeMinute",
    "timestamp": 145702,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeSecond",
    "timestamp": 145707,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeMillisecond",
    "timestamp": 145711,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeMicrosecond",
    "timestamp": 145716,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeNanosecond",
    "timestamp": 145720,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeDayOfWeek",
    "timestamp": 145725,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeDayOfYear",
    "timestamp": 145729,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeWeekOfYear",
    "timestamp": 145734,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeDaysInWeek",
    "timestamp": 145738,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeDaysInMonth",
    "timestamp": 145743,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeDaysInYear",
    "timestamp": 145747,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeMonthsInYear",
    "timestamp": 145751,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeInLeapYear",
    "timestamp": 145756,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeWith",
    "timestamp": 145760,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeWithPlainTime",
    "timestamp": 145765,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeWithPlainDate",
    "timestamp": 145769,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeWithCalendar",
    "timestamp": 145774,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeAdd",
    "timestamp": 145778,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeSubtract",
    "timestamp": 145783,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeUntil",
    "timestamp": 145787,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeSince",
    "timestamp": 145791,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeRound",
    "timestamp": 145796,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeEquals",
    "timestamp": 145800,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeToString",
    "timestamp": 145804,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeToJSON",
    "timestamp": 145809,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeValueOf",
    "timestamp": 145813,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeToZonedDateTime",
    "timestamp": 145819,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeToPlainDate",
    "timestamp": 145825,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeToPlainYearMonth",
    "timestamp": 145829,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeToPlainMonthDay",
    "timestamp": 145835,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeToPlainTime",
    "timestamp": 145839,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeGetISOFields",
    "timestamp": 145844,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimeConstructor",
    "timestamp": 145848,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimeFrom",
    "timestamp": 145852,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimeCompare",
    "timestamp": 145856,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeCalendar",
    "timestamp": 145860,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeTimeZone",
    "timestamp": 145865,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeYear",
    "timestamp": 145869,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeMonth",
    "timestamp": 145874,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeMonthCode",
    "timestamp": 145878,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeDay",
    "timestamp": 145882,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeHour",
    "timestamp": 145886,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeMinute",
    "timestamp": 145891,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeSecond",
    "timestamp": 145895,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeMillisecond",
    "timestamp": 145899,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeMicrosecond",
    "timestamp": 145904,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeNanosecond",
    "timestamp": 145908,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeEpochSeconds",
    "timestamp": 145913,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeEpochMilliseconds",
    "timestamp": 145917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeEpochMicroseconds",
    "timestamp": 145922,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeEpochNanoseconds",
    "timestamp": 145926,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeDayOfWeek",
    "timestamp": 145931,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeDayOfYear",
    "timestamp": 145935,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeWeekOfYear",
    "timestamp": 145940,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeHoursInDay",
    "timestamp": 145944,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeDaysInWeek",
    "timestamp": 145948,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeDaysInMonth",
    "timestamp": 145953,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeDaysInYear",
    "timestamp": 145957,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeMonthsInYear",
    "timestamp": 145961,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeInLeapYear",
    "timestamp": 145966,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeOffsetNanoseconds",
    "timestamp": 145970,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeOffset",
    "timestamp": 145975,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeWith",
    "timestamp": 145979,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeWithPlainTime",
    "timestamp": 145983,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeWithPlainDate",
    "timestamp": 145992,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeWithTimeZone",
    "timestamp": 145997,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeWithCalendar",
    "timestamp": 146001,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeAdd",
    "timestamp": 146006,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeSubtract",
    "timestamp": 146010,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeUntil",
    "timestamp": 146015,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeSince",
    "timestamp": 146019,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeRound",
    "timestamp": 146023,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeEquals",
    "timestamp": 146038,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeToString",
    "timestamp": 146043,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeToJSON",
    "timestamp": 146048,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeValueOf",
    "timestamp": 146052,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeStartOfDay",
    "timestamp": 146057,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeToInstant",
    "timestamp": 146061,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeToPlainDate",
    "timestamp": 146066,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeToPlainTime",
    "timestamp": 146070,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeToPlainDateTime",
    "timestamp": 146074,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeToPlainYearMonth",
    "timestamp": 146079,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeToPlainMonthDay",
    "timestamp": 146084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeGetISOFields",
    "timestamp": 146088,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationConstructor",
    "timestamp": 146093,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationFrom",
    "timestamp": 146097,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationCompare",
    "timestamp": 146101,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationPrototypeYears",
    "timestamp": 146105,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationPrototypeMonths",
    "timestamp": 146109,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationPrototypeWeeks",
    "timestamp": 146113,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationPrototypeDays",
    "timestamp": 146118,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationPrototypeHours",
    "timestamp": 146122,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationPrototypeMinutes",
    "timestamp": 146126,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationPrototypeSeconds",
    "timestamp": 146131,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationPrototypeMilliseconds",
    "timestamp": 146135,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationPrototypeMicroseconds",
    "timestamp": 146139,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationPrototypeNanoseconds",
    "timestamp": 146144,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationPrototypeSign",
    "timestamp": 146148,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationPrototypeBlank",
    "timestamp": 146152,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationPrototypeWith",
    "timestamp": 146157,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationPrototypeNegated",
    "timestamp": 146161,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationPrototypeAbs",
    "timestamp": 146165,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationPrototypeAdd",
    "timestamp": 146169,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationPrototypeSubtract",
    "timestamp": 146174,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationPrototypeRound",
    "timestamp": 146178,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationPrototypeTotal",
    "timestamp": 146182,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationPrototypeToString",
    "timestamp": 146186,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationPrototypeToJSON",
    "timestamp": 146191,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationPrototypeValueOf",
    "timestamp": 146195,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalInstantConstructor",
    "timestamp": 146199,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalInstantFrom",
    "timestamp": 146203,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalInstantFromEpochSeconds",
    "timestamp": 146207,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalInstantFromEpochMilliseconds",
    "timestamp": 146212,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalInstantFromEpochMicroseconds",
    "timestamp": 146216,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalInstantFromEpochNanoseconds",
    "timestamp": 146220,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalInstantCompare",
    "timestamp": 146225,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalInstantPrototypeEpochSeconds",
    "timestamp": 146229,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalInstantPrototypeEpochMilliseconds",
    "timestamp": 146233,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalInstantPrototypeEpochMicroseconds",
    "timestamp": 146237,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalInstantPrototypeEpochNanoseconds",
    "timestamp": 146242,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalInstantPrototypeAdd",
    "timestamp": 146246,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalInstantPrototypeSubtract",
    "timestamp": 146259,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalInstantPrototypeUntil",
    "timestamp": 146264,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalInstantPrototypeSince",
    "timestamp": 146269,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalInstantPrototypeRound",
    "timestamp": 146273,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalInstantPrototypeEquals",
    "timestamp": 146277,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalInstantPrototypeToString",
    "timestamp": 146282,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalInstantPrototypeToJSON",
    "timestamp": 146287,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalInstantPrototypeValueOf",
    "timestamp": 146292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalInstantPrototypeToZonedDateTime",
    "timestamp": 146296,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalInstantPrototypeToZonedDateTimeISO",
    "timestamp": 146300,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainYearMonthConstructor",
    "timestamp": 146305,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainYearMonthFrom",
    "timestamp": 146309,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainYearMonthCompare",
    "timestamp": 146313,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainYearMonthPrototypeCalendar",
    "timestamp": 146318,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainYearMonthPrototypeYear",
    "timestamp": 146322,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainYearMonthPrototypeMonth",
    "timestamp": 146327,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainYearMonthPrototypeMonthCode",
    "timestamp": 146331,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainYearMonthPrototypeDaysInYear",
    "timestamp": 146335,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainYearMonthPrototypeDaysInMonth",
    "timestamp": 146340,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainYearMonthPrototypeMonthsInYear",
    "timestamp": 146344,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainYearMonthPrototypeInLeapYear",
    "timestamp": 146349,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainYearMonthPrototypeWith",
    "timestamp": 146354,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainYearMonthPrototypeAdd",
    "timestamp": 146358,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainYearMonthPrototypeSubtract",
    "timestamp": 146362,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainYearMonthPrototypeUntil",
    "timestamp": 146367,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainYearMonthPrototypeSince",
    "timestamp": 146371,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainYearMonthPrototypeEquals",
    "timestamp": 146376,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainYearMonthPrototypeToString",
    "timestamp": 146380,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainYearMonthPrototypeToJSON",
    "timestamp": 146384,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainYearMonthPrototypeValueOf",
    "timestamp": 146389,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainYearMonthPrototypeToPlainDate",
    "timestamp": 146397,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainYearMonthPrototypeGetISOFields",
    "timestamp": 146402,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainMonthDayConstructor",
    "timestamp": 146406,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainMonthDayFrom",
    "timestamp": 146411,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainMonthDayPrototypeCalendar",
    "timestamp": 146415,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainMonthDayPrototypeMonthCode",
    "timestamp": 146419,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainMonthDayPrototypeDay",
    "timestamp": 146424,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainMonthDayPrototypeWith",
    "timestamp": 146429,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainMonthDayPrototypeEquals",
    "timestamp": 146433,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainMonthDayPrototypeToString",
    "timestamp": 146437,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainMonthDayPrototypeToJSON",
    "timestamp": 146442,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainMonthDayPrototypeValueOf",
    "timestamp": 146446,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainMonthDayPrototypeToPlainDate",
    "timestamp": 146451,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainMonthDayPrototypeGetISOFields",
    "timestamp": 146455,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalTimeZoneConstructor",
    "timestamp": 146460,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalTimeZoneFrom",
    "timestamp": 146464,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalTimeZonePrototypeId",
    "timestamp": 146468,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalTimeZonePrototypeGetOffsetNanosecondsFor",
    "timestamp": 146472,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalTimeZonePrototypeGetOffsetStringFor",
    "timestamp": 146485,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalTimeZonePrototypeGetPlainDateTimeFor",
    "timestamp": 146491,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalTimeZonePrototypeGetInstantFor",
    "timestamp": 146495,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalTimeZonePrototypeGetPossibleInstantsFor",
    "timestamp": 146500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalTimeZonePrototypeGetNextTransition",
    "timestamp": 146505,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalTimeZonePrototypeGetPreviousTransition",
    "timestamp": 146509,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalTimeZonePrototypeToString",
    "timestamp": 146514,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalTimeZonePrototypeToJSON",
    "timestamp": 146518,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarConstructor",
    "timestamp": 146523,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarFrom",
    "timestamp": 146527,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarPrototypeId",
    "timestamp": 146531,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarPrototypeDateFromFields",
    "timestamp": 146535,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarPrototypeYearMonthFromFields",
    "timestamp": 146539,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarPrototypeMonthDayFromFields",
    "timestamp": 146544,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarPrototypeDateAdd",
    "timestamp": 146549,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarPrototypeDateUntil",
    "timestamp": 146553,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarPrototypeYear",
    "timestamp": 146559,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarPrototypeMonth",
    "timestamp": 146563,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarPrototypeMonthCode",
    "timestamp": 146568,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarPrototypeDay",
    "timestamp": 146572,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarPrototypeDayOfWeek",
    "timestamp": 146576,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarPrototypeDayOfYear",
    "timestamp": 146581,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarPrototypeWeekOfYear",
    "timestamp": 146585,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarPrototypeDaysInWeek",
    "timestamp": 146590,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarPrototypeDaysInMonth",
    "timestamp": 146594,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarPrototypeDaysInYear",
    "timestamp": 146599,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarPrototypeMonthsInYear",
    "timestamp": 146603,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarPrototypeInLeapYear",
    "timestamp": 146608,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarPrototypeFields",
    "timestamp": 146612,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarPrototypeMergeFields",
    "timestamp": 146617,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarPrototypeToString",
    "timestamp": 146621,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarPrototypeToJSON",
    "timestamp": 146625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringFixedArrayFromIterable",
    "timestamp": 146630,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalInstantFixedArrayFromIterable",
    "timestamp": 146634,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AggregateErrorConstructor",
    "timestamp": 146639,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeAt",
    "timestamp": 146643,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeConcat",
    "timestamp": 146647,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeCopyWithin",
    "timestamp": 146652,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayEveryLoopEagerDeoptContinuation",
    "timestamp": 146656,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayEveryLoopLazyDeoptContinuation",
    "timestamp": 146661,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayEveryLoopContinuation",
    "timestamp": 146665,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayEvery",
    "timestamp": 146669,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayFilterLoopEagerDeoptContinuation",
    "timestamp": 146673,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayFilterLoopLazyDeoptContinuation",
    "timestamp": 146677,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayFilterLoopContinuation",
    "timestamp": 146682,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayFilter",
    "timestamp": 146686,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayFindLoopEagerDeoptContinuation",
    "timestamp": 146690,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayFindLoopLazyDeoptContinuation",
    "timestamp": 146694,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayFindLoopAfterCallbackLazyDeoptContinuation",
    "timestamp": 146698,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayFindLoopContinuation",
    "timestamp": 146703,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeFind",
    "timestamp": 146715,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayFindIndexLoopEagerDeoptContinuation",
    "timestamp": 146720,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayFindIndexLoopLazyDeoptContinuation",
    "timestamp": 146724,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayFindIndexLoopAfterCallbackLazyDeoptContinuation",
    "timestamp": 146729,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayFindIndexLoopContinuation",
    "timestamp": 146733,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeFindIndex",
    "timestamp": 146738,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayFindLastLoopContinuation",
    "timestamp": 146742,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeFindLast",
    "timestamp": 146746,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayFindLastIndexLoopContinuation",
    "timestamp": 146750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeFindLastIndex",
    "timestamp": 146755,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayForEachLoopEagerDeoptContinuation",
    "timestamp": 146759,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayForEachLoopLazyDeoptContinuation",
    "timestamp": 146763,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayForEachLoopContinuation",
    "timestamp": 146768,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayForEach",
    "timestamp": 146772,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayFrom",
    "timestamp": 146776,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayIsArray",
    "timestamp": 146780,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadJoinElement_DictionaryElements_0",
    "timestamp": 146784,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadJoinElement_FastSmiOrObjectElements_0",
    "timestamp": 146788,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadJoinElement_FastDoubleElements_0",
    "timestamp": 146792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConvertToLocaleString",
    "timestamp": 146798,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "JoinStackPush",
    "timestamp": 146806,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "JoinStackPop",
    "timestamp": 146810,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeJoin",
    "timestamp": 146814,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeToLocaleString",
    "timestamp": 146818,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeToString",
    "timestamp": 146822,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeJoin",
    "timestamp": 146827,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeToLocaleString",
    "timestamp": 146831,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeLastIndexOf",
    "timestamp": 146835,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayMapPreLoopLazyDeoptContinuation",
    "timestamp": 146839,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayMapLoopEagerDeoptContinuation",
    "timestamp": 146844,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayMapLoopLazyDeoptContinuation",
    "timestamp": 146848,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayMapLoopContinuation",
    "timestamp": 146852,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayMap",
    "timestamp": 146857,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayOf",
    "timestamp": 146860,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayReduceRightPreLoopEagerDeoptContinuation",
    "timestamp": 146864,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayReduceRightLoopEagerDeoptContinuation",
    "timestamp": 146869,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayReduceRightLoopLazyDeoptContinuation",
    "timestamp": 146873,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayReduceRightLoopContinuation",
    "timestamp": 146878,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayReduceRight",
    "timestamp": 146882,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayReducePreLoopEagerDeoptContinuation",
    "timestamp": 146886,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayReduceLoopEagerDeoptContinuation",
    "timestamp": 146890,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayReduceLoopLazyDeoptContinuation",
    "timestamp": 146895,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayReduceLoopContinuation",
    "timestamp": 146899,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayReduce",
    "timestamp": 146904,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeReverse",
    "timestamp": 146907,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeShift",
    "timestamp": 146912,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeSlice",
    "timestamp": 146916,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArraySomeLoopEagerDeoptContinuation",
    "timestamp": 146920,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArraySomeLoopLazyDeoptContinuation",
    "timestamp": 146925,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArraySomeLoopContinuation",
    "timestamp": 146930,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArraySome",
    "timestamp": 146934,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeSplice",
    "timestamp": 146938,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeUnshift",
    "timestamp": 146951,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayBufferPrototypeGetByteLength",
    "timestamp": 146956,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayBufferPrototypeGetMaxByteLength",
    "timestamp": 146961,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayBufferPrototypeGetResizable",
    "timestamp": 146966,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SharedArrayBufferPrototypeGetMaxByteLength",
    "timestamp": 146970,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SharedArrayBufferPrototypeGetGrowable",
    "timestamp": 146975,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayBufferIsView",
    "timestamp": 146979,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ToInteger",
    "timestamp": 146984,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FastCreateDataProperty",
    "timestamp": 146988,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CheckSameObject",
    "timestamp": 146992,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BooleanConstructor",
    "timestamp": 146997,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BooleanPrototypeToString",
    "timestamp": 147001,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BooleanPrototypeValueOf",
    "timestamp": 147005,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BigIntAddNoThrow",
    "timestamp": 147009,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BigIntAdd",
    "timestamp": 147014,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BigIntSubtractNoThrow",
    "timestamp": 147018,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BigIntSubtract",
    "timestamp": 147022,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BigIntUnaryMinus",
    "timestamp": 147026,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ToString",
    "timestamp": 147030,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeToString",
    "timestamp": 147034,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeValueOf",
    "timestamp": 147038,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringToList",
    "timestamp": 147043,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeCharAt",
    "timestamp": 147047,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeCharCodeAt",
    "timestamp": 147052,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeCodePointAt",
    "timestamp": 147056,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeConcat",
    "timestamp": 147060,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringConstructor",
    "timestamp": 147064,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringAddConvertLeft",
    "timestamp": 147068,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringAddConvertRight",
    "timestamp": 147074,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringCharAt",
    "timestamp": 147078,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FastNewClosureBaseline",
    "timestamp": 147082,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FastNewFunctionContextEval",
    "timestamp": 147087,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FastNewFunctionContextFunction",
    "timestamp": 147091,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CreateRegExpLiteral",
    "timestamp": 147096,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CreateShallowArrayLiteral",
    "timestamp": 147100,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CreateEmptyArrayLiteral",
    "timestamp": 147104,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CreateShallowObjectLiteral",
    "timestamp": 147109,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectConstructor",
    "timestamp": 147113,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CreateEmptyLiteralObject",
    "timestamp": 147117,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NumberConstructor",
    "timestamp": 147121,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GenericLazyDeoptContinuation",
    "timestamp": 147126,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringToNumber",
    "timestamp": 147130,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NonNumberToNumber",
    "timestamp": 147134,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NonNumberToNumeric",
    "timestamp": 147138,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ToNumeric",
    "timestamp": 147142,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NumberToString",
    "timestamp": 147146,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ToBoolean",
    "timestamp": 147151,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ToBooleanForBaselineJump",
    "timestamp": 147155,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ToLength",
    "timestamp": 147159,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ToName",
    "timestamp": 147163,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ToObject",
    "timestamp": 147167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NonPrimitiveToPrimitive_Default",
    "timestamp": 147171,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NonPrimitiveToPrimitive_Number",
    "timestamp": 147176,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NonPrimitiveToPrimitive_String",
    "timestamp": 147180,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "OrdinaryToPrimitive_Number",
    "timestamp": 147185,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "OrdinaryToPrimitive_String",
    "timestamp": 147191,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FastConsoleAssert",
    "timestamp": 147195,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DataViewPrototypeGetBuffer",
    "timestamp": 147207,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DataViewPrototypeGetByteLength",
    "timestamp": 147212,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DataViewPrototypeGetByteOffset",
    "timestamp": 147216,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DataViewPrototypeGetUint8",
    "timestamp": 147222,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DataViewPrototypeGetInt8",
    "timestamp": 147231,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DataViewPrototypeGetUint16",
    "timestamp": 147236,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DataViewPrototypeGetInt16",
    "timestamp": 147241,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DataViewPrototypeGetUint32",
    "timestamp": 147248,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DataViewPrototypeGetInt32",
    "timestamp": 147253,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DataViewPrototypeGetFloat32",
    "timestamp": 147257,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DataViewPrototypeGetFloat64",
    "timestamp": 147262,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DataViewPrototypeGetBigUint64",
    "timestamp": 147266,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DataViewPrototypeGetBigInt64",
    "timestamp": 147270,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DataViewPrototypeSetUint8",
    "timestamp": 147275,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DataViewPrototypeSetInt8",
    "timestamp": 147279,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DataViewPrototypeSetUint16",
    "timestamp": 147283,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DataViewPrototypeSetInt16",
    "timestamp": 147287,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DataViewPrototypeSetUint32",
    "timestamp": 147292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DataViewPrototypeSetInt32",
    "timestamp": 147296,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DataViewPrototypeSetFloat32",
    "timestamp": 147300,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DataViewPrototypeSetFloat64",
    "timestamp": 147305,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DataViewPrototypeSetBigUint64",
    "timestamp": 147309,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DataViewPrototypeSetBigInt64",
    "timestamp": 147314,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FinalizationRegistryConstructor",
    "timestamp": 147318,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FinalizationRegistryRegister",
    "timestamp": 147322,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FinalizationRegistryPrototypeCleanupSome",
    "timestamp": 147327,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FunctionPrototypeHasInstance",
    "timestamp": 147331,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FastFunctionPrototypeBind",
    "timestamp": 147336,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "IncBlockCounter",
    "timestamp": 147340,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GetTemplateObject",
    "timestamp": 147344,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ForInNext",
    "timestamp": 147348,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GetImportMetaObjectBaseline",
    "timestamp": 147352,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GetIteratorWithFeedback",
    "timestamp": 147356,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GetIteratorBaseline",
    "timestamp": 147361,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CreateAsyncFromSyncIteratorBaseline",
    "timestamp": 147365,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallIteratorWithFeedback",
    "timestamp": 147369,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathAbs",
    "timestamp": 147374,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathCeil",
    "timestamp": 147378,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathFloor",
    "timestamp": 147382,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathRound",
    "timestamp": 147386,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathTrunc",
    "timestamp": 147390,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathPow",
    "timestamp": 147394,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathMax",
    "timestamp": 147398,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathMin",
    "timestamp": 147402,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathAcos",
    "timestamp": 147406,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathAcosh",
    "timestamp": 147410,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathAsin",
    "timestamp": 147414,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathAsinh",
    "timestamp": 147418,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathAtan",
    "timestamp": 147422,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathAtan2",
    "timestamp": 147426,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathAtanh",
    "timestamp": 147431,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathCbrt",
    "timestamp": 147435,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathClz32",
    "timestamp": 147439,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathCos",
    "timestamp": 147443,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathCosh",
    "timestamp": 147447,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathExp",
    "timestamp": 147451,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathExpm1",
    "timestamp": 147455,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathFround",
    "timestamp": 147459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathImul",
    "timestamp": 147479,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathLog",
    "timestamp": 147484,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathLog1p",
    "timestamp": 147488,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathLog10",
    "timestamp": 147492,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathLog2",
    "timestamp": 147496,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathSin",
    "timestamp": 147500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathSign",
    "timestamp": 147504,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathSinh",
    "timestamp": 147508,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathSqrt",
    "timestamp": 147512,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathTan",
    "timestamp": 147516,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathTanh",
    "timestamp": 147520,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathHypot",
    "timestamp": 147524,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathRandom",
    "timestamp": 147528,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NumberPrototypeToString",
    "timestamp": 147532,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NumberIsFinite",
    "timestamp": 147537,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NumberIsInteger",
    "timestamp": 147545,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NumberIsNaN",
    "timestamp": 147549,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NumberIsSafeInteger",
    "timestamp": 147553,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NumberPrototypeValueOf",
    "timestamp": 147557,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NumberParseFloat",
    "timestamp": 147562,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ParseInt",
    "timestamp": 147566,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NumberParseInt",
    "timestamp": 147570,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Add",
    "timestamp": 147574,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Subtract",
    "timestamp": 147581,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Multiply",
    "timestamp": 147585,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Divide",
    "timestamp": 147589,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Modulus",
    "timestamp": 147593,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Exponentiate",
    "timestamp": 147597,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Negate",
    "timestamp": 147601,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BitwiseNot",
    "timestamp": 147606,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Decrement",
    "timestamp": 147610,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Increment",
    "timestamp": 147614,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ShiftLeft",
    "timestamp": 147618,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ShiftRight",
    "timestamp": 147622,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ShiftRightLogical",
    "timestamp": 147626,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BitwiseAnd",
    "timestamp": 147631,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BitwiseOr",
    "timestamp": 147636,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BitwiseXor",
    "timestamp": 147639,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LessThan",
    "timestamp": 147643,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LessThanOrEqual",
    "timestamp": 147647,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GreaterThan",
    "timestamp": 147651,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GreaterThanOrEqual",
    "timestamp": 147655,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Equal",
    "timestamp": 147659,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StrictEqual",
    "timestamp": 147666,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectFromEntries",
    "timestamp": 147670,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CreateObjectWithoutProperties",
    "timestamp": 147674,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectIsExtensible",
    "timestamp": 147678,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectPreventExtensions",
    "timestamp": 147682,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectGetPrototypeOf",
    "timestamp": 147687,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectSetPrototypeOf",
    "timestamp": 147691,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectPrototypeToString",
    "timestamp": 147695,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectPrototypeValueOf",
    "timestamp": 147699,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectPrototypeToLocaleString",
    "timestamp": 147703,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FulfillPromise",
    "timestamp": 147707,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RejectPromise",
    "timestamp": 147711,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NewPromiseCapability",
    "timestamp": 147715,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromiseCapabilityDefaultReject",
    "timestamp": 147719,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromiseCapabilityDefaultResolve",
    "timestamp": 147724,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PerformPromiseThen",
    "timestamp": 147728,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromiseReject",
    "timestamp": 147732,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromiseGetCapabilitiesExecutor",
    "timestamp": 147736,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromiseConstructorLazyDeoptContinuation",
    "timestamp": 147740,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromiseAll",
    "timestamp": 147745,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromiseAllSettled",
    "timestamp": 147757,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromiseAllResolveElementClosure",
    "timestamp": 147761,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromiseAllSettledResolveElementClosure",
    "timestamp": 147766,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromiseAllSettledRejectElementClosure",
    "timestamp": 147770,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromiseAnyRejectElementClosure",
    "timestamp": 147775,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromiseAny",
    "timestamp": 147779,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromiseConstructor",
    "timestamp": 147783,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromisePrototypeCatch",
    "timestamp": 147787,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromiseValueThunkFinally",
    "timestamp": 147791,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromiseThrowerFinally",
    "timestamp": 147796,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromiseCatchFinally",
    "timestamp": 147800,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromiseThenFinally",
    "timestamp": 147804,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromisePrototypeFinally",
    "timestamp": 147809,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromiseRace",
    "timestamp": 147814,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromiseFulfillReactionJob",
    "timestamp": 147817,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromiseRejectReactionJob",
    "timestamp": 147822,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromiseResolveTrampoline",
    "timestamp": 147826,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromiseResolve",
    "timestamp": 147830,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ResolvePromise",
    "timestamp": 147834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromisePrototypeThen",
    "timestamp": 147838,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromiseResolveThenableJob",
    "timestamp": 147842,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ProxyConstructor",
    "timestamp": 147846,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ProxyDeleteProperty",
    "timestamp": 147850,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ProxyGetProperty",
    "timestamp": 147854,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ProxyGetPrototypeOf",
    "timestamp": 147858,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ProxyHasProperty",
    "timestamp": 147862,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ProxyIsExtensible",
    "timestamp": 147866,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ProxyPreventExtensions",
    "timestamp": 147870,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ProxyRevocable",
    "timestamp": 147874,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ProxyRevoke",
    "timestamp": 147878,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ProxySetProperty",
    "timestamp": 147882,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ProxySetPrototypeOf",
    "timestamp": 147886,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ReflectIsExtensible",
    "timestamp": 147890,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ReflectPreventExtensions",
    "timestamp": 147894,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ReflectGetPrototypeOf",
    "timestamp": 147898,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ReflectSetPrototypeOf",
    "timestamp": 147903,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ReflectGet",
    "timestamp": 147907,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ReflectDeleteProperty",
    "timestamp": 147910,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ReflectHas",
    "timestamp": 147915,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpPrototypeExecSlow",
    "timestamp": 147918,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpPrototypeExec",
    "timestamp": 147923,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpPrototypeMatchAll",
    "timestamp": 147927,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpStringIteratorPrototypeNext",
    "timestamp": 147931,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpMatchFast",
    "timestamp": 147935,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpPrototypeMatch",
    "timestamp": 147939,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpReplace",
    "timestamp": 147943,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpPrototypeReplace",
    "timestamp": 147947,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpSearchFast",
    "timestamp": 147951,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpPrototypeSearch",
    "timestamp": 147955,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpPrototypeSourceGetter",
    "timestamp": 147959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpSplit",
    "timestamp": 147964,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpPrototypeSplit",
    "timestamp": 147967,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpPrototypeTest",
    "timestamp": 147972,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpPrototypeTestFast",
    "timestamp": 147976,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpPrototypeGlobalGetter",
    "timestamp": 147980,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpPrototypeIgnoreCaseGetter",
    "timestamp": 147984,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpPrototypeMultilineGetter",
    "timestamp": 147988,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpPrototypeHasIndicesGetter",
    "timestamp": 148001,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpPrototypeLinearGetter",
    "timestamp": 148006,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpPrototypeDotAllGetter",
    "timestamp": 148010,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpPrototypeStickyGetter",
    "timestamp": 148014,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpPrototypeUnicodeGetter",
    "timestamp": 148018,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpPrototypeFlagsGetter",
    "timestamp": 148023,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeAt",
    "timestamp": 148027,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeEndsWith",
    "timestamp": 148031,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CreateHTML",
    "timestamp": 148035,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeAnchor",
    "timestamp": 148039,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeBig",
    "timestamp": 148043,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeBlink",
    "timestamp": 148047,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeBold",
    "timestamp": 148051,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeFontcolor",
    "timestamp": 148055,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeFontsize",
    "timestamp": 148059,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeFixed",
    "timestamp": 148063,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeItalics",
    "timestamp": 148067,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeLink",
    "timestamp": 148071,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeSmall",
    "timestamp": 148075,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeStrike",
    "timestamp": 148083,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeSub",
    "timestamp": 148087,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeSup",
    "timestamp": 148091,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeIncludes",
    "timestamp": 148096,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeIndexOf",
    "timestamp": 148100,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeIterator",
    "timestamp": 148104,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringIteratorPrototypeNext",
    "timestamp": 148108,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeMatch",
    "timestamp": 148112,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeSearch",
    "timestamp": 148116,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypePadStart",
    "timestamp": 148120,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypePadEnd",
    "timestamp": 148125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringRepeat",
    "timestamp": 148129,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeRepeat",
    "timestamp": 148133,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeReplaceAll",
    "timestamp": 148137,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeSlice",
    "timestamp": 148141,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeStartsWith",
    "timestamp": 148145,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeSubstr",
    "timestamp": 148150,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeSubstring",
    "timestamp": 148154,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeTrim",
    "timestamp": 148158,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeTrimStart",
    "timestamp": 148162,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeTrimEnd",
    "timestamp": 148166,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SymbolPrototypeDescriptionGetter",
    "timestamp": 148170,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SymbolPrototypeToPrimitive",
    "timestamp": 148175,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SymbolPrototypeToString",
    "timestamp": 148179,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SymbolPrototypeValueOf",
    "timestamp": 148183,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeAt",
    "timestamp": 148187,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CreateTypedArray",
    "timestamp": 148191,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeEvery",
    "timestamp": 148195,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeEntries",
    "timestamp": 148199,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeFilter",
    "timestamp": 148203,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeFind",
    "timestamp": 148208,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeFindIndex",
    "timestamp": 148212,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeFindLast",
    "timestamp": 148216,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeFindLastIndex",
    "timestamp": 148220,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeForEach",
    "timestamp": 148224,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayFrom",
    "timestamp": 148229,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeKeys",
    "timestamp": 148241,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayOf",
    "timestamp": 148246,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeReduce",
    "timestamp": 148250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeReduceRight",
    "timestamp": 148254,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeSet",
    "timestamp": 148259,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeSlice",
    "timestamp": 148263,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeSome",
    "timestamp": 148267,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayMergeSort",
    "timestamp": 148271,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeSort",
    "timestamp": 148276,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeSubArray",
    "timestamp": 148280,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeValues",
    "timestamp": 148284,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WeakRefConstructor",
    "timestamp": 148288,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WeakRefDeref",
    "timestamp": 148292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NewSloppyArgumentsElements",
    "timestamp": 148296,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NewStrictArgumentsElements",
    "timestamp": 148301,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NewRestArgumentsElements",
    "timestamp": 148305,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FastNewSloppyArguments",
    "timestamp": 148309,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FastNewStrictArguments",
    "timestamp": 148313,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FastNewRestArguments",
    "timestamp": 148317,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringSlowFlatten",
    "timestamp": 148321,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringIndexOf",
    "timestamp": 148326,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TestTurbofanType",
    "timestamp": 148329,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CheckTurbofanType",
    "timestamp": 148334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GenericBuiltinTest_JSAny_0",
    "timestamp": 148338,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TestHelperPlus1",
    "timestamp": 148342,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TestHelperPlus2",
    "timestamp": 148346,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NewSmiBox",
    "timestamp": 148350,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ReturnTwoValues",
    "timestamp": 148354,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Load_FastSmiElements_0",
    "timestamp": 148358,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Load_FastObjectElements_0",
    "timestamp": 148362,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Load_FastDoubleElements_0",
    "timestamp": 148366,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Store_FastSmiElements_0",
    "timestamp": 148370,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Store_FastObjectElements_0",
    "timestamp": 148374,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Store_FastDoubleElements_0",
    "timestamp": 148378,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Delete_FastSmiElements_0",
    "timestamp": 148383,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Delete_FastObjectElements_0",
    "timestamp": 148387,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Delete_FastDoubleElements_0",
    "timestamp": 148391,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SortCompareDefault",
    "timestamp": 148395,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SortCompareUserFn",
    "timestamp": 148399,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CanUseSameAccessor_GenericElementsAccessor_0",
    "timestamp": 148403,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Copy",
    "timestamp": 148408,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MergeAt",
    "timestamp": 148412,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GallopLeft",
    "timestamp": 148416,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GallopRight",
    "timestamp": 148420,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayTimSort",
    "timestamp": 148423,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeSort",
    "timestamp": 148427,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringFastLocaleCompare",
    "timestamp": 148431,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmInt32ToHeapNumber",
    "timestamp": 148436,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmFuncRefToJS",
    "timestamp": 148440,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmTaggedNonSmiToInt32",
    "timestamp": 148444,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmTaggedToFloat64",
    "timestamp": 148448,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmMemoryGrow",
    "timestamp": 148452,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmTableInit",
    "timestamp": 148456,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmTableCopy",
    "timestamp": 148460,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmTableFill",
    "timestamp": 148464,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmTableGrow",
    "timestamp": 148468,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmTableGet",
    "timestamp": 148472,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmTableSet",
    "timestamp": 148476,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmRefFunc",
    "timestamp": 148489,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmAllocateFixedArray",
    "timestamp": 148497,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmThrow",
    "timestamp": 148501,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmRethrow",
    "timestamp": 148505,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmRethrowExplicitContext",
    "timestamp": 148509,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmTriggerTierUp",
    "timestamp": 148514,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmStackGuard",
    "timestamp": 148518,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmStackOverflow",
    "timestamp": 148522,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmTraceMemory",
    "timestamp": 148526,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmTraceEnter",
    "timestamp": 148530,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmTraceExit",
    "timestamp": 148533,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmAllocateJSArray",
    "timestamp": 148537,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmAllocateStructWithRtt",
    "timestamp": 148542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmAllocateArray_Uninitialized",
    "timestamp": 148547,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmAllocateArray_InitZero",
    "timestamp": 148552,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmAllocateArray_InitNull",
    "timestamp": 148556,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmArrayInitFromData",
    "timestamp": 148560,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmArrayCopyWithChecks",
    "timestamp": 148565,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmArrayCopy",
    "timestamp": 148569,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmAllocateObjectWrapper",
    "timestamp": 148573,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmSubtypeCheck",
    "timestamp": 148577,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmInt32ToNumber",
    "timestamp": 148581,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmUint32ToNumber",
    "timestamp": 148585,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "UintPtr53ToNumber",
    "timestamp": 148589,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmAtomicNotify",
    "timestamp": 148594,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmI32AtomicWait64",
    "timestamp": 148598,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmI64AtomicWait64",
    "timestamp": 148602,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallRefIC",
    "timestamp": 148606,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmGetOwnProperty",
    "timestamp": 148610,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmTrap",
    "timestamp": 148614,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ThrowWasmTrapUnreachable",
    "timestamp": 148618,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ThrowWasmTrapMemOutOfBounds",
    "timestamp": 148642,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ThrowWasmTrapUnalignedAccess",
    "timestamp": 148646,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ThrowWasmTrapDivByZero",
    "timestamp": 148650,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ThrowWasmTrapDivUnrepresentable",
    "timestamp": 148655,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ThrowWasmTrapRemByZero",
    "timestamp": 148660,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ThrowWasmTrapFloatUnrepresentable",
    "timestamp": 148664,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ThrowWasmTrapFuncSigMismatch",
    "timestamp": 148669,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ThrowWasmTrapDataSegmentOutOfBounds",
    "timestamp": 148673,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ThrowWasmTrapElemSegmentDropped",
    "timestamp": 148677,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ThrowWasmTrapTableOutOfBounds",
    "timestamp": 148682,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ThrowWasmTrapRethrowNull",
    "timestamp": 148686,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ThrowWasmTrapNullDereference",
    "timestamp": 148690,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ThrowWasmTrapIllegalCast",
    "timestamp": 148694,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ThrowWasmTrapArrayOutOfBounds",
    "timestamp": 148699,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ThrowWasmTrapArrayTooLarge",
    "timestamp": 148703,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadJoinElement_GenericElementsAccessor_0",
    "timestamp": 148707,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadJoinTypedElement_Int32Elements_0",
    "timestamp": 148711,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadJoinTypedElement_Float32Elements_0",
    "timestamp": 148716,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadJoinTypedElement_Float64Elements_0",
    "timestamp": 148720,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadJoinTypedElement_Uint8ClampedElements_0",
    "timestamp": 148725,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadJoinTypedElement_BigUint64Elements_0",
    "timestamp": 148730,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadJoinTypedElement_BigInt64Elements_0",
    "timestamp": 148736,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadJoinTypedElement_Uint8Elements_0",
    "timestamp": 148741,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadJoinTypedElement_Int8Elements_0",
    "timestamp": 148745,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadJoinTypedElement_Uint16Elements_0",
    "timestamp": 148749,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadJoinTypedElement_Int16Elements_0",
    "timestamp": 148754,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadJoinTypedElement_Uint32Elements_0",
    "timestamp": 148759,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GenericBuiltinTest_Smi_0",
    "timestamp": 148764,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CanUseSameAccessor_FastDoubleElements_0",
    "timestamp": 148768,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CanUseSameAccessor_FastSmiElements_0",
    "timestamp": 148772,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CanUseSameAccessor_FastObjectElements_0",
    "timestamp": 148777,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Load_GenericElementsAccessor_0",
    "timestamp": 148781,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Store_GenericElementsAccessor_0",
    "timestamp": 148786,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Delete_GenericElementsAccessor_0",
    "timestamp": 148790,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadTypedElement_Int32Elements_0",
    "timestamp": 148794,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreTypedElementNumeric_Int32Elements_0",
    "timestamp": 148798,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreTypedElementJSAny_Int32Elements_0",
    "timestamp": 148803,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadTypedElement_Float32Elements_0",
    "timestamp": 148807,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreTypedElementNumeric_Float32Elements_0",
    "timestamp": 148812,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreTypedElementJSAny_Float32Elements_0",
    "timestamp": 148816,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadTypedElement_Float64Elements_0",
    "timestamp": 148821,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreTypedElementNumeric_Float64Elements_0",
    "timestamp": 148825,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreTypedElementJSAny_Float64Elements_0",
    "timestamp": 148830,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadTypedElement_Uint8ClampedElements_0",
    "timestamp": 148834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreTypedElementNumeric_Uint8ClampedElements_0",
    "timestamp": 148839,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreTypedElementJSAny_Uint8ClampedElements_0",
    "timestamp": 148843,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadTypedElement_BigUint64Elements_0",
    "timestamp": 148848,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreTypedElementNumeric_BigUint64Elements_0",
    "timestamp": 148852,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreTypedElementJSAny_BigUint64Elements_0",
    "timestamp": 148857,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadTypedElement_BigInt64Elements_0",
    "timestamp": 148861,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreTypedElementNumeric_BigInt64Elements_0",
    "timestamp": 148866,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreTypedElementJSAny_BigInt64Elements_0",
    "timestamp": 148870,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadTypedElement_Uint8Elements_0",
    "timestamp": 148875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreTypedElementNumeric_Uint8Elements_0",
    "timestamp": 148879,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreTypedElementJSAny_Uint8Elements_0",
    "timestamp": 148884,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadTypedElement_Int8Elements_0",
    "timestamp": 148888,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreTypedElementNumeric_Int8Elements_0",
    "timestamp": 148892,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreTypedElementJSAny_Int8Elements_0",
    "timestamp": 148897,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadTypedElement_Uint16Elements_0",
    "timestamp": 148901,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreTypedElementNumeric_Uint16Elements_0",
    "timestamp": 148909,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreTypedElementJSAny_Uint16Elements_0",
    "timestamp": 148914,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadTypedElement_Int16Elements_0",
    "timestamp": 148918,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreTypedElementNumeric_Int16Elements_0",
    "timestamp": 148922,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreTypedElementJSAny_Int16Elements_0",
    "timestamp": 148927,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadTypedElement_Uint32Elements_0",
    "timestamp": 148931,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreTypedElementNumeric_Uint32Elements_0",
    "timestamp": 148936,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreTypedElementJSAny_Uint32Elements_0",
    "timestamp": 148940,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CollatorConstructor",
    "timestamp": 148944,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CollatorInternalCompare",
    "timestamp": 148948,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CollatorPrototypeCompare",
    "timestamp": 148953,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CollatorSupportedLocalesOf",
    "timestamp": 148957,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CollatorPrototypeResolvedOptions",
    "timestamp": 148961,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeToLocaleDateString",
    "timestamp": 148966,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeToLocaleString",
    "timestamp": 148971,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeToLocaleTimeString",
    "timestamp": 148975,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DateTimeFormatConstructor",
    "timestamp": 148979,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DateTimeFormatInternalFormat",
    "timestamp": 148983,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DateTimeFormatPrototypeFormat",
    "timestamp": 148987,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DateTimeFormatPrototypeFormatRange",
    "timestamp": 148992,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DateTimeFormatPrototypeFormatRangeToParts",
    "timestamp": 148996,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DateTimeFormatPrototypeFormatToParts",
    "timestamp": 149000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DateTimeFormatPrototypeResolvedOptions",
    "timestamp": 149005,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DateTimeFormatSupportedLocalesOf",
    "timestamp": 149009,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DisplayNamesConstructor",
    "timestamp": 149014,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DisplayNamesPrototypeOf",
    "timestamp": 149018,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DisplayNamesPrototypeResolvedOptions",
    "timestamp": 149022,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DisplayNamesSupportedLocalesOf",
    "timestamp": 149026,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "IntlGetCanonicalLocales",
    "timestamp": 149031,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "IntlSupportedValuesOf",
    "timestamp": 149035,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ListFormatConstructor",
    "timestamp": 149039,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ListFormatPrototypeFormat",
    "timestamp": 149043,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ListFormatPrototypeFormatToParts",
    "timestamp": 149047,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ListFormatPrototypeResolvedOptions",
    "timestamp": 149051,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ListFormatSupportedLocalesOf",
    "timestamp": 149055,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LocaleConstructor",
    "timestamp": 149060,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LocalePrototypeBaseName",
    "timestamp": 149064,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LocalePrototypeCalendar",
    "timestamp": 149068,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LocalePrototypeCalendars",
    "timestamp": 149072,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LocalePrototypeCaseFirst",
    "timestamp": 149076,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LocalePrototypeCollation",
    "timestamp": 149080,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LocalePrototypeCollations",
    "timestamp": 149084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LocalePrototypeHourCycle",
    "timestamp": 149088,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LocalePrototypeHourCycles",
    "timestamp": 149093,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LocalePrototypeLanguage",
    "timestamp": 149097,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LocalePrototypeMaximize",
    "timestamp": 149101,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LocalePrototypeMinimize",
    "timestamp": 149105,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LocalePrototypeNumeric",
    "timestamp": 149109,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LocalePrototypeNumberingSystem",
    "timestamp": 149113,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LocalePrototypeNumberingSystems",
    "timestamp": 149118,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LocalePrototypeRegion",
    "timestamp": 149122,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LocalePrototypeScript",
    "timestamp": 149126,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LocalePrototypeTextInfo",
    "timestamp": 149130,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LocalePrototypeTimeZones",
    "timestamp": 149134,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LocalePrototypeToString",
    "timestamp": 149138,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LocalePrototypeWeekInfo",
    "timestamp": 149142,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NumberFormatConstructor",
    "timestamp": 149146,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NumberFormatInternalFormatNumber",
    "timestamp": 149150,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NumberFormatPrototypeFormatNumber",
    "timestamp": 149155,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NumberFormatPrototypeFormatRange",
    "timestamp": 149159,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NumberFormatPrototypeFormatRangeToParts",
    "timestamp": 149163,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NumberFormatPrototypeFormatToParts",
    "timestamp": 149168,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NumberFormatPrototypeResolvedOptions",
    "timestamp": 149172,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NumberFormatSupportedLocalesOf",
    "timestamp": 149177,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PluralRulesConstructor",
    "timestamp": 149181,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PluralRulesPrototypeResolvedOptions",
    "timestamp": 149185,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PluralRulesPrototypeSelect",
    "timestamp": 149191,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PluralRulesPrototypeSelectRange",
    "timestamp": 149195,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PluralRulesSupportedLocalesOf",
    "timestamp": 149200,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RelativeTimeFormatConstructor",
    "timestamp": 149204,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RelativeTimeFormatPrototypeFormat",
    "timestamp": 149208,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RelativeTimeFormatPrototypeFormatToParts",
    "timestamp": 149213,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RelativeTimeFormatPrototypeResolvedOptions",
    "timestamp": 149217,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RelativeTimeFormatSupportedLocalesOf",
    "timestamp": 149222,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SegmenterConstructor",
    "timestamp": 149226,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SegmenterPrototypeResolvedOptions",
    "timestamp": 149231,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SegmenterPrototypeSegment",
    "timestamp": 149235,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SegmenterSupportedLocalesOf",
    "timestamp": 149239,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SegmentIteratorPrototypeNext",
    "timestamp": 149243,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SegmentsPrototypeContaining",
    "timestamp": 149248,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SegmentsPrototypeIterator",
    "timestamp": 149252,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeNormalizeIntl",
    "timestamp": 149256,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeToLocaleLowerCase",
    "timestamp": 149260,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeToLocaleUpperCase",
    "timestamp": 149265,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeToLowerCaseIntl",
    "timestamp": 149269,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeToUpperCaseIntl",
    "timestamp": 149273,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringToLowerCaseIntl",
    "timestamp": 149277,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarPrototypeEra",
    "timestamp": 149281,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarPrototypeEraYear",
    "timestamp": 149286,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationPrototypeToLocaleString",
    "timestamp": 149291,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalInstantPrototypeToLocaleString",
    "timestamp": 149295,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeEra",
    "timestamp": 149303,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeEraYear",
    "timestamp": 149307,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeToLocaleString",
    "timestamp": 149311,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeEra",
    "timestamp": 149316,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeEraYear",
    "timestamp": 149320,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeToLocaleString",
    "timestamp": 149325,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainMonthDayPrototypeToLocaleString",
    "timestamp": 149329,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainTimePrototypeToLocaleString",
    "timestamp": 149334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainYearMonthPrototypeEra",
    "timestamp": 149338,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainYearMonthPrototypeEraYear",
    "timestamp": 149343,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainYearMonthPrototypeToLocaleString",
    "timestamp": 149347,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeEra",
    "timestamp": 149352,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeEraYear",
    "timestamp": 149356,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeToLocaleString",
    "timestamp": 149360,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "V8BreakIteratorConstructor",
    "timestamp": 149365,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "V8BreakIteratorInternalAdoptText",
    "timestamp": 149369,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "V8BreakIteratorInternalBreakType",
    "timestamp": 149373,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "V8BreakIteratorInternalCurrent",
    "timestamp": 149378,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "V8BreakIteratorInternalFirst",
    "timestamp": 149382,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "V8BreakIteratorInternalNext",
    "timestamp": 149386,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "V8BreakIteratorPrototypeAdoptText",
    "timestamp": 149390,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "V8BreakIteratorPrototypeBreakType",
    "timestamp": 149395,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "V8BreakIteratorPrototypeCurrent",
    "timestamp": 149399,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "V8BreakIteratorPrototypeFirst",
    "timestamp": 149403,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "V8BreakIteratorPrototypeNext",
    "timestamp": 149409,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "V8BreakIteratorPrototypeResolvedOptions",
    "timestamp": 149413,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "V8BreakIteratorSupportedLocalesOf",
    "timestamp": 149418,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Wide",
    "timestamp": 149423,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ExtraWide",
    "timestamp": 149427,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DebugBreakWide",
    "timestamp": 149431,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DebugBreakExtraWide",
    "timestamp": 149435,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DebugBreak0",
    "timestamp": 149439,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DebugBreak1",
    "timestamp": 149444,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DebugBreak2",
    "timestamp": 149448,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DebugBreak3",
    "timestamp": 149452,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DebugBreak4",
    "timestamp": 149456,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DebugBreak5",
    "timestamp": 149460,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DebugBreak6",
    "timestamp": 149464,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Ldar",
    "timestamp": 149468,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaZero",
    "timestamp": 149472,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaSmi",
    "timestamp": 149476,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaUndefined",
    "timestamp": 149480,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaNull",
    "timestamp": 149484,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaTheHole",
    "timestamp": 149488,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaTrue",
    "timestamp": 149492,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaFalse",
    "timestamp": 149496,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaConstant",
    "timestamp": 149500,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaContextSlot",
    "timestamp": 149504,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaImmutableContextSlot",
    "timestamp": 149508,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaCurrentContextSlot",
    "timestamp": 149512,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaImmutableCurrentContextSlot",
    "timestamp": 149517,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Star",
    "timestamp": 149521,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Mov",
    "timestamp": 149525,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "PushContext",
    "timestamp": 149529,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "PopContext",
    "timestamp": 149533,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestReferenceEqual",
    "timestamp": 149537,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestUndetectable",
    "timestamp": 149541,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestNull",
    "timestamp": 149546,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestUndefined",
    "timestamp": 149550,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestTypeOf",
    "timestamp": 149555,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaGlobal",
    "timestamp": 149559,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaGlobalInsideTypeof",
    "timestamp": 149563,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "StaGlobal",
    "timestamp": 149568,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "StaContextSlot",
    "timestamp": 149572,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "StaCurrentContextSlot",
    "timestamp": 149576,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaLookupSlot",
    "timestamp": 149581,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaLookupContextSlot",
    "timestamp": 149585,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaLookupGlobalSlot",
    "timestamp": 149589,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaLookupSlotInsideTypeof",
    "timestamp": 149594,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaLookupContextSlotInsideTypeof",
    "timestamp": 149598,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaLookupGlobalSlotInsideTypeof",
    "timestamp": 149603,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "StaLookupSlot",
    "timestamp": 149608,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "GetNamedProperty",
    "timestamp": 149612,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "GetNamedPropertyFromSuper",
    "timestamp": 149616,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "GetKeyedProperty",
    "timestamp": 149621,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaModuleVariable",
    "timestamp": 149625,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "StaModuleVariable",
    "timestamp": 149629,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "SetNamedProperty",
    "timestamp": 149634,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DefineNamedOwnProperty",
    "timestamp": 149638,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "SetKeyedProperty",
    "timestamp": 149643,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DefineKeyedOwnProperty",
    "timestamp": 149648,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "StaInArrayLiteral",
    "timestamp": 149653,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DefineKeyedOwnPropertyInLiteral",
    "timestamp": 149657,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CollectTypeProfile",
    "timestamp": 149664,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Add",
    "timestamp": 149669,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Sub",
    "timestamp": 149673,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Mul",
    "timestamp": 149677,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Div",
    "timestamp": 149681,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Mod",
    "timestamp": 149685,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Exp",
    "timestamp": 149689,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "BitwiseOr",
    "timestamp": 149693,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "BitwiseXor",
    "timestamp": 149701,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "BitwiseAnd",
    "timestamp": 149705,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ShiftLeft",
    "timestamp": 149709,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ShiftRight",
    "timestamp": 149713,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ShiftRightLogical",
    "timestamp": 149717,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "AddSmi",
    "timestamp": 149722,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "SubSmi",
    "timestamp": 149726,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "MulSmi",
    "timestamp": 149730,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DivSmi",
    "timestamp": 149734,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ModSmi",
    "timestamp": 149738,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ExpSmi",
    "timestamp": 149742,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "BitwiseOrSmi",
    "timestamp": 149746,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "BitwiseXorSmi",
    "timestamp": 149750,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "BitwiseAndSmi",
    "timestamp": 149754,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ShiftLeftSmi",
    "timestamp": 149759,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ShiftRightSmi",
    "timestamp": 149763,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ShiftRightLogicalSmi",
    "timestamp": 149767,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Inc",
    "timestamp": 149771,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Dec",
    "timestamp": 149775,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Negate",
    "timestamp": 149779,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "BitwiseNot",
    "timestamp": 149784,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ToBooleanLogicalNot",
    "timestamp": 149788,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LogicalNot",
    "timestamp": 149792,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TypeOf",
    "timestamp": 149796,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DeletePropertyStrict",
    "timestamp": 149800,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DeletePropertySloppy",
    "timestamp": 149804,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "GetSuperConstructor",
    "timestamp": 149809,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallAnyReceiver",
    "timestamp": 149813,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallProperty",
    "timestamp": 149817,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallProperty0",
    "timestamp": 149821,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallProperty1",
    "timestamp": 149825,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallProperty2",
    "timestamp": 149830,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallUndefinedReceiver",
    "timestamp": 149834,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallUndefinedReceiver0",
    "timestamp": 149838,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallUndefinedReceiver1",
    "timestamp": 149842,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallUndefinedReceiver2",
    "timestamp": 149847,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallWithSpread",
    "timestamp": 149851,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallRuntime",
    "timestamp": 149855,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallRuntimeForPair",
    "timestamp": 149860,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallJSRuntime",
    "timestamp": 149864,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "InvokeIntrinsic",
    "timestamp": 149868,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Construct",
    "timestamp": 149872,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ConstructWithSpread",
    "timestamp": 149876,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestEqual",
    "timestamp": 149880,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestEqualStrict",
    "timestamp": 149884,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestLessThan",
    "timestamp": 149889,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestGreaterThan",
    "timestamp": 149893,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestLessThanOrEqual",
    "timestamp": 149898,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestGreaterThanOrEqual",
    "timestamp": 149902,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestInstanceOf",
    "timestamp": 149907,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestIn",
    "timestamp": 149911,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ToName",
    "timestamp": 149915,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ToNumber",
    "timestamp": 149919,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ToNumeric",
    "timestamp": 149923,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ToObject",
    "timestamp": 149927,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ToString",
    "timestamp": 149931,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateRegExpLiteral",
    "timestamp": 149935,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateArrayLiteral",
    "timestamp": 149939,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateArrayFromIterable",
    "timestamp": 149944,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateEmptyArrayLiteral",
    "timestamp": 149948,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateObjectLiteral",
    "timestamp": 149952,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateEmptyObjectLiteral",
    "timestamp": 149957,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CloneObject",
    "timestamp": 149961,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "GetTemplateObject",
    "timestamp": 149965,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateClosure",
    "timestamp": 149969,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateBlockContext",
    "timestamp": 149974,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateCatchContext",
    "timestamp": 149978,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateFunctionContext",
    "timestamp": 149982,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateEvalContext",
    "timestamp": 149986,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateWithContext",
    "timestamp": 149991,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateMappedArguments",
    "timestamp": 149995,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateUnmappedArguments",
    "timestamp": 149999,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateRestParameter",
    "timestamp": 150004,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpLoop",
    "timestamp": 150008,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Jump",
    "timestamp": 150012,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpConstant",
    "timestamp": 150016,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfNullConstant",
    "timestamp": 150020,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfNotNullConstant",
    "timestamp": 150024,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfUndefinedConstant",
    "timestamp": 150029,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfNotUndefinedConstant",
    "timestamp": 150033,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfUndefinedOrNullConstant",
    "timestamp": 150038,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfTrueConstant",
    "timestamp": 150042,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfFalseConstant",
    "timestamp": 150046,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfJSReceiverConstant",
    "timestamp": 150051,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfToBooleanTrueConstant",
    "timestamp": 150055,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfToBooleanFalseConstant",
    "timestamp": 150059,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfToBooleanTrue",
    "timestamp": 150064,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfToBooleanFalse",
    "timestamp": 150068,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfTrue",
    "timestamp": 150072,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfFalse",
    "timestamp": 150077,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfNull",
    "timestamp": 150081,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfNotNull",
    "timestamp": 150085,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfUndefined",
    "timestamp": 150093,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfNotUndefined",
    "timestamp": 150097,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfUndefinedOrNull",
    "timestamp": 150101,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfJSReceiver",
    "timestamp": 150106,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "SwitchOnSmiNoFeedback",
    "timestamp": 150110,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ForInEnumerate",
    "timestamp": 150114,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ForInPrepare",
    "timestamp": 150119,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ForInContinue",
    "timestamp": 150123,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ForInNext",
    "timestamp": 150127,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ForInStep",
    "timestamp": 150132,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "SetPendingMessage",
    "timestamp": 150136,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Throw",
    "timestamp": 150141,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ReThrow",
    "timestamp": 150145,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Return",
    "timestamp": 150149,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ThrowReferenceErrorIfHole",
    "timestamp": 150153,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ThrowSuperNotCalledIfHole",
    "timestamp": 150158,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ThrowSuperAlreadyCalledIfNotHole",
    "timestamp": 150162,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ThrowIfNotSuperConstructor",
    "timestamp": 150167,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "SwitchOnGeneratorState",
    "timestamp": 150171,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "SuspendGenerator",
    "timestamp": 150176,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ResumeGenerator",
    "timestamp": 150180,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "GetIterator",
    "timestamp": 150184,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Debugger",
    "timestamp": 150189,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "IncBlockCounter",
    "timestamp": 150193,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Abort",
    "timestamp": 150198,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Star0",
    "timestamp": 150202,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Illegal",
    "timestamp": 150206,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DebugBreak1.Wide",
    "timestamp": 150210,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DebugBreak2.Wide",
    "timestamp": 150215,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DebugBreak3.Wide",
    "timestamp": 150220,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DebugBreak4.Wide",
    "timestamp": 150224,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DebugBreak5.Wide",
    "timestamp": 150228,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DebugBreak6.Wide",
    "timestamp": 150232,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Ldar.Wide",
    "timestamp": 150237,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaSmi.Wide",
    "timestamp": 150241,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaConstant.Wide",
    "timestamp": 150245,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaContextSlot.Wide",
    "timestamp": 150249,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaImmutableContextSlot.Wide",
    "timestamp": 150254,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaCurrentContextSlot.Wide",
    "timestamp": 150258,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaImmutableCurrentContextSlot.Wide",
    "timestamp": 150263,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Star.Wide",
    "timestamp": 150267,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Mov.Wide",
    "timestamp": 150271,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "PushContext.Wide",
    "timestamp": 150276,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "PopContext.Wide",
    "timestamp": 150280,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestReferenceEqual.Wide",
    "timestamp": 150284,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaGlobal.Wide",
    "timestamp": 150288,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaGlobalInsideTypeof.Wide",
    "timestamp": 150293,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "StaGlobal.Wide",
    "timestamp": 150297,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "StaContextSlot.Wide",
    "timestamp": 150301,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "StaCurrentContextSlot.Wide",
    "timestamp": 150306,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaLookupSlot.Wide",
    "timestamp": 150310,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaLookupContextSlot.Wide",
    "timestamp": 150315,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaLookupGlobalSlot.Wide",
    "timestamp": 150319,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaLookupSlotInsideTypeof.Wide",
    "timestamp": 150324,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaLookupContextSlotInsideTypeof.Wide",
    "timestamp": 150328,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaLookupGlobalSlotInsideTypeof.Wide",
    "timestamp": 150333,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "StaLookupSlot.Wide",
    "timestamp": 150338,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "GetNamedProperty.Wide",
    "timestamp": 150342,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "GetNamedPropertyFromSuper.Wide",
    "timestamp": 150347,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "GetKeyedProperty.Wide",
    "timestamp": 150351,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaModuleVariable.Wide",
    "timestamp": 150355,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "StaModuleVariable.Wide",
    "timestamp": 150360,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "SetNamedProperty.Wide",
    "timestamp": 150365,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DefineNamedOwnProperty.Wide",
    "timestamp": 150370,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "SetKeyedProperty.Wide",
    "timestamp": 150375,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DefineKeyedOwnProperty.Wide",
    "timestamp": 150379,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "StaInArrayLiteral.Wide",
    "timestamp": 150384,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DefineKeyedOwnPropertyInLiteral.Wide",
    "timestamp": 150388,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CollectTypeProfile.Wide",
    "timestamp": 150393,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Add.Wide",
    "timestamp": 150398,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Sub.Wide",
    "timestamp": 150402,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Mul.Wide",
    "timestamp": 150406,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Div.Wide",
    "timestamp": 150410,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Mod.Wide",
    "timestamp": 150414,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Exp.Wide",
    "timestamp": 150418,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "BitwiseOr.Wide",
    "timestamp": 150422,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "BitwiseXor.Wide",
    "timestamp": 150426,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "BitwiseAnd.Wide",
    "timestamp": 150431,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ShiftLeft.Wide",
    "timestamp": 150435,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ShiftRight.Wide",
    "timestamp": 150439,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ShiftRightLogical.Wide",
    "timestamp": 150443,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "AddSmi.Wide",
    "timestamp": 150448,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "SubSmi.Wide",
    "timestamp": 150452,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "MulSmi.Wide",
    "timestamp": 150456,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DivSmi.Wide",
    "timestamp": 150460,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ModSmi.Wide",
    "timestamp": 150464,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ExpSmi.Wide",
    "timestamp": 150469,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "BitwiseOrSmi.Wide",
    "timestamp": 150473,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "BitwiseXorSmi.Wide",
    "timestamp": 150481,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "BitwiseAndSmi.Wide",
    "timestamp": 150485,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ShiftLeftSmi.Wide",
    "timestamp": 150490,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ShiftRightSmi.Wide",
    "timestamp": 150494,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ShiftRightLogicalSmi.Wide",
    "timestamp": 150498,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Inc.Wide",
    "timestamp": 150503,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Dec.Wide",
    "timestamp": 150507,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Negate.Wide",
    "timestamp": 150511,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "BitwiseNot.Wide",
    "timestamp": 150515,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DeletePropertyStrict.Wide",
    "timestamp": 150520,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DeletePropertySloppy.Wide",
    "timestamp": 150524,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "GetSuperConstructor.Wide",
    "timestamp": 150529,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallAnyReceiver.Wide",
    "timestamp": 150533,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallProperty.Wide",
    "timestamp": 150538,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallProperty0.Wide",
    "timestamp": 150542,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallProperty1.Wide",
    "timestamp": 150546,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallProperty2.Wide",
    "timestamp": 150552,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallUndefinedReceiver.Wide",
    "timestamp": 150557,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallUndefinedReceiver0.Wide",
    "timestamp": 150562,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallUndefinedReceiver1.Wide",
    "timestamp": 150567,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallUndefinedReceiver2.Wide",
    "timestamp": 150571,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallWithSpread.Wide",
    "timestamp": 150576,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallRuntime.Wide",
    "timestamp": 150581,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallRuntimeForPair.Wide",
    "timestamp": 150585,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallJSRuntime.Wide",
    "timestamp": 150589,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "InvokeIntrinsic.Wide",
    "timestamp": 150594,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Construct.Wide",
    "timestamp": 150598,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ConstructWithSpread.Wide",
    "timestamp": 150604,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestEqual.Wide",
    "timestamp": 150609,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestEqualStrict.Wide",
    "timestamp": 150613,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestLessThan.Wide",
    "timestamp": 150618,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestGreaterThan.Wide",
    "timestamp": 150622,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestLessThanOrEqual.Wide",
    "timestamp": 150627,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestGreaterThanOrEqual.Wide",
    "timestamp": 150631,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestInstanceOf.Wide",
    "timestamp": 150636,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestIn.Wide",
    "timestamp": 150641,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ToName.Wide",
    "timestamp": 150646,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ToNumber.Wide",
    "timestamp": 150650,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ToNumeric.Wide",
    "timestamp": 150655,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ToObject.Wide",
    "timestamp": 150659,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateRegExpLiteral.Wide",
    "timestamp": 150663,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateArrayLiteral.Wide",
    "timestamp": 150668,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateEmptyArrayLiteral.Wide",
    "timestamp": 150672,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateObjectLiteral.Wide",
    "timestamp": 150677,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CloneObject.Wide",
    "timestamp": 150681,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "GetTemplateObject.Wide",
    "timestamp": 150686,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateClosure.Wide",
    "timestamp": 150690,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateBlockContext.Wide",
    "timestamp": 150694,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateCatchContext.Wide",
    "timestamp": 150699,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateFunctionContext.Wide",
    "timestamp": 150703,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateEvalContext.Wide",
    "timestamp": 150708,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateWithContext.Wide",
    "timestamp": 150712,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpLoop.Wide",
    "timestamp": 150717,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Jump.Wide",
    "timestamp": 150721,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpConstant.Wide",
    "timestamp": 150725,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfNullConstant.Wide",
    "timestamp": 150729,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfNotNullConstant.Wide",
    "timestamp": 150734,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfUndefinedConstant.Wide",
    "timestamp": 150738,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfNotUndefinedConstant.Wide",
    "timestamp": 150743,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfUndefinedOrNullConstant.Wide",
    "timestamp": 150747,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfTrueConstant.Wide",
    "timestamp": 150752,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfFalseConstant.Wide",
    "timestamp": 150756,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfJSReceiverConstant.Wide",
    "timestamp": 150761,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfToBooleanTrueConstant.Wide",
    "timestamp": 150765,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfToBooleanFalseConstant.Wide",
    "timestamp": 150770,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfToBooleanTrue.Wide",
    "timestamp": 150775,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfToBooleanFalse.Wide",
    "timestamp": 150779,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfTrue.Wide",
    "timestamp": 150784,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfFalse.Wide",
    "timestamp": 150788,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfNull.Wide",
    "timestamp": 150792,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfNotNull.Wide",
    "timestamp": 150796,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfUndefined.Wide",
    "timestamp": 150801,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfNotUndefined.Wide",
    "timestamp": 150805,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfUndefinedOrNull.Wide",
    "timestamp": 150810,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfJSReceiver.Wide",
    "timestamp": 150814,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "SwitchOnSmiNoFeedback.Wide",
    "timestamp": 150818,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ForInEnumerate.Wide",
    "timestamp": 150823,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ForInPrepare.Wide",
    "timestamp": 150827,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ForInContinue.Wide",
    "timestamp": 150832,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ForInNext.Wide",
    "timestamp": 150837,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ForInStep.Wide",
    "timestamp": 150841,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ThrowReferenceErrorIfHole.Wide",
    "timestamp": 150846,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ThrowIfNotSuperConstructor.Wide",
    "timestamp": 150850,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "SwitchOnGeneratorState.Wide",
    "timestamp": 150855,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "SuspendGenerator.Wide",
    "timestamp": 150859,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ResumeGenerator.Wide",
    "timestamp": 150864,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "GetIterator.Wide",
    "timestamp": 150872,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "IncBlockCounter.Wide",
    "timestamp": 150876,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Abort.Wide",
    "timestamp": 150881,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DebugBreak1.ExtraWide",
    "timestamp": 150886,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DebugBreak2.ExtraWide",
    "timestamp": 150890,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DebugBreak3.ExtraWide",
    "timestamp": 150895,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DebugBreak4.ExtraWide",
    "timestamp": 150899,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DebugBreak5.ExtraWide",
    "timestamp": 150904,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DebugBreak6.ExtraWide",
    "timestamp": 150908,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Ldar.ExtraWide",
    "timestamp": 150912,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaSmi.ExtraWide",
    "timestamp": 150917,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaConstant.ExtraWide",
    "timestamp": 150921,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaContextSlot.ExtraWide",
    "timestamp": 150926,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaImmutableContextSlot.ExtraWide",
    "timestamp": 150930,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaCurrentContextSlot.ExtraWide",
    "timestamp": 150935,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaImmutableCurrentContextSlot.ExtraWide",
    "timestamp": 150940,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Star.ExtraWide",
    "timestamp": 150944,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Mov.ExtraWide",
    "timestamp": 150949,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "PushContext.ExtraWide",
    "timestamp": 150953,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "PopContext.ExtraWide",
    "timestamp": 150957,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestReferenceEqual.ExtraWide",
    "timestamp": 150962,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaGlobal.ExtraWide",
    "timestamp": 150966,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaGlobalInsideTypeof.ExtraWide",
    "timestamp": 150971,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "StaGlobal.ExtraWide",
    "timestamp": 150976,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "StaContextSlot.ExtraWide",
    "timestamp": 150980,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "StaCurrentContextSlot.ExtraWide",
    "timestamp": 150985,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaLookupSlot.ExtraWide",
    "timestamp": 150989,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaLookupContextSlot.ExtraWide",
    "timestamp": 150994,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaLookupGlobalSlot.ExtraWide",
    "timestamp": 150998,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaLookupSlotInsideTypeof.ExtraWide",
    "timestamp": 151003,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaLookupContextSlotInsideTypeof.ExtraWide",
    "timestamp": 151008,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaLookupGlobalSlotInsideTypeof.ExtraWide",
    "timestamp": 151013,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "StaLookupSlot.ExtraWide",
    "timestamp": 151018,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "GetNamedProperty.ExtraWide",
    "timestamp": 151022,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "GetNamedPropertyFromSuper.ExtraWide",
    "timestamp": 151027,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "GetKeyedProperty.ExtraWide",
    "timestamp": 151032,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaModuleVariable.ExtraWide",
    "timestamp": 151036,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "StaModuleVariable.ExtraWide",
    "timestamp": 151041,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "SetNamedProperty.ExtraWide",
    "timestamp": 151045,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DefineNamedOwnProperty.ExtraWide",
    "timestamp": 151050,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "SetKeyedProperty.ExtraWide",
    "timestamp": 151055,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DefineKeyedOwnProperty.ExtraWide",
    "timestamp": 151059,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "StaInArrayLiteral.ExtraWide",
    "timestamp": 151065,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DefineKeyedOwnPropertyInLiteral.ExtraWide",
    "timestamp": 151070,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CollectTypeProfile.ExtraWide",
    "timestamp": 151075,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Add.ExtraWide",
    "timestamp": 151080,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Sub.ExtraWide",
    "timestamp": 151084,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Mul.ExtraWide",
    "timestamp": 151088,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Div.ExtraWide",
    "timestamp": 151093,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Mod.ExtraWide",
    "timestamp": 151097,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Exp.ExtraWide",
    "timestamp": 151101,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "BitwiseOr.ExtraWide",
    "timestamp": 151105,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "BitwiseXor.ExtraWide",
    "timestamp": 151110,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "BitwiseAnd.ExtraWide",
    "timestamp": 151114,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ShiftLeft.ExtraWide",
    "timestamp": 151119,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ShiftRight.ExtraWide",
    "timestamp": 151123,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ShiftRightLogical.ExtraWide",
    "timestamp": 151128,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "AddSmi.ExtraWide",
    "timestamp": 151132,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "SubSmi.ExtraWide",
    "timestamp": 151137,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "MulSmi.ExtraWide",
    "timestamp": 151141,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DivSmi.ExtraWide",
    "timestamp": 151146,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ModSmi.ExtraWide",
    "timestamp": 151150,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ExpSmi.ExtraWide",
    "timestamp": 151154,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "BitwiseOrSmi.ExtraWide",
    "timestamp": 151159,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "BitwiseXorSmi.ExtraWide",
    "timestamp": 151163,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "BitwiseAndSmi.ExtraWide",
    "timestamp": 151168,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ShiftLeftSmi.ExtraWide",
    "timestamp": 151172,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ShiftRightSmi.ExtraWide",
    "timestamp": 151177,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ShiftRightLogicalSmi.ExtraWide",
    "timestamp": 151181,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Inc.ExtraWide",
    "timestamp": 151186,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Dec.ExtraWide",
    "timestamp": 151191,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Negate.ExtraWide",
    "timestamp": 151195,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "BitwiseNot.ExtraWide",
    "timestamp": 151199,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DeletePropertyStrict.ExtraWide",
    "timestamp": 151204,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DeletePropertySloppy.ExtraWide",
    "timestamp": 151208,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "GetSuperConstructor.ExtraWide",
    "timestamp": 151213,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallAnyReceiver.ExtraWide",
    "timestamp": 151218,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallProperty.ExtraWide",
    "timestamp": 151222,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallProperty0.ExtraWide",
    "timestamp": 151227,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallProperty1.ExtraWide",
    "timestamp": 151231,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallProperty2.ExtraWide",
    "timestamp": 151236,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallUndefinedReceiver.ExtraWide",
    "timestamp": 151240,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallUndefinedReceiver0.ExtraWide",
    "timestamp": 151245,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallUndefinedReceiver1.ExtraWide",
    "timestamp": 151254,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallUndefinedReceiver2.ExtraWide",
    "timestamp": 151259,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallWithSpread.ExtraWide",
    "timestamp": 151263,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallRuntime.ExtraWide",
    "timestamp": 151268,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallRuntimeForPair.ExtraWide",
    "timestamp": 151273,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallJSRuntime.ExtraWide",
    "timestamp": 151277,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "InvokeIntrinsic.ExtraWide",
    "timestamp": 151282,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Construct.ExtraWide",
    "timestamp": 151286,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ConstructWithSpread.ExtraWide",
    "timestamp": 151291,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestEqual.ExtraWide",
    "timestamp": 151297,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestEqualStrict.ExtraWide",
    "timestamp": 151302,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestLessThan.ExtraWide",
    "timestamp": 151306,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestGreaterThan.ExtraWide",
    "timestamp": 151311,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestLessThanOrEqual.ExtraWide",
    "timestamp": 151315,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestGreaterThanOrEqual.ExtraWide",
    "timestamp": 151320,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestInstanceOf.ExtraWide",
    "timestamp": 151325,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestIn.ExtraWide",
    "timestamp": 151329,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ToName.ExtraWide",
    "timestamp": 151334,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ToNumber.ExtraWide",
    "timestamp": 151338,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ToNumeric.ExtraWide",
    "timestamp": 151342,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ToObject.ExtraWide",
    "timestamp": 151347,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateRegExpLiteral.ExtraWide",
    "timestamp": 151351,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateArrayLiteral.ExtraWide",
    "timestamp": 151355,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateEmptyArrayLiteral.ExtraWide",
    "timestamp": 151360,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateObjectLiteral.ExtraWide",
    "timestamp": 151365,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CloneObject.ExtraWide",
    "timestamp": 151369,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "GetTemplateObject.ExtraWide",
    "timestamp": 151374,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateClosure.ExtraWide",
    "timestamp": 151378,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateBlockContext.ExtraWide",
    "timestamp": 151383,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateCatchContext.ExtraWide",
    "timestamp": 151387,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateFunctionContext.ExtraWide",
    "timestamp": 151392,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateEvalContext.ExtraWide",
    "timestamp": 151396,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateWithContext.ExtraWide",
    "timestamp": 151401,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpLoop.ExtraWide",
    "timestamp": 151405,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Jump.ExtraWide",
    "timestamp": 151410,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpConstant.ExtraWide",
    "timestamp": 151414,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfNullConstant.ExtraWide",
    "timestamp": 151418,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfNotNullConstant.ExtraWide",
    "timestamp": 151423,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfUndefinedConstant.ExtraWide",
    "timestamp": 151427,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfNotUndefinedConstant.ExtraWide",
    "timestamp": 151432,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfUndefinedOrNullConstant.ExtraWide",
    "timestamp": 151437,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfTrueConstant.ExtraWide",
    "timestamp": 151441,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfFalseConstant.ExtraWide",
    "timestamp": 151446,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfJSReceiverConstant.ExtraWide",
    "timestamp": 151450,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfToBooleanTrueConstant.ExtraWide",
    "timestamp": 151455,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfToBooleanFalseConstant.ExtraWide",
    "timestamp": 151460,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfToBooleanTrue.ExtraWide",
    "timestamp": 151465,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfToBooleanFalse.ExtraWide",
    "timestamp": 151469,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfTrue.ExtraWide",
    "timestamp": 151474,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfFalse.ExtraWide",
    "timestamp": 151479,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfNull.ExtraWide",
    "timestamp": 151483,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfNotNull.ExtraWide",
    "timestamp": 151487,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfUndefined.ExtraWide",
    "timestamp": 151492,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfNotUndefined.ExtraWide",
    "timestamp": 151496,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfUndefinedOrNull.ExtraWide",
    "timestamp": 151501,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfJSReceiver.ExtraWide",
    "timestamp": 151505,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "SwitchOnSmiNoFeedback.ExtraWide",
    "timestamp": 151510,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ForInEnumerate.ExtraWide",
    "timestamp": 151515,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ForInPrepare.ExtraWide",
    "timestamp": 151520,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ForInContinue.ExtraWide",
    "timestamp": 151525,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ForInNext.ExtraWide",
    "timestamp": 151530,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ForInStep.ExtraWide",
    "timestamp": 151534,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ThrowReferenceErrorIfHole.ExtraWide",
    "timestamp": 151539,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ThrowIfNotSuperConstructor.ExtraWide",
    "timestamp": 151544,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "SwitchOnGeneratorState.ExtraWide",
    "timestamp": 151548,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "SuspendGenerator.ExtraWide",
    "timestamp": 151553,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ResumeGenerator.ExtraWide",
    "timestamp": 151558,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "GetIterator.ExtraWide",
    "timestamp": 151562,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "IncBlockCounter.ExtraWide",
    "timestamp": 151567,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Abort.ExtraWide",
    "timestamp": 151571,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": " node:internal/main/run_main_module:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 0,
    "tm": 155128,
    "source": {
      "script": 442,
      "start": 0,
      "end": 815,
      "positions": "C0O0C4O815",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/main/run_main_module:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 1,
    "tm": 155181,
    "source": {
      "script": 442,
      "start": 0,
      "end": 815,
      "positions": "C0O25C5O134C8O134C13O76C18O107C23O180C25O180C29O217C32O306C40O306C45O742C48O742C53O780C58O787C63O804C70O808C74O788C80O814",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/process/pre_execution:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 2,
    "tm": 155678,
    "source": {
      "script": 443,
      "start": 0,
      "end": 20195,
      "positions": "C0O0C4O20195",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/process/pre_execution:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 3,
    "tm": 156362,
    "source": {
      "script": 443,
      "start": 0,
      "end": 20195,
      "positions": "C0O0C257O28C263O47C269O74C275O99C281O134C287O146C293O162C299O192C305O299C311O299C316O236C322O255C328O278C334O365C340O365C345O337C351O470C357O470C362O405C368O425C374O445C380O546C386O546C391O572C396O510C402O596C408O596C412O596C414O688C420O688C425O701C430O638C436O663C442O20061C449O20083C455O20104C461O20135C467O20168C473O20076C478O20194",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "prepareMainThreadExecution node:internal/process/pre_execution:36:36",
    "type": "JS",
    "kind": "Unopt",
    "func": 4,
    "tm": 156536,
    "source": {
      "script": 443,
      "start": 757,
      "end": 904,
      "positions": "C20O810C30O834C36O852C40O810C45O903",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "prepareExecution node:internal/process/pre_execution:52:26",
    "type": "JS",
    "kind": "Unopt",
    "func": 5,
    "tm": 156605,
    "source": {
      "script": 443,
      "start": 1141,
      "end": 3278,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "refreshRuntimeOptions node:internal/process/pre_execution:123:31",
    "type": "JS",
    "kind": "Unopt",
    "func": 6,
    "tm": 156674,
    "source": {
      "script": 443,
      "start": 3613,
      "end": 3641,
      "positions": "C0O3621C5O3621C9O3640",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "refreshOptions node:internal/options:39:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 7,
    "tm": 156705,
    "source": {
      "script": 87,
      "start": 940,
      "end": 1001,
      "positions": "C0O948C4O959C10O975C14O986C21O1000",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "reconnectZeroFillToggle node:internal/buffer:1074:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 8,
    "tm": 156834,
    "source": {
      "script": 31,
      "start": 31785,
      "end": 31827,
      "positions": "C0O31793C5O31804C11O31802C18O31826",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "patchProcessObject node:internal/process/pre_execution:127:28",
    "type": "JS",
    "kind": "Unopt",
    "func": 9,
    "tm": 158093,
    "source": {
      "script": 443,
      "start": 3672,
      "end": 5805,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getOptionValue node:internal/options:44:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 10,
    "tm": 158215,
    "source": {
      "script": 87,
      "start": 1028,
      "end": 1278,
      "positions": "C0O1062C3O1062C7O1108C15O1108C22O1159C30O1181C38O1181C43O1168C47O1159C53O1197C55O1222C60O1228C61O1252C66O1252C74O1267C81O1275",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getCLIOptionsFromBinding node:internal/options:18:34",
    "type": "JS",
    "kind": "Unopt",
    "func": 11,
    "tm": 158248,
    "source": {
      "script": 87,
      "start": 514,
      "end": 620,
      "positions": "C0O522C6O546C11O573C15O558C28O599C32O617",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "resolve node:path:158:10",
    "type": "JS",
    "kind": "Unopt",
    "func": 12,
    "tm": 158734,
    "source": {
      "script": 73,
      "start": 4875,
      "end": 9786,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isPathSeparator node:path:52:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 13,
    "tm": 160475,
    "source": {
      "script": 73,
      "start": 1794,
      "end": 1876,
      "positions": "C0O1806C2O1822C4O1818C11O1853C13O1849C16O1873",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isWindowsDeviceRoot node:path:60:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 14,
    "tm": 160506,
    "source": {
      "script": 73,
      "start": 1991,
      "end": 2136,
      "positions": "C0O2003C2O2019C4O2016C11O2047C13O2044C20O2087C22O2084C29O2115C31O2112C34O2133",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "wrappedCwd node:internal/bootstrap/switches/does_own_process_state:124:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 15,
    "tm": 160542,
    "source": {
      "script": 133,
      "start": 3466,
      "end": 3554,
      "positions": "C0O3474C7O3488C12O3501C17O3524C22O3524C29O3511C35O3534C39O3551",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "normalizeString node:path:66:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 16,
    "tm": 160757,
    "source": {
      "script": 73,
      "start": 2226,
      "end": 4212,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeGlobalConsole node:internal/console/constructor:688:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 17,
    "tm": 160930,
    "source": {
      "script": 110,
      "start": 21096,
      "end": 22094,
      "positions": "C0O21096C12O21117C19O21131C21O21130C30O21148C35O21162C42O21176C44O21175C53O21192C59O21280C67O21280C72O21293C77O21226C82O21253C87O21316C95O21321C100O21346C106O21364C111O21393C112O21400C113O21444C121O21444C126O21426C131O21501C143O21520C148O21501C153O21557C160O21557C165O21608C172O21634C177O21634C185O21608C191O21692C198O21692C203O21692C205O21728C215O21728C244O21721C274O21721C277O21780C283O21780C293O21799C297O21820C303O21820C308O21710C374O21963C379O21963C384O22093",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "value node:internal/console/constructor:201:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 18,
    "tm": 161739,
    "source": {
      "script": 110,
      "start": 5933,
      "end": 6592,
      "positions": "C0O5933C15O5955C16O5955C18O5974C19O5974C21O5989C33O6040C38O6142C46O6253C60O6316C65O6418C73O6533C87O5989C93O6591",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "value node:internal/console/constructor:231:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 19,
    "tm": 161824,
    "source": {
      "script": 110,
      "start": 6696,
      "end": 8126,
      "positions": "C17O6753C27O6816C34O6860C52O6931C55O6901C73O7003C86O7102C89O7072C104O7152C111O7196C126O7237C129O7237C144O7290C151O7312C166O7346C169O7342C187O7439C191O7449C198O7471C213O7505C216O7501C235O7528C239O7541C246O7563C261O7593C275O7616C279O7629C286O7651C300O7681C314O7699C318O7714C325O7736C340O7766C354O7782C358O7807C365O7851C380O7892C394O7931C398O7951C407O6753C413O8125",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "createWriteErrorHandler node:internal/console/constructor:355:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 20,
    "tm": 161892,
    "source": {
      "script": 110,
      "start": 11006,
      "end": 11881,
      "positions": "C0O11006C13O11036C17O11878",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isBuildingSnapshot node:internal/v8/startup_snapshot:17:28",
    "type": "JS",
    "kind": "Unopt",
    "func": 21,
    "tm": 161958,
    "source": {
      "script": 84,
      "start": 392,
      "end": 529,
      "positions": "C0O456C6O463C11O490C19O491C24O526",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "addReadOnlyProcessAlias node:internal/process/pre_execution:179:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 22,
    "tm": 162103,
    "source": {
      "script": 443,
      "start": 5841,
      "end": 6100,
      "positions": "C16O5894C21O5894C26O5921C28O5939C36O5969C43O6059C49O6078C56O5939C62O6099",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setupTraceCategoryState node:internal/process/pre_execution:367:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 23,
    "tm": 162144,
    "source": {
      "script": 443,
      "start": 11358,
      "end": 11589,
      "positions": "C0O11401C6O11401C11O11374C16O11474C22O11474C27O11445C32O11517C35O11542C40O11517C45O11588",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "toggleTraceCategoryState node:internal/process/per_thread:409:34",
    "type": "JS",
    "kind": "Unopt",
    "func": 24,
    "tm": 162201,
    "source": {
      "script": 37,
      "start": 12320,
      "end": 12627,
      "positions": "C0O12345C4O12375C10O12411C16O12443C21O12487C26O12488C33O12432C39O12514C44O12535C49O12535C55O12555C61O12588C66O12609C71O12609C76O12626",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setupPerfHooks node:internal/process/pre_execution:373:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 25,
    "tm": 162697,
    "source": {
      "script": 443,
      "start": 11616,
      "end": 11739,
      "positions": "C0O11624C6O11624C11O11660C16O11661C20O11685C26O11685C31O11715C36O11716C41O11738",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "refreshTimeOrigin node:internal/perf/performance:227:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 26,
    "tm": 162735,
    "source": {
      "script": 118,
      "start": 5204,
      "end": 5389,
      "positions": "C0O5212C7O5233C10O5245C25O5354C28O5354C35O5212C41O5388",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "refreshTimeOrigin node:internal/perf/utils:25:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 27,
    "tm": 163003,
    "source": {
      "script": 52,
      "start": 549,
      "end": 589,
      "positions": "C0O557C5O570C11O568C18O588",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setupInspectorHooks node:internal/process/pre_execution:378:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 28,
    "tm": 163074,
    "source": {
      "script": 443,
      "start": 11771,
      "end": 12337,
      "positions": "C0O12120C6O12124C11O12149C17O12218C23O12218C28O12186C33O12201C38O12265C44O12265C49O12293C54O12294C61O12336",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/inspector_async_hook:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 29,
    "tm": 163160,
    "source": {
      "script": 444,
      "start": 0,
      "end": 2048,
      "positions": "C0O0C4O2048",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/inspector_async_hook:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 30,
    "tm": 163246,
    "source": {
      "script": 444,
      "start": 0,
      "end": 2048,
      "positions": "C0O0C42O21C43O21C45O32C46O32C48O54C54O2002C61O2024C67O2035C73O2017C78O2047",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setupWarningHandler node:internal/process/pre_execution:192:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 31,
    "tm": 163324,
    "source": {
      "script": 443,
      "start": 6132,
      "end": 6641,
      "positions": "C0O6132C11O6198C19O6198C24O6153C30O6169C36O6238C46O6242C57O6287C62O6291C69O6308C74O6324C79O6332C90O6332C96O6463C103O6467C108O6498C120O6498C125O6640",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setupFetch node:internal/process/pre_execution:213:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 32,
    "tm": 163407,
    "source": {
      "script": 443,
      "start": 6699,
      "end": 7855,
      "positions": "C0O6699C24O6707C29O6719C34O6726C39O6736C49O6770C55O6770C61O6820C62O6827C63O6842C64O6842C66O7114C77O7130C86O7114C91O7421C102O7444C113O7473C124O7514C135O7554C146O7595C154O7421C159O7742C167O7742C172O7716C177O7779C185O7779C190O7810C195O7811C201O7854",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get node:internal/bootstrap/node:171:6",
    "type": "JS",
    "kind": "Unopt",
    "func": 33,
    "tm": 163483,
    "source": {
      "script": 16,
      "start": 5789,
      "end": 5817,
      "positions": "C0O5794C4O5815",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get node:internal/bootstrap/node:144:6",
    "type": "JS",
    "kind": "Unopt",
    "func": 34,
    "tm": 164080,
    "source": {
      "script": 16,
      "start": 5044,
      "end": 5315,
      "positions": "C0O5087C14O5087C20O5127C29O5244C35O5266C43O5251C48O5286C49O5299C51O5310",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "lazyInterface node:internal/process/pre_execution:235:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 35,
    "tm": 164130,
    "source": {
      "script": 443,
      "start": 7186,
      "end": 7415,
      "positions": "C0O7186C9O7200C14O7269C22O7330C32O7410",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/wasm_web_api:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 36,
    "tm": 164218,
    "source": {
      "script": 445,
      "start": 0,
      "end": 2013,
      "positions": "C0O0C4O2013",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/wasm_web_api:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 37,
    "tm": 164314,
    "source": {
      "script": 445,
      "start": 0,
      "end": 2013,
      "positions": "C0O0C32O28C38O130C44O130C49O156C54O74C60O99C66O171C67O171C69O1964C76O1986C82O1979C87O2012",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setupWebCrypto node:internal/process/pre_execution:262:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 38,
    "tm": 164416,
    "source": {
      "script": 443,
      "start": 7988,
      "end": 8834,
      "positions": "C0O7988C8O7996C13O8008C18O8015C23O8025C33O8060C39O8060C45O8118C46O8125C47O8140C48O8140C50O8154C61O8175C76O8243C107O8243C120O8154C125O8522C133O8526C138O8551C144O8571C158O8585C162O8581C164O8628C175O8644C184O8676C189O8628C194O8690C205O8706C214O8741C219O8690C224O8758C235O8774C244O8812C249O8758C255O8833",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setupCustomEvent node:internal/process/pre_execution:299:26",
    "type": "JS",
    "kind": "Unopt",
    "func": 39,
    "tm": 164470,
    "source": {
      "script": 443,
      "start": 9507,
      "end": 9775,
      "positions": "C0O9515C3O9527C8O9534C13O9544C21O9579C27O9579C33O9639C34O9646C35O9679C41O9679C46O9663C51O9716C58O9732C67O9716C73O9774",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setupCodeCoverage node:internal/process/pre_execution:284:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 40,
    "tm": 164504,
    "source": {
      "script": 443,
      "start": 8864,
      "end": 9370,
      "positions": "C0O9176C3O9188C8O9192C16O9220C22O9220C28O9275C31O9283C38O9313C44O9340C49O9344C54O9313C58O9304C63O9369",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setupDebugEnv node:internal/process/pre_execution:330:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 41,
    "tm": 164539,
    "source": {
      "script": 443,
      "start": 10296,
      "end": 10512,
      "positions": "C0O10304C6O10304C11O10337C19O10365C24O10369C29O10338C34O10385C42O10389C48O10434C54O10434C59O10471C64O10485C69O10486C74O10511",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeDebugEnv node:internal/util/debuglog:22:28",
    "type": "JS",
    "kind": "Unopt",
    "func": 42,
    "tm": 164600,
    "source": {
      "script": 28,
      "start": 567,
      "end": 1024,
      "positions": "C0O583C7O596C14O594C20O619C31O734C44O734C51O779C62O780C69O809C80O810C88O861C100O876C116O861C121O861C123O900C132O912C144O990C151O1002C158O1023",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeReport node:internal/process/pre_execution:318:26",
    "type": "JS",
    "kind": "Unopt",
    "func": 43,
    "tm": 164762,
    "source": {
      "script": 443,
      "start": 10041,
      "end": 10270,
      "positions": "C0O10041C8O10068C16O10068C21O10057C27O10107C42O10128C47O10224C55O10107C61O10269",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/process/report:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 44,
    "tm": 164870,
    "source": {
      "script": 446,
      "start": 0,
      "end": 2666,
      "positions": "C0O0C4O2666",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/process/report:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 45,
    "tm": 164988,
    "source": {
      "script": 446,
      "start": 0,
      "end": 2666,
      "positions": "C0O0C48O45C51O45C56O71C61O26C67O174C70O174C75O91C81O111C87O130C93O153C99O218C102O218C106O218C108O257C114O302C119O307C127O709C281O2611C288O2633C294O2654C300O2626C305O2665",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeSourceMapsHandlers node:internal/process/pre_execution:581:38",
    "type": "JS",
    "kind": "Unopt",
    "func": 46,
    "tm": 165120,
    "source": {
      "script": 443,
      "start": 19072,
      "end": 19328,
      "positions": "C0O19140C6O19140C11O19088C16O19110C21O19192C26O19221C30O19302C34O19327",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/source_map/source_map_cache:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 47,
    "tm": 165339,
    "source": {
      "script": 447,
      "start": 0,
      "end": 10757,
      "positions": "C0O0C4O10757",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/source_map/source_map_cache:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 48,
    "tm": 165710,
    "source": {
      "script": 447,
      "start": 0,
      "end": 10757,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/util/iterable_weak_map:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 49,
    "tm": 165902,
    "source": {
      "script": 448,
      "start": 0,
      "end": 2042,
      "positions": "C0O0C4O2042",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/util/iterable_weak_map:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 50,
    "tm": 165991,
    "source": {
      "script": 448,
      "start": 0,
      "end": 2042,
      "positions": "C0O0C26O28C31O45C37O74C43O86C49O102C55O118C134O1448C168O1983C173O1954C177O1998C184O2020C190O2013C195O2041",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "<instance_members_initializer> node:internal/util/iterable_weak_map:16:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 51,
    "tm": 166009,
    "source": {
      "script": 448,
      "start": 388,
      "end": 1891,
      "positions": "C3O426C10O426C22O458C29O458C41O497C55O497C65O1891",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/cjs/helpers:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 52,
    "tm": 166237,
    "source": {
      "script": 449,
      "start": 0,
      "end": 7505,
      "positions": "C0O0C4O7505",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/cjs/helpers:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 53,
    "tm": 166504,
    "source": {
      "script": 449,
      "start": 0,
      "end": 7505,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "IterableWeakMap node:internal/util/iterable_weak_map:16:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 54,
    "tm": 166642,
    "source": {
      "script": 448,
      "start": 388,
      "end": 388,
      "positions": "C0O388C15O388",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getSourceMapsEnabled node:internal/source_map/source_map_cache:51:30",
    "type": "JS",
    "kind": "Unopt",
    "func": 55,
    "tm": 166716,
    "source": {
      "script": 447,
      "start": 1891,
      "end": 2041,
      "positions": "C0O1899C6O1943C11O1964C17O1964C22O1943C26O2013C30O2038",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setSourceMapsEnabled node:internal/source_map/source_map_cache:58:30",
    "type": "JS",
    "kind": "Unopt",
    "func": 56,
    "tm": 166756,
    "source": {
      "script": 447,
      "start": 2074,
      "end": 2711,
      "positions": "C0O2085C8O2085C13O2195C19O2195C24O2132C29O2159C34O2225C38O2255C42O2313C48O2313C53O2286C58O2370C64O2429C70O2592C76O2592C81O2564C86O2625C90O2684C92O2702C99O2710",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "validateBoolean node:internal/validators:217:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 57,
    "tm": 166808,
    "source": {
      "script": 22,
      "start": 5812,
      "end": 5926,
      "positions": "C0O5831C6O5868C22O5874C27O5868C29O5925",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeDeprecations node:internal/process/pre_execution:396:32",
    "type": "JS",
    "kind": "Unopt",
    "func": 58,
    "tm": 167377,
    "source": {
      "script": 443,
      "start": 12568,
      "end": 14547,
      "positions": "C0O12598C6O12598C11O12584C16O12654C24O12654C29O12849C35O12849C40O12891C46O12891C51O12945C80O12937C108O12937C111O13281C122O13301C126O13344C137O13419C148O13511C159O13465C168O13329C177O13572C180O13299C184O12926C249O13856C255O13856C260O13835C265O13886C267O13915C278O13936C285O14082C289O13915C294O14118C298O14149C304O14185C314O14263C321O14167C326O14165C330O14352C336O14394C347O14376C352O14374C357O14546",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeWASI node:internal/process/pre_execution:535:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 59,
    "tm": 167447,
    "source": {
      "script": 443,
      "start": 17316,
      "end": 17529,
      "positions": "C0O17350C6O17350C11O17332C16O17418C21O17422C29O17422C35O17438C37O17470C43O17470C47O17463C52O17528",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/dns/utils:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 60,
    "tm": 167684,
    "source": {
      "script": 450,
      "start": 0,
      "end": 9830,
      "positions": "C0O0C4O9830",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/dns/utils:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 61,
    "tm": 168046,
    "source": {
      "script": 450,
      "start": 0,
      "end": 9830,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/net:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 62,
    "tm": 168259,
    "source": {
      "script": 451,
      "start": 0,
      "end": 2298,
      "positions": "C0O0C4O2298",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/net:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 63,
    "tm": 168353,
    "source": {
      "script": 451,
      "start": 0,
      "end": 2298,
      "positions": "C0O0C45O28C50O39C56O63C61O107C64O107C69O124C73O107C75O158C78O158C83O142C89O197C92O197C96O197C98O259C101O330C106O334C119O349C124O375C129O390C142O375C147O375C149O435C152O476C160O503C173O519C183O492C192O542C205O558C218O568C228O531C237O591C250O608C263O619C273O580C282O648C295O666C308O681C321O692C331O637C340O721C353O739C366O754C379O765C389O710C398O794C411O812C424O827C437O838C447O783C456O867C469O885C482O900C495O911C505O856C514O946C527O961C540O974C550O929C556O992C562O476C567O476C569O2119C577O2163C587O2197C593O2206C599O2217C605O2228C612O2268C622O2134C627O2297",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeDns node:internal/dns/utils:201:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 64,
    "tm": 168561,
    "source": {
      "script": 450,
      "start": 5629,
      "end": 6009,
      "positions": "C0O5658C8O5658C13O5699C15O5725C28O5734C36O5838C38O5847C44O5873C49O5878C54O5907C55O5914C56O5925C66O5925C71O6008",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "assert node:internal/assert:11:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 65,
    "tm": 168598,
    "source": {
      "script": 27,
      "start": 182,
      "end": 322,
      "positions": "C0O204C4O254C7O254C11O272C13O278C18O272C20O321",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "readPolicyFromDisk node:internal/process/pre_execution:485:28",
    "type": "JS",
    "kind": "Unopt",
    "func": 66,
    "tm": 168702,
    "source": {
      "script": 443,
      "start": 15445,
      "end": 17289,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setupStacktracePrinterOnSigint node:internal/process/pre_execution:308:40",
    "type": "JS",
    "kind": "Unopt",
    "func": 67,
    "tm": 168778,
    "source": {
      "script": 443,
      "start": 9818,
      "end": 10012,
      "positions": "C0O9826C8O9831C14O9872C15O9879C16O9915C22O9915C27O9896C32O9967C38O10001C43O10001C48O10011",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeReportSignalHandlers node:internal/process/pre_execution:338:40",
    "type": "JS",
    "kind": "Unopt",
    "func": 68,
    "tm": 168811,
    "source": {
      "script": 443,
      "start": 10616,
      "end": 10716,
      "positions": "C0O10653C6O10653C11O10632C16O10694C20O10715",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "addSignalHandler node:internal/process/report:98:26",
    "type": "JS",
    "kind": "Unopt",
    "func": 69,
    "tm": 168843,
    "source": {
      "script": 446,
      "start": 2241,
      "end": 2394,
      "positions": "C0O2252C5O2259C10O2259C16O2290C22O2326C27O2335C32O2335C38O2355C41O2363C49O2363C56O2393",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeHeapSnapshotSignalHandlers node:internal/process/pre_execution:344:46",
    "type": "JS",
    "kind": "Unopt",
    "func": 70,
    "tm": 168958,
    "source": {
      "script": 443,
      "start": 10765,
      "end": 11322,
      "positions": "C0O10765C17O10788C27O10788C31O10788C33O10834C37O10852C38O10859C39O10865C47O10865C52O10895C60O10896C65O10957C73O10957C78O10935C84O11044C89O11052C100O11052C106O11184C113O11188C118O11217C130O11217C135O11321",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setupChildProcessIpcChannel node:internal/process/pre_execution:457:37",
    "type": "JS",
    "kind": "Unopt",
    "func": 71,
    "tm": 169067,
    "source": {
      "script": 443,
      "start": 14587,
      "end": 15133,
      "positions": "C0O14595C3O14607C8O14611C14O14650C20O14650C25O14696C33O14719C38O14723C46O14696C52O14750C53O14760C57O14750C61O14844C64O14859C73O14920C76O14928C81O14932C90O14980C93O14995C102O15039C108O15039C113O15063C118O15064C124O15104C127O15119C132O15104C137O15132",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeClusterIPC node:internal/process/pre_execution:476:30",
    "type": "JS",
    "kind": "Unopt",
    "func": 72,
    "tm": 169118,
    "source": {
      "script": 443,
      "start": 15166,
      "end": 15414,
      "positions": "C0O15174C3O15186C10O15190C18O15205C23O15209C29O15248C35O15248C40O15281C45O15281C49O15372C52O15387C62O15413",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "runDeserializeCallbacks node:internal/v8/startup_snapshot:30:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 73,
    "tm": 169176,
    "source": {
      "script": 84,
      "start": 765,
      "end": 911,
      "positions": "C0O808C5O801C11O808C16O853C21O874C26O874C31O831C37O844C44O888C48O773C52O910",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setupUserModules node:internal/process/pre_execution:113:26",
    "type": "JS",
    "kind": "Unopt",
    "func": 74,
    "tm": 169217,
    "source": {
      "script": 443,
      "start": 3307,
      "end": 3579,
      "positions": "C0O3315C3O3315C6O3341C9O3341C12O3385C18O3385C23O3428C28O3446C34O3428C38O3477C41O3477C44O3547C47O3547C51O3578",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeCJSLoader node:internal/process/pre_execution:542:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 75,
    "tm": 169249,
    "source": {
      "script": 443,
      "start": 17561,
      "end": 17884,
      "positions": "C0O17587C6O17587C11O17630C16O17635C20O17655C26O17694C31O17701C36O17701C40O17800C51O17822C56O17858C60O17815C65O17883",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/cjs/loader:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 76,
    "tm": 170054,
    "source": {
      "script": 452,
      "start": 0,
      "end": 46702,
      "positions": "C0O0C4O46702",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/cjs/loader:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 77,
    "tm": 171655,
    "source": {
      "script": 452,
      "start": 0,
      "end": 46702,
      "positions": "C0O0C490O1183C496O1200C502O1225C508O1252C514O1278C520O1301C526O1323C532O1346C538O1374C544O1398C550O1423C556O1449C562O1480C567O1506C573O1518C579O1528C585O1542C590O1559C596O1584C601O1601C607O1636C613O1661C619O1676C625O1696C631O1730C637O1755C642O1765C648O1782C654O1797C660O1821C666O1833C671O1845C676O1861C682O1872C688O1898C694O1928C700O1956C706O1987C712O2014C718O2040C724O2065C730O2090C736O2200C738O2200C743O2200C745O2276C757O2298C763O2308C769O2316C775O2328C781O2346C811O2291C815O2467C819O2467C825O2449C831O2544C835O2544C841O2518C847O2650C851O2650C857O2602C863O2617C869O2632C875O2791C879O2791C885O2687C890O2701C896O2729C902O2746C908O2770C914O2837C918O2837C924O2826C930O2889C934O2889C940O2861C946O2929C950O2929C954O2929C956O2969C960O2969C964O2969C966O3004C970O3004C974O3004C976O3048C980O3048C984O3048C986O3082C990O3074C996O3120C1004O3120C1010O3097C1016O3170C1020O3170C1024O3170C1026O3243C1034O3243C1040O3228C1046O3345C1054O3345C1060O3345C1066O3310C1072O3503C1076O3503C1082O3382C1088O3400C1094O3417C1100O3439C1106O3463C1112O3488C1118O3572C1122O3572C1128O3553C1134O3627C1142O3627C1146O3627C1148O3696C1156O3696C1160O3696C1162O3777C1166O3785C1172O3789C1176O3777C1178O3884C1186O3884C1196O3929C1203O3884C1205O4114C1206O4114C1208O4293C1212O4293C1218O4293C1224O4149C1230O4177C1236O4212C1242O4234C1248O4271C1254O4349C1258O4349C1264O4330C1270O4409C1278O4409C1283O4541C1287O4541C1293O4464C1299O4488C1305O4503C1311O4516C1317O4599C1321O4599C1327O4586C1333O4651C1337O4651C1341O4651C1343O4719C1347O4719C1353O4700C1359O4788C1367O4788C1373O4773C1379O4905C1383O4905C1389O4832C1395O4852C1401O4878C1407O4967C1411O4975C1419O4984C1422O4967C1424O5029C1427O5029C1431O5029C1433O5071C1434O5071C1436O5091C1437O5091C1439O5117C1440O5117C1442O5906C1444O5906C1446O5913C1458O5934C1464O5976C1472O6004C1480O5913C1485O6773C1487O6773C1492O6773C1494O7444C1499O7495C1503O7495C1549O7476C1592O7465C1603O7472C1615O7513C1629O7556C1639O7556C1651O7595C1655O7595C1665O7449C1744O7704C1750O7682C1764O7666C1774O7666C1776O7753C1780O7767C1790O7767C1800O7793C1816O7794C1826O7855C1834O7886C1840O7908C1848O7929C1855O7945C1863O7943C1871O7966C1878O7986C1886O7984C1894O8007C1901O8028C1909O8026C1917O8067C1921O8067C1923O8072C1931O8091C1939O8114C1940O8114C1942O8175C1946O8175C1948O8275C1956O8394C1965O8430C1977O8562C1994O8384C2004O8384C2006O8707C2018O8728C2027O8769C2039O8806C2051O8707C2061O8872C2073O8893C2082O8937C2094O8982C2106O8872C2116O9081C2125O9083C2140O9118C2148O9146C2165O9118C2175O9193C2183O9228C2200O9193C2210O9430C2218O9458C2243O9509C2251O9634C2266O9530C2280O9718C2290O9743C2298O9868C2313O9764C2327O9952C2335O9430C2345O9989C2349O9989C2359O10022C2379O10023C2391O9989C2393O10073C2409O10089C2419O10087C2427O10415C2431O10415C2441O10415C2443O11236C2445O11236C2447O11250C2459O11271C2468O11320C2480O11355C2492O11250C2502O13549C2506O13549C2516O13549C2518O16263C2525O16263C2527O17296C2535O17313C2543O21396C2550O21396C2552O21474C2556O21482C2564O21474C2566O21491C2570O21556C2578O21580C2588O23210C2596O23234C2604O24418C2612O24445C2620O26323C2632O26364C2644O26750C2658O26323C2668O26323C2670O28071C2678O28084C2686O31323C2694O31347C2702O35535C2706O35542C2720O35557C2728O36580C2732O36587C2746O36605C2754O37058C2755O37058C2757O37094C2758O37094C2760O38801C2764O38808C2778O38827C2786O40731C2790O40738C2804O40757C2812O42603C2816O42610C2830O42631C2838O43067C2842O43074C2856O43095C2864O43935C2870O43985C2876O43935C2878O44591C2884O44612C2892O44632C2900O44650C2908O45649C2916O45672C2924O46291C2932O46320C2940O46551C2948O46568C2956O46677C2962O46691C2971O46701",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/package_json_reader:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 78,
    "tm": 172095,
    "source": {
      "script": 453,
      "start": 0,
      "end": 1024,
      "positions": "C0O0C4O1024",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/package_json_reader:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 79,
    "tm": 172150,
    "source": {
      "script": 453,
      "start": 0,
      "end": 1024,
      "positions": "C0O0C29O25C34O86C37O86C42O59C48O136C54O136C59O118C65O182C71O182C76O161C82O216C84O216C89O216C91O238C92O238C94O996C101O1015C107O1011C112O1023",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/process/esm_loader:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 80,
    "tm": 172300,
    "source": {
      "script": 454,
      "start": 0,
      "end": 3087,
      "positions": "C0O0C4O3087",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/process/esm_loader:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 81,
    "tm": 172420,
    "source": {
      "script": 454,
      "start": 0,
      "end": 3087,
      "positions": "C0O0C47O28C53O119C59O119C64O145C69O74C75O176C81O176C86O162C92O270C98O270C103O228C109O336C115O336C120O318C126O397C132O397C137O373C143O431C147O466C151O777C155O817C159O1300C162O1300C167O1300C169O1318C171O1336C175O1588C176O1588C178O2717C182O2733C187O3086",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/loader:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 82,
    "tm": 172828,
    "source": {
      "script": 455,
      "start": 0,
      "end": 27039,
      "positions": "C0O0C4O27039",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/loader:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 83,
    "tm": 173865,
    "source": {
      "script": 455,
      "start": 0,
      "end": 27039,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "<instance_members_initializer> node:internal/modules/esm/loader:181:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 84,
    "tm": 173921,
    "source": {
      "script": 455,
      "start": 5942,
      "end": 26951,
      "positions": "C3O5972C8O6391C24O6415C42O6669C58O6693C85O6814C95O6913C102O6913C111O7036C116O7128C123O7128C132O7256C143O26951",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/module_map:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 85,
    "tm": 174076,
    "source": {
      "script": 456,
      "start": 0,
      "end": 1487,
      "positions": "C0O0C4O1487",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/module_map:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 86,
    "tm": 174143,
    "source": {
      "script": 456,
      "start": 0,
      "end": 1487,
      "positions": "C0O0C23O35C26O35C30O35C32O112C35O112C40O88C46O164C52O181C57O221C60O221C65O254C78O255C84O221C86O335C89O335C94O361C99O310C105O397C108O397C113O378C123O510C167O1458C169O1473C174O1486",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/module_job:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 87,
    "tm": 174345,
    "source": {
      "script": 457,
      "start": 0,
      "end": 8386,
      "positions": "C0O0C4O8386",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/module_job:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 88,
    "tm": 174623,
    "source": {
      "script": 457,
      "start": 0,
      "end": 8386,
      "positions": "C0O0C82O28C88O51C94O74C100O97C105O119C111O136C116O161C121O180C127O205C133O222C139O246C145O279C151O313C157O342C163O354C169O382C175O407C181O478C187O478C192O463C198O544C204O544C209O521C215O609C221O609C226O582C232O674C238O674C242O674C244O727C247O727C249O761C251O761C253O804C254O804C256O836C260O836C262O961C266O961C305O8338C312O8307C317O8357C319O8372C324O8385",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/assert:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 89,
    "tm": 174802,
    "source": {
      "script": 458,
      "start": 0,
      "end": 3741,
      "positions": "C0O0C4O3741",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/assert:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 90,
    "tm": 174949,
    "source": {
      "script": 458,
      "start": 0,
      "end": 3741,
      "positions": "C0O0C46O28C51O53C57O80C63O97C68O114C74O191C77O191C82O172C88O356C91O356C96O382C101O237C107O274C113O312C119O486C121O486C123O684C130O722C136O758C142O811C148O843C154O684C156O1280C159O1305C169O1280C174O1280C176O3670C183O3692C189O3716C195O3685C200O3740",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/assert:43:3",
    "type": "JS",
    "kind": "Unopt",
    "func": 91,
    "tm": 175023,
    "source": {
      "script": 458,
      "start": 1337,
      "end": 1375,
      "positions": "C0O1352C2O1356C4O1352C8O1375",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/resolve:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 92,
    "tm": 175627,
    "source": {
      "script": 459,
      "start": 0,
      "end": 40844,
      "positions": "C0O0C4O40844",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/resolve:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 93,
    "tm": 176988,
    "source": {
      "script": 459,
      "start": 0,
      "end": 40844,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/package_config:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 94,
    "tm": 177258,
    "source": {
      "script": 460,
      "start": 0,
      "end": 3771,
      "positions": "C0O0C4O3771",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/package_config:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 95,
    "tm": 177429,
    "source": {
      "script": 460,
      "start": 0,
      "end": 3771,
      "positions": "C0O0C43O28C49O42C55O76C60O88C66O163C69O163C74O140C80O145C86O233C89O233C94O259C99O200C105O296C108O296C112O296C114O378C117O378C122O354C128O765C130O765C135O765C137O3700C144O3722C150O3743C156O3715C161O3770",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/get_format:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 96,
    "tm": 177622,
    "source": {
      "script": 461,
      "start": 0,
      "end": 4277,
      "positions": "C0O0C4O4277",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/get_format:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 97,
    "tm": 177779,
    "source": {
      "script": 461,
      "start": 0,
      "end": 4277,
      "positions": "C0O0C90O26C96O50C102O84C108O109C114O128C120O209C123O209C128O177C134O187C140O196C146O254C149O254C154O235C159O308C162O308C167O292C173O437C176O437C181O366C187O389C193O418C199O519C202O519C206O519C208O613C211O613C215O613C217O719C220O719C225O677C231O693C237O792C240O792C245O769C251O774C257O857C260O857C265O883C270O826C276O919C283O955C289O996C295O1037C301O1079C305O1111C315O919C317O4175C324O4197C330O4218C336O4252C342O4190C347O4276",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/fetch_module:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 98,
    "tm": 177992,
    "source": {
      "script": 462,
      "start": 0,
      "end": 8091,
      "positions": "C0O0C4O8091",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/fetch_module:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 99,
    "tm": 178279,
    "source": {
      "script": 462,
      "start": 0,
      "end": 8091,
      "positions": "C0O0C113O26C119O60C125O85C130O97C136O125C142O150C148O246C154O246C159O246C164O225C170O374C176O374C181O400C186O277C192O311C198O347C204O425C210O425C215O417C221O463C227O463C232O497C238O497C243O488C249O537C255O537C260O525C266O1204C268O1204C273O1204C275O1502C276O1502C278O1742C279O1742C281O2139C282O2139C284O6166C289O6158C294O6158C296O6180C299O6190C310O6190C316O6218C319O6228C330O6228C336O8051C343O8073C349O8066C354O8090",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:net:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 100,
    "tm": 179376,
    "source": {
      "script": 463,
      "start": 0,
      "end": 64191,
      "positions": "C0O0C4O64191",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:net:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 101,
    "tm": 181637,
    "source": {
      "script": 463,
      "start": 0,
      "end": 64191,
      "positions": "C0O0C516O1183C522O1200C528O1226C534O1249C540O1261C546O1287C552O1299C558O1310C564O1326C570O1345C576O1370C581O1395C586O1406C592O1462C598O1462C602O1462C604O1497C610O1497C614O1497C616O1529C622O1529C627O1562C641O1563C647O1529C649O1721C655O1721C660O1621C666O1646C672O1655C677O1666C682O1677C688O1702C694O1762C700O1762C704O1762C706O1851C709O1851C714O1802C720O1820C726O1834C732O1896C738O1896C743O1885C749O1944C752O1944C757O1924C763O1995C766O1995C771O1978C777O2095C780O2095C785O2039C791O2047C797O2077C803O2195C806O2195C811O2136C817O2145C823O2176C829O2331C835O2331C840O2237C846O2252C857O2294C863O2311C869O2541C875O2541C880O2376C886O2394C892O2411C898O2428C903O2449C909O2461C914O2478C919O2499C925O2511C931O2525C937O3051C943O3051C948O3051C953O2608C959O2641C965O2668C971O2696C977O2722C983O2751C989O2781C995O2813C1001O2842C1007O2866C1013O2908C1019O2935C1025O2955C1031O2974C1037O3000C1043O3021C1049O3105C1055O3105C1060O3088C1066O3165C1072O3165C1077O3146C1083O3232C1089O3232C1094O3215C1100O3409C1106O3409C1111O3270C1117O3294C1123O3314C1129O3335C1135O3353C1141O3372C1147O3389C1153O3470C1156O3470C1160O3470C1162O3572C1168O3572C1173O3512C1179O3545C1185O3655C1186O3655C1188O3669C1189O3669C1191O3679C1192O3679C1194O3695C1195O3695C1197O3750C1203O3750C1208O3721C1214O3735C1220O3791C1226O3791C1231O3778C1237O3846C1240O3846C1244O3846C1246O3904C1248O3904C1250O3942C1252O3942C1254O3969C1257O3977C1264O3986C1267O3969C1269O4015C1273O4015C1275O4064C1278O4064C1282O4064C1284O4110C1285O4110C1287O4139C1288O4139C1290O4791C1296O4791C1301O4746C1307O4762C1313O4776C1319O8901C1322O8901C1326O8901C1328O8946C1331O8946C1335O8946C1337O8992C1340O8992C1344O8992C1346O9038C1349O9038C1353O9038C1355O9098C1358O9098C1362O9098C1364O13822C1367O13850C1375O13868C1380O13875C1385O13822C1390O13888C1396O13924C1401O13888C1406O13967C1409O13974C1418O13996C1422O14232C1425O14239C1434O14256C1438O15796C1441O15803C1448O15824C1452O15849C1455O15856C1464O15877C1468O16405C1471O16412C1480O16433C1484O16834C1487O16841C1496O16864C1500O17505C1503O17512C1512O17530C1516O17585C1522O17613C1536O17669C1544O17585C1554O17724C1560O17752C1577O17799C1589O17724C1599O17891C1605O17919C1622O17974C1634O17891C1644O18311C1650O18339C1667O18394C1679O18311C1689O18487C1695O18515C1700O18526C1709O18570C1724O18487C1734O18951C1737O18958C1746O18974C1754O19221C1757O19228C1766O19242C1774O19441C1777O19448C1786O19474C1794O19845C1797O19852C1806O19868C1814O20222C1817O20229C1826O20246C1834O20445C1837O20452C1846O20467C1854O20821C1857O20828C1866O20850C1874O21014C1877O21021C1886O21040C1894O22609C1897O22616C1906O22633C1914O22743C1917O22750C1926O22773C1934O23279C1942O23279C1952O23403C1960O23403C1970O23506C1978O23506C1988O23606C1996O23606C2006O23702C2009O23709C2018O23732C2026O24026C2034O24026C2044O24129C2052O24129C2062O24221C2070O24221C2080O24319C2083O24326C2088O24336C2092O24354C2100O24410C2103O24417C2112O24441C2120O25396C2123O25403C2132O25421C2140O25500C2143O25507C2152O25524C2160O25775C2168O25775C2178O25919C2186O25919C2196O31809C2199O31816C2208O31834C2216O40479C2219O40486C2228O40500C2236O40707C2239O40714C2248O40730C2256O46255C2259O46283C2271O46307C2280O46255C2290O46320C2296O46320C2306O50441C2309O50448C2320O50467C2328O52009C2331O52016C2344O52033C2352O56400C2358O56428C2379O56482C2391O56400C2401O56580C2404O56587C2417O56605C2425O58962C2428O58969C2441O58994C2449O59791C2452O59798C2465O59814C2473O60725C2476O60732C2489O60762C2497O61262C2500O61269C2512O61292C2525O61316C2533O61649C2539O61674C2560O61719C2572O61760C2587O61649C2597O61810C2603O61838C2622O61885C2637O61921C2652O61810C2662O61966C2665O61973C2681O61996C2689O62251C2692O62258C2708O62272C2716O62384C2719O62391C2735O62407C2743O62524C2745O62580C2746O62580C2748O62589C2763O62613C2764O62613C2766O62639C2780O63369C2788O63651C2798O63694C2808O63733C2818O63751C2828O64019C2838O64049C2848O64061C2858O64084C2868O64101C2878O64120C2888O64131C2898O64142C2908O64161C2973O63666C2982O64190",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/dtrace:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 102,
    "tm": 182179,
    "source": {
      "script": 464,
      "start": 0,
      "end": 589,
      "positions": "C0O0C4O589",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/dtrace:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 103,
    "tm": 182223,
    "source": {
      "script": 464,
      "start": 0,
      "end": 589,
      "positions": "C0O32C3O32C8O333C17O345C25O73C36O115C47O158C58O200C69O243C80O287C91O381C98O403C104O434C110O466C116O497C122O529C128O562C134O396C139O588",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "protoGetter node:net:844:21",
    "type": "JS",
    "kind": "Unopt",
    "func": 104,
    "tm": 182420,
    "source": {
      "script": 463,
      "start": 23107,
      "end": 23275,
      "positions": "C0O23129C8O23157C13O23168C20O23257C27O23129C33O23274",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get BlockList node:net:2235:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 105,
    "tm": 182500,
    "source": {
      "script": 463,
      "start": 63792,
      "end": 63884,
      "positions": "C0O63802C14O63816C19O63845C26O63812C32O63862C36O63879",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/blocklist:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 106,
    "tm": 182632,
    "source": {
      "script": 465,
      "start": 0,
      "end": 4043,
      "positions": "C0O0C4O4043",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/blocklist:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 107,
    "tm": 182806,
    "source": {
      "script": 465,
      "start": 0,
      "end": 4043,
      "positions": "C0O0C35O28C41O40C46O65C51O137C54O137C59O115C65O218C68O218C73O203C78O312C81O312C86O258C92O285C98O410C101O410C106O361C111O380C116O391C121O477C124O477C129O465C135O530C138O530C142O530C144O575C147O575C152O558C158O645C161O645C166O671C171O617C177O724C180O724C185O690C191O705C197O783C204O929C241O3359C251O3528C278O3669C301O3850C306O3884C311O3894C315O3872C319O3947C324O3968C329O3908C334O3983C341O4005C347O4019C353O3998C358O4042",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/socketaddress:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 108,
    "tm": 183047,
    "source": {
      "script": 466,
      "start": 0,
      "end": 3550,
      "positions": "C0O0C4O3550",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/socketaddress:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 109,
    "tm": 183203,
    "source": {
      "script": 466,
      "start": 0,
      "end": 3550,
      "positions": "C0O0C41O28C46O53C51O154C54O154C59O108C65O127C71O139C77O275C80O275C85O199C91O218C97O237C103O254C109O369C112O369C117O369C122O335C128O464C131O464C136O432C141O445C147O513C150O513C155O501C161O610C164O610C169O561C174O580C179O591C184O673C187O673C191O673C193O709C196O709C200O709C202O759C235O2198C245O2452C255O2629C288O3044C311O3322C316O3363C321O3373C325O3344C329O3430C334O3455C339O3387C344O3470C351O3492C357O3510C363O3536C369O3485C374O3549",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "BlockList node:internal/blocklist:40:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 110,
    "tm": 183342,
    "source": {
      "script": 465,
      "start": 814,
      "end": 922,
      "positions": "C3O824C11O824C23O838C28O843C33O858C36O854C41O852C45O882C50O887C52O886C58O896C64O910C71O921",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "addAddress node:internal/blocklist:60:13",
    "type": "JS",
    "kind": "Unopt",
    "func": 111,
    "tm": 183399,
    "source": {
      "script": 465,
      "start": 1208,
      "end": 1529,
      "positions": "C14O1242C19O1261C24O1261C31O1296C39O1296C44O1339C52O1339C57O1380C69O1419C75O1437C81O1390C87O1468C89O1473C91O1472C95O1482C102O1501C104O1500C108O1482C114O1528",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isSocketAddress node:internal/socketaddress:44:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 112,
    "tm": 183438,
    "source": {
      "script": 466,
      "start": 801,
      "end": 859,
      "positions": "C0O816C9O831C11O830C18O840C19O854",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "SocketAddress node:internal/socketaddress:48:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 113,
    "tm": 183507,
    "source": {
      "script": 466,
      "start": 876,
      "end": 1869,
      "positions": "C9O887C16O908C24O908C36O922C44O922C49O969C61O1018C72O1036C84O1077C92O1094C100O1138C102O1149C109O1166C120O1219C125O1219C130O1239C149O1286C154O1311C156O1347C161O1373C163O1405C171O1463C178O1411C183O1405C184O1486C192O1486C197O1535C205O1535C210O1576C223O1576C228O1638C233O1643C238O1658C255O1654C260O1652C264O1711C269O1716C277O1732C279O1731C283O1741C294O1766C299O1790C304O1816C309O1845C313O1741C318O1725C325O1868",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/validators:247:3",
    "type": "JS",
    "kind": "Unopt",
    "func": 114,
    "tm": 183582,
    "source": {
      "script": 22,
      "start": 6511,
      "end": 7077,
      "positions": "C16O6570C27O6570C33O6657C44O6657C50O6742C61O6742C67O6805C75O6853C79O6867C82O6867C96O6944C104O7011C120O7017C125O7011C127O7076",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getOwnPropertyValueOrDefault node:internal/validators:228:38",
    "type": "JS",
    "kind": "Unopt",
    "func": 115,
    "tm": 183616,
    "source": {
      "script": 22,
      "start": 6083,
      "end": 6231,
      "positions": "C0O6117C7O6144C10O6144C23O6222C26O6228",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "validatePort node:internal/validators:384:22",
    "type": "JS",
    "kind": "Unopt",
    "func": 116,
    "tm": 183658,
    "source": {
      "script": 22,
      "start": 10714,
      "end": 11081,
      "positions": "C24O10759C44O10857C47O10857C52O10882C58O10890C65O10907C70O10918C72O10924C75O10913C86O10946C92O10971C99O10981C101O11000C117O11006C122O11000C123O11062C125O11074C128O11078",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/validators:138:40",
    "type": "JS",
    "kind": "Unopt",
    "func": 117,
    "tm": 183709,
    "source": {
      "script": 22,
      "start": 3648,
      "end": 4093,
      "positions": "C16O3688C22O3726C38O3732C43O3726C44O3789C49O3794C55O3825C71O3831C76O3825C77O3900C87O3962C90O3980C92O3990C99O4005C104O4019C114O4058C127O4071C140O4025C145O4019C147O4092",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "addRange node:internal/blocklist:72:11",
    "type": "JS",
    "kind": "Unopt",
    "func": 118,
    "tm": 183786,
    "source": {
      "script": 465,
      "start": 1543,
      "end": 2235,
      "positions": "C17O1580C22O1599C27O1599C34O1632C42O1632C47O1671C55O1671C60O1712C72O1758C78O1774C84O1720C90O1805C95O1824C100O1824C107O1855C115O1855C120O1890C128O1890C133O1931C145O1975C151O1989C157O1937C163O2032C165O2037C167O2036C171O2046C178O2069C180O2068C186O2103C188O2102C192O2046C199O2132C200O2140C205O2158C221O2164C226O2158C228O2234",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/formats:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 119,
    "tm": 183908,
    "source": {
      "script": 467,
      "start": 0,
      "end": 1256,
      "positions": "C0O0C4O1256",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/formats:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 120,
    "tm": 183976,
    "source": {
      "script": 467,
      "start": 0,
      "end": 1256,
      "positions": "C0O0C24O28C30O95C33O95C38O76C43O161C46O161C50O161C52O238C57O386C61O386C63O531C67O565C73O629C79O593C83O1134C90O1156C96O1179C102O1208C108O1237C114O1149C119O1255",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/initialize_import_meta:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 121,
    "tm": 184087,
    "source": {
      "script": 468,
      "start": 0,
      "end": 1021,
      "positions": "C0O0C4O1021",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/initialize_import_meta:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 122,
    "tm": 184140,
    "source": {
      "script": 468,
      "start": 0,
      "end": 1021,
      "positions": "C0O0C28O44C31O44C36O25C41O115C44O115C48O115C50O181C56O206C62O257C65O257C69O257C71O973C78O995C84O988C89O1020",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/load:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 123,
    "tm": 184274,
    "source": {
      "script": 469,
      "start": 0,
      "end": 2888,
      "positions": "C0O0C4O2888",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/load:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 124,
    "tm": 184393,
    "source": {
      "script": 469,
      "start": 0,
      "end": 2888,
      "positions": "C0O0C58O28C64O51C70O75C76O145C79O145C84O124C90O221C93O221C98O198C104O289C107O289C112O270C117O343C120O343C125O327C131O459C134O459C143O504C150O459C152O589C155O589C159O589C161O683C164O683C169O683C174O666C180O741C183O741C188O772C193O723C199O799C202O799C207O791C213O893C216O893C221O919C226O836C232O856C238O955C242O955C244O2848C251O2870C257O2863C262O2887",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/promises:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 125,
    "tm": 185099,
    "source": {
      "script": 470,
      "start": 0,
      "end": 26548,
      "positions": "C0O0C4O26548",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/promises:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 126,
    "tm": 186061,
    "source": {
      "script": 470,
      "start": 0,
      "end": 26548,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "<instance_members_initializer> node:internal/fs/promises:133:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 127,
    "tm": 186204,
    "source": {
      "script": 470,
      "start": 3301,
      "end": 8344,
      "positions": "C0O3301C9O5047C18O8344",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/rimraf:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 128,
    "tm": 186506,
    "source": {
      "script": 471,
      "start": 0,
      "end": 7763,
      "positions": "C0O0C4O7763",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/rimraf:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 129,
    "tm": 186797,
    "source": {
      "script": 471,
      "start": 0,
      "end": 7763,
      "positions": "C0O0C139O377C145O403C151O415C156O464C159O464C164O453C170O495C173O495C177O495C179O671C182O522C188O532C194O546C200O556C206O570C212O582C218O598C224O608C230O622C236O631C242O644C248O655C254O692C257O692C262O684C267O733C270O733C275O718C281O771C284O771C289O761C295O825C302O825C307O825C309O897C316O897C321O897C323O994C330O1003C333O986C335O1038C345O1038C347O1098C357O1098C359O1165C361O1165C363O1194C366O1201C371O1201C376O1194C378O7705C385O7724C391O7732C397O7748C403O7720C408O7762",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/readline/interface:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 130,
    "tm": 187519,
    "source": {
      "script": 472,
      "start": 0,
      "end": 41001,
      "positions": "C0O0C4O41001",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/readline/interface:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 131,
    "tm": 188956,
    "source": {
      "script": 472,
      "start": 0,
      "end": 41001,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/readline/utils:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 132,
    "tm": 189427,
    "source": {
      "script": 473,
      "start": 0,
      "end": 12292,
      "positions": "C0O0C4O12292",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/readline/utils:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 133,
    "tm": 189856,
    "source": {
      "script": 473,
      "start": 0,
      "end": 12292,
      "positions": "C0O0C61O28C67O52C73O75C79O99C85O122C91O152C97O183C103O208C109O239C114O301C120O301C122O338C124O338C126O372C129O372C134O609C136O621C140O664C144O664C148O659C152O696C156O696C160O691C164O723C168O723C172O718C176O756C180O756C184O751C188O12174C195O12196C201O12213C207O12232C213O12249C219O12262C225O12283C231O12189C236O12291",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "CSI node:internal/readline/utils:19:13",
    "type": "JS",
    "kind": "Unopt",
    "func": 134,
    "tm": 189972,
    "source": {
      "script": 473,
      "start": 415,
      "end": 605,
      "positions": "C0O415C8O449C20O480C22O495C26O485C31O515C33O529C43O552C47O545C52O567C54O578C64O504C69O467C72O591C74O602",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/readline/callbacks:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 135,
    "tm": 190093,
    "source": {
      "script": 474,
      "start": 0,
      "end": 2886,
      "positions": "C0O0C4O2886",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/readline/callbacks:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 136,
    "tm": 190222,
    "source": {
      "script": 474,
      "start": 0,
      "end": 2886,
      "positions": "C0O0C56O28C62O150C65O150C70O150C75O87C81O115C87O215C90O215C95O192C101O269C104O269C109O259C115O403C118O319C124O334C130O355C136O381C142O2800C149O2822C155O2836C161O2856C167O2869C173O2815C178O2885",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "EventEmitterMixin node:internal/event_target:1061:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 137,
    "tm": 190459,
    "source": {
      "script": 47,
      "start": 28508,
      "end": 29216,
      "positions": "C0O28561C23O28752C30O28784C33O28797C38O28752C43O28812C47O28871C52O28871C57O28913C59O28937C63O28918C68O29063C75O29100C81O29063C86O28946C91O28900C94O29120C99O29161C104O29120C109O29188C111O29213",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/translators:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 138,
    "tm": 191916,
    "source": {
      "script": 475,
      "start": 0,
      "end": 11080,
      "positions": "C0O0C4O11080",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/translators:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 139,
    "tm": 192310,
    "source": {
      "script": 475,
      "start": 0,
      "end": 11080,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/create_dynamic_module:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 140,
    "tm": 192506,
    "source": {
      "script": 476,
      "start": 0,
      "end": 1828,
      "positions": "C0O0C4O1828",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/create_dynamic_module:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 141,
    "tm": 192591,
    "source": {
      "script": 476,
      "start": 0,
      "end": 1828,
      "positions": "C0O0C39O28C45O51C51O73C57O91C63O108C69O150C72O150C77O183C90O184C96O150C98O672C103O1789C105O1804C110O1827",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/vm/module:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 142,
    "tm": 192918,
    "source": {
      "script": 477,
      "start": 0,
      "end": 12530,
      "positions": "C0O0C4O12530",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/vm/module:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 143,
    "tm": 193394,
    "source": {
      "script": 477,
      "start": 0,
      "end": 12530,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "<instance_members_initializer> node:internal/vm/module:258:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 144,
    "tm": 193472,
    "source": {
      "script": 477,
      "start": 7093,
      "end": 10371,
      "positions": "C3O7145C17O7158C22O10371",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "ESMLoader node:internal/modules/esm/loader:237:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 145,
    "tm": 193653,
    "source": {
      "script": 455,
      "start": 7285,
      "end": 7908,
      "positions": "C5O7285C23O7295C33O7299C38O7338C44O7346C49O7360C59O7360C63O7419C73O7423C79O7482C89O7482C93O7538C105O7595C111O7595C118O7649C123O7676C128O7684C139O7684C145O7855C151O7889C160O7907",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "ModuleMap node:internal/modules/esm/module_map:17:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 146,
    "tm": 193713,
    "source": {
      "script": 456,
      "start": 534,
      "end": 551,
      "positions": "C3O540C7O546C11O540C26O550",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "desc.value node:internal/per_context/primordials:370:32",
    "type": "JS",
    "kind": "Unopt",
    "func": 147,
    "tm": 193781,
    "source": {
      "script": 12,
      "start": 10956,
      "end": 11017,
      "positions": "C0O10974C7O10981C12O11004",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "canBeRequiredWithoutScheme node:internal/bootstrap/loaders:255:36",
    "type": "JS",
    "kind": "Unopt",
    "func": 148,
    "tm": 194587,
    "source": {
      "script": 15,
      "start": 8054,
      "end": 8107,
      "positions": "C0O8066C7O8094C12O8094C18O8102",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/cjs/loader:1:1",
    "type": "JS",
    "kind": "Baseline",
    "func": 77,
    "tm": 195307,
    "source": {
      "script": 452,
      "start": 0,
      "end": 46702,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isPathSeparator node:path:52:25",
    "type": "JS",
    "kind": "Baseline",
    "func": 13,
    "tm": 195326,
    "source": {
      "script": 73,
      "start": 1794,
      "end": 1876,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getOptionValue node:internal/options:44:24",
    "type": "JS",
    "kind": "Baseline",
    "func": 10,
    "tm": 195342,
    "source": {
      "script": 87,
      "start": 1028,
      "end": 1278,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "requireBuiltin node:internal/bootstrap/loaders:356:24",
    "type": "JS",
    "kind": "Baseline",
    "func": 149,
    "tm": 195359,
    "source": {
      "script": 15,
      "start": 11507,
      "end": 11861,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getCLIOptionsFromBinding node:internal/options:18:34",
    "type": "JS",
    "kind": "Baseline",
    "func": 11,
    "tm": 195374,
    "source": {
      "script": 87,
      "start": 514,
      "end": 620,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "compileForInternalLoader node:internal/bootstrap/loaders:319:27",
    "type": "JS",
    "kind": "Baseline",
    "func": 150,
    "tm": 195394,
    "source": {
      "script": 15,
      "start": 10455,
      "end": 11279,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "internalBinding node:internal/bootstrap/loaders:172:45",
    "type": "JS",
    "kind": "Baseline",
    "func": 151,
    "tm": 195411,
    "source": {
      "script": 15,
      "start": 5454,
      "end": 5699,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "protoGetter node:net:844:21",
    "type": "JS",
    "kind": "Baseline",
    "func": 104,
    "tm": 195425,
    "source": {
      "script": 463,
      "start": 23107,
      "end": 23275,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "SafeMap node:internal/per_context/primordials:396:16",
    "type": "JS",
    "kind": "Baseline",
    "func": 152,
    "tm": 195440,
    "source": {
      "script": 12,
      "start": 11710,
      "end": 11727,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "next node:internal/per_context/primordials:318:9",
    "type": "JS",
    "kind": "Baseline",
    "func": 153,
    "tm": 195453,
    "source": {
      "script": 12,
      "start": 9238,
      "end": 9285,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "canBeRequiredWithoutScheme node:internal/bootstrap/loaders:255:36",
    "type": "JS",
    "kind": "Baseline",
    "func": 148,
    "tm": 195466,
    "source": {
      "script": 15,
      "start": 8054,
      "end": 8107,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/cjs/loader:253:41",
    "type": "JS",
    "kind": "Unopt",
    "func": 154,
    "tm": 195522,
    "source": {
      "script": 452,
      "start": 7720,
      "end": 7746,
      "positions": "C0O7728C9O7729C21O7741C31O7746",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getSchemeOnlyModuleNames node:internal/bootstrap/loaders:259:34",
    "type": "JS",
    "kind": "Unopt",
    "func": 155,
    "tm": 195608,
    "source": {
      "script": 15,
      "start": 8144,
      "end": 8197,
      "positions": "C0O8154C11O8171C14O8161C18O8192",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/cjs/loader:255:50",
    "type": "JS",
    "kind": "Unopt",
    "func": 156,
    "tm": 195650,
    "source": {
      "script": 452,
      "start": 7802,
      "end": 7849,
      "positions": "C0O7827C5O7827C15O7839C20O7827C25O7849",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getEmbedderOptions node:internal/options:32:28",
    "type": "JS",
    "kind": "Unopt",
    "func": 157,
    "tm": 195742,
    "source": {
      "script": 87,
      "start": 791,
      "end": 913,
      "positions": "C0O799C6O828C11O846C17O844C23O887C27O910",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module._initPaths node:internal/modules/cjs/loader:1382:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 158,
    "tm": 195807,
    "source": {
      "script": 452,
      "start": 44660,
      "end": 45644,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/run_main:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 159,
    "tm": 195985,
    "source": {
      "script": 478,
      "start": 0,
      "end": 2788,
      "positions": "C0O0C4O2788",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/run_main:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 160,
    "tm": 196093,
    "source": {
      "script": 478,
      "start": 0,
      "end": 2788,
      "positions": "C0O0C66O28C72O45C78O107C84O107C89O156C95O164C101O176C107O236C113O236C118O217C124O279C130O279C134O279C136O332C142O332C147O308C153O2716C160O2738C166O2764C172O2731C177O2787",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeESMLoader node:internal/process/pre_execution:552:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 161,
    "tm": 196192,
    "source": {
      "script": 443,
      "start": 17916,
      "end": 19031,
      "positions": "C0O18000C6O18000C13O18049C16O18045C21O18043C25O18069C30O18073C34O18093C40O18122C41O18129C42O18234C48O18234C53O18148C58O18189C63O18281C69O18281C74O18485C79O18443C83O18556C88O18517C92O18726C100O18730C106O18849C112O18849C117O18797C122O18805C127O18823C132O18896C138O18896C143O18916C145O18926C149O18941C151O18961C155O18986C157O19005C162O19030",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get hasLoadedAnyUserCJSModule node:internal/modules/cjs/loader:75:32",
    "type": "JS",
    "kind": "Unopt",
    "func": 162,
    "tm": 196243,
    "source": {
      "script": 452,
      "start": 2393,
      "end": 2433,
      "positions": "C0O2398C4O2431",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "loadPreloadModules node:internal/process/pre_execution:597:28",
    "type": "JS",
    "kind": "Unopt",
    "func": 163,
    "tm": 196272,
    "source": {
      "script": 443,
      "start": 19626,
      "end": 19957,
      "positions": "C0O19715C8O19715C13O19747C15O19784C21O19791C26O19872C32O19872C37O19872C42O19837C47O19917C52O19956",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeFrozenIntrinsics node:internal/process/pre_execution:589:36",
    "type": "JS",
    "kind": "Unopt",
    "func": 164,
    "tm": 196302,
    "source": {
      "script": 443,
      "start": 19367,
      "end": 19595,
      "positions": "C0O19375C8O19379C14O19425C17O19433C28O19433C34O19547C40O19547C45O19584C49O19594",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "markBootstrapComplete node:internal/process/pre_execution:610:31",
    "type": "JS",
    "kind": "Unopt",
    "func": 165,
    "tm": 196326,
    "source": {
      "script": 443,
      "start": 19991,
      "end": 20057,
      "positions": "C0O19999C6O19999C11O20029C16O20030C21O20056",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "executeUserEntryPoint node:internal/modules/run_main:74:31",
    "type": "JS",
    "kind": "Unopt",
    "func": 166,
    "tm": 196389,
    "source": {
      "script": 478,
      "start": 2398,
      "end": 2712,
      "positions": "C7O2414C14O2418C22O2449C25O2449C30O2496C33O2496C38O2533C40O2558C45O2569C50O2558C56O2673C61O2680C73O2680C79O2711",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "resolveMainPath node:internal/modules/run_main:15:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 167,
    "tm": 196427,
    "source": {
      "script": 478,
      "start": 412,
      "end": 839,
      "positions": "C0O588C5O595C12O605C15O610C20O610C30O595C36O641C38O661C39O668C40O703C48O703C53O750C55O782C60O793C65O820C67O836",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module._findPath node:internal/modules/cjs/loader:582:28",
    "type": "JS",
    "kind": "Unopt",
    "func": 168,
    "tm": 196572,
    "source": {
      "script": 452,
      "start": 17323,
      "end": 21331,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isAbsolute node:path:402:13",
    "type": "JS",
    "kind": "Unopt",
    "func": 169,
    "tm": 196710,
    "source": {
      "script": 73,
      "start": 13104,
      "end": 13523,
      "positions": "C0O13118C8O13118C13O13170C18O13183C19O13191C24O13205C25O13218C26O13239C33O13239C39O13280C42O13287C50O13355C58O13369C66O13405C72O13405C80O13444C82O13440C92O13481C98O13481C104O13465C108O13518",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "stat node:internal/modules/cjs/loader:180:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 170,
    "tm": 196773,
    "source": {
      "script": 452,
      "start": 5481,
      "end": 5890,
      "positions": "C0O5497C5O5513C10O5513C17O5544C23O5590C28O5600C33O5600C39O5620C41O5646C43O5660C44O5684C49O5684C54O5717C61O5750C66O5832C71O5842C76O5842C82O5873C84O5887",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "toNamespacedPath node:path:618:19",
    "type": "JS",
    "kind": "Unopt",
    "func": 171,
    "tm": 196829,
    "source": {
      "script": 73,
      "start": 20086,
      "end": 21201,
      "positions": "C0O20152C6O20189C12O20196C17O20210C19O20222C20O20251C25O20257C30O20257C36O20296C43O20303C48O20316C50O20328C51O20336C58O20340C66O20387C68O20383C73O20445C81O20449C89O20496C91O20492C96O20541C104O20541C110O20594C112O20607C114O20603C121O20638C123O20634C128O20738C133O20760C139O20760C148O20800C151O20833C156O20865C161O20865C167O20845C175O20919C181O20919C189O20966C191O20962C198O20987C204O20987C212O21034C214O21030C219O21137C224O21154C228O21169C229O21184C231O21196",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "toRealPath node:internal/modules/cjs/loader:476:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 172,
    "tm": 196949,
    "source": {
      "script": 452,
      "start": 13988,
      "end": 14104,
      "positions": "C0O14007C5O14017C10O14030C17O14051C20O14062C28O14081C35O14017C41O14101",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "realpathSync node:fs:2502:22",
    "type": "JS",
    "kind": "Unopt",
    "func": 173,
    "tm": 197220,
    "source": {
      "script": 75,
      "start": 69402,
      "end": 73422,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getOptions node:internal/fs/utils:318:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 174,
    "tm": 200580,
    "source": {
      "script": 79,
      "start": 7589,
      "end": 8215,
      "positions": "C9O7616C16O7635C27O7696C29O7718C30O7729C36O7769C41O7814C43O7838C47O7854C54O7890C60O7930C78O7936C83O7930C84O8026C91O8035C96O8054C99O8077C104O8054C108O8105C114O8134C119O8162C127O8134C132O8197C134O8212",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "assertEncoding node:internal/fs/utils:155:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 175,
    "tm": 201554,
    "source": {
      "script": 79,
      "start": 3735,
      "end": 3917,
      "positions": "C0O3751C6O3768C9O3775C14O3775C21O3819C24O3847C40O3853C45O3847C47O3916",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "toPathIfFileURL node:internal/url:1570:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 176,
    "tm": 201639,
    "source": {
      "script": 76,
      "start": 45818,
      "end": 45943,
      "positions": "C0O45839C3O45844C9O45879C11O45900C12O45904C15O45911C19O45940",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isURLInstance node:internal/url:1566:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 177,
    "tm": 203281,
    "source": {
      "script": 76,
      "start": 45691,
      "end": 45790,
      "positions": "C0O45712C3O45733C6O45758C12O45780C16O45787",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/utils:691:38",
    "type": "JS",
    "kind": "Unopt",
    "func": 178,
    "tm": 203317,
    "source": {
      "script": 79,
      "start": 19393,
      "end": 19673,
      "positions": "C14O19427C22O19460C25O19460C31O19487C36O19518C49O19493C54O19487C55O19586C68O19586C74O19625C76O19655C78O19655C80O19672",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/utils:360:35",
    "type": "JS",
    "kind": "Unopt",
    "func": 179,
    "tm": 203365,
    "source": {
      "script": 79,
      "start": 8965,
      "end": 9574,
      "positions": "C16O9030C21O9084C26O9084C31O9181C37O9204C41O9233C45O9250C51O9250C60O9302C64O9323C69O9323C76O9369C77O9376C78O9399C94O9399C100O9518C104O9541C106O9541C107O9560C109O9571",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isUint8Array node:internal/util/types:13:22",
    "type": "JS",
    "kind": "Unopt",
    "func": 180,
    "tm": 203399,
    "source": {
      "script": 23,
      "start": 269,
      "end": 356,
      "positions": "C0O282C5O289C12O336C15O353",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "splitRoot node:fs:2454:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 181,
    "tm": 203528,
    "source": {
      "script": 75,
      "start": 68073,
      "end": 68153,
      "positions": "C0O68086C9O68127C12O68093C19O68144C22O68148",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "SideEffectFreeRegExpPrototypeExec node:internal/util:568:43",
    "type": "JS",
    "kind": "Unopt",
    "func": 182,
    "tm": 203580,
    "source": {
      "script": 21,
      "start": 16176,
      "end": 16350,
      "positions": "C0O16240C3O16240C7O16213C12O16264C17O16316C22O16326C33O16271C38O16347",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getInternalGlobal node:internal/util:559:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 183,
    "tm": 204320,
    "source": {
      "script": 21,
      "start": 15874,
      "end": 16130,
      "positions": "C0O15882C7O15995C13O15995C18O15975C23O16015C28O16056C33O16032C41O16030C47O16105C51O16127",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "runInNewContext node:vm:294:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 184,
    "tm": 204377,
    "source": {
      "script": 88,
      "start": 9255,
      "end": 9590,
      "positions": "C0O9291C6O9331C13O9353C22O9372C28O9417C33O9388C40O9449C47O9474C53O9492C61O9512C64O9519C70O9546C75O9547C81O9587",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getContextOptions node:vm:188:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 185,
    "tm": 204815,
    "source": {
      "script": 88,
      "start": 5809,
      "end": 6877,
      "positions": "C0O5824C4O5843C5O5853C6O5880C11O5901C19O5935C28O5971C32O6010C43O6053C49O6078C54O6108C62O6078C67O6160C73O6187C78O6217C86O6187C91O6266C97O6310C102O6333C110O6310C115O6449C120O6423C125O6432C130O6477C134O6511C142O6511C147O6583C151O6614C159O6614C164O6680C171O6714C177O6723C183O6710C187O6751C193O6785C198O6808C206O6785C211O6852C213O6874",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "createContext node:vm:217:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 186,
    "tm": 204905,
    "source": {
      "script": 88,
      "start": 6937,
      "end": 8099,
      "positions": "C4O6937C16O6968C23O6987C28O6991C34O7024C36O7045C37O7056C45O7056C50O7110C64O7117C74O7154C87O7165C92O7178C97O7199C102O7234C110O7234C115O7275C119O7306C127O7306C132O7351C136O7390C144O7390C149O7467C151O7487C153O7496C157O7540C168O7556C176O7594C184O7594C189O7659C197O7659C202O7744C204O7753C208O7793C216O7807C225O7884C235O7793C240O7904C242O7922C247O7950C252O7967C258O7999C281O7999C286O8075C288O8096",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isContext node:internal/vm:25:19",
    "type": "JS",
    "kind": "Unopt",
    "func": 187,
    "tm": 204961,
    "source": {
      "script": 89,
      "start": 461,
      "end": 582,
      "positions": "C0O475C8O490C16O475C21O553C26O560C30O579",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "createScript node:vm:258:22",
    "type": "JS",
    "kind": "Unopt",
    "func": 188,
    "tm": 205453,
    "source": {
      "script": 88,
      "start": 8124,
      "end": 8181,
      "positions": "C0O8145C13O8152C18O8178",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Script node:vm:66:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 189,
    "tm": 205532,
    "source": {
      "script": 88,
      "start": 2083,
      "end": 3948,
      "positions": "C14O2100C21O2121C25O2144C31O2186C38O2208C49O2240C59O2240C64O2305C76O2350C84O2373C92O2398C97O2417C105O2451C110O2502C124O2543C134O2543C139O2594C149O2594C154O2648C164O2648C169O2706C177O2739C180O2739C186O2779C206O2785C211O2779C212O2931C222O2931C230O3232C234O3389C259O3232C287O3432C289O3432C290O3492C294O3544C304O3544C309O3702C317O3702C322O3661C327O3764C335O3764C340O3748C345O3815C359O3872C367O3815C376O3947",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/validators:115:3",
    "type": "JS",
    "kind": "Unopt",
    "func": 190,
    "tm": 205599,
    "source": {
      "script": 22,
      "start": 2925,
      "end": 3399,
      "positions": "C36O3068C42O3108C58O3114C63O3108C64O3175C69O3180C75O3213C91O3219C96O3213C97O3280C99O3290C106O3305C111O3321C121O3360C134O3373C147O3327C152O3321C154O3398",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " evalmachine.<anonymous>:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 191,
    "tm": 205640,
    "source": {
      "script": 479,
      "start": 0,
      "end": 4,
      "positions": "C0O0C4O4",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "runInNewContext node:vm:144:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 192,
    "tm": 205684,
    "source": {
      "script": 88,
      "start": 4677,
      "end": 4836,
      "positions": "C0O4725C10O4754C15O4725C21O4800C26O4800C32O4831",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "runInContext node:vm:132:15",
    "type": "JS",
    "kind": "Unopt",
    "func": 193,
    "tm": 205728,
    "source": {
      "script": 88,
      "start": 4273,
      "end": 4656,
      "positions": "C0O4310C5O4310C9O4384C14O4384C20O4360C25O4375C30O4461C39O4490C47O4490C54O4514C59O4528C66O4560C77O4535C82O4586C83O4599C92O4625C103O4606C108O4651",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "validateContext node:vm:150:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 194,
    "tm": 205761,
    "source": {
      "script": 88,
      "start": 4867,
      "end": 5067,
      "positions": "C0O4893C5O4898C11O4936C27O4942C32O4936C34O5066",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getRunInContextArgs node:vm:157:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 195,
    "tm": 205806,
    "source": {
      "script": 88,
      "start": 5099,
      "end": 5779,
      "positions": "C9O5130C16O5149C24O5149C29O5212C34O5224C36O5258C41O5289C54O5289C59O5362C70O5389C78O5444C93O5489C101O5489C106O5549C114O5549C119O5611C126O5625C130O5651C139O5660C148O5687C157O5703C166O5725C175O5747C187O5776",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "handleErrorFromBinding node:internal/fs/utils:343:32",
    "type": "JS",
    "kind": "Unopt",
    "func": 196,
    "tm": 205966,
    "source": {
      "script": 79,
      "start": 8309,
      "end": 8820,
      "positions": "C0O8328C6O8392C11O8392C16O8415C24O8415C29O8473C31O8473C32O8500C38O8732C43O8759C51O8732C56O8806C60O8796C62O8819",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "nextPart node:fs:2480:31",
    "type": "JS",
    "kind": "Unopt",
    "func": 197,
    "tm": 206015,
    "source": {
      "script": 75,
      "start": 68844,
      "end": 69095,
      "positions": "C0O68871C4O68867C9O68904C14O68904C20O68988C22O68999C24O68995C31O69029C33O69025C38O69058C40O69067C41O68881C47O68858C50O69080C52O69090",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isFileType node:fs:215:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 198,
    "tm": 206090,
    "source": {
      "script": 75,
      "start": 5653,
      "end": 5901,
      "positions": "C0O5790C2O5795C6O5803C10O5838C15O5845C20O5862C22O5877C24O5875C30O5885C33O5898",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "nextPart node:fs:2480:31",
    "type": "JS",
    "kind": "Baseline",
    "func": 197,
    "tm": 206138,
    "source": {
      "script": 75,
      "start": 68844,
      "end": 69095,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/cjs/loader:253:41",
    "type": "JS",
    "kind": "Baseline",
    "func": 154,
    "tm": 206154,
    "source": {
      "script": 452,
      "start": 7720,
      "end": 7746,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "normalizeString node:path:66:25",
    "type": "JS",
    "kind": "Baseline",
    "func": 16,
    "tm": 206190,
    "source": {
      "script": 73,
      "start": 2226,
      "end": 4212,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isWindowsDeviceRoot node:path:60:29",
    "type": "JS",
    "kind": "Baseline",
    "func": 14,
    "tm": 206205,
    "source": {
      "script": 73,
      "start": 1991,
      "end": 2136,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getOwnPropertyValueOrDefault node:internal/validators:228:38",
    "type": "JS",
    "kind": "Baseline",
    "func": 115,
    "tm": 206218,
    "source": {
      "script": 22,
      "start": 6083,
      "end": 6231,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "validateString node:internal/validators:161:24",
    "type": "JS",
    "kind": "Baseline",
    "func": 199,
    "tm": 206232,
    "source": {
      "script": 22,
      "start": 4279,
      "end": 4391,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "encodeRealpathResult node:fs:2467:30",
    "type": "JS",
    "kind": "Unopt",
    "func": 200,
    "tm": 206380,
    "source": {
      "script": 75,
      "start": 68433,
      "end": 68699,
      "positions": "C0O68456C4O68481C10O68501C17O68510C22O68527C24O68541C25O68562C30O68569C35O68569C41O68598C48O68607C53O68628C55O68644C56O68669C61O68686C66O68669C71O68696",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "shouldUseESMLoader node:internal/modules/run_main:30:28",
    "type": "JS",
    "kind": "Unopt",
    "func": 201,
    "tm": 206458,
    "source": {
      "script": 478,
      "start": 870,
      "end": 1612,
      "positions": "C0O1060C8O1060C13O1120C19O1127C24O1137C25O1149C26O1194C34O1194C39O1252C41O1284C46O1301C47O1313C48O1363C54O1379C60O1379C67O1427C68O1439C69O1443C75O1460C81O1460C88O1508C89O1521C90O1537C95O1537C100O1568C102O1586C107O1591C114O1596C117O1609",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "readPackageScope node:internal/modules/cjs/loader:404:26",
    "type": "JS",
    "kind": "Unopt",
    "func": 202,
    "tm": 206517,
    "source": {
      "script": 452,
      "start": 11540,
      "end": 12074,
      "positions": "C0O11584C7O11618C10O11584C16O11631C18O11660C25O11715C28O11677C34O11726C47O11738C54O11795C61O11834C66O11838C70O11799C77O11864C78O11877C79O11897C86O11922C88O11920C92O11897C97O11933C99O11944C106O11966C112O11986C118O12004C119O12032C121O12032C126O11650C129O12058C130O12071",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "readPackage node:internal/modules/cjs/loader:362:21",
    "type": "JS",
    "kind": "Unopt",
    "func": 203,
    "tm": 206587,
    "source": {
      "script": 452,
      "start": 10453,
      "end": 11213,
      "positions": "C0O10489C5O10494C13O10494C20O10554C25O10571C30O10571C36O10589C38O10617C40O10633C41O10654C46O10672C51O10672C57O10711C63O10724C72O10750C77O10761C79O10792C84O10809C91O10809C97O10836C98O10849C102O10888C109O10908C112O10908C122O10888C128O11022C133O11039C138O11039C144O11069C146O11085C158O11108C163O11115C167O11132C175O11161C181O11172C188O11183C192O11179C195O11142C199O11197C201O11197",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "read node:internal/modules/package_json_reader:16:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 204,
    "tm": 206666,
    "source": {
      "script": 453,
      "start": 307,
      "end": 992,
      "positions": "C0O323C5O333C10O333C17O355C22O368C27O368C32O382C33O432C40O461C43O461C48O432C53O404C59O415C66O512C73O514C79O522C86O568C92O568C97O549C102O600C106O633C112O670C115O681C127O732C132O766C142O679C148O805C154O853C159O853C164O885C169O894C174O894C180O943C185O949C190O949C196O975C198O989",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "resolve node:path:158:10",
    "type": "JS",
    "kind": "Baseline",
    "func": 12,
    "tm": 206773,
    "source": {
      "script": 73,
      "start": 4875,
      "end": 9786,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "filterOwnProperties node:internal/util:529:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 205,
    "tm": 206930,
    "source": {
      "script": 21,
      "start": 15195,
      "end": 15448,
      "positions": "C0O15232C7O15232C12O15268C14O15280C18O15273C23O15312C25O15316C29O15326C34O15330C41O15383C43O15405C46O15397C50O15289C55O15255C58O15429C60O15445",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module._load node:internal/modules/cjs/loader:886:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 206,
    "tm": 207071,
    "source": {
      "script": 452,
      "start": 28094,
      "end": 31318,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module._resolveFilename node:internal/modules/cjs/loader:984:35",
    "type": "JS",
    "kind": "Unopt",
    "func": 207,
    "tm": 207279,
    "source": {
      "script": 452,
      "start": 31357,
      "end": 34651,
      "positions": "C0O31397C10O31416C19O31470C23O31484C31O31505C39O31505C46O31484C55O31558C59O31572C65O31572C74O31612C78O31626C84O31626C91O31681C93O31696C94O31711C96O31723C106O31783C112O31808C118O31787C124O31844C134O31844C143O31899C151O31899C160O31957C166O31970C174O31970C183O32027C191O32027C197O32081C199O32124C206O32175C219O32175C225O32208C228O32244C230O32259C236O32265C240O32249C245O32312C253O32317C257O32333C261O32359C267O32359C272O32350C276O32414C280O32421C286O32421C293O32489C296O32508C300O32494C305O32536C313O32582C318O32541C325O32603C333O32640C338O32603C343O32517C349O32476C352O32274C357O32231C362O32703C368O32733C372O32748C378O32748C387O32807C397O32864C405O32813C410O32807C413O32896C417O32911C423O32911C430O32959C431O32970C438O32974C450O32992C466O33012C477O33017C482O33058C489O33064C504O33086C510O33086C518O33094C522O33099C526O33092C530O33121C534O33121C542O33170C550O33174C563O33217C569O33258C575O33289C579O33289C587O33349C594O33258C601O33392C610O33224C615O33398C629O33429C633O33435C641O33440C646O33479C652O33485C656O33479C657O33525C659O33525C660O33618C664O33618C669O33669C673O33669C679O33702C681O33744C683O33752C688O33780C696O33787C702O33800C709O33806C717O33806C722O33761C726O33847C730O33854C738O33875C742O33896C744O33916C745O34006C749O34013C767O34013C773O34058C775O34072C777O34088C778O34113C781O34138C786O34151C790O34211C796O34251C805O34270C811O34211C816O34171C822O34191C828O34191C834O34120C837O34297C843O34320C855O34352C862O34359C867O34371C869O34389C876O34431C884O34431C889O34414C893O34545C901O34545C907O34568C909O34577C913O34602C915O34619C919O34638C921O34638",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "canBeRequiredByUsers node:internal/bootstrap/loaders:248:30",
    "type": "JS",
    "kind": "Unopt",
    "func": 208,
    "tm": 207412,
    "source": {
      "script": 15,
      "start": 7773,
      "end": 7873,
      "positions": "C0O7797C5O7811C10O7815C15O7815C21O7829C23O7847C27O7868",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module._resolveLookupPaths node:internal/modules/cjs/loader:785:38",
    "type": "JS",
    "kind": "Unopt",
    "func": 209,
    "tm": 207479,
    "source": {
      "script": 452,
      "start": 24455,
      "end": 25951,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "logger node:internal/util/debuglog:95:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 210,
    "tm": 207553,
    "source": {
      "script": 28,
      "start": 2963,
      "end": 3164,
      "positions": "C0O2963C3O2996C24O3021C30O3038C34O3028C38O3043C39O3059C45O3076C51O3085C55O3066C60O3090C61O3107C65O3114C72O3127C77O3123C83O3114C88O3152",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "debug node:internal/util/debuglog:76:15",
    "type": "JS",
    "kind": "Unopt",
    "func": 211,
    "tm": 207606,
    "source": {
      "script": 28,
      "start": 2432,
      "end": 2838,
      "positions": "C0O2432C3O2452C6O2452C9O2563C16O2584C22O2571C30O2569C36O2604C42O2641C47O2644C50O2641C54O2670C75O2695C81O2712C85O2702C89O2717C90O2733C96O2750C102O2759C106O2740C111O2764C112O2781C116O2788C123O2801C128O2797C134O2788C139O2826",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "init node:internal/util/debuglog:72:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 212,
    "tm": 207650,
    "source": {
      "script": 28,
      "start": 2330,
      "end": 2416,
      "positions": "C0O2340C10O2346C14O2344C16O2384C26O2394C33O2392C40O2415",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "testEnabled node:internal/util/debuglog:32:19",
    "type": "JS",
    "kind": "Unopt",
    "func": 213,
    "tm": 207671,
    "source": {
      "script": 28,
      "start": 1004,
      "end": 1015,
      "positions": "C0O1010C1O1015",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "debuglogImpl node:internal/util/debuglog:49:22",
    "type": "JS",
    "kind": "Unopt",
    "func": 214,
    "tm": 207703,
    "source": {
      "script": 28,
      "start": 1499,
      "end": 2059,
      "positions": "C0O1499C9O1519C18O1533C23O1561C34O1595C39O1603C43O1595C45O1615C55O1615C59O1648C71O1659C75O1664C83O1994C97O2012C99O2010C103O2033C112O2050C115O2056",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/cjs/loader:344:66",
    "type": "JS",
    "kind": "Unopt",
    "func": 215,
    "tm": 207735,
    "source": {
      "script": 452,
      "start": 10042,
      "end": 10069,
      "positions": "C0O10055C2O10061C9O10068",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "noop node:internal/util/debuglog:47:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 216,
    "tm": 207753,
    "source": {
      "script": 28,
      "start": 1465,
      "end": 1473,
      "positions": "C1O1472",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "trySelfParentPath node:internal/modules/cjs/loader:510:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 217,
    "tm": 207784,
    "source": {
      "script": 452,
      "start": 15000,
      "end": 15275,
      "positions": "C0O15014C4O15027C5O15040C6O15057C12O15088C16O15097C17O15119C24O15122C29O15145C36O15148C44O15192C47O15207C52O15207C59O15215C62O15220C66O15213C69O15224C72O15247C73O15260C75O15274",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "trySelf node:internal/modules/cjs/loader:524:17",
    "type": "JS",
    "kind": "Unopt",
    "func": 218,
    "tm": 207847,
    "source": {
      "script": 452,
      "start": 15295,
      "end": 16144,
      "positions": "C0O15322C4O15339C5O15352C6O15395C9O15395C17O15372C22O15383C27O15434C31O15450C37O15473C38O15486C39O15505C47O15524C48O15537C49O15547C51O15581C55O15573C60O15594C65O15621C70O15667C82O15625C89O15684C94O15702C97O15736C102O15741C107O15702C112O15700C118O15767C119O15780C123O15802C128O15831C133O15861C138O15883C142O15861C149O15926C152O15926C159O15953C168O15831C180O15809C185O15990C197O16013C200O16019C207O16024C212O16059C219O16103C223O16065C228O16059C229O16128C231O16128",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "loadBuiltinModule node:internal/modules/cjs/helpers:51:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 219,
    "tm": 207925,
    "source": {
      "script": 449,
      "start": 1347,
      "end": 1638,
      "positions": "C0O1384C5O1398C10O1402C15O1402C21O1420C26O1427C35O1458C43O1458C48O1588C53O1588C57O1619C59O1630C61O1637",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module node:internal/modules/cjs/loader:225:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 220,
    "tm": 207977,
    "source": {
      "script": 452,
      "start": 6808,
      "end": 7417,
      "positions": "C14O6831C16O6839C20O6848C22O6860C25O6865C30O6865C35O6858C39O6881C52O6881C57O6921C62O6939C67O6939C73O6961C84O6961C89O7001C90O7015C94O7026C95O7038C99O7050C101O7064C105O7077C107O7091C114O7101C123O7138C128O7138C133O7162C138O7181C143O7190C148O7190C154O7288C164O7320C167O7320C176O7288C181O7367C183O7372C188O7396C193O7416",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "dirname node:path:653:10",
    "type": "JS",
    "kind": "Unopt",
    "func": 221,
    "tm": 208082,
    "source": {
      "script": 73,
      "start": 21280,
      "end": 23908,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setOwnProperty node:internal/util:548:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 222,
    "tm": 208174,
    "source": {
      "script": 21,
      "start": 15648,
      "end": 15823,
      "positions": "C0O15671C5O15704C12O15786C22O15678C27O15820",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "updateChildren node:internal/modules/cjs/loader:206:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 223,
    "tm": 208215,
    "source": {
      "script": 452,
      "start": 6159,
      "end": 6336,
      "positions": "C0O6203C7O6209C15O6224C19O6242C23O6250C26O6250C33O6297C38O6297C44O6335",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "reportModuleToWatchMode node:internal/modules/cjs/loader:212:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 224,
    "tm": 208276,
    "source": {
      "script": 452,
      "start": 6372,
      "end": 6498,
      "positions": "C0O6388C9O6431C15O6444C18O6452C28O6476C37O6477C47O6452C53O6497",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module.load node:internal/modules/cjs/loader:1105:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 225,
    "tm": 208330,
    "source": {
      "script": 452,
      "start": 35567,
      "end": 36403,
      "positions": "C0O35583C8O35629C16O35583C21O35639C26O35652C32O35639C36O35664C38O35678C42O35693C45O35713C52O35730C55O35735C60O35735C66O35713C71O35704C75O35778C78O35778C83O35857C91O35861C101O35914C106O35925C112O35940C124O35946C129O35940C130O35988C133O35995C140O36006C144O36017C150O36038C151O36050C155O36081C160O36090C165O36194C170O36231C175O36242C187O36283C192O36290C197O36290C204O36304C206O36302C211O36337C216O36346C221O36346C228O36372C233O36381C238O36381C245O36402",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module._nodeModulePaths node:internal/modules/cjs/loader:701:37",
    "type": "JS",
    "kind": "Unopt",
    "func": 226,
    "tm": 208421,
    "source": {
      "script": 452,
      "start": 21590,
      "end": 23141,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "findLongestRegisteredExtension node:internal/modules/cjs/loader:496:40",
    "type": "JS",
    "kind": "Unopt",
    "func": 227,
    "tm": 208512,
    "source": {
      "script": 452,
      "start": 14529,
      "end": 14970,
      "positions": "C0O14558C5O14563C10O14563C16O14590C18O14615C20O14642C22O14711C36O14664C44O14711C49O14726C51O14745C55O14755C56O14765C61O14772C63O14820C68O14839C74O14879C77O14890C84O14901C89O14921C91O14945C92O14648C95O14954C97O14967",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "basename node:path:749:11",
    "type": "JS",
    "kind": "Unopt",
    "func": 228,
    "tm": 208602,
    "source": {
      "script": 73,
      "start": 24019,
      "end": 26866,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module._extensions..js node:internal/modules/cjs/loader:1263:37",
    "type": "JS",
    "kind": "Unopt",
    "func": 229,
    "tm": 208746,
    "source": {
      "script": 452,
      "start": 40767,
      "end": 42565,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "readFileSync node:fs:466:22",
    "type": "JS",
    "kind": "Unopt",
    "func": 230,
    "tm": 208867,
    "source": {
      "script": 75,
      "start": 12448,
      "end": 13874,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isEncoding node:buffer:542:40",
    "type": "JS",
    "kind": "Unopt",
    "func": 231,
    "tm": 208999,
    "source": {
      "script": 30,
      "start": 15566,
      "end": 15701,
      "positions": "C0O15582C6O15630C12O15637C20O15656C23O15656C28O15684C29O15698",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "normalizeEncoding node:internal/util:175:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 232,
    "tm": 210461,
    "source": {
      "script": 21,
      "start": 4673,
      "end": 4781,
      "positions": "C0O4684C7O4707C14O4725C19O4738C21O4752C22O4756C25O4763C29O4778",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isUint32 node:internal/validators:51:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 233,
    "tm": 210489,
    "source": {
      "script": 22,
      "start": 1011,
      "end": 1058,
      "positions": "C0O1024C2O1048C5O1037C8O1055",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "openSync node:fs:592:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 234,
    "tm": 210526,
    "source": {
      "script": 75,
      "start": 15645,
      "end": 16035,
      "positions": "C0O15670C5O15677C11O15724C16O15724C21O15749C37O15756C44O15809C51O15811C58O15837C63O15845C70O15850C73O15861C78O15861C95O15845C101O15986C106O15986C110O16018C112O16032",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/utils:703:42",
    "type": "JS",
    "kind": "Unopt",
    "func": 235,
    "tm": 210561,
    "source": {
      "script": 79,
      "start": 19720,
      "end": 19859,
      "positions": "C14O19776C19O19776C24O19811C29O19811C34O19844C36O19856",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "stringToFlags node:internal/fs/utils:578:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 236,
    "tm": 210621,
    "source": {
      "script": 79,
      "start": 16186,
      "end": 17460,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "parseFileMode node:internal/validators:70:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 237,
    "tm": 210710,
    "source": {
      "script": 22,
      "start": 1721,
      "end": 2021,
      "positions": "C0O1745C11O1763C17O1801C24O1825C27O1805C34O1861C41O1906C52O1867C57O1861C58O1929C66O1937C73O1973C78O1973C83O2005C85O2018",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "tryStatSync node:fs:420:21",
    "type": "JS",
    "kind": "Unopt",
    "func": 238,
    "tm": 210796,
    "source": {
      "script": 75,
      "start": 11377,
      "end": 11595,
      "positions": "C0O11409C2O11430C7O11438C22O11438C28O11483C36O11507C38O11524C43O11527C48O11527C53O11547C58O11553C62O11547C63O11579C65O11592",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "tryCreateBuffer node:fs:430:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 239,
    "tm": 210850,
    "source": {
      "script": 75,
      "start": 11623,
      "end": 11923,
      "positions": "C0O11661C2O11674C7O11696C9O11707C11O11705C16O11730C23O11736C28O11730C29O11781C34O11797C39O11797C45O11821C57O11827C58O11856C65O11870C67O11880C72O11883C77O11883C93O11906C95O11920",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "allocUnsafe node:buffer:385:42",
    "type": "JS",
    "kind": "Unopt",
    "func": 240,
    "tm": 210883,
    "source": {
      "script": 30,
      "start": 11506,
      "end": 11564,
      "positions": "C0O11518C5O11518C9O11539C12O11546C16O11561",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:buffer:361:36",
    "type": "JS",
    "kind": "Unopt",
    "func": 241,
    "tm": 210909,
    "source": {
      "script": 30,
      "start": 10780,
      "end": 10940,
      "positions": "C0O10795C8O10795C13O10828C14O10839C21O10855C23O10852C28O10875C33O10907C46O10881C51O10875C53O10939",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "validateNumber node:internal/validators:176:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 242,
    "tm": 210953,
    "source": {
      "script": 22,
      "start": 4627,
      "end": 5083,
      "positions": "C19O4668C25O4704C41O4710C46O4704C47O4764C54O4790C66O4822C83O4872C86O4872C92O4900C110O4971C136O5003C151O5047C169O4906C174O4900C176O5082",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "allocate node:buffer:410:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 243,
    "tm": 210994,
    "source": {
      "script": 30,
      "start": 12233,
      "end": 12561,
      "positions": "C0O12245C1O12254C6O12267C11O12274C16O12291C17O12300C20O12319C24O12328C27O12309C32O12343C34O12355C39O12366C41O12364C44O12352C49O12386C52O12386C55O12415C62O12430C67O12441C75O12415C81O12465C88O12479C94O12476C100O12490C103O12490C106O12508C108O12517C109O12526C114O12533C118O12558",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "tryReadSync node:fs:445:21",
    "type": "JS",
    "kind": "Unopt",
    "func": 244,
    "tm": 211046,
    "source": {
      "script": 75,
      "start": 11947,
      "end": 12192,
      "positions": "C0O11997C2O12010C7O12035C12O12050C29O12050C35O12087C47O12093C48O12122C55O12136C57O12146C62O12149C67O12149C83O12172C85O12189",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "readSync node:fs:706:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 245,
    "tm": 211112,
    "source": {
      "script": 75,
      "start": 18824,
      "end": 19853,
      "positions": "C0O18824C2O18868C7O18873C13O18898C18O18898C22O18941C29O18948C34O19025C40O19035C43O19066C55O19085C61O19101C68O19112C73O19129C82O19175C87O19202C92O19231C105O19231C110O19279C117O19297C118O19308C123O19322C124O19331C125O19353C131O19364C136O19378C152O19384C157O19378C158O19510C163O19558C174O19510C179O19576C184O19603C188O19623C196O19623C201O19680C203O19702C208O19710C233O19710C239O19804C244O19804C248O19836C250O19850",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/utils:709:40",
    "type": "JS",
    "kind": "Unopt",
    "func": 246,
    "tm": 211164,
    "source": {
      "script": 79,
      "start": 19904,
      "end": 20033,
      "positions": "C14O19934C22O19938C29O19963C30O19972C31O19983C44O19983C49O20020C51O20030",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/validators:354:40",
    "type": "JS",
    "kind": "Unopt",
    "func": 247,
    "tm": 211194,
    "source": {
      "script": 22,
      "start": 9773,
      "end": 10009,
      "positions": "C14O9807C19O9812C25O9846C30O9877C43O9852C48O9846C50O10008",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/validators:94:3",
    "type": "JS",
    "kind": "Unopt",
    "func": 248,
    "tm": 211230,
    "source": {
      "script": 22,
      "start": 2280,
      "end": 2668,
      "positions": "C12O2300C25O2330C32O2364C38O2402C54O2408C59O2402C60O2462C65O2467C71O2498C87O2504C92O2498C93O2558C95O2568C102O2583C107O2597C117O2636C130O2649C143O2603C148O2597C150O2667",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/utils:659:3",
    "type": "JS",
    "kind": "Unopt",
    "func": 249,
    "tm": 211274,
    "source": {
      "script": 79,
      "start": 18478,
      "end": 18868,
      "positions": "C0O18519C1O18530C6O18544C22O18550C27O18544C28O18610C29O18621C34O18635C50O18641C55O18635C56O18701C58O18712C64O18721C69O18746C82O18836C95O18752C100O18746C102O18867",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/utils:918:42",
    "type": "JS",
    "kind": "Unopt",
    "func": 250,
    "tm": 211320,
    "source": {
      "script": 79,
      "start": 25750,
      "end": 26232,
      "positions": "C0O25775C6O25816C11O25816C18O25859C24O25900C29O25923C32O25918C34O25915C44O25949C50O25956C53O25943C58O25972C71O26050C74O26045C92O26070C98O26077C114O25978C119O25972C122O26154C127O26185C140O26160C145O26154C147O26231",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "closeSync node:fs:542:19",
    "type": "JS",
    "kind": "Unopt",
    "func": 251,
    "tm": 211392,
    "source": {
      "script": 75,
      "start": 14464,
      "end": 14592,
      "positions": "C0O14474C5O14479C11O14516C13O14523C18O14531C31O14531C36O14561C41O14561C46O14591",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "toString node:buffer:796:46",
    "type": "JS",
    "kind": "Unopt",
    "func": 252,
    "tm": 211457,
    "source": {
      "script": 30,
      "start": 24196,
      "end": 24788,
      "positions": "C0O24196C2O24238C8O24245C13O24271C20O24289C25O24271C31O24297C32O24325C37O24338C38O24348C43O24359C48O24378C50O24388C55O24401C57O24411C58O24425C65O24442C71O24471C76O24483C83O24507C90O24522C92O24530C97O24545C99O24555C100O24561C104O24606C109O24606C115O24628C116O24646C119O24646C124O24675C126O24703C133O24709C138O24703C139O24761C156O24761C161O24785",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getEncodingOps node:buffer:691:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 253,
    "tm": 211546,
    "source": {
      "script": 30,
      "start": 20872,
      "end": 22721,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "slice node:buffer:606:12",
    "type": "JS",
    "kind": "Unopt",
    "func": 254,
    "tm": 211643,
    "source": {
      "script": 30,
      "start": 17458,
      "end": 17504,
      "positions": "C0O17483C5O17483C11O17504",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module._compile node:internal/modules/cjs/loader:1208:37",
    "type": "JS",
    "kind": "Unopt",
    "func": 255,
    "tm": 211741,
    "source": {
      "script": 452,
      "start": 38837,
      "end": 40697,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "wrapSafe node:internal/modules/cjs/loader:1152:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 256,
    "tm": 211851,
    "source": {
      "script": 452,
      "start": 37121,
      "end": 38623,
      "positions": "C0O37121C9O37165C17O37201C22O37208C27O37208C33O37243C40O37254C47O37272C51O37336C64O37243C70O37639C76O37662C90O37732C101O37662C106O37775C116O37775C121O37830C125O37867C132O37891C144O38013C148O38030C159O37867C165O38347C171O38370C185O38440C196O38370C201O38483C205O38492C217O38517C222O38529C229O38540C234O38570C244O38570C249O38605C251O38605",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "internalCompileFunction node:internal/vm:31:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 257,
    "tm": 211971,
    "source": {
      "script": 89,
      "start": 618,
      "end": 2976,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "validateStringArray node:internal/validators:306:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 258,
    "tm": 212048,
    "source": {
      "script": 22,
      "start": 8550,
      "end": 8696,
      "positions": "C0O8569C5O8569C10O8613C12O8626C16O8618C21O8646C26O8666C32O8674C42O8682C53O8646C58O8635C63O8600C67O8695",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/validators:288:39",
    "type": "JS",
    "kind": "Unopt",
    "func": 259,
    "tm": 212085,
    "source": {
      "script": 22,
      "start": 8061,
      "end": 8347,
      "positions": "C16O8098C21O8103C27O8131C43O8137C48O8131C49O8203C56O8210C61O8245C66O8268C71O8286C87O8292C92O8286C94O8346",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 260,
    "tm": 212144,
    "source": {
      "script": 480,
      "start": 0,
      "end": 443,
      "positions": "C0O0C4O443",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 261,
    "tm": 212180,
    "source": {
      "script": 480,
      "start": 0,
      "end": 443,
      "positions": "C0O0C11O16C14O16C19O64C22O64C27O99C31O249C44O249C50O350C65O350C72O442",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "importModuleDynamicallyWrap node:internal/vm/module:427:37",
    "type": "JS",
    "kind": "Unopt",
    "func": 262,
    "tm": 212251,
    "source": {
      "script": 477,
      "start": 11901,
      "end": 12359,
      "positions": "C0O11901C13O11971C18O12356",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "makeRequireFunction node:internal/modules/cjs/helpers:65:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 263,
    "tm": 212323,
    "source": {
      "script": 449,
      "start": 1921,
      "end": 4101,
      "positions": "C0O1921C22O1958C25O1962C29O1958C31O1984C33O1996C53O2029C58O2033C69O2049C73O2029C75O2077C81O2077C83O2105C89O2114C95O2143C104O3381C109O3701C111O3717C115O3864C117O3878C121O3892C136O3932C144O3892C149O4001C152O4029C156O4020C160O4047C163O4070C167O4061C171O4083C173O4098",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "require node:internal/modules/cjs/helpers:108:31",
    "type": "JS",
    "kind": "Unopt",
    "func": 264,
    "tm": 212378,
    "source": {
      "script": 449,
      "start": 3407,
      "end": 3534,
      "positions": "C0O3502C3O3513C8O3513C13O3527",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module.require node:internal/modules/cjs/loader:1133:36",
    "type": "JS",
    "kind": "Unopt",
    "func": 265,
    "tm": 212412,
    "source": {
      "script": 452,
      "start": 36615,
      "end": 36918,
      "positions": "C0O36625C8O36625C13O36654C15O36661C20O36676C36O36682C41O36676C42O36794C51O36806C60O36824C63O36838C76O36838C93O36895C102O36907C126O36917",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "resolveExports node:internal/modules/cjs/loader:555:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 266,
    "tm": 212536,
    "source": {
      "script": 452,
      "start": 16334,
      "end": 17039,
      "positions": "C0O16475C7O16495C10O16475C19O16524C22O16442C29O16451C40O16541C44O16557C45O16564C46O16584C51O16589C56O16589C63O16627C68O16627C73O16653C78O16660C91O16699C96O16728C101O16760C106O16782C110O16760C120O16806C128O16839C134O16728C145O16706C150O16870C162O16897C165O16903C172O16908C177O16945C184O16989C188O16951C193O16945C194O17016C196O17016C198O17038",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "tryExtensions node:internal/modules/cjs/loader:483:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 267,
    "tm": 212831,
    "source": {
      "script": 452,
      "start": 14204,
      "end": 14397,
      "positions": "C0O14240C2O14252C6O14245C11O14289C16O14305C19O14299C23O14289C29O14326C31O14349C33O14365C34O14261C39O14227C42O14381C43O14394",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "tryFile node:internal/modules/cjs/loader:467:17",
    "type": "JS",
    "kind": "Unopt",
    "func": 268,
    "tm": 212870,
    "source": {
      "script": 452,
      "start": 13763,
      "end": 13965,
      "positions": "C0O13801C5O13801C10O13824C11O13831C16O13838C17O13845C18O13849C26O13874C28O13889C33O13901C38O13901C43O13922C44O13931C47O13938C51O13962",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "tryPackage node:internal/modules/cjs/loader:421:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 269,
    "tm": 212988,
    "source": {
      "script": 452,
      "start": 12097,
      "end": 13391,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*",
    "timestamp": 213152,
    "type": "CODE",
    "kind": "RegExp"
  },
  {
    "name": "validateStringArray node:internal/validators:306:29",
    "type": "JS",
    "kind": "Baseline",
    "func": 258,
    "tm": 213442,
    "source": {
      "script": 22,
      "start": 8550,
      "end": 8696,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "toNamespacedPath node:path:618:19",
    "type": "JS",
    "kind": "Baseline",
    "func": 171,
    "tm": 213475,
    "source": {
      "script": 73,
      "start": 20086,
      "end": 21201,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "SafeSet node:internal/per_context/primordials:409:16",
    "type": "JS",
    "kind": "Baseline",
    "func": 270,
    "tm": 213490,
    "source": {
      "script": 12,
      "start": 12050,
      "end": 12067,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isFileType node:fs:215:20",
    "type": "JS",
    "kind": "Baseline",
    "func": 198,
    "tm": 213506,
    "source": {
      "script": 75,
      "start": 5653,
      "end": 5901,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module._nodeModulePaths node:internal/modules/cjs/loader:701:37",
    "type": "JS",
    "kind": "Baseline",
    "func": 226,
    "tm": 213532,
    "source": {
      "script": 452,
      "start": 21590,
      "end": 23141,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 271,
    "tm": 213581,
    "source": {
      "script": 481,
      "start": 0,
      "end": 224,
      "positions": "C0O0C4O224",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 272,
    "tm": 213610,
    "source": {
      "script": 481,
      "start": 0,
      "end": 224,
      "positions": "C0O181C3O198C7O196C12O223",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "normalize node:path:304:12",
    "type": "JS",
    "kind": "Unopt",
    "func": 273,
    "tm": 213760,
    "source": {
      "script": 73,
      "start": 9867,
      "end": 13021,
      "positions": "C0O9881C8O9881C13O9933C18O9946C19O9954C24O9968C26O9979C27O9999C29O10011C31O10041C33O10066C40O10066C46O10137C48O10145C53O10254C56O10261C68O10302C69O10315C72O10319C78O10507C80O10535C85O10555C91O10555C97O10539C103O10666C106O10689C107O10764C109O10758C119O10800C122O10800C128O10784C134O10850C139O10749C142O10875C144O10881C151O10892C156O10933C170O10933C176O11004C181O11086C183O11080C193O11123C196O11123C202O11107C208O11175C213O11071C216O11204C218O11210C225O11221C230O11271C235O11361C237O11355C247O11401C250O11401C256O11385C262O11455C267O11346C270O11488C272O11494C277O11686C282O11700C295O11714C298O11714C313O11751C314O11780C316O11786C321O11868C326O11901C339O11915C351O11915C361O11969C368O12046C373O12080C376O12084C384O12129C390O12129C398O12168C400O12164C405O12220C418O12229C424O12270C427O12290C429O12298C439O12321C445O12321C451O12305C457O12460C459O12488C462O12535C464O12543C474O12574C477O12574C485O12635C493O12558C503O12697C509O12704C516O12714C518O12733C521O12759C527O12766C537O12798C542O12834C546O12798C552O12782C558O12848C567O12867C571O12902C580O12927C588O12941C589O12954C595O12977C605O12988C613O13000C617O13009C621O13016",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "^((?:@[^/\\\\%]+\\/)?[^./\\\\%][^/\\\\%]*)(\\/.*)?$",
    "timestamp": 213902,
    "type": "CODE",
    "kind": "RegExp"
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\express.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 274,
    "tm": 214310,
    "source": {
      "script": 482,
      "start": 0,
      "end": 2409,
      "positions": "C0O0C4O2409",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\express.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 275,
    "tm": 214401,
    "source": {
      "script": 482,
      "start": 0,
      "end": 2409,
      "positions": "C0O0C14O231C17O231C22O273C25O273C30O290C34O273C36O317C39O317C43O317C45O359C48O359C52O359C54O397C57O397C62O437C65O437C70O468C73O468C77O468C79O500C82O500C86O500C88O566C90O591C96O574C98O1300C103O1320C107O1329C112O1345C116O1352C121O1369C125O1410C130O1424C134O1433C139O1448C143O1489C146O1515C150O1502C154O1520C160O1536C164O1534C168O1567C171O1592C175O1579C179O1596C185O1613C189O1611C193O1638C196O1664C200O1651C204O1669C207O1701C211O1688C215O1812C220O2088C230O2088C236O2408",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "^((?:@[^/\\\\%]+\\/)?[^./\\\\%][^/\\\\%]*)(\\/.*)?$",
    "timestamp": 214597,
    "type": "CODE",
    "kind": "RegExp"
  },
  {
    "name": "filterOwnProperties node:internal/util:529:29",
    "type": "JS",
    "kind": "Baseline",
    "func": 205,
    "tm": 214749,
    "source": {
      "script": 21,
      "start": 15195,
      "end": 15448,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "dirname node:path:653:10",
    "type": "JS",
    "kind": "Baseline",
    "func": 221,
    "tm": 214792,
    "source": {
      "script": 73,
      "start": 21280,
      "end": 23908,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "noop node:internal/util/debuglog:47:14",
    "type": "JS",
    "kind": "Baseline",
    "func": 216,
    "tm": 214805,
    "source": {
      "script": 28,
      "start": 1465,
      "end": 1473,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "stat node:internal/modules/cjs/loader:180:14",
    "type": "JS",
    "kind": "Baseline",
    "func": 170,
    "tm": 214821,
    "source": {
      "script": 452,
      "start": 5481,
      "end": 5890,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\body-parser\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 276,
    "tm": 215250,
    "source": {
      "script": 483,
      "start": 0,
      "end": 2681,
      "positions": "C0O0C4O2681",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\body-parser\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 277,
    "tm": 215396,
    "source": {
      "script": 483,
      "start": 0,
      "end": 2681,
      "positions": "C0O0C29O168C35O168C43O183C48O263C52O270C59O270C64O263C66O538C74O546C81O526C87O509C89O656C93O663C104O678C112O746C120O663C125O812C129O819C140O834C148O901C156O819C161O967C165O974C176O989C184O1057C192O974C197O1131C201O1138C212O1153C220O1227C228O1138C234O2680",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\depd\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 278,
    "tm": 216111,
    "source": {
      "script": 484,
      "start": 0,
      "end": 10932,
      "positions": "C0O0C4O10932",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\depd\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 279,
    "tm": 216613,
    "source": {
      "script": 484,
      "start": 0,
      "end": 10932,
      "positions": "C0O0C118O134C121O134C126O149C130O134C132O188C134O203C138O269C142O277C147O277C151O269C154O10931",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/cjs/helpers:36:66",
    "type": "JS",
    "kind": "Unopt",
    "func": 280,
    "tm": 216693,
    "source": {
      "script": 449,
      "start": 990,
      "end": 1017,
      "positions": "C0O1003C2O1009C9O1016",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "compileForPublicLoader node:internal/bootstrap/loaders:264:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 281,
    "tm": 216742,
    "source": {
      "script": 15,
      "start": 8294,
      "end": 8982,
      "positions": "C0O8314C6O8461C16O8504C33O8467C38O8461C39O8543C44O8543C48O8586C54O8778C61O8809C69O8778C75O8834C80O8852C90O8868C93O8884C98O8868C102O8850C106O8911C111O8911C115O8937C120O8937C124O8969C128O8977",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getESMFacade node:internal/bootstrap/loaders:282:15",
    "type": "JS",
    "kind": "Unopt",
    "func": 282,
    "tm": 216813,
    "source": {
      "script": 15,
      "start": 9000,
      "end": 9769,
      "positions": "C0O9000C8O9019C14O9039C18O9046C19O9075C29O9075C34O9060C39O9195C46O9227C53O9195C58O9262C61O9275C70O9302C72O9302C74O9333C81O9358C86O9333C91O9376C101O9376C106O9425C108O9478C121O9439C126O9437C130O9680C135O9687C140O9687C144O9712C149O9719C159O9719C165O9757C169O9764",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/bootstrap/loaders:293:15",
    "type": "JS",
    "kind": "Unopt",
    "func": 283,
    "tm": 216881,
    "source": {
      "script": 15,
      "start": 9506,
      "end": 9604,
      "positions": "C0O9520C5O9528C10O9528C14O9557C24O9578C27O9586C32O9557C39O9603",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "syncExports node:internal/bootstrap/loaders:307:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 284,
    "tm": 216927,
    "source": {
      "script": 15,
      "start": 10082,
      "end": 10425,
      "positions": "C0O10111C5O10137C11O10167C13O10180C17O10172C22O10223C24O10228C28O10242C30O10257C35O10272C37O10296C42O10303C51O10356C54O10368C59O10394C67O10356C73O10303C79O10189C84O10154C88O10424",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getOwn node:internal/bootstrap/loaders:188:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 285,
    "tm": 216966,
    "source": {
      "script": 15,
      "start": 5849,
      "end": 6007,
      "positions": "C0O5886C5O5893C14O5948C26O5948C34O6004",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get node:internal/bootstrap/node:411:8",
    "type": "JS",
    "kind": "Unopt",
    "func": 286,
    "tm": 217014,
    "source": {
      "script": 16,
      "start": 14155,
      "end": 14190,
      "positions": "C0O14167C4O14183",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "depd D:\\doc\\node.js\\mfg\\node_modules\\depd\\index.js:103:15",
    "type": "JS",
    "kind": "Unopt",
    "func": 287,
    "tm": 217073,
    "source": {
      "script": 484,
      "start": 1744,
      "end": 2308,
      "positions": "C0O1744C11O1760C15O1782C24O1788C29O1782C30O1855C35O1855C39O1879C46O1901C50O1879C55O1919C56O1923C60O2028C65O2044C69O2053C77O2074C81O2072C85O2097C90O2118C94O2132C102O2152C106O2150C110O2174C113O2194C117O2201C124O2201C129O2192C133O2217C140O2236C144O2253C151O2272C155O2290C157O2306",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getStack D:\\doc\\node.js\\mfg\\node_modules\\depd\\index.js:381:19",
    "type": "JS",
    "kind": "Unopt",
    "func": 288,
    "tm": 217156,
    "source": {
      "script": 484,
      "start": 7502,
      "end": 7903,
      "positions": "C0O7521C4O7527C9O7555C11O7571C15O7577C20O7598C26O7622C30O7650C34O7674C38O7679C46O7679C52O7672C56O7720C60O7726C65O7726C70O7805C75O7811C83O7811C89O7823C95O7847C99O7856C105O7878C109O7889C111O7901",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "prepareStackTrace node:internal/errors:89:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 289,
    "tm": 217358,
    "source": {
      "script": 17,
      "start": 2222,
      "end": 3753,
      "positions": "C0O2367C5O2390C10O2390C17O2419C22O2438C27O2438C33O2455C38O2474C43O2480C48O2501C53O2517C54O2547C55O2552C61O2555C66O2557C74O2579C78O2597C83O2635C86O2597C93O2682C97O2689C101O2696C102O2696C107O2727C109O2732C115O2735C120O2737C128O2763C132O2773C137O2803C140O2773C147O2835C156O2868C163O2835C168O2883C170O2703C175O2663C178O3073C185O3082C187O3080C192O3110C199O3138C202O3110C207O3198C221O3198C227O3259C229O3282C231O3278C236O3295C238O3317C239O3432C241O3448C248O3465C253O3505C265O3520C280O3536C291O3564C296O3578C301O3627C307O3634C312O3648C314O3667C315O3676C327O3709C333O3709C342O3750",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "maybeOverridePrepareStackTrace node:internal/errors:134:40",
    "type": "JS",
    "kind": "Unopt",
    "func": 290,
    "tm": 219681,
    "source": {
      "script": 17,
      "start": 3797,
      "end": 4520,
      "positions": "C0O4030C7O4035C18O4096C23O4102C28O4102C34O4134C35O4362C40O4390C48O4431C53O4455C58O4455C64O4487C65O4498C69O4517",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "prepareObjectStackTrace D:\\doc\\node.js\\mfg\\node_modules\\depd\\index.js:405:34",
    "type": "JS",
    "kind": "Unopt",
    "func": 291,
    "tm": 219712,
    "source": {
      "script": 484,
      "start": 7983,
      "end": 8014,
      "positions": "C0O8000C2O8012",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "callSiteLocation D:\\doc\\node.js\\mfg\\node_modules\\depd\\index.js:267:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 292,
    "tm": 219761,
    "source": {
      "script": 484,
      "start": 5193,
      "end": 5537,
      "positions": "C0O5228C5O5228C14O5281C19O5281C24O5319C29O5319C34O5353C39O5353C45O5385C50O5385C57O5401C63O5408C67O5433C76O5434C85O5440C94O5446C101O5455C103O5469C107O5503C112O5503C116O5492C120O5524C122O5535",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isignored D:\\doc\\node.js\\mfg\\node_modules\\depd\\index.js:153:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 293,
    "tm": 219822,
    "source": {
      "script": 484,
      "start": 2884,
      "end": 3095,
      "positions": "C0O2900C4O2912C10O2965C11O2976C12O2994C16O3002C21O3006C30O3053C33O3060C38O3093",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "containsNamespace D:\\doc\\node.js\\mfg\\node_modules\\depd\\index.js:29:28",
    "type": "JS",
    "kind": "Unopt",
    "func": 294,
    "tm": 219873,
    "source": {
      "script": 484,
      "start": 374,
      "end": 666,
      "positions": "C0O410C10O410C16O436C20O436C25O453C30O454C35O484C37O496C41O489C46O525C48O529C52O565C56O581C61O596C66O596C73O610C78O627C79O638C80O505C85O471C88O652C89O664",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "istraced D:\\doc\\node.js\\mfg\\node_modules\\depd\\index.js:169:19",
    "type": "JS",
    "kind": "Unopt",
    "func": 295,
    "tm": 219947,
    "source": {
      "script": 484,
      "start": 3161,
      "end": 3380,
      "positions": "C0O3177C4O3189C10O3248C11O3259C12O3277C16O3285C21O3289C30O3338C33O3345C38O3378",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "[ ,]+",
    "timestamp": 220012,
    "type": "CODE",
    "kind": "RegExp"
  },
  {
    "name": "wrapfunction D:\\doc\\node.js\\mfg\\node_modules\\depd\\index.js:413:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 296,
    "tm": 220073,
    "source": {
      "script": 484,
      "start": 8102,
      "end": 8686,
      "positions": "C0O8120C6O8156C15O8162C20O8156C21O8228C24O8253C29O8228C34O8275C37O8275C41O8299C46O8321C50O8299C55O8344C59O8339C63O8413C87O8492C93O8518C99O8525C105O8533C111O8578C117O8621C123O8413C144O8631C150O8684",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "createArgumentsString D:\\doc\\node.js\\mfg\\node_modules\\depd\\index.js:71:32",
    "type": "JS",
    "kind": "Unopt",
    "func": 297,
    "tm": 220118,
    "source": {
      "script": 484,
      "start": 1255,
      "end": 1369,
      "positions": "C0O1277C3O1296C5O1301C7O1301C12O1321C17O1336C27O1311C32O1283C35O1358C43O1358C48O1367",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " :1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 298,
    "tm": 220200,
    "source": {
      "script": 485,
      "start": 0,
      "end": 163,
      "positions": "C0O0C5O163",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " :1:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 299,
    "tm": 220223,
    "source": {
      "script": 485,
      "start": 19,
      "end": 162,
      "positions": "C0O19C25O67C29O160",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "createParserGetter D:\\doc\\node.js\\mfg\\node_modules\\body-parser\\index.js:120:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 300,
    "tm": 220254,
    "source": {
      "script": 483,
      "start": 1978,
      "end": 2047,
      "positions": "C0O1978C9O1989C13O2045",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get node:events:227:6",
    "type": "JS",
    "kind": "Unopt",
    "func": 301,
    "tm": 220372,
    "source": {
      "script": 29,
      "start": 6973,
      "end": 7028,
      "positions": "C0O6983C3O7003C10O7013C12O7012C15O7023",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "lazyEventEmitterAsyncResource node:events:95:39",
    "type": "JS",
    "kind": "Unopt",
    "func": 302,
    "tm": 221560,
    "source": {
      "script": 29,
      "start": 2980,
      "end": 6362,
      "positions": "C0O2988C6O3018C19O3078C27O3078C32O3055C37O3131C47O3131C51O3131C53O3184C63O3184C67O3184C69O3266C96O3215C102O3881C110O3956C166O3907C176O6326C180O6359",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "realpathSync node:fs:2502:22",
    "type": "JS",
    "kind": "Baseline",
    "func": 173,
    "tm": 222016,
    "source": {
      "script": 75,
      "start": 69402,
      "end": 73422,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isUint8Array node:internal/util/types:13:22",
    "type": "JS",
    "kind": "Baseline",
    "func": 180,
    "tm": 222038,
    "source": {
      "script": 23,
      "start": 269,
      "end": 356,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "readPackageScope node:internal/modules/cjs/loader:404:26",
    "type": "JS",
    "kind": "Baseline",
    "func": 202,
    "tm": 222059,
    "source": {
      "script": 452,
      "start": 11540,
      "end": 12074,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setOwnProperty node:internal/util:548:24",
    "type": "JS",
    "kind": "Baseline",
    "func": 222,
    "tm": 222073,
    "source": {
      "script": 21,
      "start": 15648,
      "end": 15823,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "canBeRequiredByUsers node:internal/bootstrap/loaders:248:30",
    "type": "JS",
    "kind": "Baseline",
    "func": 208,
    "tm": 222087,
    "source": {
      "script": 15,
      "start": 7773,
      "end": 7873,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "tryExtensions node:internal/modules/cjs/loader:483:23",
    "type": "JS",
    "kind": "Baseline",
    "func": 267,
    "tm": 222102,
    "source": {
      "script": 452,
      "start": 14204,
      "end": 14397,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isURLInstance node:internal/url:1566:23",
    "type": "JS",
    "kind": "Baseline",
    "func": 177,
    "tm": 222116,
    "source": {
      "script": 76,
      "start": 45691,
      "end": 45790,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/utils:709:40",
    "type": "JS",
    "kind": "Baseline",
    "func": 246,
    "tm": 222131,
    "source": {
      "script": 79,
      "start": 19904,
      "end": 20033,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getOwn node:internal/bootstrap/loaders:188:16",
    "type": "JS",
    "kind": "Baseline",
    "func": 285,
    "tm": 222144,
    "source": {
      "script": 15,
      "start": 5849,
      "end": 6007,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "syncExports node:internal/bootstrap/loaders:307:14",
    "type": "JS",
    "kind": "Baseline",
    "func": 284,
    "tm": 222161,
    "source": {
      "script": 15,
      "start": 10082,
      "end": 10425,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\merge-descriptors\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 303,
    "tm": 222428,
    "source": {
      "script": 486,
      "start": 0,
      "end": 1215,
      "positions": "C0O0C4O1215",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\merge-descriptors\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 304,
    "tm": 222502,
    "source": {
      "script": 486,
      "start": 0,
      "end": 1215,
      "positions": "C0O0C10O181C12O196C16O268C20O275C25O285C29O268C32O1214",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getOptions node:internal/fs/utils:318:20",
    "type": "JS",
    "kind": "Baseline",
    "func": 174,
    "tm": 222771,
    "source": {
      "script": 79,
      "start": 7589,
      "end": 8215,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "handleErrorFromBinding node:internal/fs/utils:343:32",
    "type": "JS",
    "kind": "Baseline",
    "func": 196,
    "tm": 222795,
    "source": {
      "script": 79,
      "start": 8309,
      "end": 8820,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "toPathIfFileURL node:internal/url:1570:25",
    "type": "JS",
    "kind": "Baseline",
    "func": 176,
    "tm": 222808,
    "source": {
      "script": 76,
      "start": 45818,
      "end": 45943,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "basename node:path:749:11",
    "type": "JS",
    "kind": "Baseline",
    "func": 228,
    "tm": 222844,
    "source": {
      "script": 73,
      "start": 24019,
      "end": 26866,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\application.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 305,
    "tm": 223214,
    "source": {
      "script": 487,
      "start": 0,
      "end": 14593,
      "positions": "C0O0C4O14593",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\application.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 306,
    "tm": 223843,
    "source": {
      "script": 487,
      "start": 0,
      "end": 14593,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/utils:691:38",
    "type": "JS",
    "kind": "Baseline",
    "func": 178,
    "tm": 224510,
    "source": {
      "script": 79,
      "start": 19393,
      "end": 19673,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/validators:138:40",
    "type": "JS",
    "kind": "Baseline",
    "func": 117,
    "tm": 224545,
    "source": {
      "script": 22,
      "start": 3648,
      "end": 4093,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "readPackage node:internal/modules/cjs/loader:362:21",
    "type": "JS",
    "kind": "Baseline",
    "func": 203,
    "tm": 224571,
    "source": {
      "script": 452,
      "start": 10453,
      "end": 11213,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "tryFile node:internal/modules/cjs/loader:467:17",
    "type": "JS",
    "kind": "Baseline",
    "func": 268,
    "tm": 224587,
    "source": {
      "script": 452,
      "start": 13763,
      "end": 13965,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "toRealPath node:internal/modules/cjs/loader:476:20",
    "type": "JS",
    "kind": "Baseline",
    "func": 172,
    "tm": 224602,
    "source": {
      "script": 452,
      "start": 13988,
      "end": 14104,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/utils:360:35",
    "type": "JS",
    "kind": "Baseline",
    "func": 179,
    "tm": 224629,
    "source": {
      "script": 79,
      "start": 8965,
      "end": 9574,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\finalhandler\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 307,
    "tm": 224934,
    "source": {
      "script": 488,
      "start": 0,
      "end": 6689,
      "positions": "C0O0C4O6689",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\finalhandler\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 308,
    "tm": 225160,
    "source": {
      "script": 488,
      "start": 0,
      "end": 6689,
      "positions": "C0O0C64O165C67O165C75O181C79O165C81O214C84O214C88O214C90O252C93O252C97O252C99O292C102O292C106O292C108O330C111O330C115O330C117O365C120O365C124O365C126O398C129O398C133O398C135O485C139O485C141O517C145O517C147O563C154O602C163O563C165O701C168O712C172O701C174O1250C176O1265C181O6688",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\debug\\src\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 309,
    "tm": 225737,
    "source": {
      "script": 489,
      "start": 0,
      "end": 263,
      "positions": "C0O0C4O263",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\debug\\src\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 310,
    "tm": 225767,
    "source": {
      "script": 489,
      "start": 0,
      "end": 263,
      "positions": "C0O98C7O136C11O144C18O149C23O169C26O186C30O184C36O222C39O239C43O237C48O262",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isAbsolute node:path:402:13",
    "type": "JS",
    "kind": "Baseline",
    "func": 169,
    "tm": 225858,
    "source": {
      "script": 73,
      "start": 13104,
      "end": 13523,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "FastBuffer node:internal/buffer:960:14",
    "type": "JS",
    "kind": "Baseline",
    "func": 311,
    "tm": 225877,
    "source": {
      "script": 31,
      "start": 27333,
      "end": 27424,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "SideEffectFreeRegExpPrototypeExec node:internal/util:568:43",
    "type": "JS",
    "kind": "Baseline",
    "func": 182,
    "tm": 225892,
    "source": {
      "script": 21,
      "start": 16176,
      "end": 16350,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "splitRoot node:fs:2454:33",
    "type": "JS",
    "kind": "Baseline",
    "func": 181,
    "tm": 225905,
    "source": {
      "script": 75,
      "start": 68073,
      "end": 68153,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "findLongestRegisteredExtension node:internal/modules/cjs/loader:496:40",
    "type": "JS",
    "kind": "Baseline",
    "func": 227,
    "tm": 225923,
    "source": {
      "script": 452,
      "start": 14529,
      "end": 14970,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isEncoding node:buffer:542:40",
    "type": "JS",
    "kind": "Baseline",
    "func": 231,
    "tm": 225939,
    "source": {
      "script": 30,
      "start": 15566,
      "end": 15701,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isUint32 node:internal/validators:51:18",
    "type": "JS",
    "kind": "Baseline",
    "func": 233,
    "tm": 225951,
    "source": {
      "script": 22,
      "start": 1011,
      "end": 1058,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/utils:703:42",
    "type": "JS",
    "kind": "Baseline",
    "func": 235,
    "tm": 225965,
    "source": {
      "script": 79,
      "start": 19720,
      "end": 19859,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "openSync node:fs:592:18",
    "type": "JS",
    "kind": "Baseline",
    "func": 234,
    "tm": 225983,
    "source": {
      "script": 75,
      "start": 15645,
      "end": 16035,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "allocUnsafe node:buffer:385:42",
    "type": "JS",
    "kind": "Baseline",
    "func": 240,
    "tm": 225996,
    "source": {
      "script": 30,
      "start": 11506,
      "end": 11564,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "closeSync node:fs:542:19",
    "type": "JS",
    "kind": "Baseline",
    "func": 251,
    "tm": 226013,
    "source": {
      "script": 75,
      "start": 14464,
      "end": 14592,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "slice node:buffer:606:12",
    "type": "JS",
    "kind": "Baseline",
    "func": 254,
    "tm": 226025,
    "source": {
      "script": 30,
      "start": 17458,
      "end": 17504,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "importModuleDynamicallyWrap node:internal/vm/module:427:37",
    "type": "JS",
    "kind": "Baseline",
    "func": 262,
    "tm": 226039,
    "source": {
      "script": 477,
      "start": 11901,
      "end": 12359,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\debug\\src\\node.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 312,
    "tm": 226480,
    "source": {
      "script": 490,
      "start": 0,
      "end": 6015,
      "positions": "C0O0C4O6015",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\debug\\src\\node.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 313,
    "tm": 226667,
    "source": {
      "script": 490,
      "start": 0,
      "end": 6015,
      "positions": "C0O0C48O43C54O43C58O43C60O70C66O70C70O70C72O187C78O214C83O212C89O195C91O234C96O247C100O255C105O267C109O274C114O293C118O307C123O320C127O328C132O341C136O349C141O367C145O401C152O416C156O607C159O629C163O636C168O641C172O649C177O636C183O653C193O654C199O711C211O712C217O627C221O1375C225O1384C229O1392C234O1396C242O1375C251O1375C253O1417C258O1423C268O1435C273O1447C276O1452C289O1452C296O1646C299O1665C304O1667C309O1676C313O1684C324O1708C329O1717C333O1725C342O1747C346O1665C348O2040C351O2048C360O2061C364O2322C367O2330C376O2343C380O5991C383O5999C388O6006C392O5999C398O6014",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "normalizeString node:path:66:25",
    "type": "JS",
    "kind": "Opt",
    "func": 16,
    "tm": 226761,
    "source": {
      "script": 73,
      "start": 2226,
      "end": 4212,
      "positions": "C0O2226C155O2412C173O2404C201O2445C223O2438C251O1818I0C264O1849I0C285O2517C332O2467C610O2609C632O1818I1C646O1849I1C668O2609C688O4105C698O4126C712O4143C768O2661C772O2655C785O2673C795O3202C803O2722C824O3825C838O3979C851O3942C936O3851C955O3900C968O3863C1133O4019C1146O4031C1169O2755C1179O2780C1202O2967C1212O3010C1288O3202C1300O3086C1309O3202C1356O3304C1359O3311C1362O3317C1434O3315C1513O2422C1526O2386C1541O4209C1577O2844C1582O3483C1587O2226C1633O2467C1707O3202C1755O3315C1769O2386",
      "inlined": "F0O2517F0O2609",
      "fns": [
        13
      ]
    }
  },
  {
    "name": " node:tty:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 314,
    "tm": 227131,
    "source": {
      "script": 491,
      "start": 0,
      "end": 5219,
      "positions": "C0O0C4O5219",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:tty:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 315,
    "tm": 227331,
    "source": {
      "script": 491,
      "start": 0,
      "end": 5219,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/tty:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 316,
    "tm": 227576,
    "source": {
      "script": 492,
      "start": 0,
      "end": 6719,
      "positions": "C0O0C4O6719",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/tty:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 317,
    "tm": 227828,
    "source": {
      "script": 492,
      "start": 0,
      "end": 6719,
      "positions": "C0O0C69O1211C75O1234C81O1258C87O1283C93O1360C99O1360C104O1340C110O1399C111O1399C113O1430C115O1430C117O1452C119O1452C121O1475C123O1475C125O1498C127O1498C129O1924C136O1938C142O1962C148O1987C154O2011C160O2035C166O2058C172O2080C178O2105C184O2130C190O2153C196O2177C202O2199C208O2223C214O2243C220O2350C226O2444C232O1924C234O2488C328O2488C330O2620C331O2620C333O6664C340O6686C346O6704C352O6679C357O6718",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get transferableAbortSignal node:util:397:30",
    "type": "JS",
    "kind": "Unopt",
    "func": 318,
    "tm": 228024,
    "source": {
      "script": 48,
      "start": 11004,
      "end": 11072,
      "positions": "C0O11014C3O11021C7O11042C11O11067",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "lazyAbortController node:util:85:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 319,
    "tm": 228460,
    "source": {
      "script": 48,
      "start": 2651,
      "end": 2746,
      "positions": "C0O2659C14O2679C21O2675C27O2720C31O2743",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get transferableAbortController node:util:400:34",
    "type": "JS",
    "kind": "Unopt",
    "func": 320,
    "tm": 228484,
    "source": {
      "script": 48,
      "start": 11108,
      "end": 11180,
      "positions": "C0O11118C3O11125C7O11146C11O11175",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\debug\\src\\debug.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 321,
    "tm": 228889,
    "source": {
      "script": 493,
      "start": 0,
      "end": 4394,
      "positions": "C0O0C4O4394",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\debug\\src\\debug.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 322,
    "tm": 229036,
    "source": {
      "script": 493,
      "start": 0,
      "end": 4394,
      "positions": "C0O0C40O146C42O216C48O191C54O171C60O154C62O231C67O246C71O256C76O272C80O283C85O298C89O308C94O324C98O335C104O354C108O352C112O440C117O454C121O460C126O474C130O648C134O667C139O4393",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "internalCompileFunction node:internal/vm:31:33",
    "type": "JS",
    "kind": "Baseline",
    "func": 257,
    "tm": 229117,
    "source": {
      "script": 89,
      "start": 618,
      "end": 2976,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/validators:115:3",
    "type": "JS",
    "kind": "Baseline",
    "func": 190,
    "tm": 229141,
    "source": {
      "script": 22,
      "start": 2925,
      "end": 3399,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/validators:288:39",
    "type": "JS",
    "kind": "Baseline",
    "func": 259,
    "tm": 229158,
    "source": {
      "script": 22,
      "start": 8061,
      "end": 8347,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "loadBuiltinModule node:internal/modules/cjs/helpers:51:27",
    "type": "JS",
    "kind": "Baseline",
    "func": 219,
    "tm": 229173,
    "source": {
      "script": 449,
      "start": 1347,
      "end": 1638,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/validators:94:3",
    "type": "JS",
    "kind": "Baseline",
    "func": 248,
    "tm": 229192,
    "source": {
      "script": 22,
      "start": 2280,
      "end": 2668,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\ms\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 323,
    "tm": 229745,
    "source": {
      "script": 494,
      "start": 0,
      "end": 2764,
      "positions": "C0O0C4O2764",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\ms\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 324,
    "tm": 229850,
    "source": {
      "script": 494,
      "start": 0,
      "end": 2764,
      "positions": "C0O0C29O29C33O29C35O43C37O45C40O43C42O59C44O61C47O59C49O75C51O77C54O75C56O91C61O93C64O91C66O390C70O405C75O2763",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\debug\\src\\node.js:34:64",
    "type": "JS",
    "kind": "Unopt",
    "func": 325,
    "tm": 230001,
    "source": {
      "script": 490,
      "start": 670,
      "end": 710,
      "positions": "C0O680C5O698C10O698C15O708",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "^debug_",
    "timestamp": 230081,
    "type": "CODE",
    "kind": "RegExp"
  },
  {
    "name": "getStderr node:internal/bootstrap/switches/is_main_thread:168:19",
    "type": "JS",
    "kind": "Unopt",
    "func": 326,
    "tm": 230164,
    "source": {
      "script": 131,
      "start": 4570,
      "end": 5262,
      "positions": "C0O4578C6O4590C10O4604C11O4608C17O4617C24O4615C30O4650C37O4671C40O4678C44O4669C48O4690C53O4713C60O4704C66O4791C73O4807C77O4826C82O4837C88O4851C91O4859C102O4859C108O4908C116O4908C120O5245C124O5259",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "createWritableStdioStream node:internal/bootstrap/switches/is_main_thread:45:35",
    "type": "JS",
    "kind": "Unopt",
    "func": 327,
    "tm": 230519,
    "source": {
      "script": 131,
      "start": 1464,
      "end": 3091,
      "positions": "C0O1478C2O1550C7O1558C42O1619C48O1619C53O1659C60O1651C66O1683C68O1696C72O1712C74O1779C80O1779C85O1857C95O1837C101O1891C103O1904C107O1919C109O1991C115O1991C120O2228C123O2240C132O2259C137O2267C144O2270C149O2316C155O2316C160O2297C165O2377C180O2412C189O2369C197O2539C209O2559C215O2531C221O2648C223O2661C227O2678C229O2835C235O2835C240O2822C245O2861C250O2894C260O2870C266O3024C268O3034C272O3045C273O3061C277O3074C279O3088",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Socket node:net:338:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 328,
    "tm": 230707,
    "source": {
      "script": 463,
      "start": 9153,
      "end": 13820,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Duplex node:internal/streams/duplex:54:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 329,
    "tm": 230883,
    "source": {
      "script": 59,
      "start": 2064,
      "end": 2741,
      "positions": "C0O2079C2O2090C7O2115C12O2122C17O2142C18O2148C23O2157C28O2157C34O2181C39O2190C44O2190C50O2216C54O2265C60O2279C64O2255C68O2309C74O2318C79O2343C85O2367C89O2388C95O2409C99O2429C105O2455C109O2489C115O2498C120O2523C126O2547C130O2568C136O2590C140O2610C146O2631C150O2651C156O2675C162O2707C163O2726C168O2740",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Readable node:internal/streams/readable:186:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 330,
    "tm": 231179,
    "source": {
      "script": 60,
      "start": 6538,
      "end": 7440,
      "positions": "C0O6538C9O6553C16O6564C21O6591C28O6598C33O6620C34O6779C41O6795C44O6802C48O6784C52O6815C71O6837C76O6835C80O6886C84O6925C92O6953C95O6974C99O6964C103O7006C111O7037C114O7061C118O7051C122O7096C130O7129C133O7155C137O7145C141O7185C149O7196C151O7213C158O7236C166O7213C171O7261C178O7268C186O7268C192O7294C199O7306C212O7306C219O7439",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Stream node:internal/streams/legacy:10:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 331,
    "tm": 232844,
    "source": {
      "script": 61,
      "start": 136,
      "end": 171,
      "positions": "C0O148C5O151C10O151C17O170",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "ReadableState node:internal/streams/readable:83:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 332,
    "tm": 233077,
    "source": {
      "script": 60,
      "start": 2708,
      "end": 6515,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getHighWaterMark node:internal/streams/state:19:26",
    "type": "JS",
    "kind": "Unopt",
    "func": 333,
    "tm": 233187,
    "source": {
      "script": 64,
      "start": 442,
      "end": 862,
      "positions": "C0O497C12O497C18O549C21O573C26O578C33O606C38O633C47O655C56O701C69O707C74O701C75O757C80O764C84O779C85O810C88O847C93O817C97O859",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "highWaterMarkFrom node:internal/streams/state:10:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 334,
    "tm": 233257,
    "source": {
      "script": 64,
      "start": 177,
      "end": 321,
      "positions": "C0O228C7O260C15O281C19O299C25O318",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getDefaultHighWaterMark node:internal/streams/state:15:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 335,
    "tm": 233279,
    "source": {
      "script": 64,
      "start": 357,
      "end": 413,
      "positions": "C0O375C12O410",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "BufferList node:internal/streams/buffer_list:14:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 336,
    "tm": 233307,
    "source": {
      "script": 63,
      "start": 278,
      "end": 355,
      "positions": "C0O288C1O298C5O311C6O321C10O334C11O346C16O354",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "construct node:internal/streams/destroy:219:19",
    "type": "JS",
    "kind": "Unopt",
    "func": 337,
    "tm": 233559,
    "source": {
      "script": 58,
      "start": 4648,
      "end": 5059,
      "positions": "C0O4684C8O4718C9O4725C10O4753C15O4789C20O4810C24O4824C25O4838C29O4855C33O4869C34O4883C38O4909C45O4914C48O4909C54O4947C61O4961C64O4947C72O4973C77O5000C78O5007C79O5018C82O5026C90O5026C97O5058",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Writable node:internal/streams/writable:220:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 338,
    "tm": 233928,
    "source": {
      "script": 67,
      "start": 7637,
      "end": 9197,
      "positions": "C0O7637C9O8222C16O8239C19O8246C23O8228C27O8260C33O8278C44O8278C51O8335C58O8342C63O8364C64O8370C83O8392C88O8390C92O8441C96O8480C104O8509C107O8531C111O8521C115O8564C123O8594C126O8617C130O8607C134O8651C142O8682C145O8706C149O8696C153O8741C161O8770C164O8792C168O8782C172O8825C180O8858C183O8884C187O8874C191O8914C197O8929C204O8952C212O8929C217O8977C224O8984C232O8984C238O9010C245O9022C258O9022C265O9196",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "WritableState node:internal/streams/writable:77:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 339,
    "tm": 234944,
    "source": {
      "script": 67,
      "start": 2548,
      "end": 7172,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "resetBuffer node:internal/streams/writable:202:21",
    "type": "JS",
    "kind": "Unopt",
    "func": 340,
    "tm": 235051,
    "source": {
      "script": 67,
      "start": 7196,
      "end": 7313,
      "positions": "C0O7209C2O7224C6O7233C7O7253C11O7261C12O7278C16O7289C17O7303C22O7312",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "createHandle node:net:172:22",
    "type": "JS",
    "kind": "Unopt",
    "func": 341,
    "tm": 235126,
    "source": {
      "script": 463,
      "start": 4949,
      "end": 5325,
      "positions": "C0O4970C13O4970C18O5014C23O5014C28O5038C30O5047C35O5066C42O5090C46O5102C49O5116C57O5125C60O5139C67O5073C72O5153C73O5164C75O5173C80O5191C87O5214C91O5226C94O5239C102O5248C105O5261C112O5198C117O5275C118O5286C125O5292C130O5286",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "set node:net:2163:6",
    "type": "JS",
    "kind": "Unopt",
    "func": 342,
    "tm": 235180,
    "source": {
      "script": 463,
      "start": 61924,
      "end": 61957,
      "positions": "C0O61930C2O61942C7O61951C13O61955",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get node:net:2162:6",
    "type": "JS",
    "kind": "Unopt",
    "func": 343,
    "tm": 235203,
    "source": {
      "script": 463,
      "start": 61888,
      "end": 61916,
      "positions": "C0O61893C2O61905C4O61904C7O61914",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "makeSyncWrite node:internal/net:51:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 344,
    "tm": 235246,
    "source": {
      "script": 451,
      "start": 1707,
      "end": 2115,
      "positions": "C0O1707C9O1717C13O2112",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Readable.on node:internal/streams/readable:886:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 345,
    "tm": 235307,
    "source": {
      "script": 60,
      "start": 28898,
      "end": 29824,
      "positions": "C0O28924C5O28931C10O28941C15O28944C29O28944C35O28986C40O29007C42O29014C47O29199C55O29199C62O29225C65O29192C69O29321C75O29329C80O29352C85O29352C91O29372C93O29379C98O29413C104O29434C110O29462C112O29507C118O29486C122O29522C123O29536C127O29552C128O29574C132O29590C140O29617C145O29631C150O29590C155O29658C161O29677C164O29677C170O29722C176O29742C179O29750C187O29750C193O29810C195O29821",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initSocketHandle node:net:294:26",
    "type": "JS",
    "kind": "Unopt",
    "func": 346,
    "tm": 235377,
    "source": {
      "script": 463,
      "start": 7922,
      "end": 8522,
      "positions": "C0O7939C5O7939C9O7956C10O7971C14O8060C20O8081C27O8089C32O8103C36O8121C43O8138C45O8136C49O8157C51O8162C57O8200C62O8181C66O8179C70O8231C72O8236C74O8235C78O8251C80O8288C82O8293C84O8292C88O8313C90O8355C94O8374C99O8379C105O8413C106O8420C107O8430C109O8435C114O8444C118O8476C123O8484C128O8484C134O8521",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "undestroy node:internal/streams/destroy:154:19",
    "type": "JS",
    "kind": "Unopt",
    "func": 347,
    "tm": 235445,
    "source": {
      "script": 58,
      "start": 2970,
      "end": 3671,
      "positions": "C0O2993C5O3027C10O3048C14O3062C15O3076C19O3089C20O3098C24O3112C25O3127C29O3141C30O3153C34O3167C35O3177C39O3190C40O3205C44O3219C45O3229C49O3255C55O3264C58O3251C62O3297C68O3306C71O3293C75O3327C79O3341C80O3355C84O3368C85O3380C89O3394C90O3403C94O3417C95O3432C99O3446C100O3456C104O3469C105O3484C109O3498C110O3512C114O3526C115O3540C119O3566C125O3575C128O3562C132O3604C138O3613C141O3600C145O3644C151O3653C154O3640C159O3670",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getNewAsyncId node:net:191:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 348,
    "tm": 235519,
    "source": {
      "script": 463,
      "start": 5353,
      "end": 5472,
      "positions": "C0O5367C4O5400C14O5434C17O5434C22O5456C27O5456C31O5469",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "addCleanup node:internal/bootstrap/switches/is_main_thread:140:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 349,
    "tm": 235563,
    "source": {
      "script": 131,
      "start": 3756,
      "end": 3832,
      "positions": "C0O3766C5O3770C10O3799C15O3799C20O3831",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "load D:\\doc\\node.js\\mfg\\node_modules\\debug\\src\\node.js:156:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 350,
    "tm": 235593,
    "source": {
      "script": 490,
      "start": 3628,
      "end": 3662,
      "positions": "C0O3635C4O3650C9O3654C13O3660",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "enable D:\\doc\\node.js\\mfg\\node_modules\\debug\\src\\debug.js:138:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 351,
    "tm": 235650,
    "source": {
      "script": 493,
      "start": 3132,
      "end": 3657,
      "positions": "C0O3149C3O3157C8O3157C13O3178C18O3192C22O3200C27O3214C31O3235C44O3286C54O3286C60O3321C65O3345C67O3350C69O3350C74O3368C76O3378C81O3383C83O3421C85O3439C89O3443C102O3443C110O3470C111O3484C117O3488C122O3505C125O3513C130O3519C135O3528C142O3552C150O3552C155O3539C161O3562C167O3524C173O3519C180O3590C183O3598C188O3604C193O3613C202O3624C208O3637C214O3609C220O3604C225O3358C230O3332C234O3656",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "save D:\\doc\\node.js\\mfg\\node_modules\\debug\\src\\node.js:139:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 352,
    "tm": 235702,
    "source": {
      "script": 490,
      "start": 3235,
      "end": 3498,
      "positions": "C0O3252C5O3420C9O3435C20O3461C24O3469C31O3479C36O3497",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "createDebug D:\\doc\\node.js\\mfg\\node_modules\\debug\\src\\debug.js:63:21",
    "type": "JS",
    "kind": "Unopt",
    "func": 353,
    "tm": 235789,
    "source": {
      "script": 493,
      "start": 1220,
      "end": 2957,
      "positions": "C0O1220C11O2650C16O2666C20O2681C28O2705C33O2705C38O2695C42O2727C50O2753C55O2753C59O2743C63O2768C71O2782C75O2780C79O2868C84O2902C92O2914C97O2922C105O2922C110O2942C112O2955",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "enabled D:\\doc\\node.js\\mfg\\node_modules\\debug\\src\\debug.js:176:17",
    "type": "JS",
    "kind": "Unopt",
    "func": 354,
    "tm": 235842,
    "source": {
      "script": 493,
      "start": 3913,
      "end": 4206,
      "positions": "C0O3943C5O3964C10O3970C15O3980C17O3980C22O3998C25O4010C32O4015C36O4019C41O4019C48O4039C49O4052C50O3988C55O3938C58O4070C63O4091C68O4097C73O4107C75O4107C80O4125C83O4137C90O4142C94O4146C99O4146C106O4166C107O4178C108O4115C113O4065C116O4191C117O4204",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "useColors D:\\doc\\node.js\\mfg\\node_modules\\debug\\src\\node.js:75:19",
    "type": "JS",
    "kind": "Unopt",
    "func": 355,
    "tm": 235893,
    "source": {
      "script": 490,
      "start": 1865,
      "end": 1976,
      "positions": "C0O1872C6O1899C10O1888C22O1933C27O1945C32O1917C41O1963C49O1963C54O1974",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isatty node:tty:42:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 356,
    "tm": 235935,
    "source": {
      "script": 491,
      "start": 1590,
      "end": 1684,
      "positions": "C0O1600C5O1607C12O1633C23O1644C30O1671C33O1671C37O1681",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "selectColor D:\\doc\\node.js\\mfg\\node_modules\\debug\\src\\debug.js:44:21",
    "type": "JS",
    "kind": "Unopt",
    "func": 357,
    "tm": 235974,
    "source": {
      "script": 493,
      "start": 838,
      "end": 1071,
      "positions": "C0O865C2O884C15O879C28O901C30O916C36O922C40O942C45O942C50O930C54O961C58O966C61O874C64O1007C67O1022C72O1029C76O1034C81O1034C90O1054C95O1061C99O1044C102O1028C105O1069",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "init D:\\doc\\node.js\\mfg\\node_modules\\debug\\src\\node.js:235:15",
    "type": "JS",
    "kind": "Unopt",
    "func": 358,
    "tm": 236044,
    "source": {
      "script": 490,
      "start": 5724,
      "end": 5918,
      "positions": "C0O5736C1O5754C5O5774C9O5781C17O5794C22O5781C28O5823C30O5835C34O5828C39O5860C46O5876C53O5891C60O5907C63O5902C66O5881C70O5844C75O5810C79O5917",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module node:internal/modules/cjs/loader:225:16",
    "type": "JS",
    "kind": "Baseline",
    "func": 220,
    "tm": 236417,
    "source": {
      "script": 452,
      "start": 6808,
      "end": 7417,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "updateChildren node:internal/modules/cjs/loader:206:24",
    "type": "JS",
    "kind": "Baseline",
    "func": 223,
    "tm": 236439,
    "source": {
      "script": 452,
      "start": 6159,
      "end": 6336,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "readSync node:fs:706:18",
    "type": "JS",
    "kind": "Baseline",
    "func": 245,
    "tm": 236468,
    "source": {
      "script": 75,
      "start": 18824,
      "end": 19853,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "tryReadSync node:fs:445:21",
    "type": "JS",
    "kind": "Baseline",
    "func": 244,
    "tm": 236494,
    "source": {
      "script": 75,
      "start": 11947,
      "end": 12192,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "require node:internal/modules/cjs/helpers:108:31",
    "type": "JS",
    "kind": "Baseline",
    "func": 264,
    "tm": 236507,
    "source": {
      "script": 449,
      "start": 3407,
      "end": 3534,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\debug\\src\\node.js:34:64",
    "type": "JS",
    "kind": "Baseline",
    "func": 325,
    "tm": 236521,
    "source": {
      "script": 490,
      "start": 670,
      "end": 710,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get node:internal/bootstrap/node:411:8",
    "type": "JS",
    "kind": "Baseline",
    "func": 286,
    "tm": 236536,
    "source": {
      "script": 16,
      "start": 14155,
      "end": 14190,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get node:net:2162:6",
    "type": "JS",
    "kind": "Baseline",
    "func": 343,
    "tm": 236549,
    "source": {
      "script": 463,
      "start": 61888,
      "end": 61916,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\encodeurl\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 359,
    "tm": 236731,
    "source": {
      "script": 495,
      "start": 0,
      "end": 1586,
      "positions": "C0O0C4O1586",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\encodeurl\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 360,
    "tm": 236800,
    "source": {
      "script": 495,
      "start": 0,
      "end": 1586,
      "positions": "C0O0C10O139C12O154C16O339C20O339C22O551C26O551C28O739C30O739C33O1585",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "assertEncoding node:internal/fs/utils:155:24",
    "type": "JS",
    "kind": "Baseline",
    "func": 175,
    "tm": 237102,
    "source": {
      "script": 79,
      "start": 3735,
      "end": 3917,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "alignPool node:buffer:170:19",
    "type": "JS",
    "kind": "Baseline",
    "func": 361,
    "tm": 237124,
    "source": {
      "script": 30,
      "start": 4399,
      "end": 4509,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "readFileSync node:fs:466:22",
    "type": "JS",
    "kind": "Baseline",
    "func": 230,
    "tm": 237157,
    "source": {
      "script": 75,
      "start": 12448,
      "end": 13874,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module.require node:internal/modules/cjs/loader:1133:36",
    "type": "JS",
    "kind": "Baseline",
    "func": 265,
    "tm": 237178,
    "source": {
      "script": 452,
      "start": 36615,
      "end": 36918,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\escape-html\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 362,
    "tm": 237450,
    "source": {
      "script": 496,
      "start": 0,
      "end": 1362,
      "positions": "C0O0C4O1362",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\escape-html\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 363,
    "tm": 237510,
    "source": {
      "script": 496,
      "start": 0,
      "end": 1362,
      "positions": "C0O0C10O239C14O239C16O290C18O305C23O1361",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "tryStatSync node:fs:420:21",
    "type": "JS",
    "kind": "Baseline",
    "func": 238,
    "tm": 237919,
    "source": {
      "script": 75,
      "start": 11377,
      "end": 11595,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "allocate node:buffer:410:18",
    "type": "JS",
    "kind": "Baseline",
    "func": 243,
    "tm": 237947,
    "source": {
      "script": 30,
      "start": 12233,
      "end": 12561,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "tryCreateBuffer node:fs:430:25",
    "type": "JS",
    "kind": "Baseline",
    "func": 239,
    "tm": 237966,
    "source": {
      "script": 75,
      "start": 11623,
      "end": 11923,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "toString node:buffer:796:46",
    "type": "JS",
    "kind": "Baseline",
    "func": 252,
    "tm": 237984,
    "source": {
      "script": 30,
      "start": 24196,
      "end": 24788,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "makeRequireFunction node:internal/modules/cjs/helpers:65:29",
    "type": "JS",
    "kind": "Baseline",
    "func": 263,
    "tm": 238006,
    "source": {
      "script": 449,
      "start": 1921,
      "end": 4101,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\on-finished\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 364,
    "tm": 238201,
    "source": {
      "script": 497,
      "start": 0,
      "end": 4430,
      "positions": "C0O0C4O4430",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\on-finished\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 365,
    "tm": 238344,
    "source": {
      "script": 497,
      "start": 0,
      "end": 4430,
      "positions": "C0O0C55O175C57O190C61O210C68O229C72O305C75O305C77O340C83O340C87O340C89O435C96O474C105O435C108O4429",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "tryRequireAsyncHooks D:\\doc\\node.js\\mfg\\node_modules\\on-finished\\index.js:205:31",
    "type": "JS",
    "kind": "Unopt",
    "func": 366,
    "tm": 238939,
    "source": {
      "script": 497,
      "start": 3891,
      "end": 3973,
      "positions": "C3O3908C9O3915C13O3937C25O3958C26O3967",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module._findPath node:internal/modules/cjs/loader:582:28",
    "type": "JS",
    "kind": "Baseline",
    "func": 168,
    "tm": 239351,
    "source": {
      "script": 452,
      "start": 17323,
      "end": 21331,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:buffer:361:36",
    "type": "JS",
    "kind": "Baseline",
    "func": 241,
    "tm": 239376,
    "source": {
      "script": 30,
      "start": 10780,
      "end": 10940,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "read node:internal/modules/package_json_reader:16:14",
    "type": "JS",
    "kind": "Baseline",
    "func": 204,
    "tm": 239409,
    "source": {
      "script": 453,
      "start": 307,
      "end": 992,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\ee-first\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 367,
    "tm": 239613,
    "source": {
      "script": 498,
      "start": 0,
      "end": 1684,
      "positions": "C0O0C4O1684",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\ee-first\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 368,
    "tm": 239686,
    "source": {
      "script": 498,
      "start": 0,
      "end": 1684,
      "positions": "C0O0C16O124C18O139C23O1683",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\parseurl\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 369,
    "tm": 240177,
    "source": {
      "script": 499,
      "start": 0,
      "end": 2809,
      "positions": "C0O0C4O2809",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\parseurl\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 370,
    "tm": 240281,
    "source": {
      "script": 499,
      "start": 0,
      "end": 2809,
      "positions": "C0O0C28O193C31O193C36O224C40O220C42O244C46O240C48O288C50O303C54O321C61O338C66O2808",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\statuses\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 371,
    "tm": 240796,
    "source": {
      "script": 500,
      "start": 0,
      "end": 2610,
      "positions": "C0O0C4O2610",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\statuses\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 372,
    "tm": 240895,
    "source": {
      "script": 500,
      "start": 0,
      "end": 2610,
      "positions": "C0O0C33O190C36O190C41O254C43O269C47O309C52O324C56O376C59O390C63O388C67O452C70O467C74O465C78O526C85O542C89O672C96O685C100O784C107O797C112O2609",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module._extensions..json node:internal/modules/cjs/loader:1313:39",
    "type": "JS",
    "kind": "Unopt",
    "func": 373,
    "tm": 241116,
    "source": {
      "script": 452,
      "start": 42641,
      "end": 43029,
      "positions": "C0O42681C5O42684C13O42684C20O42721C27O42731C36O42768C41O42768C46O42798C51O42805C56O42814C61O42814C70O42872C80O42906C85O42916C88O42916C93O42906C101O42872C119O42961C124O42984C131O42997C135O42991C138O42973C142O43011C144O43011C146O43028",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "stripBOM node:internal/modules/cjs/helpers:143:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 374,
    "tm": 241252,
    "source": {
      "script": 449,
      "start": 4310,
      "end": 4453,
      "positions": "C0O4325C5O4329C16O4364C21O4383C29O4393C36O4435C38O4450",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "createMessageToStatusCodeMap D:\\doc\\node.js\\mfg\\node_modules\\statuses\\index.js:63:39",
    "type": "JS",
    "kind": "Unopt",
    "func": 375,
    "tm": 241315,
    "source": {
      "script": 500,
      "start": 944,
      "end": 1170,
      "positions": "C0O944C9O966C10O966C12O972C16O979C24O979C30O990C40O991C45O1158C47O1168",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "forEachCode D:\\doc\\node.js\\mfg\\node_modules\\statuses\\index.js:66:51",
    "type": "JS",
    "kind": "Unopt",
    "func": 376,
    "tm": 241359,
    "source": {
      "script": 500,
      "start": 1020,
      "end": 1153,
      "positions": "C0O1047C5O1052C9O1076C13O1076C18O1114C21O1126C26O1126C33O1141C38O1152",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "createStatusCodeList D:\\doc\\node.js\\mfg\\node_modules\\statuses\\index.js:82:31",
    "type": "JS",
    "kind": "Unopt",
    "func": 377,
    "tm": 241480,
    "source": {
      "script": 500,
      "start": 1261,
      "end": 1359,
      "positions": "C0O1273C4O1287C9O1287C15O1298C25O1299C30O1357",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "mapCode D:\\doc\\node.js\\mfg\\node_modules\\statuses\\index.js:83:50",
    "type": "JS",
    "kind": "Unopt",
    "func": 378,
    "tm": 241513,
    "source": {
      "script": 500,
      "start": 1320,
      "end": 1356,
      "positions": "C0O1333C4O1340C8O1352",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\unpipe\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 379,
    "tm": 241980,
    "source": {
      "script": 501,
      "start": 0,
      "end": 1118,
      "positions": "C0O0C4O1118",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\unpipe\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 380,
    "tm": 242032,
    "source": {
      "script": 501,
      "start": 0,
      "end": 1118,
      "positions": "C0O0C16O136C18O151C23O1117",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\router\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 381,
    "tm": 242647,
    "source": {
      "script": 502,
      "start": 0,
      "end": 15124,
      "positions": "C0O0C4O15124",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\router\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 382,
    "tm": 243082,
    "source": {
      "script": 502,
      "start": 0,
      "end": 15124,
      "positions": "C0O0C59O238C62O238C66O238C68O270C71O270C75O270C77O304C80O304C85O336C88O336C92O336C94O372C97O372C105O388C109O372C111O424C114O424C122O439C126O424C128O466C131O466C135O466C137O507C140O507C144O507C146O549C149O549C153O549C155O637C159O637C161O671C165O677C170O687C174O671C176O709C180O716C185O726C189O709C191O906C196O921C202O906C204O2456C211O2468C215O3345C222O3358C226O8171C233O8192C237O10421C244O10431C248O11742C255O11754C259O12062C267O12062C273O12075C283O12076C289O15123",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module._resolveLookupPaths node:internal/modules/cjs/loader:785:38",
    "type": "JS",
    "kind": "Baseline",
    "func": 209,
    "tm": 243203,
    "source": {
      "script": 452,
      "start": 24455,
      "end": 25951,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "normalizeEncoding node:internal/util:175:27",
    "type": "JS",
    "kind": "Baseline",
    "func": 232,
    "tm": 243222,
    "source": {
      "script": 21,
      "start": 4673,
      "end": 4781,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/validators:354:40",
    "type": "JS",
    "kind": "Baseline",
    "func": 247,
    "tm": 243238,
    "source": {
      "script": 22,
      "start": 9773,
      "end": 10009,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module.load node:internal/modules/cjs/loader:1105:33",
    "type": "JS",
    "kind": "Baseline",
    "func": 225,
    "tm": 243268,
    "source": {
      "script": 452,
      "start": 35567,
      "end": 36403,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "forEachCode D:\\doc\\node.js\\mfg\\node_modules\\statuses\\index.js:66:51",
    "type": "JS",
    "kind": "Baseline",
    "func": 376,
    "tm": 243283,
    "source": {
      "script": 500,
      "start": 1020,
      "end": 1153,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "mapCode D:\\doc\\node.js\\mfg\\node_modules\\statuses\\index.js:83:50",
    "type": "JS",
    "kind": "Baseline",
    "func": 378,
    "tm": 243298,
    "source": {
      "script": 500,
      "start": 1320,
      "end": 1356,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "createUnsafeBuffer node:internal/buffer:1061:28",
    "type": "JS",
    "kind": "Baseline",
    "func": 383,
    "tm": 243319,
    "source": {
      "script": 31,
      "start": 31376,
      "end": 31492,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\router\\route.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 384,
    "tm": 243701,
    "source": {
      "script": 503,
      "start": 0,
      "end": 4281,
      "positions": "C0O0C4O4281",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\router\\route.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 385,
    "tm": 243863,
    "source": {
      "script": 503,
      "start": 0,
      "end": 4281,
      "positions": "C0O0C11O238C14O238C22O254C26O238C28O294C31O294C35O294C37O332C40O332C44O332C46O366C49O366C54O441C58O447C63O457C67O441C69O479C73O486C78O496C82O479C84O546C86O561C90O891C93O897C102O923C106O1223C109O1229C118O1248C122O1618C125O1624C134O1643C138O3141C141O3147C150O3161C154O3661C164O3661C170O4280",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\array-flatten\\array-flatten.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 386,
    "tm": 244470,
    "source": {
      "script": 504,
      "start": 0,
      "end": 1195,
      "positions": "C0O0C4O1195",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\array-flatten\\array-flatten.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 387,
    "tm": 244527,
    "source": {
      "script": 504,
      "start": 0,
      "end": 1195,
      "positions": "C0O0C22O48C24O63C29O1194",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\router\\layer.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 388,
    "tm": 244875,
    "source": {
      "script": 505,
      "start": 0,
      "end": 3296,
      "positions": "C0O0C4O3296",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\router\\layer.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 389,
    "tm": 244990,
    "source": {
      "script": 505,
      "start": 0,
      "end": 3296,
      "positions": "C0O0C17O243C20O243C24O243C26O282C29O282C37O298C41O282C43O388C47O395C52O405C56O388C58O461C60O476C64O1115C67O1121C76O1144C80O1528C83O1534C92O1559C96O1919C99O1925C108O1941C113O3295",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\path-to-regexp\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 390,
    "tm": 245493,
    "source": {
      "script": 506,
      "start": 0,
      "end": 3328,
      "positions": "C0O0C4O3328",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\path-to-regexp\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 391,
    "tm": 245618,
    "source": {
      "script": 506,
      "start": 0,
      "end": 3328,
      "positions": "C0O0C11O35C13O50C17O153C21O153C24O3327",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\methods\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 392,
    "tm": 246111,
    "source": {
      "script": 507,
      "start": 0,
      "end": 1040,
      "positions": "C0O0C4O1040",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\methods\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 393,
    "tm": 246170,
    "source": {
      "script": 507,
      "start": 0,
      "end": 1040,
      "positions": "C0O0C15O201C18O201C22O201C24O275C32O302C35O273C40O1039",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:http:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 394,
    "tm": 246299,
    "source": {
      "script": 508,
      "start": 0,
      "end": 5565,
      "positions": "C0O0C4O5565",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:http:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 395,
    "tm": 246504,
    "source": {
      "script": 508,
      "start": 0,
      "end": 5565,
      "positions": "C0O0C43O1183C48O1207C53O1230C58O1301C64O1301C69O1281C75O1352C81O1352C85O1352C87O1403C93O1403C98O1385C104O1458C110O1458C115O1437C120O1446C126O1512C132O1512C137O1492C142O1619C148O1619C153O1551C158O1574C163O1598C168O1730C174O1730C179O1658C184O1682C189O1699C195O1710C200O1760C201O1760C203O4558C210O4580C214O4632C220O4613C230O4666C238O4700C248O4710C254O4728C260O4748C266O4768C272O4779C278O4798C284O4815C290O4838C296O4862C302O4870C306O4882C316O4573C320O5012C335O5107C343O4984C348O5360C363O5453C371O5505C379O5332C385O5564",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:_http_agent:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 396,
    "tm": 246864,
    "source": {
      "script": 509,
      "start": 0,
      "end": 17026,
      "positions": "C0O0C4O17026",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:_http_agent:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 397,
    "tm": 247460,
    "source": {
      "script": 509,
      "start": 0,
      "end": 17026,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Agent node:_http_agent:90:15",
    "type": "JS",
    "kind": "Unopt",
    "func": 398,
    "tm": 247718,
    "source": {
      "script": 509,
      "start": 3023,
      "end": 6338,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/validators:198:39",
    "type": "JS",
    "kind": "Unopt",
    "func": 399,
    "tm": 247842,
    "source": {
      "script": 22,
      "start": 5280,
      "end": 5622,
      "positions": "C0O5309C5O5314C12O5375C19O5402C22O5420C27O5402C36O5375C42O5526C47O5545C51O5561C67O5567C72O5561C74O5621",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:_http_client:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 400,
    "tm": 248522,
    "source": {
      "script": 510,
      "start": 0,
      "end": 29533,
      "positions": "C0O0C4O29533",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:_http_client:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 401,
    "tm": 249568,
    "source": {
      "script": 510,
      "start": 0,
      "end": 29533,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:_http_common:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 402,
    "tm": 249915,
    "source": {
      "script": 511,
      "start": 0,
      "end": 8492,
      "positions": "C0O0C4O8492",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:_http_common:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 403,
    "tm": 250213,
    "source": {
      "script": 511,
      "start": 0,
      "end": 8492,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/freelist:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 404,
    "tm": 250413,
    "source": {
      "script": 512,
      "start": 0,
      "end": 506,
      "positions": "C0O0C4O506",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/freelist:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 405,
    "tm": 250453,
    "source": {
      "script": 512,
      "start": 0,
      "end": 506,
      "positions": "C0O0C8O28C46O478C48O493C53O505",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:_http_incoming:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 406,
    "tm": 250701,
    "source": {
      "script": 513,
      "start": 0,
      "end": 15351,
      "positions": "C0O0C4O15351",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:_http_incoming:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 407,
    "tm": 251214,
    "source": {
      "script": 513,
      "start": 0,
      "end": 15351,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "FreeList node:internal/freelist:8:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 408,
    "tm": 251361,
    "source": {
      "script": 512,
      "start": 94,
      "end": 206,
      "positions": "C0O119C2O129C6O142C8O152C12O165C14O174C18O186C20O196C25O205",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:_http_outgoing:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 409,
    "tm": 251960,
    "source": {
      "script": 514,
      "start": 0,
      "end": 34820,
      "positions": "C0O0C4O34820",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:_http_outgoing:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 410,
    "tm": 253182,
    "source": {
      "script": 514,
      "start": 0,
      "end": 34820,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/http:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 411,
    "tm": 253497,
    "source": {
      "script": 515,
      "start": 0,
      "end": 1257,
      "positions": "C0O0C4O1257",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/http:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 412,
    "tm": 253561,
    "source": {
      "script": 515,
      "start": 0,
      "end": 1257,
      "positions": "C0O0C75O28C80O39C86O48C92O81C98O156C101O156C106O136C112O227C115O227C120O193C126O200C132O316C135O316C140O272C146O293C152O354C153O354C155O680C156O680C158O863C160O863C162O1070C170O1105C181O1143C191O1168C197O1180C203O1195C209O1208C215O1232C221O1085C226O1256",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:diagnostics_channel:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 413,
    "tm": 253818,
    "source": {
      "script": 516,
      "start": 0,
      "end": 3258,
      "positions": "C0O0C4O3258",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:diagnostics_channel:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 414,
    "tm": 253962,
    "source": {
      "script": 516,
      "start": 0,
      "end": 3258,
      "positions": "C0O0C66O28C72O54C78O77C84O102C89O119C95O144C101O169C106O266C109O266C114O266C119O234C125O329C128O329C133O306C139O401C142O401C147O372C153O457C156O457C161O439C208O542C226O1663C284O1547C286O2148C288O2148C292O2148C294O3162C301O3184C307O3196C313O3215C319O3229C325O3245C331O3177C336O3257",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "channel node:diagnostics_channel:97:17",
    "type": "JS",
    "kind": "Unopt",
    "func": 415,
    "tm": 254105,
    "source": {
      "script": 516,
      "start": 2187,
      "end": 2557,
      "positions": "C0O2203C2O2227C9O2235C13O2246C15O2269C20O2269C25O2279C29O2292C31O2307C32O2313C44O2378C62O2384C67O2378C68O2459C75O2469C81O2491C88O2512C93O2508C98O2506C102O2539C104O2554",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Channel node:diagnostics_channel:67:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 416,
    "tm": 254143,
    "source": {
      "script": 516,
      "start": 1577,
      "end": 1649,
      "positions": "C0O1591C1O1609C5O1627C7O1637C12O1648",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:_http_server:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 417,
    "tm": 254766,
    "source": {
      "script": 517,
      "start": 0,
      "end": 37505,
      "positions": "C0O0C4O37505",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:_http_server:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 418,
    "tm": 256039,
    "source": {
      "script": 517,
      "start": 0,
      "end": 37505,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "byteLength node:buffer:640:17",
    "type": "JS",
    "kind": "Unopt",
    "func": 419,
    "tm": 256409,
    "source": {
      "script": 30,
      "start": 18866,
      "end": 18891,
      "positions": "C0O18885C4O18891",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "write node:buffer:641:12",
    "type": "JS",
    "kind": "Unopt",
    "func": 420,
    "tm": 256441,
    "source": {
      "script": 30,
      "start": 18905,
      "end": 18970,
      "positions": "C0O18939C17O18939C22O18970",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get node:http:139:6",
    "type": "JS",
    "kind": "Unopt",
    "func": 421,
    "tm": 256587,
    "source": {
      "script": 508,
      "start": 5110,
      "end": 5323,
      "positions": "C0O5120C6O5189C12O5189C17O5170C22O5225C25O5241C32O5239C38O5297C42O5318",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get node:http:153:6",
    "type": "JS",
    "kind": "Unopt",
    "func": 422,
    "tm": 256617,
    "source": {
      "script": 508,
      "start": 5456,
      "end": 5500,
      "positions": "C0O5466C5O5483C9O5495",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getCurrentNodeMethods D:\\doc\\node.js\\mfg\\node_modules\\methods\\index.js:29:31",
    "type": "JS",
    "kind": "Unopt",
    "func": 423,
    "tm": 256650,
    "source": {
      "script": 507,
      "start": 413,
      "end": 535,
      "positions": "C0O420C3O432C12O448C17O456C27O456C32O533",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "lowerCaseMethod D:\\doc\\node.js\\mfg\\node_modules\\methods\\index.js:30:67",
    "type": "JS",
    "kind": "Unopt",
    "func": 424,
    "tm": 256677,
    "source": {
      "script": 507,
      "start": 484,
      "end": 531,
      "positions": "C0O513C5O513C9O527",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module._load node:internal/modules/cjs/loader:886:24",
    "type": "JS",
    "kind": "Baseline",
    "func": 206,
    "tm": 256754,
    "source": {
      "script": 452,
      "start": 28094,
      "end": 31318,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "selectColor D:\\doc\\node.js\\mfg\\node_modules\\debug\\src\\debug.js:44:21",
    "type": "JS",
    "kind": "Baseline",
    "func": 357,
    "tm": 256785,
    "source": {
      "script": 493,
      "start": 838,
      "end": 1071,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "resolveExports node:internal/modules/cjs/loader:555:24",
    "type": "JS",
    "kind": "Baseline",
    "func": 266,
    "tm": 256813,
    "source": {
      "script": 452,
      "start": 16334,
      "end": 17039,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "reportModuleToWatchMode node:internal/modules/cjs/loader:212:33",
    "type": "JS",
    "kind": "Baseline",
    "func": 224,
    "tm": 256831,
    "source": {
      "script": 452,
      "start": 6372,
      "end": 6498,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/validators:419:42",
    "type": "JS",
    "kind": "Baseline",
    "func": 425,
    "tm": 256847,
    "source": {
      "script": 22,
      "start": 11692,
      "end": 11811,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "debuglog node:internal/util/debuglog:71:18",
    "type": "JS",
    "kind": "Baseline",
    "func": 426,
    "tm": 256865,
    "source": {
      "script": 28,
      "start": 2302,
      "end": 3350,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "lowerCaseMethod D:\\doc\\node.js\\mfg\\node_modules\\methods\\index.js:30:67",
    "type": "JS",
    "kind": "Baseline",
    "func": 424,
    "tm": 256880,
    "source": {
      "script": 507,
      "start": 484,
      "end": 531,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\router\\route.js:201:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 427,
    "tm": 256930,
    "source": {
      "script": 503,
      "start": 3677,
      "end": 4278,
      "positions": "C0O3677C9O3689C14O3695C22O3705C26O3713C31O4277",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\utils-merge\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 428,
    "tm": 257456,
    "source": {
      "script": 518,
      "start": 0,
      "end": 381,
      "positions": "C0O0C4O381",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\utils-merge\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 429,
    "tm": 257491,
    "source": {
      "script": 518,
      "start": 0,
      "end": 381,
      "positions": "C0O249C5O274C13O380",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\setprototypeof\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 430,
    "tm": 258680,
    "source": {
      "script": 519,
      "start": 0,
      "end": 407,
      "positions": "C0O0C4O407",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\setprototypeof\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 431,
    "tm": 258717,
    "source": {
      "script": 519,
      "start": 0,
      "end": 407,
      "positions": "C0O0C10O55C14O62C28O94C39O110C42O99C53O53C58O406",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\router\\index.js:518:39",
    "type": "JS",
    "kind": "Unopt",
    "func": 432,
    "tm": 258792,
    "source": {
      "script": 502,
      "start": 12092,
      "end": 12250,
      "positions": "C0O12092C9O12104C17O12110C21O12118C26O12249",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\middleware\\init.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 433,
    "tm": 259213,
    "source": {
      "script": 520,
      "start": 0,
      "end": 853,
      "positions": "C0O0C4O853",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\middleware\\init.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 434,
    "tm": 259260,
    "source": {
      "script": 520,
      "start": 0,
      "end": 853,
      "positions": "C0O0C5O247C8O247C12O247C14O487C18O500C23O852",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\middleware\\query.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 435,
    "tm": 259631,
    "source": {
      "script": 521,
      "start": 0,
      "end": 885,
      "positions": "C0O0C4O885",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\middleware\\query.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 436,
    "tm": 259679,
    "source": {
      "script": 521,
      "start": 0,
      "end": 885,
      "positions": "C0O0C5O226C8O226C12O226C14O264C17O264C21O264C23O294C26O294C30O294C32O383C36O398C41O884",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\qs\\lib\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 437,
    "tm": 260342,
    "source": {
      "script": 522,
      "start": 0,
      "end": 211,
      "positions": "C0O0C4O211",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\qs\\lib\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 438,
    "tm": 260374,
    "source": {
      "script": 522,
      "start": 0,
      "end": 211,
      "positions": "C0O31C3O31C8O67C11O67C16O101C19O101C24O124C31O156C37O176C43O198C49O139C54O210",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getInternalGlobal node:internal/util:559:27",
    "type": "JS",
    "kind": "Baseline",
    "func": 183,
    "tm": 260513,
    "source": {
      "script": 21,
      "start": 15874,
      "end": 16130,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\router\\route.js:201:25",
    "type": "JS",
    "kind": "Baseline",
    "func": 427,
    "tm": 260533,
    "source": {
      "script": 503,
      "start": 3677,
      "end": 4278,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "assert node:internal/assert:11:16",
    "type": "JS",
    "kind": "Baseline",
    "func": 65,
    "tm": 260549,
    "source": {
      "script": 27,
      "start": 182,
      "end": 322,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "parseFileMode node:internal/validators:70:23",
    "type": "JS",
    "kind": "Baseline",
    "func": 237,
    "tm": 260567,
    "source": {
      "script": 22,
      "start": 1721,
      "end": 2021,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "validateBoolean node:internal/validators:217:25",
    "type": "JS",
    "kind": "Baseline",
    "func": 57,
    "tm": 260581,
    "source": {
      "script": 22,
      "start": 5812,
      "end": 5926,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\router\\index.js:518:39",
    "type": "JS",
    "kind": "Baseline",
    "func": 432,
    "tm": 260594,
    "source": {
      "script": 502,
      "start": 12092,
      "end": 12250,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "wrapSafe node:internal/modules/cjs/loader:1152:18",
    "type": "JS",
    "kind": "Baseline",
    "func": 256,
    "tm": 260621,
    "source": {
      "script": 452,
      "start": 37121,
      "end": 38623,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/utils:659:3",
    "type": "JS",
    "kind": "Baseline",
    "func": 249,
    "tm": 260639,
    "source": {
      "script": 79,
      "start": 18478,
      "end": 18868,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\qs\\lib\\stringify.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 439,
    "tm": 261011,
    "source": {
      "script": 523,
      "start": 0,
      "end": 10356,
      "positions": "C0O0C4O10356",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\qs\\lib\\stringify.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 440,
    "tm": 261311,
    "source": {
      "script": 523,
      "start": 0,
      "end": 10356,
      "positions": "C0O0C5O36C8O36C12O36C14O73C17O73C21O73C23O107C26O107C30O107C32O139C36O146C41O156C45O139C47O201C52O217C60O315C68O407C78O201C80O480C84O486C88O480C90O507C94O514C99O524C103O507C105O542C109O548C114O558C118O542C120O582C124O582C126O705C130O710C135O720C139O705C141O754C144O761C149O789C157O947C167O996C174O1034C181O1044C188O1118C198O789C200O1273C204O1273C206O1495C207O1495C209O1516C213O1516C215O5667C219O5667C221O7892C225O7907C230O10355",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pathToFileURL node:internal/url:1529:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 441,
    "tm": 261588,
    "source": {
      "script": 76,
      "start": 44290,
      "end": 45665,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "URL node:internal/url:638:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 442,
    "tm": 261667,
    "source": {
      "script": 76,
      "start": 18276,
      "end": 18680,
      "positions": "C13O18344C17O18373C19O18392C23O18425C30O18440C40O18454C42O18453C46O18476C50O18481C57O18496C60O18492C65O18490C69O18515C85O18568C93O18568C103O18625C117O18625C129O18515C135O18679",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "URLContext node:internal/url:163:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 443,
    "tm": 261705,
    "source": {
      "script": 76,
      "start": 3906,
      "end": 4128,
      "positions": "C0O3916C1O3927C5O3937C7O3949C11O3961C13O3975C17O3986C19O4000C23O4011C24O4021C28O4034C29O4044C33O4057C35O4067C39O4078C40O4089C44O4102C45O4116C50O4127",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "onParseComplete node:internal/url:546:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 444,
    "tm": 261785,
    "source": {
      "script": 76,
      "start": 15281,
      "end": 15967,
      "positions": "C0O15397C2O15402C4O15401C8O15415C10O15425C14O15437C16O15448C20O15463C22O15487C24O15485C29O15511C43O15476C47O15537C49O15561C51O15559C56O15585C70O15550C74O15611C76O15620C80O15631C82O15651C84O15649C89O15671C101O15679C103O15640C107O15693C109O15703C113O15715C115O15728C119O15743C121O15752C125O15763C127O15773C129O15772C134O15827C136O15832C141O15852C144O15848C149O15846C153O15876C155O15881C157O15880C163O15895C168O15904C172O15920C177O15942C179O15941C183O15920C189O15966",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "URLSearchParams node:internal/url:185:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 445,
    "tm": 261935,
    "source": {
      "script": 76,
      "start": 4553,
      "end": 7480,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initSearchParams node:internal/url:1089:26",
    "type": "JS",
    "kind": "Unopt",
    "func": 446,
    "tm": 262037,
    "source": {
      "script": 76,
      "start": 30616,
      "end": 30737,
      "positions": "C0O30633C4O30651C6O30655C11O30669C15O30680C16O30687C17O30696C19O30700C25O30716C29O30714C34O30736",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "encodePathChars node:internal/url:1514:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 447,
    "tm": 262095,
    "source": {
      "script": 76,
      "start": 43529,
      "end": 44264,
      "positions": "C0O43545C8O43549C15O43594C22O43634C31O43605C38O43726C46O43744C52O43744C59O43790C66O43830C75O43801C82O43867C90O43871C97O43917C104O43957C113O43928C120O43992C128O43996C135O44042C142O44082C151O44053C158O44124C166O44128C173O44174C180O44214C189O44185C196O44245C198O44261",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "set pathname node:internal/url:938:15",
    "type": "JS",
    "kind": "Unopt",
    "func": 448,
    "tm": 262149,
    "source": {
      "script": 76,
      "start": 26439,
      "end": 26717,
      "positions": "C0O26453C5O26458C11O26482C23O26488C28O26482C29O26557C34O26580C38O26589C40O26588C45O26611C46O26618C47O26624C58O26636C67O26659C69O26658C78O26700C83O26700C92O26624C98O26716",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isURLThis node:internal/url:633:19",
    "type": "JS",
    "kind": "Unopt",
    "func": 449,
    "tm": 262183,
    "source": {
      "script": 76,
      "start": 18155,
      "end": 18246,
      "positions": "C0O18167C3O18180C9O18202C14O18219C16O18218C20O18228C21O18243",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/url:655:21",
    "type": "JS",
    "kind": "Unopt",
    "func": 450,
    "tm": 262208,
    "source": {
      "script": 76,
      "start": 18793,
      "end": 18870,
      "positions": "C0O18803C4O18816C6O18815C10O18825C19O18833C21O18831C26O18859C30O18865",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "onParsePathComplete node:internal/url:605:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 451,
    "tm": 262252,
    "source": {
      "script": 76,
      "start": 17299,
      "end": 17781,
      "positions": "C0O17419C2O17424C4O17423C8O17437C10O17450C12O17448C17O17470C22O17484C24O17493C28O17506C35O17519C40O17516C46O17556C48O17565C52O17576C59O17590C61O17589C66O17586C70O17672C72O17685C74O17683C79O17705C84O17719C86O17728C90O17741C97O17754C102O17751C107O17780",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "packageExportsResolve node:internal/modules/esm/resolve:625:31",
    "type": "JS",
    "kind": "Unopt",
    "func": 452,
    "tm": 262413,
    "source": {
      "script": 459,
      "start": 21017,
      "end": 23618,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isConditionalExportsMainSugar node:internal/modules/esm/resolve:594:39",
    "type": "JS",
    "kind": "Unopt",
    "func": 453,
    "tm": 262510,
    "source": {
      "script": 459,
      "start": 19849,
      "end": 20767,
      "positions": "C0O19886C8O19921C11O19921C17O19944C18O19956C19O19960C29O20013C30O20026C31O20045C36O20045C41O20109C43O20127C45O20146C47O20158C51O20151C56O20190C58O20194C62O20234C64O20238C70O20251C76O20255C81O20269C90O20277C95O20293C102O20349C104O20372C109O20408C116O20455C119O20455C129O20572C135O20654C144O20414C149O20408C150O20167C155O20133C158O20738C160O20764",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "resolvePackageTarget node:internal/modules/esm/resolve:519:30",
    "type": "JS",
    "kind": "Unopt",
    "func": 454,
    "tm": 262616,
    "source": {
      "script": 459,
      "start": 17332,
      "end": 19617,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isArrayIndex node:internal/modules/esm/resolve:500:22",
    "type": "JS",
    "kind": "Unopt",
    "func": 455,
    "tm": 262704,
    "source": {
      "script": 459,
      "start": 16901,
      "end": 17024,
      "positions": "C0O16927C2O16927C5O16936C9O16952C14O16961C15O16974C16O16978C17O16992C24O17007C27O17021",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "resolvePackageTargetString node:internal/modules/esm/resolve:412:36",
    "type": "JS",
    "kind": "Unopt",
    "func": 456,
    "tm": 262892,
    "source": {
      "script": 459,
      "start": 13981,
      "end": 16819,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "toString node:internal/url:749:11",
    "type": "JS",
    "kind": "Unopt",
    "func": 457,
    "tm": 263446,
    "source": {
      "script": 76,
      "start": 21502,
      "end": 21609,
      "positions": "C0O21512C5O21517C11O21541C23O21547C28O21541C29O21581C33O21593C35O21592C39O21601C43O21604",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/url:701:12",
    "type": "JS",
    "kind": "Unopt",
    "func": 458,
    "tm": 263537,
    "source": {
      "script": 76,
      "start": 20139,
      "end": 21434,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get pathname node:internal/url:927:15",
    "type": "JS",
    "kind": "Unopt",
    "func": 459,
    "tm": 263638,
    "source": {
      "script": 76,
      "start": 26152,
      "end": 26421,
      "positions": "C0O26162C5O26167C11O26191C23O26197C28O26191C29O26243C33O26248C35O26247C39O26263C43O26272C45O26271C50O26305C56O26309C59O26313C60O26327C65O26332C71O26339C76O26353C78O26363C79O26369C86O26380C89O26403C97O26380C106O26416",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "finalizeEsmResolution node:internal/modules/cjs/loader:1081:31",
    "type": "JS",
    "kind": "Unopt",
    "func": 460,
    "tm": 263705,
    "source": {
      "script": 452,
      "start": 34686,
      "end": 35165,
      "positions": "C0O34723C7O34747C10O34727C17O34789C33O34795C38O34789C39O34930C44O34930C49O34973C52O34973C57O34995C59O35012C61O35026C62O35042C67O35109C70O35114C78O35114C85O35042C91O35152",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "fileURLToPath node:internal/url:1487:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 461,
    "tm": 263777,
    "source": {
      "script": 76,
      "start": 42393,
      "end": 42726,
      "positions": "C0O42405C6O42440C13O42447C22O42470C25O42475C31O42501C49O42507C54O42501C55O42578C62O42587C67O42605C77O42611C82O42605C83O42650C92O42669C101O42697C105O42723",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get href node:internal/url:755:11",
    "type": "JS",
    "kind": "Unopt",
    "func": 462,
    "tm": 263822,
    "source": {
      "script": 76,
      "start": 21623,
      "end": 21730,
      "positions": "C0O21633C5O21638C11O21662C23O21668C28O21662C29O21702C33O21714C35O21713C39O21722C43O21725",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get origin node:internal/url:772:13",
    "type": "JS",
    "kind": "Unopt",
    "func": 463,
    "tm": 263870,
    "source": {
      "script": 76,
      "start": 22081,
      "end": 22730,
      "positions": "C0O22091C5O22096C11O22120C23O22126C28O22120C29O22234C33O22239C35O22238C39O22266C88O22314C93O22319C99O22326C107O22363C112O22383C118O22387C124O22371C130O22393C134O22400C139O22498C145O22519C146O22631C151O22663C156O22675C161O22685C166O22638C171O22691C172O22704C178O22725",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get protocol node:internal/url:797:15",
    "type": "JS",
    "kind": "Unopt",
    "func": 464,
    "tm": 263910,
    "source": {
      "script": 76,
      "start": 22748,
      "end": 22860,
      "positions": "C0O22758C5O22763C11O22787C23O22793C28O22787C29O22827C33O22839C35O22838C39O22848C43O22855",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getPathFromURLWin32 node:internal/url:1434:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 465,
    "tm": 263975,
    "source": {
      "script": 76,
      "start": 40326,
      "end": 41827,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get hostname node:internal/url:885:15",
    "type": "JS",
    "kind": "Unopt",
    "func": 466,
    "tm": 264030,
    "source": {
      "script": 76,
      "start": 25052,
      "end": 25168,
      "positions": "C0O25062C5O25067C11O25091C23O25097C28O25091C29O25131C33O25143C35O25142C39O25152C47O25163",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "SideEffectFreeRegExpPrototypeSymbolReplace node:internal/util:593:52",
    "type": "JS",
    "kind": "Unopt",
    "func": 467,
    "tm": 264069,
    "source": {
      "script": 21,
      "start": 17262,
      "end": 17367,
      "positions": "C0O17296C3O17303C10O17328C12O17327C16O17342C22O17364",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getCrossRelmRegex node:internal/util:574:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 468,
    "tm": 264145,
    "source": {
      "script": 21,
      "start": 16425,
      "end": 17207,
      "positions": "C0O16453C5O16470C10O16470C16O16485C18O16497C20O16511C21O16534C24O16541C29O16545C35O16582C44O16604C49O16608C55O16641C64O16663C69O16667C75O16704C84O16726C89O16730C95O16766C104O16788C109O16792C115O16825C124O16847C129O16851C135O16885C144O16907C149O16911C155O16944C164O17011C167O17011C171O16984C176O17058C178O17085C181O17085C191O17058C197O17134C202O17151C207O17151C213O17182C215O17204",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*",
    "timestamp": 264354,
    "type": "CODE",
    "kind": "RegExp"
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\side-channel\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 469,
    "tm": 264651,
    "source": {
      "script": 524,
      "start": 0,
      "end": 3391,
      "positions": "C0O0C4O3391",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\side-channel\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 470,
    "tm": 264819,
    "source": {
      "script": 524,
      "start": 0,
      "end": 3391,
      "positions": "C0O0C5O34C8O34C13O76C16O76C21O122C24O122C28O122C30O167C33O167C37O167C39O211C44O211C49O211C51O255C56O255C61O255C63O303C68O303C73O303C75O363C80O363C85O363C87O423C92O423C97O423C99O479C104O479C109O479C111O531C116O531C121O531C123O583C128O583C133O583C135O948C139O948C141O1266C145O1266C147O1376C151O1376C153O1685C157O1685C159O1752C163O1767C168O3390",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "(^|\\\\|\\/)((\\.|%2e)(\\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))?(\\\\|\\/|$)",
    "timestamp": 265467,
    "type": "CODE",
    "kind": "RegExp"
  },
  {
    "name": "URL node:internal/url:638:14",
    "type": "JS",
    "kind": "Baseline",
    "func": 442,
    "tm": 265567,
    "source": {
      "script": 76,
      "start": 18276,
      "end": 18680,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "validateNumber node:internal/validators:176:24",
    "type": "JS",
    "kind": "Baseline",
    "func": 242,
    "tm": 265615,
    "source": {
      "script": 22,
      "start": 4627,
      "end": 5083,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "trySelfParentPath node:internal/modules/cjs/loader:510:27",
    "type": "JS",
    "kind": "Baseline",
    "func": 217,
    "tm": 265632,
    "source": {
      "script": 452,
      "start": 15000,
      "end": 15275,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isURLThis node:internal/url:633:19",
    "type": "JS",
    "kind": "Baseline",
    "func": 449,
    "tm": 265646,
    "source": {
      "script": 76,
      "start": 18155,
      "end": 18246,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/url:655:21",
    "type": "JS",
    "kind": "Baseline",
    "func": 450,
    "tm": 265660,
    "source": {
      "script": 76,
      "start": 18793,
      "end": 18870,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "URLContext node:internal/url:163:14",
    "type": "JS",
    "kind": "Baseline",
    "func": 443,
    "tm": 265673,
    "source": {
      "script": 76,
      "start": 3906,
      "end": 4128,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "onParseComplete node:internal/url:546:25",
    "type": "JS",
    "kind": "Baseline",
    "func": 444,
    "tm": 265693,
    "source": {
      "script": 76,
      "start": 15281,
      "end": 15967,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "%2F|%5C",
    "timestamp": 265754,
    "type": "CODE",
    "kind": "RegExp"
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\get-intrinsic\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 471,
    "tm": 266317,
    "source": {
      "script": 525,
      "start": 0,
      "end": 13145,
      "positions": "C0O0C4O13145",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\get-intrinsic\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 472,
    "tm": 266814,
    "source": {
      "script": 525,
      "start": 0,
      "end": 13145,
      "positions": "C0O0C5O50C8O50C10O79C13O79C15O106C18O106C20O192C24O192C26O347C30O354C34O347C36O380C43O402C51O402C69O434C70O440C76O516C80O516C82O579C91O988C99O1029C102O1029C107O1051C111O1071C115O1078C125O1071C127O1183C128O1183C130O1205C144O1262C148O1253C153O1293C158O1316C169O1368C176O1396C183O1421C194O1470C203O1512C208O1525C211O1537C215O1544C219O1536C223O1553C228O1525C236O1559C242O1607C248O1638C254O1670C260O1710C266O1750C270O1775C281O1820C288O1842C299O1886C306O1914C317O1965C324O2001C335O2053C342O2083C349O2107C360O2153C367O2174C374O2196C381O2232C388O2268C395O2304C402O2336C409O2354C416O2407C423O2437C434O2487C441O2520C452O2570C459O2611C470O2669C479O2706C485O2741C489O2768C500O2815C507O2843C518O2891C525O2920C536O2968C543O2995C550O3017C559O3048C567O3070C570O3082C574O3089C578O3081C582O3098C587O3070C592O3061C600O3105C604O3127C611O3154C618O3161C622O3182C633O3223C640O3255C649O3286C658O3324C662O3320C668O3330C672O3337C676O3329C680O3346C685O3311C693O3362C700O3381C707O3402C714O3427C721O3454C728O3478C739O3523C746O3544C757O3587C764O3611C771O3644C778O3674C789O3719C796O3741C810O3759C824O3800C838O3832C850O3863C859O3901C866O3897C877O3907C881O3914C885O3906C892O3923C901O3888C917O3952C931O4007C945O4039C961O4077C969O4102C973O4109C977O4101C984O4118C993O4090C1005O4124C1015O4148C1017O4161C1024O4170C1034O4199C1044O4234C1054O4267C1064O4295C1072O4324C1083O4372C1094O4408C1108O4463C1122O4500C1136O4549C1150O4580C1164O4629C1178O4657C1192O4681C1206O4726C1220O4749C1234O4794C1248O4817C1262O4862C1278O1293C1283O4881C1285O4886C1306O5052C1319O5061C1328O5052C1337O5076C1344O5108C1354O5138C1358O5138C1360O5820C1367O5820C1369O8565C1372O8565C1381O8604C1384O8604C1392O8604C1394O8639C1403O8644C1407O8653C1416O8659C1420O8665C1429O8675C1438O8639C1450O8634C1452O8708C1461O8713C1465O8722C1474O8729C1478O8735C1487O8745C1496O8708C1508O8703C1510O8774C1519O8779C1523O8788C1532O8794C1539O8801C1548O8811C1557O8774C1569O8769C1571O8842C1580O8847C1584O8856C1593O8862C1600O8869C1609O8879C1618O8842C1630O8837C1632O8904C1641O8909C1645O8918C1654O8924C1661O8931C1670O8941C1679O8904C1691O8899C1693O9058C1700O9058C1702O9179C1709O9179C1711O9262C1715O9262C1717O9860C1721O9860C1723O10539C1727O10554C1736O13144",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\get-intrinsic\\index.js:29:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 473,
    "tm": 266971,
    "source": {
      "script": 525,
      "start": 598,
      "end": 988,
      "positions": "C0O598C5O714C9O753C11O775C26O885C34O892C40O918C44O923C56O954C60O976",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\has-symbols\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 474,
    "tm": 267464,
    "source": {
      "script": 526,
      "start": 0,
      "end": 420,
      "positions": "C0O0C4O420",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\has-symbols\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 475,
    "tm": 267500,
    "source": {
      "script": 526,
      "start": 0,
      "end": 420,
      "positions": "C0O0C5O32C10O46C13O65C16O32C18O93C21O93C25O93C27O114C31O129C36O419",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\has-symbols\\shams.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 476,
    "tm": 267772,
    "source": {
      "script": 527,
      "start": 0,
      "end": 1761,
      "positions": "C0O0C4O1761",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\has-symbols\\shams.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 477,
    "tm": 267844,
    "source": {
      "script": 527,
      "start": 0,
      "end": 1761,
      "positions": "C0O73C4O88C9O1760",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "hasNativeSymbols D:\\doc\\node.js\\mfg\\node_modules\\has-symbols\\index.js:6:43",
    "type": "JS",
    "kind": "Unopt",
    "func": 478,
    "tm": 267895,
    "source": {
      "script": 526,
      "start": 156,
      "end": 418,
      "positions": "C0O162C6O202C7O215C8O219C15O255C16O268C17O272C23O283C31O317C32O330C33O334C40O345C48O375C49O388C50O393C53O400C56O416",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "hasSymbols D:\\doc\\node.js\\mfg\\node_modules\\has-symbols\\shams.js:4:37",
    "type": "JS",
    "kind": "Unopt",
    "func": 479,
    "tm": 267980,
    "source": {
      "script": 527,
      "start": 109,
      "end": 1759,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\function-bind\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 480,
    "tm": 268862,
    "source": {
      "script": 528,
      "start": 0,
      "end": 126,
      "positions": "C0O0C4O126",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\function-bind\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 481,
    "tm": 268891,
    "source": {
      "script": 528,
      "start": 0,
      "end": 126,
      "positions": "C0O36C3O36C8O83C12O92C17O102C28O81C33O125",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\function-bind\\implementation.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 482,
    "tm": 269191,
    "source": {
      "script": 529,
      "start": 0,
      "end": 1463,
      "positions": "C0O0C4O1463",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\function-bind\\implementation.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 483,
    "tm": 269252,
    "source": {
      "script": 529,
      "start": 0,
      "end": 1463,
      "positions": "C0O0C5O68C7O68C9O131C13O137C18O147C22O131C24O166C28O173C33O183C37O166C39O208C41O208C43O230C47O245C52O1462",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\has\\src\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 484,
    "tm": 269731,
    "source": {
      "script": 530,
      "start": 0,
      "end": 129,
      "positions": "C0O0C4O129",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\has\\src\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 485,
    "tm": 269758,
    "source": {
      "script": 530,
      "start": 0,
      "end": 129,
      "positions": "C0O26C3O26C8O75C13O80C17O89C22O95C26O102C31O112C36O75C42O68C47O128",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module._compile node:internal/modules/cjs/loader:1208:37",
    "type": "JS",
    "kind": "Baseline",
    "func": 255,
    "tm": 269951,
    "source": {
      "script": 452,
      "start": 38837,
      "end": 40697,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getPathFromURLWin32 node:internal/url:1434:29",
    "type": "JS",
    "kind": "Baseline",
    "func": 465,
    "tm": 269988,
    "source": {
      "script": 76,
      "start": 40326,
      "end": 41827,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "trySelf node:internal/modules/cjs/loader:524:17",
    "type": "JS",
    "kind": "Baseline",
    "func": 218,
    "tm": 270012,
    "source": {
      "script": 452,
      "start": 15295,
      "end": 16144,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "(^|\\\\|\\/)((\\.|%2e)(\\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))?(\\\\|\\/|$)",
    "timestamp": 270649,
    "type": "CODE",
    "kind": "RegExp"
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\call-bind\\callBound.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 486,
    "tm": 270949,
    "source": {
      "script": 531,
      "start": 0,
      "end": 413,
      "positions": "C0O0C4O413",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\call-bind\\callBound.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 487,
    "tm": 270985,
    "source": {
      "script": 531,
      "start": 0,
      "end": 413,
      "positions": "C0O0C5O34C8O34C12O34C14O76C17O76C21O76C23O107C32O116C37O107C41O107C43O160C47O175C52O412",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\call-bind\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 488,
    "tm": 271405,
    "source": {
      "script": 532,
      "start": 0,
      "end": 1306,
      "positions": "C0O0C4O1306",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\call-bind\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 489,
    "tm": 271472,
    "source": {
      "script": 532,
      "start": 0,
      "end": 1306,
      "positions": "C0O0C5O26C8O26C12O26C14O71C17O71C22O111C25O111C29O111C31O167C34O167C38O167C40O230C45O230C55O276C66O276C72O230C74O310C79O310C84O310C86O389C91O389C96O389C98O447C101O447C105O447C107O476C114O508C127O508C145O603C146O619C152O633C156O648C160O1097C165O1172C169O1196C172O1219C187O1246C191O1196C198O1277C205O1291C210O1305",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "GetIntrinsic D:\\doc\\node.js\\mfg\\node_modules\\get-intrinsic\\index.js:263:39",
    "type": "JS",
    "kind": "Unopt",
    "func": 490,
    "tm": 271805,
    "source": {
      "script": 525,
      "start": 10577,
      "end": 13143,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "stringToPath D:\\doc\\node.js\\mfg\\node_modules\\get-intrinsic\\index.js:220:41",
    "type": "JS",
    "kind": "Unopt",
    "func": 491,
    "tm": 271957,
    "source": {
      "script": 525,
      "start": 9283,
      "end": 9813,
      "positions": "C0O9283C5O9307C18O9307C24O9344C32O9344C38O9368C40O9378C47O9394C52O9407C62O9413C67O9407C68O9489C70O9498C77O9515C82O9528C92O9534C97O9528C98O9619C100O9619C102O9624C112O9641C120O9624C125O9797C127O9811",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))",
    "timestamp": 272055,
    "type": "CODE",
    "kind": "RegExp"
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\get-intrinsic\\index.js:229:40",
    "type": "JS",
    "kind": "Unopt",
    "func": 492,
    "tm": 272094,
    "source": {
      "script": 525,
      "start": 9662,
      "end": 9793,
      "positions": "C0O9700C6O9714C13O9724C31O9732C40O9774C44O9722C49O9792",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getBaseIntrinsic D:\\doc\\node.js\\mfg\\node_modules\\get-intrinsic\\index.js:236:49",
    "type": "JS",
    "kind": "Unopt",
    "func": 493,
    "tm": 272150,
    "source": {
      "script": 525,
      "start": 9885,
      "end": 10536,
      "positions": "C0O9929C3O9948C9O9952C16O9995C21O10017C25O10036C29O10063C32O10056C38O10067C42O10079C48O10083C55O10134C60O10144C64O10163C66O10173C71O10193C74O10201C79O10230C87O10267C89O10286C97O10320C103O10327C109O10292C114O10286C115O10393C122O10412C128O10428C134O10453C140O10463C141O10469C149O10505C155O10512C161O10475C166O10469",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "^%?[^%]*%?$",
    "timestamp": 272243,
    "type": "CODE",
    "kind": "RegExp"
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\get-intrinsic\\index.js:229:40",
    "type": "JS",
    "kind": "Baseline",
    "func": 492,
    "tm": 272336,
    "source": {
      "script": 525,
      "start": 9662,
      "end": 9793,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initSearchParams node:internal/url:1089:26",
    "type": "JS",
    "kind": "Baseline",
    "func": 446,
    "tm": 272360,
    "source": {
      "script": 76,
      "start": 30616,
      "end": 30737,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/url:701:12",
    "type": "JS",
    "kind": "Baseline",
    "func": 458,
    "tm": 272387,
    "source": {
      "script": 76,
      "start": 20139,
      "end": 21434,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get pathname node:internal/url:927:15",
    "type": "JS",
    "kind": "Baseline",
    "func": 459,
    "tm": 272405,
    "source": {
      "script": 76,
      "start": 26152,
      "end": 26421,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "toString node:internal/url:749:11",
    "type": "JS",
    "kind": "Baseline",
    "func": 457,
    "tm": 272421,
    "source": {
      "script": 76,
      "start": 21502,
      "end": 21609,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "callBind D:\\doc\\node.js\\mfg\\node_modules\\call-bind\\index.js:23:35",
    "type": "JS",
    "kind": "Unopt",
    "func": 494,
    "tm": 272486,
    "source": {
      "script": 532,
      "start": 667,
      "end": 1078,
      "positions": "C0O667C2O700C14O700C20O740C26O753C28O785C34O785C40O819C46O932C52O953C65O1015C70O1035C74O1042C77O1022C81O990C86O988C96O932C101O1064C103O1076",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module._resolveFilename node:internal/modules/cjs/loader:984:35",
    "type": "JS",
    "kind": "Baseline",
    "func": 207,
    "tm": 273223,
    "source": {
      "script": 452,
      "start": 31357,
      "end": 34651,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\object-inspect\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 495,
    "tm": 273749,
    "source": {
      "script": 533,
      "start": 0,
      "end": 18582,
      "positions": "C0O0C4O18582",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\object-inspect\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 496,
    "tm": 274257,
    "source": {
      "script": 533,
      "start": 0,
      "end": 18582,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\object-inspect\\util.inspect.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 497,
    "tm": 274644,
    "source": {
      "script": 534,
      "start": 0,
      "end": 42,
      "positions": "C0O0C4O42",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\object-inspect\\util.inspect.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 498,
    "tm": 274670,
    "source": {
      "script": 534,
      "start": 0,
      "end": 42,
      "positions": "C0O0C3O17C8O32C12O15C17O41",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isSymbol D:\\doc\\node.js\\mfg\\node_modules\\object-inspect\\index.js:276:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 499,
    "tm": 274743,
    "source": {
      "script": 533,
      "start": 12044,
      "end": 12408,
      "positions": "C0O12056C4O12089C14O12145C17O12134C20O12152C21O12163C27O12202C28O12214C29O12225C41O12265C43O12288C44O12301C48O12326C51O12338C56O12338C61O12357C62O12369C76O12393C77O12406",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "callBoundIntrinsic D:\\doc\\node.js\\mfg\\node_modules\\call-bind\\callBound.js:9:45",
    "type": "JS",
    "kind": "Unopt",
    "func": 500,
    "tm": 274826,
    "source": {
      "script": 531,
      "start": 204,
      "end": 411,
      "positions": "C0O244C5O265C8O244C14O281C24O320C32O350C37O360C40O367C44O387C45O392C47O409",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "GetIntrinsic D:\\doc\\node.js\\mfg\\node_modules\\get-intrinsic\\index.js:263:39",
    "type": "JS",
    "kind": "Baseline",
    "func": 490,
    "tm": 274937,
    "source": {
      "script": 525,
      "start": 10577,
      "end": 13143,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "stringToPath D:\\doc\\node.js\\mfg\\node_modules\\get-intrinsic\\index.js:220:41",
    "type": "JS",
    "kind": "Baseline",
    "func": 491,
    "tm": 274960,
    "source": {
      "script": 525,
      "start": 9283,
      "end": 9813,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\qs\\lib\\utils.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 501,
    "tm": 275450,
    "source": {
      "script": 535,
      "start": 0,
      "end": 6823,
      "positions": "C0O0C4O6823",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\qs\\lib\\utils.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 502,
    "tm": 275655,
    "source": {
      "script": 535,
      "start": 0,
      "end": 6823,
      "positions": "C0O0C5O29C8O29C12O29C14O62C18O69C23O79C27O62C29O109C33O115C37O109C39O140C44O317C47O140C49O342C53O342C55O803C59O803C61O1094C66O2722C71O2913C76O3310C81O5326C86O5952C91O6066C96O6274C101O6346C106O6574C113O6612C119O6639C125O6660C131O6682C137O6703C143O6723C149O6745C155O6769C161O6793C167O6814C173O6589C178O6822",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\qs\\lib\\utils.js:8:26",
    "type": "JS",
    "kind": "Unopt",
    "func": 503,
    "tm": 275690,
    "source": {
      "script": 535,
      "start": 150,
      "end": 317,
      "positions": "C0O171C3O192C5O197C9O197C14O225C24O240C39O261C47O261C52O257C56O275C61O275C65O234C69O225C74O206C79O179C82O302C84O315",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\qs\\lib\\formats.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 504,
    "tm": 276613,
    "source": {
      "script": 536,
      "start": 0,
      "end": 476,
      "positions": "C0O0C4O476",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\qs\\lib\\formats.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 505,
    "tm": 276649,
    "source": {
      "script": 536,
      "start": 0,
      "end": 476,
      "positions": "C0O0C5O29C9O36C14O46C18O29C20O77C24O77C26O99C31O152C36O193C44O218C49O237C57O346C71O436C79O465C89O167C94O475",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\qs\\lib\\parse.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 506,
    "tm": 277188,
    "source": {
      "script": 537,
      "start": 0,
      "end": 9374,
      "positions": "C0O0C4O9374",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\qs\\lib\\parse.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 507,
    "tm": 277465,
    "source": {
      "script": 537,
      "start": 0,
      "end": 9374,
      "positions": "C0O0C5O27C8O27C12O27C14O58C18O65C23O75C27O58C29O105C33O111C37O105C39O136C47O319C57O136C59O567C63O567C65O742C69O742C71O1279C73O1279C75O1486C77O1486C79O1550C83O1550C85O3700C89O3700C91O4844C95O4844C97O6377C101O6377C103O8601C107O8616C112O9373",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\view.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 508,
    "tm": 277963,
    "source": {
      "script": 538,
      "start": 0,
      "end": 3325,
      "positions": "C0O0C4O3325",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\view.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 509,
    "tm": 278097,
    "source": {
      "script": 538,
      "start": 0,
      "end": 3325,
      "positions": "C0O0C20O238C26O238C34O254C38O238C40O283C46O283C51O309C57O309C61O309C63O386C67O381C69O415C73O410C75O444C79O439C81O469C85O464C87O494C91O489C93O543C95O558C99O1943C108O1960C112O2466C121O2483C125O2730C134O2748C139O3324",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get ReadStream node:fs:3080:17",
    "type": "JS",
    "kind": "Unopt",
    "func": 510,
    "tm": 278228,
    "source": {
      "script": 75,
      "start": 84975,
      "end": 85032,
      "positions": "C0O84985C3O84985C6O85009C10O85027",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "lazyLoadStreams node:fs:2935:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 511,
    "tm": 278268,
    "source": {
      "script": 75,
      "start": 82410,
      "end": 82583,
      "positions": "C0O82418C6O82442C12O82473C17O82445C30O82457C43O82511C50O82526C56O82545C63O82561C70O82582",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/streams:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 512,
    "tm": 278574,
    "source": {
      "script": 539,
      "start": 0,
      "end": 13754,
      "positions": "C0O0C4O13754",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/streams:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 513,
    "tm": 279088,
    "source": {
      "script": 539,
      "start": 0,
      "end": 13754,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get WriteStream node:fs:3089:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 514,
    "tm": 279300,
    "source": {
      "script": 75,
      "start": 85110,
      "end": 85168,
      "positions": "C0O85120C3O85120C6O85144C10O85163",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get FileReadStream node:fs:3100:21",
    "type": "JS",
    "kind": "Unopt",
    "func": 515,
    "tm": 279325,
    "source": {
      "script": 75,
      "start": 85386,
      "end": 85447,
      "positions": "C0O85396C3O85396C6O85420C10O85442",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get FileWriteStream node:fs:3109:22",
    "type": "JS",
    "kind": "Unopt",
    "func": 516,
    "tm": 279347,
    "source": {
      "script": 75,
      "start": 85537,
      "end": 85599,
      "positions": "C0O85547C3O85547C6O85571C10O85594",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get node:fs:3137:8",
    "type": "JS",
    "kind": "Unopt",
    "func": 517,
    "tm": 279372,
    "source": {
      "script": 75,
      "start": 86230,
      "end": 86326,
      "positions": "C0O86242C14O86255C19O86286C26O86251C32O86303C36O86319",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\utils.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 518,
    "tm": 279778,
    "source": {
      "script": 540,
      "start": 0,
      "end": 5955,
      "positions": "C0O0C4O5955",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\utils.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 519,
    "tm": 279966,
    "source": {
      "script": 540,
      "start": 0,
      "end": 5955,
      "positions": "C0O0C32O207C35O207C40O229C44O207C46O262C49O262C54O312C57O312C61O312C63O353C66O353C74O368C79O395C82O395C87O432C90O432C95O447C99O432C101O465C104O465C108O465C110O498C113O498C117O498C119O530C122O530C126O530C128O563C131O563C135O563C137O731C140O746C145O746C149O744C153O925C156O941C161O941C165O939C169O1086C176O1105C180O1445C183O1473C191O1481C197O1461C201O1693C208O1715C212O1971C219O1994C223O2361C226O2400C234O2408C240O2388C244O3249C251O3269C255O3760C262O3787C266O4367C273O4388C277O5004C284O5023C289O5954",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getEncodingOps node:buffer:691:24",
    "type": "JS",
    "kind": "Baseline",
    "func": 253,
    "tm": 280697,
    "source": {
      "script": 30,
      "start": 20872,
      "end": 22721,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "encodeRealpathResult node:fs:2467:30",
    "type": "JS",
    "kind": "Baseline",
    "func": 200,
    "tm": 280724,
    "source": {
      "script": 75,
      "start": 68433,
      "end": 68699,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\qs\\lib\\utils.js:8:26",
    "type": "JS",
    "kind": "Baseline",
    "func": 503,
    "tm": 280747,
    "source": {
      "script": 535,
      "start": 150,
      "end": 317,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getESMFacade node:internal/bootstrap/loaders:282:15",
    "type": "JS",
    "kind": "Baseline",
    "func": 282,
    "tm": 280773,
    "source": {
      "script": 15,
      "start": 9000,
      "end": 9769,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\safe-buffer\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 520,
    "tm": 280925,
    "source": {
      "script": 541,
      "start": 0,
      "end": 1670,
      "positions": "C0O0C4O1670",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\safe-buffer\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 521,
    "tm": 280998,
    "source": {
      "script": 541,
      "start": 0,
      "end": 1670,
      "positions": "C0O0C15O142C18O142C22O142C24O173C27O180C31O173C33O328C36O339C45O354C54O370C63O392C69O413C71O428C77O492C80O492C85O521C87O536C91O679C95O686C103O700C108O686C113O677C117O747C120O747C125O778C129O794C133O983C137O1000C141O1338C145O1361C149O1497C153O1524C158O1669",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get node:buffer:1372:8",
    "type": "JS",
    "kind": "Unopt",
    "func": 522,
    "tm": 281120,
    "source": {
      "script": 30,
      "start": 41356,
      "end": 41388,
      "positions": "C0O41361C4O41386",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "copyProps D:\\doc\\node.js\\mfg\\node_modules\\safe-buffer\\index.js:7:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 523,
    "tm": 281172,
    "source": {
      "script": 541,
      "start": 260,
      "end": 327,
      "positions": "C0O291C13O284C26O284C27O302C29O316C32O311C39O275C43O326",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\content-disposition\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 524,
    "tm": 281954,
    "source": {
      "script": 542,
      "start": 0,
      "end": 10594,
      "positions": "C0O0C4O10594",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\content-disposition\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 525,
    "tm": 282301,
    "source": {
      "script": 542,
      "start": 0,
      "end": 10594,
      "positions": "C0O0C69O154C71O169C75O197C82O211C86O280C89O280C94O295C98O280C100O318C103O318C108O340C112O318C114O490C118O490C120O660C124O660C126O710C130O710C132O819C136O819C138O1015C142O1015C144O1181C148O1181C150O2212C154O2212C156O2434C160O2434C162O2479C166O2479C168O3271C172O3271C174O3881C178O3881C181O10593",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "resolve node:path:158:10",
    "type": "JS",
    "kind": "Opt",
    "func": 12,
    "tm": 282665,
    "source": {
      "script": 73,
      "start": 4875,
      "end": 9786,
      "positions
      "inlined": "F0O8393F0O6606F1O5105F2O8161F3O9544F0O2517I4F0O2609I4",
      "fns": [
        13,
        199,
        14,
        16
      ]
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\content-type\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 526,
    "tm": 283577,
    "source": {
      "script": 543,
      "start": 0,
      "end": 5002,
      "positions": "C0O0C4O5002",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\content-type\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 527,
    "tm": 283751,
    "source": {
      "script": 543,
      "start": 0,
      "end": 5002,
      "positions": "C0O0C33O691C37O691C39O912C43O912C45O1011C49O1011C51O1205C55O1205C57O1374C61O1374C63O1540C67O1540C69O1641C71O1656C75O1665C77O1679C82O5001",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\send\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 528,
    "tm": 284869,
    "source": {
      "script": 544,
      "start": 0,
      "end": 23502,
      "positions": "C0O0C4O23502",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\send\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 529,
    "tm": 285646,
    "source": {
      "script": 544,
      "start": 0,
      "end": 23502,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "reportModuleNotFoundToWatchMode node:internal/modules/cjs/loader:218:41",
    "type": "JS",
    "kind": "Unopt",
    "func": 530,
    "tm": 285939,
    "source": {
      "script": 452,
      "start": 6542,
      "end": 6743,
      "positions": "C0O6542C9O6570C22O6613C28O6626C33O6634C47O6658C50O6676C55O6658C64O6634C70O6742",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\http-errors\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 531,
    "tm": 286440,
    "source": {
      "script": 545,
      "start": 0,
      "end": 6391,
      "positions": "C0O0C4O6391",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\http-errors\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 532,
    "tm": 286654,
    "source": {
      "script": 545,
      "start": 0,
      "end": 6391,
      "positions": "C0O0C56O197C59O197C67O212C71O197C73O249C76O249C80O249C82O290C85O290C89O290C91O325C94O325C98O325C100O364C103O364C107O364C109O428C111O443C115O464C120O484C123O482C127O520C132O575C137O583C142O542C146O540C150O670C158O688C163O702C168O710C173O636C179O6390",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\inherits\\inherits.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 533,
    "tm": 287449,
    "source": {
      "script": 546,
      "start": 0,
      "end": 250,
      "positions": "C0O0C4O250",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\inherits\\inherits.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 534,
    "tm": 287482,
    "source": {
      "script": 546,
      "start": 0,
      "end": 250,
      "positions": "C3O19C6O19C11O83C19O108C21O108C22O142C26O135C43O197C46O214C50O212C57O249",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\toidentifier\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 535,
    "tm": 287887,
    "source": {
      "script": 547,
      "start": 0,
      "end": 504,
      "positions": "C0O0C4O504",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\toidentifier\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 536,
    "tm": 287935,
    "source": {
      "script": 547,
      "start": 0,
      "end": 504,
      "positions": "C0O0C5O142C7O157C12O503",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "createHttpErrorConstructor D:\\doc\\node.js\\mfg\\node_modules\\http-errors\\index.js:112:37",
    "type": "JS",
    "kind": "Unopt",
    "func": 537,
    "tm": 287982,
    "source": {
      "script": 545,
      "start": 2523,
      "end": 2668,
      "positions": "C0O2523C5O2620C8O2640C12O2620C17O2650C19O2666",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "inherits node:util:243:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 538,
    "tm": 288036,
    "source": {
      "script": 48,
      "start": 6341,
      "end": 6980,
      "positions": "C0O6366C8O6412C24O6418C29O6412C30O6475C38O6531C54O6537C59O6531C60O6618C66O6650C77O6760C84O6656C89O6650C90O6780C98O6801C105O6853C112O6780C117O6919C122O6945C127O6966C132O6919C138O6979",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "createIsHttpErrorFunction D:\\doc\\node.js\\mfg\\node_modules\\http-errors\\index.js:175:36",
    "type": "JS",
    "kind": "Unopt",
    "func": 539,
    "tm": 288086,
    "source": {
      "script": 545,
      "start": 3874,
      "end": 4211,
      "positions": "C0O3874C9O3890C13O4209",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "populateConstructorExports D:\\doc\\node.js\\mfg\\node_modules\\http-errors\\index.js:258:37",
    "type": "JS",
    "kind": "Unopt",
    "func": 540,
    "tm": 288116,
    "source": {
      "script": 545,
      "start": 5705,
      "end": 6223,
      "positions": "C0O5705C13O5743C23O5743C29O6222",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "forEachCode D:\\doc\\node.js\\mfg\\node_modules\\http-errors\\index.js:259:38",
    "type": "JS",
    "kind": "Unopt",
    "func": 541,
    "tm": 288159,
    "source": {
      "script": 545,
      "start": 5772,
      "end": 6220,
      "positions": "C0O5814C10O5836C17O5843C21O5814C26O5856C31O5864C56O5907C70O5919C76O5979C78O6009C92O6021C98O6081C100O6098C104O6153C109O6167C113O6185C118O6199C123O6219",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "toIdentifier D:\\doc\\node.js\\mfg\\node_modules\\toidentifier\\index.js:24:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 542,
    "tm": 288201,
    "source": {
      "script": 547,
      "start": 320,
      "end": 503,
      "positions": "C0O346C8O346C14O361C24O362C30O458C38O459C44O472C57O473C63O501",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\toidentifier\\index.js:27:19",
    "type": "JS",
    "kind": "Unopt",
    "func": 543,
    "tm": 288242,
    "source": {
      "script": 547,
      "start": 375,
      "end": 452,
      "positions": "C0O404C10O404C17O415C22O416C27O438C35O438C40O430C43O446",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "codeClass D:\\doc\\node.js\\mfg\\node_modules\\http-errors\\index.js:38:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 544,
    "tm": 288303,
    "source": {
      "script": 545,
      "start": 802,
      "end": 863,
      "positions": "C0O815C8O829C13O843C20O844C28O854C32O822C36O861",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "[^ _0-9a-z]",
    "timestamp": 288373,
    "type": "CODE",
    "kind": "RegExp"
  },
  {
    "name": "[^ _0-9a-z]",
    "timestamp": 288419,
    "type": "CODE",
    "kind": "RegExp"
  },
  {
    "name": "toIdentifier D:\\doc\\node.js\\mfg\\node_modules\\toidentifier\\index.js:24:23",
    "type": "JS",
    "kind": "Baseline",
    "func": 542,
    "tm": 288471,
    "source": {
      "script": 547,
      "start": 320,
      "end": 503,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/bootstrap/loaders:293:15",
    "type": "JS",
    "kind": "Baseline",
    "func": 283,
    "tm": 288492,
    "source": {
      "script": 15,
      "start": 9506,
      "end": 9604,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "tryPackage node:internal/modules/cjs/loader:421:20",
    "type": "JS",
    "kind": "Baseline",
    "func": 269,
    "tm": 288522,
    "source": {
      "script": 452,
      "start": 12097,
      "end": 13391,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "compileForPublicLoader node:internal/bootstrap/loaders:264:25",
    "type": "JS",
    "kind": "Baseline",
    "func": 281,
    "tm": 288541,
    "source": {
      "script": 15,
      "start": 8294,
      "end": 8982,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\toidentifier\\index.js:27:19",
    "type": "JS",
    "kind": "Baseline",
    "func": 543,
    "tm": 288556,
    "source": {
      "script": 547,
      "start": 375,
      "end": 452,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "createClientErrorConstructor D:\\doc\\node.js\\mfg\\node_modules\\http-errors\\index.js:127:39",
    "type": "JS",
    "kind": "Unopt",
    "func": 545,
    "tm": 288655,
    "source": {
      "script": 545,
      "start": 2773,
      "end": 3762,
      "positions": "C0O2773C15O2817C20O2817C24O2817C26O3552C34O3552C39O3587C50O3587C55O3623C58O3635C65O3652C69O3661C72O3673C79O3694C83O3703C86O3715C92O3732C96O3742C98O3760",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "toClassName D:\\doc\\node.js\\mfg\\node_modules\\http-errors\\index.js:285:22",
    "type": "JS",
    "kind": "Unopt",
    "func": 546,
    "tm": 288698,
    "source": {
      "script": 545,
      "start": 6311,
      "end": 6390,
      "positions": "C0O6334C8O6334C16O6345C23O6368C30O6388",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "nameFunc D:\\doc\\node.js\\mfg\\node_modules\\http-errors\\index.js:244:19",
    "type": "JS",
    "kind": "Unopt",
    "func": 547,
    "tm": 288746,
    "source": {
      "script": 545,
      "start": 5391,
      "end": 5574,
      "positions": "C0O5419C4O5426C12O5426C19O5468C21O5485C27O5505C29O5516C33O5527C37O5534C51O5534C57O5573",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "createServerErrorConstructor D:\\doc\\node.js\\mfg\\node_modules\\http-errors\\index.js:196:39",
    "type": "JS",
    "kind": "Unopt",
    "func": 548,
    "tm": 289057,
    "source": {
      "script": 545,
      "start": 4316,
      "end": 5306,
      "positions": "C0O4316C15O4360C20O4360C24O4360C26O5095C34O5095C39O5130C50O5130C55O5166C58O5178C65O5195C69O5204C72O5216C79O5237C83O5246C86O5258C92O5275C96O5286C98O5304",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "createServerErrorConstructor D:\\doc\\node.js\\mfg\\node_modules\\http-errors\\index.js:196:39",
    "type": "JS",
    "kind": "Baseline",
    "func": 548,
    "tm": 289164,
    "source": {
      "script": 545,
      "start": 4316,
      "end": 5306,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "codeClass D:\\doc\\node.js\\mfg\\node_modules\\http-errors\\index.js:38:20",
    "type": "JS",
    "kind": "Baseline",
    "func": 544,
    "tm": 289185,
    "source": {
      "script": 545,
      "start": 802,
      "end": 863,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "forEachCode D:\\doc\\node.js\\mfg\\node_modules\\http-errors\\index.js:259:38",
    "type": "JS",
    "kind": "Baseline",
    "func": 541,
    "tm": 289204,
    "source": {
      "script": 545,
      "start": 5772,
      "end": 6220,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "toClassName D:\\doc\\node.js\\mfg\\node_modules\\http-errors\\index.js:285:22",
    "type": "JS",
    "kind": "Baseline",
    "func": 546,
    "tm": 289220,
    "source": {
      "script": 545,
      "start": 6311,
      "end": 6390,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "nameFunc D:\\doc\\node.js\\mfg\\node_modules\\http-errors\\index.js:244:19",
    "type": "JS",
    "kind": "Baseline",
    "func": 547,
    "tm": 289243,
    "source": {
      "script": 545,
      "start": 5391,
      "end": 5574,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "createClientErrorConstructor D:\\doc\\node.js\\mfg\\node_modules\\http-errors\\index.js:127:39",
    "type": "JS",
    "kind": "Baseline",
    "func": 545,
    "tm": 289261,
    "source": {
      "script": 545,
      "start": 2773,
      "end": 3762,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "inherits node:util:243:18",
    "type": "JS",
    "kind": "Baseline",
    "func": 538,
    "tm": 289283,
    "source": {
      "script": 48,
      "start": 6341,
      "end": 6980,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\destroy\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 549,
    "tm": 290559,
    "source": {
      "script": 548,
      "start": 0,
      "end": 4258,
      "positions": "C0O0C4O4258",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\destroy\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 550,
    "tm": 290702,
    "source": {
      "script": 548,
      "start": 0,
      "end": 4258,
      "positions": "C0O0C70O201C73O201C78O218C82O201C84O249C87O249C92O262C96O249C98O287C101O287C105O287C107O316C110O316C114O316C116O372C118O387C123O4257",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get node:stream:109:6",
    "type": "JS",
    "kind": "Unopt",
    "func": 551,
    "tm": 290810,
    "source": {
      "script": 44,
      "start": 3924,
      "end": 3955,
      "positions": "C0O3934C4O3950",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:zlib:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 552,
    "tm": 291592,
    "source": {
      "script": 549,
      "start": 0,
      "end": 30475,
      "positions": "C0O0C4O30475",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:zlib:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 553,
    "tm": 292696,
    "source": {
      "script": 549,
      "start": 0,
      "end": 30475,
      "positions": "C0O0C360O1183C365O1199C371O1225C376O1247C382O1270C388O1296C393O1313C399O1332C405O1348C410O1375C415O1400C420O1417C426O1432C431O1457C437O1474C443O1504C448O1515C454O1543C460O1794C464O1794C470O1794C476O1602C482O1633C488O1660C494O1687C500O1710C506O1751C512O1772C517O1855C521O1855C527O1831C533O1842C539O1901C543O1901C549O1886C554O2001C558O2001C564O1939C570O1961C576O1982C582O2050C586O2050C590O2050C592O2091C596O2091C600O2091C602O2158C606O2158C612O2131C618O2142C624O2203C628O2203C634O2234C640O2186C646O2298C650O2298C656O2256C662O2277C668O2352C672O2352C676O2352C678O2390C682O2390C686O2390C688O2429C692O2429C698O2457C702O2429C704O3140C708O2500C713O2512C718O2521C723O2538C729O2552C734O2566C739O2604C745O2617C751O2635C757O2653C763O2666C769O2682C775O2698C781O2714C787O2731C793O2757C799O2777C805O2799C811O2819C817O2886C823O2895C829O2907C835O2916C841O2928C847O2934C853O2942C859O2952C865O2967C871O3025C876O3051C882O3078C888O3103C894O3208C904O3229C916O3262C928O3302C940O3337C952O3375C964O3418C976O3458C988O3497C1000O3540C1011O3582C1015O3582C1049O3574C1080O3574C1083O3606C1085O3617C1092O3625C1099O3563C1170O6172C1176O6172C1180O6172C1182O6833C1188O6833C1192O6833C1194O7181C1214O7188C1224O7200C1249O7216C1259O7242C1271O7181C1273O7312C1274O7312C1276O7347C1278O7347C1280O9515C1284O9545C1294O9566C1300O9515C1305O9579C1313O9579C1318O9625C1322O9655C1338O9746C1346O9625C1351O10100C1355O10130C1371O10228C1383O10355C1392O10228C1401O10425C1413O10532C1425O10425C1443O10100C1453O10606C1457O10615C1467O10631C1475O10867C1479O10876C1489O10893C1497O11011C1501O11020C1511O11037C1519O11468C1523O11468C1525O11481C1528O11508C1542O11509C1556O11521C1570O11530C1584O11572C1598O11586C1612O11600C1623O11636C1659O11623C1702O11623C1705O11657C1711O11668C1725O11679C1736O11612C1815O11969C1819O11969C1821O12004C1823O12004C1835O12050C1871O12037C1914O12037C1917O12073C1925O12107C1935O12107C1945O12098C1953O12136C1959O12149C1973O12173C1984O12026C2063O12197C2067O12206C2077O12222C2085O12646C2089O12655C2099O12671C2107O12763C2111O12772C2121O12791C2129O12861C2133O12870C2143O12891C2151O13445C2155O13454C2165O13478C2173O19309C2184O19321C2194O19349C2204O19373C2214O19309C2216O21872C2220O21898C2234O21918C2240O21872C2250O21931C2258O21931C2268O22506C2272O22511C2286O22528C2294O23197C2298O23226C2312O23242C2322O23197C2332O23255C2340O23255C2350O23436C2354O23465C2368O23481C2378O23436C2388O23494C2396O23494C2406O23663C2410O23689C2424O23705C2434O23663C2444O23718C2452O23718C2462O23892C2466O23920C2480O23936C2490O23892C2500O23949C2508O23949C2518O24200C2522O24232C2536O24248C2546O24200C2556O24261C2564O24261C2574O24457C2578O24489C2592O24505C2602O24457C2612O24518C2620O24518C2630O24694C2634O24721C2648O24737C2658O24694C2668O24750C2676O24750C2686O25218C2694O25253C2710O25231C2722O25218C2730O25218C2732O25407C2738O25439C2748O25407C2758O25407C2760O25474C2771O25486C2781O25528C2791O25567C2801O25474C2803O26969C2807O26997C2821O27013C2831O26969C2841O27026C2849O27026C2859O27235C2863O27271C2877O27289C2887O27235C2897O27302C2905O27302C2915O27527C2919O27565C2933O27583C2943O27527C2953O27596C2961O27596C2971O27999C2975O28028C2985O28033C3008O28078C3020O28119C3032O27999C3042O28169C3053O28191C3063O28203C3073O28215C3083O28224C3093O28235C3103O28250C3113O28265C3123O28275C3133O28294C3148O28411C3173O28468C3198O28517C3223O28568C3248O28620C3273O28683C3298O28736C3323O28789C3348O28839C3373O28896C3398O28947C3423O29002C3448O29056C3473O29119C3498O29181C3523O29252C3548O29320C3573O29395C3593O28184C3601O29481C3624O29510C3644O29553C3664O29599C3684O29648C3704O29691C3724O29730C3744O29770C3764O29818C3784O29877C3800O29925C3811O30010C3829O30036C3838O30117C3864O29451C3874O30245C3882O30245C3928O30237C3971O30237C3974O30273C3982O30277C3997O30320C3999O30361C4009O30370C4024O30440C4041O30333C4051O30226C4131O30474",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "fromArrayBuffer node:buffer:461:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 554,
    "tm": 293218,
    "source": {
      "script": 30,
      "start": 13628,
      "end": 14330,
      "positions": "C0O13695C4O13732C9O13765C11O13778C15O13796C20O13800C26O13832C29O13880C36O13891C40O13910C41O13924C46O13934C56O13940C61O13934C62O13985C66O14018C73O14103C75O14112C79O14126C80O14137C85O14151C87O14162C92O14184C102O14190C107O14184C110O14251C113O14280C129O14287C134O14327",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:zlib:806:3",
    "type": "JS",
    "kind": "Unopt",
    "func": 555,
    "tm": 293338,
    "source": {
      "script": 549,
      "start": 25279,
      "end": 25368,
      "positions": "C0O25289C8O25289C17O25344C22O25353C28O25368",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "createConvenienceMethod node:zlib:789:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 556,
    "tm": 293413,
    "source": {
      "script": 549,
      "start": 24820,
      "end": 25190,
      "positions": "C0O24820C9O24838C13O24855C17O24966C18O24975C22O25187",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "createProperty node:zlib:874:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 557,
    "tm": 293471,
    "source": {
      "script": 549,
      "start": 27672,
      "end": 27843,
      "positions": "C0O27672C9O27684C14O27775C24O27840",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\etag\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 558,
    "tm": 294341,
    "source": {
      "script": 550,
      "start": 0,
      "end": 2479,
      "positions": "C0O0C4O2479",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\etag\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 559,
    "tm": 294438,
    "source": {
      "script": 550,
      "start": 0,
      "end": 2479,
      "positions": "C0O0C28O139C30O154C34O220C37O220C41O220C43O250C46O250C51O263C55O250C57O328C61O335C66O345C70O328C73O2478",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get node:crypto:369:8",
    "type": "JS",
    "kind": "Unopt",
    "func": 560,
    "tm": 294534,
    "source": {
      "script": 92,
      "start": 8604,
      "end": 8641,
      "positions": "C0O8609C3O8616C7O8631C11O8639",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "lazyWebCrypto node:crypto:125:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 561,
    "tm": 294923,
    "source": {
      "script": 92,
      "start": 3230,
      "end": 3313,
      "positions": "C0O3238C14O3252C21O3248C27O3293C31O3310",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/crypto/webcrypto:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 562,
    "tm": 295299,
    "source": {
      "script": 551,
      "start": 0,
      "end": 25030,
      "positions": "C0O0C4O25030",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/crypto/webcrypto:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 563,
    "tm": 296445,
    "source": {
      "script": 551,
      "start": 0,
      "end": 25030,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/crypto/webcrypto:743:41",
    "type": "JS",
    "kind": "Unopt",
    "func": 564,
    "tm": 296659,
    "source": {
      "script": 551,
      "start": 21790,
      "end": 21795,
      "positions": "C1O21794",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "SubtleCrypto node:internal/crypto/webcrypto:739:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 565,
    "tm": 296685,
    "source": {
      "script": 551,
      "start": 21694,
      "end": 21745,
      "positions": "C0O21704C5O21710C10O21704",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/crypto/webcrypto:755:41",
    "type": "JS",
    "kind": "Unopt",
    "func": 566,
    "tm": 296705,
    "source": {
      "script": 551,
      "start": 22053,
      "end": 22058,
      "positions": "C1O22057",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Crypto node:internal/crypto/webcrypto:746:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 567,
    "tm": 296724,
    "source": {
      "script": 551,
      "start": 21848,
      "end": 21899,
      "positions": "C0O21858C5O21864C10O21858",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get node:crypto:377:8",
    "type": "JS",
    "kind": "Unopt",
    "func": 568,
    "tm": 296795,
    "source": {
      "script": 92,
      "start": 8764,
      "end": 8808,
      "positions": "C0O8769C3O8776C7O8791C12O8798C16O8806",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get subtle node:internal/crypto/webcrypto:750:13",
    "type": "JS",
    "kind": "Unopt",
    "func": 569,
    "tm": 296827,
    "source": {
      "script": 551,
      "start": 21915,
      "end": 22008,
      "positions": "C0O21925C2O21938C4O21934C9O21946C19O21952C24O21946C25O21989C29O22003",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get node:crypto:385:10",
    "type": "JS",
    "kind": "Unopt",
    "func": 570,
    "tm": 296849,
    "source": {
      "script": 92,
      "start": 8942,
      "end": 8963,
      "positions": "C0O8948C2O8963",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\fresh\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 571,
    "tm": 297412,
    "source": {
      "script": 552,
      "start": 0,
      "end": 2711,
      "positions": "C0O0C4O2711",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\fresh\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 572,
    "tm": 297508,
    "source": {
      "script": 552,
      "start": 0,
      "end": 2711,
      "positions": "C0O0C22O250C26O250C28O323C30O338C35O2710",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\mime\\mime.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 573,
    "tm": 298062,
    "source": {
      "script": 553,
      "start": 0,
      "end": 2726,
      "positions": "C0O0C4O2726",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\mime\\mime.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 574,
    "tm": 298168,
    "source": {
      "script": 553,
      "start": 0,
      "end": 2726,
      "positions": "C0O0C10O11C13O11C18O37C21O37C25O37C27O543C36O560C40O1329C49O1344C53O1833C62O1850C66O2068C75O2088C79O2251C81O2251C87O2294C95O2301C100O2294C105O2369C113O2369C118O2362C122O2443C124O2453C128O2510C133O2538C143O2524C147O2703C149O2718C154O2725",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Mime D:\\doc\\node.js\\mfg\\node_modules\\mime\\mime.js:4:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 575,
    "tm": 298261,
    "source": {
      "script": 553,
      "start": 66,
      "end": 220,
      "positions": "C0O121C4O128C11O128C16O119C20O198C24O205C31O205C36O196C41O219",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Mime.define D:\\doc\\node.js\\mfg\\node_modules\\mime\\mime.js:21:34",
    "type": "JS",
    "kind": "Unopt",
    "func": 576,
    "tm": 298960,
    "source": {
      "script": 553,
      "start": 571,
      "end": 1094,
      "positions": "C0O598C13O590C26O590C27O620C29O623C33O648C35O660C39O653C44O681C48O693C53O697C59O716C66O726C69O721C74O742C78O750C83O761C92O785C105O785C117O824C120O818C126O828C130O872C137O882C140O877C143O855C149O887C155O896C159O750C165O925C172O935C178O940C182O669C187O635C190O1024C197O1034C202O1055C208O1078C211O1072C218O581C222O1093",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Mime.lookup D:\\doc\\node.js\\mfg\\node_modules\\mime\\mime.js:69:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 577,
    "tm": 299849,
    "source": {
      "script": 553,
      "start": 1860,
      "end": 1999,
      "positions": "C0O1896C13O1896C20O1922C25O1923C30O1953C37O1958C44O1967C46O1984C50O1997",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\send\\node_modules\\ms\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 578,
    "tm": 300368,
    "source": {
      "script": 554,
      "start": 0,
      "end": 3024,
      "positions": "C0O0C4O3024",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\send\\node_modules\\ms\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 579,
    "tm": 300481,
    "source": {
      "script": 554,
      "start": 0,
      "end": 3024,
      "positions": "C0O0C29O29C33O29C35O43C37O45C40O43C42O59C44O61C47O59C49O75C51O77C54O75C56O91C58O93C61O91C63O106C68O108C71O106C73O405C77O420C82O3023",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\range-parser\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 580,
    "tm": 301062,
    "source": {
      "script": 555,
      "start": 0,
      "end": 2900,
      "positions": "C0O0C4O2900",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\range-parser\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 581,
    "tm": 301165,
    "source": {
      "script": 555,
      "start": 0,
      "end": 2900,
      "positions": "C0O0C40O188C42O203C47O2899",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " :1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 582,
    "tm": 301411,
    "source": {
      "script": 556,
      "start": 0,
      "end": 163,
      "positions": "C0O0C5O163",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " :1:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 583,
    "tm": 301437,
    "source": {
      "script": 556,
      "start": 19,
      "end": 162,
      "positions": "C0O19C25O67C29O160",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getStack D:\\doc\\node.js\\mfg\\node_modules\\depd\\index.js:381:19",
    "type": "JS",
    "kind": "Baseline",
    "func": 288,
    "tm": 301518,
    "source": {
      "script": 484,
      "start": 7502,
      "end": 7903,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "containsNamespace D:\\doc\\node.js\\mfg\\node_modules\\depd\\index.js:29:28",
    "type": "JS",
    "kind": "Baseline",
    "func": 294,
    "tm": 301541,
    "source": {
      "script": 484,
      "start": 374,
      "end": 666,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:zlib:806:3",
    "type": "JS",
    "kind": "Baseline",
    "func": 555,
    "tm": 301558,
    "source": {
      "script": 549,
      "start": 25279,
      "end": 25368,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "createConvenienceMethod node:zlib:789:33",
    "type": "JS",
    "kind": "Baseline",
    "func": 556,
    "tm": 301572,
    "source": {
      "script": 549,
      "start": 24820,
      "end": 25190,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "createProperty node:zlib:874:24",
    "type": "JS",
    "kind": "Baseline",
    "func": 557,
    "tm": 301585,
    "source": {
      "script": 549,
      "start": 27672,
      "end": 27843,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/utils:918:42",
    "type": "JS",
    "kind": "Baseline",
    "func": 250,
    "tm": 301605,
    "source": {
      "script": 79,
      "start": 25750,
      "end": 26232,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Mime.define D:\\doc\\node.js\\mfg\\node_modules\\mime\\mime.js:21:34",
    "type": "JS",
    "kind": "Baseline",
    "func": 576,
    "tm": 301628,
    "source": {
      "script": 553,
      "start": 571,
      "end": 1094,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "prepareObjectStackTrace D:\\doc\\node.js\\mfg\\node_modules\\depd\\index.js:405:34",
    "type": "JS",
    "kind": "Baseline",
    "func": 291,
    "tm": 301649,
    "source": {
      "script": 484,
      "start": 7983,
      "end": 8014,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module._extensions..js node:internal/modules/cjs/loader:1263:37",
    "type": "JS",
    "kind": "Baseline",
    "func": 229,
    "tm": 301794,
    "source": {
      "script": 452,
      "start": 40767,
      "end": 42565,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "callSiteLocation D:\\doc\\node.js\\mfg\\node_modules\\depd\\index.js:267:27",
    "type": "JS",
    "kind": "Baseline",
    "func": 292,
    "tm": 301816,
    "source": {
      "script": 484,
      "start": 5193,
      "end": 5537,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\proxy-addr\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 584,
    "tm": 302427,
    "source": {
      "script": 557,
      "start": 0,
      "end": 6000,
      "positions": "C0O0C4O6000",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\proxy-addr\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 585,
    "tm": 302628,
    "source": {
      "script": 557,
      "start": 0,
      "end": 6000,
      "positions": "C0O0C64O145C66O160C70O179C77O191C81O209C88O225C92O297C95O297C99O297C101O331C104O331C109O407C113O407C115O436C119O429C121O465C125O458C127O535C131O535C134O5999",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\forwarded\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 586,
    "tm": 303103,
    "source": {
      "script": 558,
      "start": 0,
      "end": 1578,
      "positions": "C0O0C4O1578",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\forwarded\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 587,
    "tm": 303171,
    "source": {
      "script": 558,
      "start": 0,
      "end": 1578,
      "positions": "C0O0C22O144C24O159C29O1577",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\ipaddr.js\\lib\\ipaddr.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 588,
    "tm": 304074,
    "source": {
      "script": 559,
      "start": 0,
      "end": 19333,
      "positions": "C0O0C4O19333",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\ipaddr.js\\lib\\ipaddr.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 589,
    "tm": 304652,
    "source": {
      "script": 559,
      "start": 0,
      "end": 19333,
      "positions": "C0O0C9O0C14O19321C19O19321C25O19332",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\ipaddr.js\\lib\\ipaddr.js:1:10",
    "type": "JS",
    "kind": "Unopt",
    "func": 590,
    "tm": 304667,
    "source": {
      "script": 559,
      "start": 9,
      "end": 19319,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\ipaddr.js\\lib\\ipaddr.js:199:26",
    "type": "JS",
    "kind": "Unopt",
    "func": 591,
    "tm": 304754,
    "source": {
      "script": 559,
      "start": 5665,
      "end": 11106,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\ipaddr.js\\lib\\ipaddr.js:56:26",
    "type": "JS",
    "kind": "Unopt",
    "func": 592,
    "tm": 304803,
    "source": {
      "script": 559,
      "start": 1503,
      "end": 4290,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "IPv4 D:\\doc\\node.js\\mfg\\node_modules\\ipaddr.js\\lib\\ipaddr.js:57:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 593,
    "tm": 304920,
    "source": {
      "script": 559,
      "start": 1525,
      "end": 1917,
      "positions": "C0O1578C7O1585C12O1602C21O1608C26O1602C27O1678C29O1698C34O1708C36O1708C41O1730C43O1744C47O1757C51O1766C60O1784C65O1806C74O1812C79O1806C80O1716C85O1673C88O1890C90O1902C95O1916",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "IPv6 D:\\doc\\node.js\\mfg\\node_modules\\ipaddr.js\\lib\\ipaddr.js:200:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 594,
    "tm": 305049,
    "source": {
      "script": 559,
      "start": 5687,
      "end": 6372,
      "positions": "C0O5756C7O5763C12O5781C14O5792C18O5811C21O5824C23O5824C28O5860C33O5866C40O5877C43O5881C49O5897C52O5894C55O5887C59O5866C64O5833C71O5806C76O5937C83O5944C88O5961C90O5972C96O6004C105O6010C110O6004C111O6091C116O6109C118O6126C123O6136C125O6136C130O6158C132O6168C136O6181C140O6190C151O6206C156O6231C165O6237C170O6231C171O6144C176O6104C179O6315C183O6337C185O6349C190O6371",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "createETagGenerator D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\utils.js:272:30",
    "type": "JS",
    "kind": "Unopt",
    "func": 595,
    "tm": 305302,
    "source": {
      "script": 540,
      "start": 5467,
      "end": 5651,
      "positions": "C0O5467C9O5481C13O5649",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " :1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 596,
    "tm": 305384,
    "source": {
      "script": 560,
      "start": 0,
      "end": 169,
      "positions": "C0O0C5O169",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " :1:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 597,
    "tm": 305408,
    "source": {
      "script": 560,
      "start": 19,
      "end": 168,
      "positions": "C0O19C25O67C29O166",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " :1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 598,
    "tm": 305461,
    "source": {
      "script": 561,
      "start": 0,
      "end": 169,
      "positions": "C0O0C5O169",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " :1:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 599,
    "tm": 305486,
    "source": {
      "script": 561,
      "start": 19,
      "end": 168,
      "positions": "C0O19C25O67C29O166",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\application.js:489:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 600,
    "tm": 305767,
    "source": {
      "script": 487,
      "start": 10843,
      "end": 11148,
      "positions": "C0O10843C9O10855C17O10859C21O10867C26O11147",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\request.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 601,
    "tm": 306313,
    "source": {
      "script": 562,
      "start": 0,
      "end": 12505,
      "positions": "C0O0C4O12505",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\request.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 602,
    "tm": 306895,
    "source": {
      "script": 562,
      "start": 0,
      "end": 12505,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\accepts\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 603,
    "tm": 307463,
    "source": {
      "script": 563,
      "start": 0,
      "end": 5252,
      "positions": "C0O0C4O5252",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\accepts\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 604,
    "tm": 307629,
    "source": {
      "script": 563,
      "start": 0,
      "end": 5252,
      "positions": "C0O0C23O194C26O194C30O194C32O227C35O227C39O227C41O289C43O304C47O1721C50O1729C58O1754C68O1770C74O1744C78O2701C81O2709C89O2738C99O2758C105O2728C109O3534C112O3542C120O3570C130O3589C136O3560C140O4312C143O4320C151O4345C159O4371C167O4400C177O4420C183O4390C189O4361C195O4335C200O5251",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\negotiator\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 605,
    "tm": 308112,
    "source": {
      "script": 564,
      "start": 0,
      "end": 2451,
      "positions": "C0O0C4O2451",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\negotiator\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 606,
    "tm": 308204,
    "source": {
      "script": 564,
      "start": 0,
      "end": 2451,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\negotiator\\lib\\charset.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 607,
    "tm": 308589,
    "source": {
      "script": 565,
      "start": 0,
      "end": 3081,
      "positions": "C0O0C4O3081",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\negotiator\\lib\\charset.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 608,
    "tm": 308701,
    "source": {
      "script": 565,
      "start": 0,
      "end": 3081,
      "positions": "C0O0C52O223C54O238C58O266C65O292C69O382C73O382C76O3080",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\negotiator\\lib\\encoding.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 609,
    "tm": 309037,
    "source": {
      "script": 566,
      "start": 0,
      "end": 3506,
      "positions": "C0O0C4O3506",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\negotiator\\lib\\encoding.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 610,
    "tm": 309158,
    "source": {
      "script": 566,
      "start": 0,
      "end": 3506,
      "positions": "C0O0C52O223C54O238C58O267C65O294C69O386C73O386C76O3505",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\negotiator\\lib\\language.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 611,
    "tm": 309489,
    "source": {
      "script": 567,
      "start": 0,
      "end": 3409,
      "positions": "C0O0C4O3409",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\negotiator\\lib\\language.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 612,
    "tm": 309606,
    "source": {
      "script": 567,
      "start": 0,
      "end": 3409,
      "positions": "C0O0C52O223C54O238C58O267C65O294C69O386C73O386C76O3408",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\negotiator\\lib\\mediaType.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 613,
    "tm": 309961,
    "source": {
      "script": 568,
      "start": 0,
      "end": 5358,
      "positions": "C0O0C4O5358",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\negotiator\\lib\\mediaType.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 614,
    "tm": 310143,
    "source": {
      "script": 568,
      "start": 0,
      "end": 5358,
      "positions": "C0O0C76O223C78O238C82O268C89O296C93O390C97O390C100O5357",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "markAsUntransferable node:internal/buffer:1050:30",
    "type": "JS",
    "kind": "Baseline",
    "func": 615,
    "tm": 310520,
    "source": {
      "script": 31,
      "start": 30840,
      "end": 31064,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "IPv4 D:\\doc\\node.js\\mfg\\node_modules\\ipaddr.js\\lib\\ipaddr.js:57:18",
    "type": "JS",
    "kind": "Baseline",
    "func": 593,
    "tm": 310545,
    "source": {
      "script": 559,
      "start": 1525,
      "end": 1917,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "IPv6 D:\\doc\\node.js\\mfg\\node_modules\\ipaddr.js\\lib\\ipaddr.js:200:18",
    "type": "JS",
    "kind": "Baseline",
    "func": 594,
    "tm": 310572,
    "source": {
      "script": 559,
      "start": 5687,
      "end": 6372,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "createArgumentsString D:\\doc\\node.js\\mfg\\node_modules\\depd\\index.js:71:32",
    "type": "JS",
    "kind": "Baseline",
    "func": 297,
    "tm": 310588,
    "source": {
      "script": 484,
      "start": 1255,
      "end": 1369,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "wrapfunction D:\\doc\\node.js\\mfg\\node_modules\\depd\\index.js:413:23",
    "type": "JS",
    "kind": "Baseline",
    "func": 296,
    "tm": 310606,
    "source": {
      "script": 484,
      "start": 8102,
      "end": 8686,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\application.js:489:25",
    "type": "JS",
    "kind": "Baseline",
    "func": 600,
    "tm": 310622,
    "source": {
      "script": 487,
      "start": 10843,
      "end": 11148,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "createPool node:buffer:162:20",
    "type": "JS",
    "kind": "Baseline",
    "func": 616,
    "tm": 310639,
    "source": {
      "script": 30,
      "start": 4217,
      "end": 4362,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\mime-types\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 617,
    "tm": 310806,
    "source": {
      "script": 569,
      "start": 0,
      "end": 3663,
      "positions": "C0O0C4O3663",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\mime-types\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 618,
    "tm": 310935,
    "source": {
      "script": 569,
      "start": 0,
      "end": 3663,
      "positions": "C0O0C34O189C37O189C41O189C43O222C46O222C51O237C55O222C57O315C61O315C63O364C67O364C69O415C74O431C78O441C88O470C94O458C98O480C103O500C107O514C112O532C116O544C119O565C123O572C130O572C135O563C139O585C144O600C148O609C151O625C155O632C162O632C167O623C171O684C174O705C182O725C187O684C193O3662",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\mime-db\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 619,
    "tm": 311542,
    "source": {
      "script": 570,
      "start": 0,
      "end": 189,
      "positions": "C0O0C4O189",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\mime-db\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 620,
    "tm": 311571,
    "source": {
      "script": 570,
      "start": 0,
      "end": 189,
      "positions": "C0O151C3O168C7O166C12O188",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "populateMaps D:\\doc\\node.js\\mfg\\node_modules\\mime-types\\index.js:154:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 621,
    "tm": 313777,
    "source": {
      "script": 569,
      "start": 2766,
      "end": 3662,
      "positions": "C0O2766C13O2846C22O2866C28O2846C30O2888C34O2895C44O2895C50O2903C60O2904C66O3661",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "forEachMimeType D:\\doc\\node.js\\mfg\\node_modules\\mime-types\\index.js:158:52",
    "type": "JS",
    "kind": "Unopt",
    "func": 622,
    "tm": 314030,
    "source": {
      "script": 569,
      "start": 2937,
      "end": 3659,
      "positions": "C0O2961C7O2963C11O2990C16O3006C18O3025C24O3041C25O3047C26O3085C31O3102C35O3152C37O3164C41O3157C46O3201C48O3205C52O3216C57O3225C62O3259C65O3270C80O3286C83O3280C87O3299C92O3270C98O3324C101O3335C106O3348C111O3335C117O3365C122O3374C128O3386C135O3436C142O3450C152O3465C156O3477C166O3477C175O3491C180O3557C182O3626C187O3643C191O3173C196O3139C200O3658",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get SocketAddress node:net:2239:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 623,
    "tm": 314494,
    "source": {
      "script": 463,
      "start": 63906,
      "end": 64014,
      "positions": "C0O63916C14O63934C19O63967C26O63930C32O63988C36O64009",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\type-is\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 624,
    "tm": 314997,
    "source": {
      "script": 571,
      "start": 0,
      "end": 5562,
      "positions": "C0O0C4O5562",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\type-is\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 625,
    "tm": 315177,
    "source": {
      "script": 571,
      "start": 0,
      "end": 5562,
      "positions": "C0O0C46O194C49O194C53O194C55O228C58O228C62O228C64O290C66O305C70O328C77O339C81O355C88O371C92O388C99O406C103O425C110O439C115O5561",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\media-typer\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 626,
    "tm": 315666,
    "source": {
      "script": 572,
      "start": 0,
      "end": 6375,
      "positions": "C0O0C4O6375",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\media-typer\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 627,
    "tm": 315864,
    "source": {
      "script": 572,
      "start": 0,
      "end": 6375,
      "positions": "C0O0C33O1112C37O1112C39O1283C43O1283C45O1335C49O1335C51O1530C55O1530C57O1643C61O1643C63O2358C67O2358C69O2421C73O2421C75O2479C79O2479C81O2598C83O2613C87O2622C89O2636C94O6374",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " :1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 628,
    "tm": 316266,
    "source": {
      "script": 573,
      "start": 0,
      "end": 159,
      "positions": "C0O0C5O159",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " :1:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 629,
    "tm": 316293,
    "source": {
      "script": 573,
      "start": 19,
      "end": 158,
      "positions": "C0O19C25O67C29O156",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " :1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 630,
    "tm": 316348,
    "source": {
      "script": 574,
      "start": 0,
      "end": 159,
      "positions": "C0O0C5O159",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " :1:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 631,
    "tm": 316370,
    "source": {
      "script": 574,
      "start": 19,
      "end": 158,
      "positions": "C0O19C25O67C29O156",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "defineGetter D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\request.js:519:22",
    "type": "JS",
    "kind": "Unopt",
    "func": 632,
    "tm": 316424,
    "source": {
      "script": 562,
      "start": 12376,
      "end": 12504,
      "positions": "C0O12400C4O12407C9O12427C16O12490C26O12407C32O12503",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\response.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 633,
    "tm": 317098,
    "source": {
      "script": 575,
      "start": 0,
      "end": 28014,
      "positions": "C0O0C4O28014",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\response.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 634,
    "tm": 318312,
    "source": {
      "script": 575,
      "start": 0,
      "end": 28014,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\cookie-signature\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 635,
    "tm": 319207,
    "source": {
      "script": 576,
      "start": 0,
      "end": 1230,
      "positions": "C0O0C4O1230",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\cookie-signature\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 636,
    "tm": 319264,
    "source": {
      "script": 576,
      "start": 0,
      "end": 1230,
      "positions": "C0O0C15O46C18O46C22O46C24O202C31O215C35O764C42O779C47O1229",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\cookie\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 637,
    "tm": 319783,
    "source": {
      "script": 577,
      "start": 0,
      "end": 5224,
      "positions": "C0O0C4O5224",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\cookie\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 638,
    "tm": 319951,
    "source": {
      "script": 577,
      "start": 0,
      "end": 5224,
      "positions": "C0O0C39O178C41O192C45O201C47O219C51O292C55O299C60O309C64O292C66O535C70O535C73O5223",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\vary\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 639,
    "tm": 320375,
    "source": {
      "script": 578,
      "start": 0,
      "end": 2930,
      "positions": "C0O0C4O2930",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\vary\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 640,
    "tm": 320483,
    "source": {
      "script": 578,
      "start": 0,
      "end": 2930,
      "positions": "C0O0C22O128C24O143C28O157C35O172C39O525C43O525C46O2929",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " :1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 641,
    "tm": 320618,
    "source": {
      "script": 579,
      "start": 0,
      "end": 175,
      "positions": "C0O0C5O175",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " :1:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 642,
    "tm": 320643,
    "source": {
      "script": 579,
      "start": 19,
      "end": 174,
      "positions": "C0O19C25O67C29O172",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get D:\\doc\\node.js\\mfg\\node_modules\\body-parser\\index.js:121:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 643,
    "tm": 320695,
    "source": {
      "script": 483,
      "start": 2009,
      "end": 2045,
      "positions": "C0O2018C8O2025C12O2041",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "loadParser D:\\doc\\node.js\\mfg\\node_modules\\body-parser\\index.js:131:21",
    "type": "JS",
    "kind": "Unopt",
    "func": 644,
    "tm": 320751,
    "source": {
      "script": 483,
      "start": 2115,
      "end": 2680,
      "positions": "C0O2145C5O2152C9O2168C11O2200C13O2213C14O2273C47O2318C53O2327C58O2361C60O2389C66O2398C71O2431C73O2460C79O2469C84O2503C86O2538C92O2547C97O2587C99O2641C104O2669C110O2678",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "normalize node:path:304:12",
    "type": "JS",
    "kind": "Baseline",
    "func": 273,
    "tm": 320885,
    "source": {
      "script": 73,
      "start": 9867,
      "end": 13021,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "forEachMimeType D:\\doc\\node.js\\mfg\\node_modules\\mime-types\\index.js:158:52",
    "type": "JS",
    "kind": "Baseline",
    "func": 622,
    "tm": 320908,
    "source": {
      "script": 569,
      "start": 2937,
      "end": 3659,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "maybeOverridePrepareStackTrace node:internal/errors:134:40",
    "type": "JS",
    "kind": "Baseline",
    "func": 290,
    "tm": 320932,
    "source": {
      "script": 17,
      "start": 3797,
      "end": 4520,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "defineGetter D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\request.js:519:22",
    "type": "JS",
    "kind": "Baseline",
    "func": 632,
    "tm": 320947,
    "source": {
      "script": 562,
      "start": 12376,
      "end": 12504,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\body-parser\\lib\\types\\json.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 645,
    "tm": 321342,
    "source": {
      "script": 580,
      "start": 0,
      "end": 5012,
      "positions": "C0O0C4O5012",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\body-parser\\lib\\types\\json.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 646,
    "tm": 321541,
    "source": {
      "script": 580,
      "start": 0,
      "end": 5012,
      "positions": "C0O0C40O198C43O198C47O198C49O233C52O233C56O233C58O275C61O275C65O275C67O310C70O310C78O326C82O310C84O358C87O358C91O358C93O390C96O390C100O390C102O438C104O453C108O815C112O815C115O5011",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\bytes\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 647,
    "tm": 322020,
    "source": {
      "script": 581,
      "start": 0,
      "end": 3613,
      "positions": "C0O0C4O3613",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\bytes\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 648,
    "tm": 322138,
    "source": {
      "script": 581,
      "start": 0,
      "end": 3613,
      "positions": "C0O0C22O161C24O176C28O192C35O207C39O224C46O238C50O318C54O318C56O371C60O371C62O407C67O469C71O474C84O474C94O494C98O499C111O499C123O407C125O535C129O535C132O3612",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\body-parser\\lib\\read.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 649,
    "tm": 322794,
    "source": {
      "script": 582,
      "start": 0,
      "end": 4325,
      "positions": "C0O0C4O4325",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\body-parser\\lib\\read.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 650,
    "tm": 322935,
    "source": {
      "script": 582,
      "start": 0,
      "end": 4325,
      "positions": "C0O0C22O170C25O170C29O170C31O207C34O207C38O207C40O240C43O240C47O240C49O272C52O272C56O272C58O311C61O311C65O311C67O347C70O347C74O347C76O376C79O376C83O376C85O421C87O436C92O4324",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\raw-body\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 651,
    "tm": 323609,
    "source": {
      "script": 583,
      "start": 0,
      "end": 6902,
      "positions": "C0O0C4O6902",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\raw-body\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 652,
    "tm": 323821,
    "source": {
      "script": 583,
      "start": 0,
      "end": 6902,
      "positions": "C0O0C43O205C46O205C48O240C54O240C58O240C60O275C66O275C70O275C72O310C78O310C82O310C84O345C90O345C94O345C96O403C98O418C102O510C106O510C109O6901",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "tryRequireAsyncHooks D:\\doc\\node.js\\mfg\\node_modules\\raw-body\\index.js:300:31",
    "type": "JS",
    "kind": "Unopt",
    "func": 653,
    "tm": 323875,
    "source": {
      "script": 583,
      "start": 6363,
      "end": 6445,
      "positions": "C3O6380C9O6387C13O6409C25O6430C26O6439",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\iconv-lite\\lib\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 654,
    "tm": 324516,
    "source": {
      "script": 584,
      "start": 0,
      "end": 5120,
      "positions": "C0O0C4O5120",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\iconv-lite\\lib\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 655,
    "tm": 324697,
    "source": {
      "script": 584,
      "start": 0,
      "end": 5120,
      "positions": "C0O0C9O173C15O173C20O196C24O173C26O224C32O224C36O224C38O270C42O263C44O422C48O438C52O487C57O512C61O519C66O547C70O570C77O583C81O879C88O892C92O1478C99O1499C103O1680C109O1705C113O1697C117O1713C123O1740C127O1732C131O1834C135O1856C139O1862C146O1877C150O3591C157O3619C161O3806C168O3823C172O4103C179O4120C183O4537C188O4552C191O4571C195O4579C201O4591C205O4599C210O4608C215O4614C217O4704C225O4704C231O4714C236O4719C240O4715C246O4732C247O4746C252O4750C259O4767C265O4771C270O4788C276O4788C284O4808C288O4867C294O4867C302O4891C306O4903C311O4911C316O4930C320O4938C328O4938C334O5119",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\safer-buffer\\safer.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 656,
    "tm": 325206,
    "source": {
      "script": 585,
      "start": 0,
      "end": 2110,
      "positions": "C0O0C4O2110",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\safer-buffer\\safer.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 657,
    "tm": 325285,
    "source": {
      "script": 585,
      "start": 0,
      "end": 2110,
      "positions": "C0O0C5O72C8O72C13O110C17O103C19O130C21O155C34O148C47O179C52O179C59O200C61O211C63O219C70O243C75O257C77O268C79O287C82O279C89O143C92O308C94O321C101O338C114O331C127O350C130O362C135O362C142O383C144O394C146O402C153O427C158O450C160O461C165O480C168O472C175O326C178O495C186O521C190O512C194O543C200O557C205O566C209O577C213O562C218O587C222O598C226O1083C232O1094C236O1106C240O1655C249O1712C253O1720C261O1720C267O1737C271O1710C290O1913C296O1928C301O1970C311O1944C315O1997C321O2027C326O2063C330O2055C334O2087C336O2102C341O2109",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\iconv-lite\\lib\\bom-handling.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 658,
    "tm": 325648,
    "source": {
      "script": 586,
      "start": 0,
      "end": 1109,
      "positions": "C0O0C4O1109",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\iconv-lite\\lib\\bom-handling.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 659,
    "tm": 325700,
    "source": {
      "script": 586,
      "start": 0,
      "end": 1109,
      "positions": "C0O0C15O29C17O29C19O40C21O59C25O199C34O215C38O378C47O392C51O524C53O541C57O709C66O725C70O1046C79O1060C84O1108",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\iconv-lite\\lib\\streams.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 660,
    "tm": 326051,
    "source": {
      "script": 587,
      "start": 0,
      "end": 3387,
      "positions": "C0O0C4O3387",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\iconv-lite\\lib\\streams.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 661,
    "tm": 326161,
    "source": {
      "script": 587,
      "start": 0,
      "end": 3387,
      "positions": "C0O0C17O28C20O28C25O45C29O28C31O70C34O70C39O87C43O70C45O182C49O197C53O1138C56O1173C60O1180C68O1197C78O1227C85O1236C95O1180C101O1171C105O1266C108O1289C117O1310C121O1628C124O1651C133O1668C137O1843C140O1866C149O1884C153O2396C156O2431C160O2438C168O2455C178O2485C185O2494C195O2438C201O2429C205O2524C208O2547C217O2568C221O2900C224O2923C233O2940C237O3146C240O3169C249O3187C254O3386",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "module.exports D:\\doc\\node.js\\mfg\\node_modules\\iconv-lite\\lib\\streams.js:8:26",
    "type": "JS",
    "kind": "Unopt",
    "func": 662,
    "tm": 326283,
    "source": {
      "script": 587,
      "start": 207,
      "end": 824,
      "positions": "C0O207C9O256C16O275C20O420C27O439C31O584C35O606C39O646C46O675C50O705C57O734C61O764C69O804C74O814C78O779C83O823",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\iconv-lite\\lib\\extend-node.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 663,
    "tm": 326806,
    "source": {
      "script": 588,
      "start": 0,
      "end": 8701,
      "positions": "C0O0C4O8701",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\iconv-lite\\lib\\extend-node.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 664,
    "tm": 327056,
    "source": {
      "script": 588,
      "start": 0,
      "end": 8701,
      "positions": "C0O0C9O27C15O27C20O44C24O27C26O212C30O227C35O8700",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "module.exports D:\\doc\\node.js\\mfg\\node_modules\\iconv-lite\\lib\\extend-node.js:7:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 665,
    "tm": 327125,
    "source": {
      "script": 588,
      "start": 238,
      "end": 8700,
      "positions": "C0O238C9O267C10O267C12O511C20O559C35O567C41O592C44O581C48O548C52O610C59O636C63O7682C70O7712C75O8699",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\body-parser\\lib\\types\\raw.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 666,
    "tm": 328311,
    "source": {
      "script": 589,
      "start": 0,
      "end": 1884,
      "positions": "C0O0C4O1884",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\body-parser\\lib\\types\\raw.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 667,
    "tm": 328410,
    "source": {
      "script": 589,
      "start": 0,
      "end": 1884,
      "positions": "C0O0C16O152C19O152C23O152C25O181C28O181C36O197C40O181C42O228C45O228C49O228C51O260C54O260C58O260C60O308C62O323C67O1883",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\serve-static\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 668,
    "tm": 328939,
    "source": {
      "script": 590,
      "start": 0,
      "end": 4570,
      "positions": "C0O0C4O4570",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\serve-static\\index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 669,
    "tm": 329156,
    "source": {
      "script": 590,
      "start": 0,
      "end": 4570,
      "positions": "C0O0C34O238C37O238C41O238C43O276C46O276C50O276C52O314C55O314C59O314C61O348C64O348C69O363C73O348C75O383C78O383C82O383C84O409C87O409C91O409C93O464C95O479C99O500C107O520C111O513C116O4569",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\body-parser\\lib\\types\\text.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 670,
    "tm": 329655,
    "source": {
      "script": 591,
      "start": 0,
      "end": 2285,
      "positions": "C0O0C4O2285",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\body-parser\\lib\\types\\text.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 671,
    "tm": 329756,
    "source": {
      "script": 591,
      "start": 0,
      "end": 2285,
      "positions": "C0O0C22O152C25O152C29O152C31O187C34O187C38O187C40O223C43O223C51O239C55O223C57O271C60O271C64O271C66O303C69O303C73O303C75O351C77O366C82O2284",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\body-parser\\lib\\types\\urlencoded.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 672,
    "tm": 330157,
    "source": {
      "script": 592,
      "start": 0,
      "end": 5797,
      "positions": "C0O0C4O5797",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\body-parser\\lib\\types\\urlencoded.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 673,
    "tm": 330378,
    "source": {
      "script": 592,
      "start": 0,
      "end": 5797,
      "positions": "C0O0C50O198C56O198C60O198C62O233C68O233C72O233C74O275C80O275C84O275C86O310C92O310C100O326C104O310C106O369C112O369C120O384C124O369C126O411C132O411C136O411C138O443C144O443C148O443C150O491C152O506C156O571C160O578C167O578C172O571C175O5796",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\express.js:109:37",
    "type": "JS",
    "kind": "Unopt",
    "func": 674,
    "tm": 330631,
    "source": {
      "script": 482,
      "start": 2105,
      "end": 2406,
      "positions": "C0O2105C9O2116C13O2123C26O2147C31O2164C39O2123C45O2405",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getExportsForCircularRequire node:internal/modules/cjs/loader:862:38",
    "type": "JS",
    "kind": "Unopt",
    "func": 675,
    "tm": 330799,
    "source": {
      "script": 452,
      "start": 27042,
      "end": 27664,
      "positions": "C0O27067C8O27086C11O27101C16O27086C24O27120C27O27148C32O27120C39O27161C41O27157C46O27457C51O27465C57O27545C62O27581C69O27590C72O27545C77O27653C81O27661",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "createApplication D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\express.js:37:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 676,
    "tm": 330858,
    "source": {
      "script": 482,
      "start": 722,
      "end": 1263,
      "positions": "C0O722C5O739C9O739C11O806C24O830C31O806C36O851C51O851C56O936C59O950C63O957C73O964C78O980C85O1043C95O957C101O948C105O1114C108O1129C112O1136C122O1143C127O1159C134O1222C144O1136C150O1127C154O1236C157O1240C162O1240C166O1250C168O1261",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "merge D:\\doc\\node.js\\mfg\\node_modules\\merge-descriptors\\index.js:34:15",
    "type": "JS",
    "kind": "Unopt",
    "func": 677,
    "tm": 330919,
    "source": {
      "script": 486,
      "start": 626,
      "end": 1214,
      "positions": "C0O626C17O652C21O669C30O675C35O669C36O725C40O741C49O747C54O741C55O796C59O853C60O862C62O876C66O883C74O883C80O907C90O908C95O1201C97O1212",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "forEachOwnPropertyName D:\\doc\\node.js\\mfg\\node_modules\\merge-descriptors\\index.js:48:74",
    "type": "JS",
    "kind": "Unopt",
    "func": 678,
    "tm": 330963,
    "source": {
      "script": 486,
      "start": 947,
      "end": 1196,
      "positions": "C0O960C9O992C17O992C25O1042C26O1048C27O1100C31O1107C39O1107C46O1147C50O1154C64O1154C70O1195",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "init D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\application.js:64:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 679,
    "tm": 331107,
    "source": {
      "script": 487,
      "start": 1438,
      "end": 1538,
      "positions": "C0O1445C1O1456C5O1464C6O1477C10O1485C11O1499C15O1513C20O1513C25O1537",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "defaultConfiguration D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\application.js:77:57",
    "type": "JS",
    "kind": "Unopt",
    "func": 680,
    "tm": 331182,
    "source": {
      "script": 487,
      "start": 1659,
      "end": 3237,
      "positions": "C0O1676C4O1684C9O1688C18O1745C26O1745C31O1776C42O1776C48O1804C56O1804C62O1828C73O1828C79O1868C90O1868C96O1903C106O1903C112O1970C116O1977C121O1997C129O2007C134O1977C139O2083C145O2083C150O2125C163O2125C169O2674C173O2681C180O2681C185O2672C189O2732C191O2747C195O2782C200O2805C204O2798C208O2850C219O2850C225O2876C239O2889C244O2876C250O2915C261O2915C267O2958C269O2966C274O2995C282O2995C287O3024C291O3031C304O3073C315O3031C321O3236",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "enable D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\application.js:469:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 681,
    "tm": 331238,
    "source": {
      "script": 487,
      "start": 10523,
      "end": 10570,
      "positions": "C0O10549C7O10549C13O10568",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "set D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\application.js:359:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 682,
    "tm": 331292,
    "source": {
      "script": 487,
      "start": 8451,
      "end": 9387,
      "positions": "C0O8451C2O8484C9O8491C14O8548C19O8578C23O8594C27O8601C31O8590C36O8620C39O8639C44O8639C52O8674C54O8689C57O8698C58O8714C62O8732C67O8732C73O8562C76O8768C77O8784C78O8792C90O8792C95O8854C102O8872C106O8912C132O8959C143O8974C148O8959C154O8999C156O9042C167O9065C172O9042C178O9097C180O9139C191O9161C196O9139C202O9229C206O9236C211O9256C219O9266C224O9236C229O9359C231O9373C233O9385",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "debug D:\\doc\\node.js\\mfg\\node_modules\\debug\\src\\debug.js:65:17",
    "type": "JS",
    "kind": "Unopt",
    "func": 683,
    "tm": 331383,
    "source": {
      "script": 493,
      "start": 1251,
      "end": 2646,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "exports.compileETag D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\utils.js:152:31",
    "type": "JS",
    "kind": "Unopt",
    "func": 684,
    "tm": 331469,
    "source": {
      "script": 540,
      "start": 3279,
      "end": 3630,
      "positions": "C0O3300C6O3337C8O3348C9O3356C40O3409C43O3422C48O3435C50O3464C52O3496C55O3509C60O3521C62O3547C71O3603C77O3553C82O3547C83O3618C85O3628",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "compileQueryParser D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\utils.js:184:57",
    "type": "JS",
    "kind": "Unopt",
    "func": 685,
    "tm": 331515,
    "source": {
      "script": 540,
      "start": 3816,
      "end": 4217,
      "positions": "C0O3837C6O3874C8O3885C9O3893C40O3948C43O3965C48O3978C50O4007C53O4029C55O4063C58O4100C60O4126C69O4190C75O4132C80O4126C81O4205C83O4215",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "exports.compileTrust D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\utils.js:217:32",
    "type": "JS",
    "kind": "Unopt",
    "func": 686,
    "tm": 331563,
    "source": {
      "script": 540,
      "start": 4398,
      "end": 4852,
      "positions": "C0O4398C9O4408C15O4439C17O4450C18O4454C22O4462C27O4510C31O4543C32O4551C38O4620C42O4660C43O4668C49O4741C52O4751C60O4751C66O4768C76O4769C81O4745C83O4814C88O4831C95O4839C100O4831C105O4850",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "compile D:\\doc\\node.js\\mfg\\node_modules\\proxy-addr\\index.js:84:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 687,
    "tm": 331628,
    "source": {
      "script": 557,
      "start": 1340,
      "end": 1948,
      "positions": "C0O1350C4O1366C13O1372C18O1366C19O1430C25O1465C34O1474C45O1488C49O1498C54O1498C61O1530C66O1530C73O1553C82O1559C87O1553C88O1623C90O1636C94O1628C99O1655C101O1666C106O1675C110O1687C115O1697C120O1712C128O1712C136O1742C138O1797C143O1812C148O1828C153O1835C158O1841C167O1849C171O1855C179O1855C185O1835C191O1881C195O1888C205O1645C210O1610C213O1899C219O1919C224O1906C228O1946",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "compileRangeSubnets D:\\doc\\node.js\\mfg\\node_modules\\proxy-addr\\index.js:122:30",
    "type": "JS",
    "kind": "Unopt",
    "func": 688,
    "tm": 331684,
    "source": {
      "script": 557,
      "start": 2071,
      "end": 2238,
      "positions": "C0O2100C4O2114C11O2100C17O2138C19O2149C23O2143C28O2168C33O2205C37O2186C41O2184C45O2158C50O2125C53O2217C55O2236",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "compileTrust D:\\doc\\node.js\\mfg\\node_modules\\proxy-addr\\index.js:139:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 689,
    "tm": 331718,
    "source": {
      "script": 557,
      "start": 2368,
      "end": 2586,
      "positions": "C0O2457C5O2466C6O2477C17O2509C26O2547C30O2523C39O2560C43O2584",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "app.<computed> D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\application.js:490:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 690,
    "tm": 331841,
    "source": {
      "script": 487,
      "start": 10877,
      "end": 11145,
      "positions": "C0O10877C2O10889C7O10900C12O10923C19O10930C24O10983C29O10983C34O10993C35O11010C40O11010C44O11046C49O11054C54O11054C60O11071C62O11076C66O11085C76O11104C84O11104C91O11085C97O11129C99O11141",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "lazyrouter D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\application.js:144:37",
    "type": "JS",
    "kind": "Unopt",
    "func": 691,
    "tm": 331892,
    "source": {
      "script": 487,
      "start": 3496,
      "end": 3779,
      "positions": "C0O3513C6O3528C9O3547C14O3582C22O3582C31O3636C39O3636C50O3543C55O3541C59O3680C64O3688C72O3703C80O3703C86O3692C91O3688C96O3738C101O3746C109O3761C114O3761C120O3746C126O3778",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "enabled D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\application.js:438:31",
    "type": "JS",
    "kind": "Unopt",
    "func": 692,
    "tm": 331929,
    "source": {
      "script": 487,
      "start": 10041,
      "end": 10091,
      "positions": "C0O10055C4O10075C9O10075C15O10062C19O10089",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "module.exports D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\router\\index.js:43:38",
    "type": "JS",
    "kind": "Unopt",
    "func": 693,
    "tm": 331972,
    "source": {
      "script": 502,
      "start": 931,
      "end": 1317,
      "positions": "C0O931C11O956C17O1084C30O1084C35O1117C39O1131C43O1139C48O1154C52O1162C55O1190C59O1183C63O1207C66O1233C70O1226C74O1248C77O1269C81O1262C85O1279C90O1292C94O1301C96O1315",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "query D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\middleware\\query.js:25:32",
    "type": "JS",
    "kind": "Unopt",
    "func": 694,
    "tm": 332038,
    "source": {
      "script": 521,
      "start": 414,
      "end": 883,
      "positions": "C0O414C5O439C12O439C17O439C19O477C24O480C28O477C30O490C36O531C38O542C40O557C41O562C43O582C50O613C56O683C60O704C64O719C68O881",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "module.exports D:\\doc\\node.js\\mfg\\node_modules\\utils-merge\\index.js:16:36",
    "type": "JS",
    "kind": "Unopt",
    "func": 695,
    "tm": 332084,
    "source": {
      "script": 518,
      "start": 284,
      "end": 379,
      "positions": "C0O294C6O303C8O328C21O321C34O321C35O339C37O349C40O346C47O312C50O368C52O377",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "use D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\router\\index.js:439:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 696,
    "tm": 332152,
    "source": {
      "script": 502,
      "start": 10445,
      "end": 11460,
      "positions": "C0O10445C2O10467C4O10483C7O10551C13O10597C18O10632C22O10619C27O10619C34O10639C40O10646C45O10661C46O10670C50O10606C53O10715C59O10754C62O10772C67O10812C73O10826C78O10826C85O10812C90O10869C96O10876C101O10889C110O10895C115O10889C116O10976C118O10993C122O10981C127O11021C129O11030C134O11040C138O11078C148O11157C152O11155C158O11084C163O11078C164O11207C170O11235C182O11207C187O11275C190O11285C195O11315C211O11275C217O11385C218O11397C222O11420C227O11426C232O11426C237O11002C242O10963C245O11446C247O11458",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "arrayFlatten D:\\doc\\node.js\\mfg\\node_modules\\array-flatten\\array-flatten.js:58:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 697,
    "tm": 332213,
    "source": {
      "script": 504,
      "start": 1067,
      "end": 1194,
      "positions": "C0O1086C5O1111C8O1133C11O1118C16O1143C17O1151C20O1175C29O1158C34O1192",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "flattenForever D:\\doc\\node.js\\mfg\\node_modules\\array-flatten\\array-flatten.js:37:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 698,
    "tm": 332246,
    "source": {
      "script": 504,
      "start": 683,
      "end": 904,
      "positions": "C0O716C2O729C6O721C11O760C13O765C17O774C21O784C26O784C33O808C36O808C43O864C48O864C53O738C58O703C61O889C63O902",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Layer D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\router\\layer.js:33:15",
    "type": "JS",
    "kind": "Unopt",
    "func": 699,
    "tm": 332304,
    "source": {
      "script": 505,
      "start": 500,
      "end": 951,
      "positions": "C0O524C2O535C7O560C21O567C26O596C27O604C33O604C38O639C44O657C46O669C50O692C61O687C65O717C66O729C70O744C71O754C75O769C78O794C81O810C94O783C99O781C103O856C110O880C113O873C117O895C124O920C129O936C135O940C138O913C143O950",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pathtoRegexp D:\\doc\\node.js\\mfg\\node_modules\\path-to-regexp\\index.js:28:22",
    "type": "JS",
    "kind": "Unopt",
    "func": 700,
    "tm": 332429,
    "source": {
      "script": 506,
      "start": 541,
      "end": 3326,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "([\\/\\.])",
    "timestamp": 332555,
    "type": "CODE",
    "kind": "RegExp"
  },
  {
    "name": "(\\\\\\/)?(\\\\\\.)?:(\\w+)(\\(.*?\\))?(\\*)?(\\?)?",
    "timestamp": 332619,
    "type": "CODE",
    "kind": "RegExp"
  },
  {
    "name": "exports.init D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\middleware\\init.js:28:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 701,
    "tm": 332684,
    "source": {
      "script": 520,
      "start": 510,
      "end": 850,
      "positions": "C0O510C9O519C13O848",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "\\((?!\\?)",
    "timestamp": 332746,
    "type": "CODE",
    "kind": "RegExp"
  },
  {
    "name": "route D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\router\\index.js:502:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 702,
    "tm": 332784,
    "source": {
      "script": 502,
      "start": 11770,
      "end": 12019,
      "positions": "C0O11793C5O11793C11O11825C14O11835C19O11863C27O11895C35O11928C40O11937C45O11937C56O11825C62O11954C64O11966C68O11983C73O11989C78O11989C83O12004C85O12017",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Route D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\router\\route.js:43:15",
    "type": "JS",
    "kind": "Unopt",
    "func": 703,
    "tm": 332820,
    "source": {
      "script": 503,
      "start": 677,
      "end": 818,
      "positions": "C0O688C2O698C6O708C8O719C12O728C18O728C23O798C24O811C29O817",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Route.<computed> D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\router\\route.js:202:37",
    "type": "JS",
    "kind": "Unopt",
    "func": 704,
    "tm": 332896,
    "source": {
      "script": 503,
      "start": 3723,
      "end": 4275,
      "positions": "C0O3723C2O3745C12O3759C17O3759C23O3745C28O3795C30O3810C34O3800C39O3844C41O3851C45O3863C49O3918C54O3927C59O3927C65O3959C70O3968C76O3977C82O4024C86O4039C92O4045C97O4039C98O4076C109O4104C114O4076C119O4129C132O4129C138O4159C140O4172C144O4194C153O4210C157O4229C162O4235C167O4235C172O3819C177O3782C180O4259C182O4271",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "listen D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\application.js:633:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 705,
    "tm": 332963,
    "source": {
      "script": 487,
      "start": 14101,
      "end": 14196,
      "positions": "C0O14101C2O14121C5O14126C10O14126C16O14162C21O14169C26O14169C32O14194",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "createServer node:http:60:22",
    "type": "JS",
    "kind": "Unopt",
    "func": 706,
    "tm": 332998,
    "source": {
      "script": 508,
      "start": 2130,
      "end": 2203,
      "positions": "C0O2159C13O2166C18O2200",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Server node:_http_server:495:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 707,
    "tm": 333096,
    "source": {
      "script": 517,
      "start": 17437,
      "end": 18631,
      "positions": "C0O17469C2O17480C7O17500C18O17507C23O17544C24O17550C30O17592C33O17624C38O17648C49O17707C57O17750C73O17756C78O17750C79O17822C82O17839C87O17839C93O17863C98O17867C103O17874C113O17936C121O17971C129O18020C137O17874C143O18051C147O18084C155O18084C161O18350C162O18373C166O18392C177O18392C183O18435C184O18448C188O18456C189O18477C193O18488C194O18514C198O18522C201O18522C205O18557C207O18562C212O18580C215O18613C220O18580C224O18578C229O18630",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Server node:net:1585:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 708,
    "tm": 333181,
    "source": {
      "script": 463,
      "start": 44955,
      "end": 46253,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "storeHTTPOptions node:_http_server:425:26",
    "type": "JS",
    "kind": "Unopt",
    "func": 709,
    "tm": 333294,
    "source": {
      "script": 517,
      "start": 14659,
      "end": 16956,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setupConnectionsTracking node:_http_server:485:34",
    "type": "JS",
    "kind": "Unopt",
    "func": 710,
    "tm": 333422,
    "source": {
      "script": 517,
      "start": 16993,
      "end": 17418,
      "positions": "C0O17039C2O17046C7O17066C10O17062C15O17060C19O17284C21O17291C26O17328C32O17357C37O17357C43O17378C48O17328C54O17406C59O17407C63O17321C68O17417",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setInterval node:timers:210:21",
    "type": "JS",
    "kind": "Unopt",
    "func": 711,
    "tm": 333500,
    "source": {
      "script": 53,
      "start": 6026,
      "end": 6693,
      "positions": "C0O6026C2O6068C10O6068C15O6117C17O6120C19O6147C54O6209C56O6236C65O6244C74O6258C76O6285C85O6293C94O6299C103O6313C105O6341C114O6349C123O6355C132O6361C139O6380C142O6401C146O6389C151O6502C153O6509C159O6525C162O6514C166O6410C171O6375C174O6546C176O6579C196O6579C202O6631C207O6655C212O6631C217O6675C219O6690",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Timeout node:internal/timers:169:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 712,
    "tm": 333959,
    "source": {
      "script": 18,
      "start": 6171,
      "end": 7236,
      "positions": "C0O6221C7O6267C9O6279C16O6296C18O6293C23O6319C25O6331C27O6329C32O6355C35O6363C42O6378C52O6404C58O6463C65O6363C71O6602C75O6678C77O6696C81O6710C83O6725C87O6738C89O6753C93O6766C94O6782C98O6923C99O6939C103O6952C105O6968C109O6985C111O7001C115O7014C120O7029C127O7027C131O7059C132O7075C136O7091C140O7111C143O7111C146O7131C148O7136C153O7144C157O7160C159O7165C163O7180C167O7196C173O7196C179O7235",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "incRefCount node:internal/timers:309:21",
    "type": "JS",
    "kind": "Unopt",
    "func": 713,
    "tm": 334698,
    "source": {
      "script": 18,
      "start": 9789,
      "end": 9854,
      "positions": "C0O9797C16O9815C21O9818C26O9830C33O9830C38O9853",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initAsyncResource node:internal/timers:159:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 714,
    "tm": 334736,
    "source": {
      "script": 18,
      "start": 5792,
      "end": 6050,
      "positions": "C0O5830C2O5839C7O5858C10O5858C14O5856C21O5903C23O5912C28O5939C31O5939C35O5937C42O5970C47O5974C52O5997C69O5997C75O6049",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "newAsyncId node:internal/async_hooks:416:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 715,
    "tm": 334789,
    "source": {
      "script": 19,
      "start": 14888,
      "end": 14941,
      "positions": "C0O14896C7O14921C16O14936C22O14938",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getDefaultTriggerAsyncId node:internal/async_hooks:432:34",
    "type": "JS",
    "kind": "Unopt",
    "func": 716,
    "tm": 335482,
    "source": {
      "script": 19,
      "start": 15363,
      "end": 15626,
      "positions": "C0O15401C7O15417C9O15416C13O15512C14O15538C19O15548C26O15571C28O15570C31O15590C32O15594C34O15623",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initHooksExist node:internal/async_hooks:478:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 717,
    "tm": 335509,
    "source": {
      "script": 19,
      "start": 16630,
      "end": 16664,
      "positions": "C0O16638C5O16654C8O16645C12O16661",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "hasHooks node:internal/async_hooks:470:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 718,
    "tm": 335529,
    "source": {
      "script": 19,
      "start": 16490,
      "end": 16538,
      "positions": "C0O16501C7O16525C12O16531C15O16535",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "insert node:internal/timers:360:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 719,
    "tm": 335577,
    "source": {
      "script": 18,
      "start": 11085,
      "end": 11741,
      "positions": "C12O11107C15O11107C23O11201C28O11209C33O11230C35O11246C39O11352C46O11364C50O11376C52O11407C60O11407C65O11495C67O11501C71O11515C78O11548C89O11544C95O11535C99O11580C104O11595C109O11595C114O11616C121O11631C126O11650C131O11650C135O11679C137O11690C143O11717C148O11719C153O11719C160O11740",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/timers:124:65",
    "type": "JS",
    "kind": "Unopt",
    "func": 720,
    "tm": 335625,
    "source": {
      "script": 18,
      "start": 4569,
      "end": 4596,
      "positions": "C0O4582C2O4588C9O4595",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "TimersList node:internal/timers:245:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 721,
    "tm": 335651,
    "source": {
      "script": 18,
      "start": 8034,
      "end": 8336,
      "positions": "C0O8057C2O8072C6O8138C8O8153C12O8215C14O8227C18O8242C30O8263C38O8250C42O8272C44O8283C48O8297C49O8324C54O8335",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "insert node:internal/priority_queue:26:9",
    "type": "JS",
    "kind": "Unopt",
    "func": 722,
    "tm": 335703,
    "source": {
      "script": 25,
      "start": 723,
      "end": 909,
      "positions": "C0O751C2O756C6O780C9O786C15O787C22O799C24O809C28O834C35O841C40O857C47O869C51O887C56O887C62O908",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "percolateUp node:internal/priority_queue:65:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 723,
    "tm": 335849,
    "source": {
      "script": 25,
      "start": 1664,
      "end": 2159,
      "positions": "C0O1690C2O1695C6O1723C8O1728C12O1763C14O1768C18O1800C20O1804C24O1829C26O1829C31O1858C33O1867C36O1871C39O1862C43O1888C50O1910C55O1925C57O1939C59O1949C63O1966C67O2006C72O2039C74O2049C77O2053C82O1818C85O2070C87O2080C91O2093C95O2131C101O2158",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setPosition node:internal/timers:421:21",
    "type": "JS",
    "kind": "Unopt",
    "func": 724,
    "tm": 335886,
    "source": {
      "script": 18,
      "start": 12866,
      "end": 12919,
      "positions": "C0O12883C2O12910C7O12918",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "append node:internal/linkedlist:30:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 725,
    "tm": 335919,
    "source": {
      "script": 24,
      "start": 587,
      "end": 1037,
      "positions": "C0O614C6O632C12O650C15O650C19O853C23O846C27O867C29O882C33O981C40O1001C44O1012C46O1027C51O1036",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "remove node:internal/linkedlist:16:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 726,
    "tm": 335995,
    "source": {
      "script": 24,
      "start": 290,
      "end": 513,
      "positions": "C0O311C6O334C11O361C15O354C19O391C25O414C30O441C34O434C38O462C39O477C43O488C44O503C49O512",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "unref node:internal/timers:221:8",
    "type": "JS",
    "kind": "Unopt",
    "func": 727,
    "tm": 336029,
    "source": {
      "script": 18,
      "start": 7656,
      "end": 7797,
      "positions": "C0O7666C2O7675C4O7674C9O7693C11O7698C15O7706C19O7732C25O7753C28O7753C31O7780C33O7792",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "decRefCount node:internal/timers:314:21",
    "type": "JS",
    "kind": "Unopt",
    "func": 728,
    "tm": 336056,
    "source": {
      "script": 18,
      "start": 9878,
      "end": 9944,
      "positions": "C0O9886C13O9905C18O9907C23O9919C30O9919C35O9943",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "parseUniqueHeadersOption node:_http_outgoing:647:34",
    "type": "JS",
    "kind": "Unopt",
    "func": 729,
    "tm": 336139,
    "source": {
      "script": 514,
      "start": 20814,
      "end": 21063,
      "positions": "C0O20829C5O20834C11O20864C12O20876C13O20902C18O20902C24O20938C29O20962C31O20967C33O20967C38O20991C45O20995C50O21029C54O20995C59O20991C64O20973C69O20949C72O21046C74O21060",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Server.listen node:net:1821:35",
    "type": "JS",
    "kind": "Unopt",
    "func": 730,
    "tm": 336272,
    "source": {
      "script": 463,
      "start": 52043,
      "end": 55968,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "normalizeArgs node:net:257:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 731,
    "tm": 336402,
    "source": {
      "script": 463,
      "start": 7084,
      "end": 7821,
      "positions": "C0O7100C2O7119C8O7126C13O7140C18O7163C20O7167C24O7189C28O7202C30O7213C31O7237C32O7241C36O7263C38O7270C48O7353C55O7379C58O7383C64O7434C66O7447C72O7508C74O7521C78O7543C85O7550C92O7568C99O7595C101O7614C104O7608C108O7657C112O7664C115O7651C119O7673C123O7708C132O7715C143O7744C152O7751C161O7760C170O7770C172O7774C176O7796C180O7807C182O7818",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isPipeName node:net:197:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 732,
    "tm": 336452,
    "source": {
      "script": 463,
      "start": 5497,
      "end": 5563,
      "positions": "C0O5506C9O5538C15O5550C18O5560",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "once node:events:646:44",
    "type": "JS",
    "kind": "Unopt",
    "func": 733,
    "tm": 336486,
    "source": {
      "script": 29,
      "start": 19531,
      "end": 19649,
      "positions": "C0O19553C3O19553C7O19588C24O19597C30O19588C36O19634C38O19646",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "_onceWrap node:events:632:19",
    "type": "JS",
    "kind": "Unopt",
    "func": 734,
    "tm": 336517,
    "source": {
      "script": 29,
      "start": 19090,
      "end": 19319,
      "positions": "C0O19134C6O19158C12O19169C18O19177C24O19183C31O19214C34O19226C39O19226C45O19242C47O19259C51O19274C53O19287C57O19301C59O19316",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "toNumber node:net:1632:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 735,
    "tm": 336561,
    "source": {
      "script": 463,
      "start": 46386,
      "end": 46434,
      "positions": "C0O46392C5O46404C12O46415C22O46432",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getFlags node:net:168:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 736,
    "tm": 336586,
    "source": {
      "script": 463,
      "start": 4845,
      "end": 4924,
      "positions": "C0O4861C1O4877C8O4888C11O4901C18O4921",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "addAbortSignalOption node:net:1568:30",
    "type": "JS",
    "kind": "Unopt",
    "func": 737,
    "tm": 336627,
    "source": {
      "script": 463,
      "start": 44510,
      "end": 44936,
      "positions": "C0O44510C15O44531C22O44542C31O44573C32O44580C33O44589C40O44617C48O44589C53O44655C59O44696C63O44696C65O44732C68O44743C74O44759C79O44767C87O44767C94O44805C97O44812C108O44812C114O44855C117O44860C130O44860C137O44935",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "listenInCluster node:net:1778:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 738,
    "tm": 336685,
    "source": {
      "script": 463,
      "start": 50727,
      "end": 52003,
      "positions": "C0O50727C38O50835C44O50865C52O50892C60O50902C69O50900C77O50927C84O50939C92O50952C94O51131C97O51138C120O51138C125O51201C126O51208C127O51239C134O51255C140O51275C146O51299C152O51321C158O51330C164O51342C174O51359C181O51433C188O51441C202O51441C208O52002",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:cluster:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 739,
    "tm": 336749,
    "source": {
      "script": 593,
      "start": 0,
      "end": 1316,
      "positions": "C0O0C4O1316",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:cluster:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 740,
    "tm": 336806,
    "source": {
      "script": 593,
      "start": 0,
      "end": 1316,
      "positions": "C0O1195C3O1223C7O1212C19O1251C24O1296C29O1268C33O1266C38O1315",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/cluster/primary:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 741,
    "tm": 337068,
    "source": {
      "script": 594,
      "start": 0,
      "end": 10486,
      "positions": "C0O0C4O10486",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/cluster/primary:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 742,
    "tm": 337467,
    "source": {
      "script": 594,
      "start": 0,
      "end": 10486,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:child_process:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 743,
    "tm": 338015,
    "source": {
      "script": 595,
      "start": 0,
      "end": 27964,
      "positions": "C0O0C4O27964",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:child_process:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 744,
    "tm": 339008,
    "source": {
      "script": 595,
      "start": 0,
      "end": 27964,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/child_process:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 745,
    "tm": 339663,
    "source": {
      "script": 596,
      "start": 0,
      "end": 32552,
      "positions": "C0O0C4O32552",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/child_process:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 746,
    "tm": 340831,
    "source": {
      "script": 596,
      "start": 0,
      "end": 32552,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "<instance_members_initializer> node:internal/child_process:522:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 747,
    "tm": 340944,
    "source": {
      "script": 596,
      "start": 14071,
      "end": 15109,
      "positions": "C3O14122C11O14139C19O14165C25O15109",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:dgram:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 748,
    "tm": 341534,
    "source": {
      "script": 597,
      "start": 0,
      "end": 29093,
      "positions": "C0O0C4O29093",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:dgram:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 749,
    "tm": 342873,
    "source": {
      "script": 597,
      "start": 0,
      "end": 29093,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/dgram:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 750,
    "tm": 343206,
    "source": {
      "script": 598,
      "start": 0,
      "end": 1941,
      "positions": "C0O0C4O1941",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/dgram:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 751,
    "tm": 343301,
    "source": {
      "script": 598,
      "start": 0,
      "end": 1941,
      "positions": "C0O0C56O28C62O54C67O101C73O101C78O91C83O146C86O146C91O138C97O204C100O204C105O184C111O276C117O276C122O241C128O253C134O331C137O331C142O317C148O366C154O421C157O421C162O450C163O450C165O1863C172O1885C178O1902C184O1926C190O1878C195O1940",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "deprecate node:internal/util:112:19",
    "type": "JS",
    "kind": "Baseline",
    "func": 752,
    "tm": 343469,
    "source": {
      "script": 21,
      "start": 2885,
      "end": 4102,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isatty node:tty:42:16",
    "type": "JS",
    "kind": "Baseline",
    "func": 356,
    "tm": 343489,
    "source": {
      "script": 491,
      "start": 1590,
      "end": 1684,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "createDebug D:\\doc\\node.js\\mfg\\node_modules\\debug\\src\\debug.js:63:21",
    "type": "JS",
    "kind": "Baseline",
    "func": 353,
    "tm": 343505,
    "source": {
      "script": 493,
      "start": 1220,
      "end": 2957,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isignored D:\\doc\\node.js\\mfg\\node_modules\\depd\\index.js:153:20",
    "type": "JS",
    "kind": "Baseline",
    "func": 293,
    "tm": 343520,
    "source": {
      "script": 484,
      "start": 2884,
      "end": 3095,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "istraced D:\\doc\\node.js\\mfg\\node_modules\\depd\\index.js:169:19",
    "type": "JS",
    "kind": "Baseline",
    "func": 295,
    "tm": 343533,
    "source": {
      "script": 484,
      "start": 3161,
      "end": 3380,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "depd D:\\doc\\node.js\\mfg\\node_modules\\depd\\index.js:103:15",
    "type": "JS",
    "kind": "Baseline",
    "func": 287,
    "tm": 343570,
    "source": {
      "script": 484,
      "start": 1744,
      "end": 2308,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\express.js:109:37",
    "type": "JS",
    "kind": "Baseline",
    "func": 674,
    "tm": 343586,
    "source": {
      "script": 482,
      "start": 2105,
      "end": 2406,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "forEachOwnPropertyName D:\\doc\\node.js\\mfg\\node_modules\\merge-descriptors\\index.js:48:74",
    "type": "JS",
    "kind": "Baseline",
    "func": 678,
    "tm": 343602,
    "source": {
      "script": 486,
      "start": 947,
      "end": 1196,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "checkListener node:events:265:23",
    "type": "JS",
    "kind": "Baseline",
    "func": 753,
    "tm": 343615,
    "source": {
      "script": 29,
      "start": 7994,
      "end": 8052,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/socket_list:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 754,
    "tm": 343798,
    "source": {
      "script": 599,
      "start": 0,
      "end": 2813,
      "positions": "C0O0C4O2813",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/socket_list:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 755,
    "tm": 343941,
    "source": {
      "script": 599,
      "start": 0,
      "end": 2813,
      "positions": "C0O0C8O59C11O59C16O85C21O25C27O117C30O117C35O225C73O1583C101O2756C108O2775C114O2791C120O2771C125O2812",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "customPromiseExecFunction node:child_process:237:35",
    "type": "JS",
    "kind": "Unopt",
    "func": 756,
    "tm": 344112,
    "source": {
      "script": 595,
      "start": 7086,
      "end": 7466,
      "positions": "C0O7086C9O7101C13O7463",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/cluster/round_robin_handle:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 757,
    "tm": 344235,
    "source": {
      "script": 600,
      "start": 0,
      "end": 3608,
      "positions": "C0O0C4O3608",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/cluster/round_robin_handle:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 758,
    "tm": 344384,
    "source": {
      "script": 600,
      "start": 0,
      "end": 3608,
      "positions": "C0O0C49O28C55O45C61O57C67O74C73O119C76O119C80O119C82O160C85O160C89O160C91O200C94O200C99O185C105O284C108O284C113O244C119O252C125O258C131O267C137O273C143O339C146O339C151O325C157O371C159O386C163O1401C172O1415C176O2093C185O2110C189O2513C198O2534C202O2992C211O3010C216O3607",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/cluster/utils:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 759,
    "tm": 344487,
    "source": {
      "script": 601,
      "start": 0,
      "end": 1104,
      "positions": "C0O0C4O1104",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/cluster/utils:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 760,
    "tm": 344549,
    "source": {
      "script": 601,
      "start": 0,
      "end": 1104,
      "positions": "C0O0C24O28C30O45C35O75C42O97C48O112C54O90C58O146C60O146C65O146C67O172C68O172C71O1103",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/cluster/shared_handle:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 761,
    "tm": 344642,
    "source": {
      "script": 602,
      "start": 0,
      "end": 1147,
      "positions": "C0O0C4O1147",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/cluster/shared_handle:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 762,
    "tm": 344698,
    "source": {
      "script": 602,
      "start": 0,
      "end": 1147,
      "positions": "C0O0C22O23C28O64C31O64C35O64C37O107C40O107C44O107C46O147C49O147C53O147C55O166C57O181C61O711C70O725C74O893C83O910C88O1146",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/cluster/worker:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 763,
    "tm": 344787,
    "source": {
      "script": 603,
      "start": 0,
      "end": 1434,
      "positions": "C0O0C4O1434",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/cluster/worker:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 764,
    "tm": 344859,
    "source": {
      "script": 603,
      "start": 0,
      "end": 1434,
      "positions": "C0O0C20O28C25O53C31O109C34O109C38O109C40O156C43O156C48O139C54O185C56O200C60O913C63O941C71O965C76O913C81O978C87O978C92O1025C95O1032C104O1047C108O1117C111O1124C120O1139C124O1229C127O1236C136O1253C140O1351C143O1358C152O1380C157O1433",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setupListenHandle node:net:1693:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 765,
    "tm": 345013,
    "source": {
      "script": 463,
      "start": 48043,
      "end": 50437,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:net:42:63",
    "type": "JS",
    "kind": "Unopt",
    "func": 766,
    "tm": 345089,
    "source": {
      "script": 463,
      "start": 1579,
      "end": 1606,
      "positions": "C0O1592C2O1598C9O1605",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "createServerHandle node:net:1635:28",
    "type": "JS",
    "kind": "Unopt",
    "func": 767,
    "tm": 345167,
    "source": {
      "script": 463,
      "start": 46532,
      "end": 48013,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "defaultTriggerAsyncIdScope node:internal/async_hooks:455:36",
    "type": "JS",
    "kind": "Unopt",
    "func": 768,
    "tm": 345691,
    "source": {
      "script": 19,
      "start": 15998,
      "end": 16469,
      "positions": "C0O15998C11O16036C15O16088C22O16088C28O16106C29O16224C36O16240C38O16239C42O16268C49O16284C54O16308C61O16355C68O16355C86O16394C93O16410C98O16434C120O16468",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "nextTick node:internal/process/task_queues:103:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 769,
    "tm": 345784,
    "source": {
      "script": 39,
      "start": 2684,
      "end": 3571,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get node:internal/bootstrap/node:92:8",
    "type": "JS",
    "kind": "Unopt",
    "func": 770,
    "tm": 345994,
    "source": {
      "script": 16,
      "start": 3747,
      "end": 3808,
      "positions": "C0O3759C6O3791C12O3795C15O3801",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isEmpty node:internal/fixed_queue:95:10",
    "type": "JS",
    "kind": "Unopt",
    "func": 771,
    "tm": 346021,
    "source": {
      "script": 41,
      "start": 3731,
      "end": 3773,
      "positions": "C0O3753C5O3758C10O3758C14O3768",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isEmpty node:internal/fixed_queue:67:10",
    "type": "JS",
    "kind": "Unopt",
    "func": 772,
    "tm": 346176,
    "source": {
      "script": 41,
      "start": 3150,
      "end": 3197,
      "positions": "C0O3172C5O3185C9O3176C12O3192",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setHasTickScheduled node:internal/process/task_queues:51:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 773,
    "tm": 346197,
    "source": {
      "script": 39,
      "start": 1134,
      "end": 1194,
      "positions": "C0O1147C7O1156C12O1177C19O1175C24O1193",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "push node:internal/fixed_queue:99:7",
    "type": "JS",
    "kind": "Unopt",
    "func": 774,
    "tm": 346232,
    "source": {
      "script": 41,
      "start": 3783,
      "end": 4050,
      "positions": "C0O3806C5O3811C10O3811C16O3973C23O3989C26O3985C32O3983C38O3966C42O4029C47O4034C52O4034C58O4049",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isFull node:internal/fixed_queue:71:9",
    "type": "JS",
    "kind": "Unopt",
    "func": 775,
    "tm": 346258,
    "source": {
      "script": 41,
      "start": 3209,
      "end": 3272,
      "positions": "C0O3233C4O3237C10O3244C12O3242C16O3260C20O3251C23O3267",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "push node:internal/fixed_queue:75:7",
    "type": "JS",
    "kind": "Unopt",
    "func": 776,
    "tm": 346281,
    "source": {
      "script": 41,
      "start": 3282,
      "end": 3368,
      "positions": "C0O3301C5O3311C12O3316C16O3346C20O3350C26O3357C28O3355C31O3338C36O3367",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "processTicksAndRejections node:internal/process/task_queues:67:35",
    "type": "JS",
    "kind": "Unopt",
    "func": 777,
    "tm": 346359,
    "source": {
      "script": 39,
      "start": 1542,
      "end": 2519,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "shift node:internal/fixed_queue:108:8",
    "type": "JS",
    "kind": "Unopt",
    "func": 778,
    "tm": 346422,
    "source": {
      "script": 41,
      "start": 4061,
      "end": 4320,
      "positions": "C0O4089C5O4118C10O4118C15O4141C20O4141C26O4159C32O4260C36O4253C40O4273C41O4283C45O4303C47O4315",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "shift node:internal/fixed_queue:80:8",
    "type": "JS",
    "kind": "Unopt",
    "func": 779,
    "tm": 346455,
    "source": {
      "script": 41,
      "start": 3379,
      "end": 3596,
      "positions": "C0O3411C5O3421C9O3415C13O3435C15O3470C16O3482C17O3493C22O3503C28O3511C32O3549C36O3556C42O3563C44O3561C47O3541C51O3575C53O3591",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "emitBeforeScript node:internal/async_hooks:509:26",
    "type": "JS",
    "kind": "Unopt",
    "func": 780,
    "tm": 346490,
    "source": {
      "script": 19,
      "start": 17331,
      "end": 17487,
      "positions": "C0O17372C12O17372C17O17430C22O17443C25O17434C31O17458C36O17458C41O17486",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pushAsyncContext node:internal/async_hooks:539:26",
    "type": "JS",
    "kind": "Unopt",
    "func": 781,
    "tm": 346527,
    "source": {
      "script": 19,
      "start": 18005,
      "end": 18560,
      "positions": "C0O18061C7O18079C9O18078C13O18097C20O18131C24O18146C26O18157C32O18164C35O18175C40O18191C44O18161C49O18204C54O18211C59O18254C60O18258C65O18269C72O18292C78O18299C83O18315C85O18314C88O18297C92O18338C97O18349C104O18372C107O18376C113O18383C118O18399C120O18398C123O18381C127O18420C134O18438C142O18451C146O18458C153O18474C158O18493C162O18507C169O18523C174O18540C179O18559",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "emitListeningNT node:net:1771:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 782,
    "tm": 346577,
    "source": {
      "script": 463,
      "start": 50602,
      "end": 50697,
      "positions": "C0O50657C6O50676C14O50676C20O50696",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "onceWrapper node:events:622:21",
    "type": "JS",
    "kind": "Unopt",
    "func": 783,
    "tm": 346612,
    "source": {
      "script": 29,
      "start": 18816,
      "end": 19068,
      "positions": "C0O18816C2O18834C8O18853C13O18860C18O18880C23O18891C28O18860C34O18905C35O18916C39O18943C45O18950C50O18976C55O18985C60O18995C65O18985C70O19003C71O19021C76O19030C81O19041C86O19030C92O19060C94O19067",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "removeListener node:events:675:28",
    "type": "JS",
    "kind": "Unopt",
    "func": 784,
    "tm": 346686,
    "source": {
      "script": 29,
      "start": 20306,
      "end": 21625,
      "positions": "C0O20332C3O20332C7O20386C12O20402C14O20437C16O20449C17O20472C19O20478C23O20493C25O20526C27O20538C28O20548C30O20557C35O20578C42O20587C47O20612C54O20623C59O20636C64O20654C66O20669C71O20669C75O20667C81O20716C83O20730C85O20759C91O20793C99O20827C114O20793C121O20875C127O20933C130O20966C134O20973C138O20980C139O20980C144O21004C146O21012C152O21016C159O21036C163O21040C170O21049C175O21078C180O21105C182O20987C187O20948C190O21147C191O21160C196O21176C198O21188C199O21200C200O21213C205O21236C210O21236C216O21272C222O21314C228O21326C233O21350C240O21324C246O21373C251O21373C256O21431C263O21438C268O21456C269O21475C272O21469C276O21502C282O21548C299O21548C304O21606C306O21618",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\index.js:18:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 785,
    "tm": 346751,
    "source": {
      "script": 480,
      "start": 363,
      "end": 423,
      "positions": "C0O376C4O384C12O384C18O422",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "log node:internal/console/constructor:376:6",
    "type": "JS",
    "kind": "Unopt",
    "func": 786,
    "tm": 346780,
    "source": {
      "script": 110,
      "start": 11916,
      "end": 12002,
      "positions": "C0O11916C3O11933C5O11938C7O11937C13O11955C18O11972C20O11971C24O11989C30O11954C37O12001",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "value node:internal/console/constructor:337:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 787,
    "tm": 346809,
    "source": {
      "script": 110,
      "start": 10423,
      "end": 10599,
      "positions": "C0O10452C2O10457C4O10456C8O10482C13O10476C19O10499C24O10499C29O10541C36O10561C44O10548C49O10592",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get node:internal/console/constructor:209:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 788,
    "tm": 346835,
    "source": {
      "script": 110,
      "start": 6145,
      "end": 6240,
      "positions": "C0O6163C6O6176C9O6192C16O6183C22O6213C26O6227",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getStdout node:internal/bootstrap/switches/is_main_thread:146:19",
    "type": "JS",
    "kind": "Unopt",
    "func": 789,
    "tm": 346870,
    "source": {
      "script": 131,
      "start": 3854,
      "end": 4548,
      "positions": "C0O3862C6O3874C10O3888C11O3892C17O3901C24O3899C30O3934C37O3955C40O3962C44O3953C48O4039C53O4062C60O4053C66O4075C73O4091C77O4110C82O4121C88O4135C91O4143C102O4143C108O4194C116O4194C120O4531C124O4545",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "value node:internal/console/constructor:315:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 790,
    "tm": 346993,
    "source": {
      "script": 110,
      "start": 9819,
      "end": 10318,
      "positions": "C0O9849C2O9854C4O9853C8O9874C10O9884C15O9922C21O9958C29O10009C34O10009C41O10025C48O10072C53O10083C58O10083C64O10101C66O10137C72O10172C74O10187C78O10216C80O10231C81O10250C87O10265C93O10288C95O10311",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "formatWithOptions node:internal/util/inspect:2133:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 791,
    "tm": 347138,
    "source": {
      "script": 26,
      "start": 74206,
      "end": 74370,
      "positions": "C0O74206C8O74237C16O74252C24O74237C29O74312C32O74319C37O74367",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "formatWithOptionsInternal node:internal/util/inspect:2154:35",
    "type": "JS",
    "kind": "Unopt",
    "func": 792,
    "tm": 349946,
    "source": {
      "script": 26,
      "start": 74790,
      "end": 78902,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "value node:internal/console/constructor:272:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 793,
    "tm": 350113,
    "source": {
      "script": 110,
      "start": 8230,
      "end": 9712,
      "positions": "C0O8288C5O8330C7O8335C9O8334C13O8377C15O8394C17O8390C21O8428C23O8445C29O8460C34O8497C38O8523C44O8550C49O8596C55O8603C60O8621C68O8625C75O8677C90O8735C98O8686C105O8771C107O8792C112O8818C122O8843C123O8860C128O8885C133O8885C138O8899C145O9224C153O9224C160O9247C165O9272C176O9272C182O9311C187O9311C206O9511C216O9515C222O9551C224O9551C238O9659C239O9666C250O9666C268O9711",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "listenerCount node:events:840:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 794,
    "tm": 350170,
    "source": {
      "script": 29,
      "start": 24974,
      "end": 25256,
      "positions": "C0O25006C5O25020C7O25072C9O25078C13O25093C17O25140C19O25149C20O25162C24O25219C28O25226C29O25244C30O25253",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Writable.write node:internal/streams/writable:336:36",
    "type": "JS",
    "kind": "Unopt",
    "func": 795,
    "tm": 350213,
    "source": {
      "script": 67,
      "start": 11103,
      "end": 11183,
      "positions": "C0O11130C15O11137C22O11171C25O11180",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "_write node:internal/streams/writable:286:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 796,
    "tm": 350279,
    "source": {
      "script": 67,
      "start": 9687,
      "end": 11064,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "writeOrBuffer node:internal/streams/writable:368:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 797,
    "tm": 350369,
    "source": {
      "script": 67,
      "start": 12054,
      "end": 13076,
      "positions": "C0O12120C10O12143C15O12156C22O12172C25O12169C29O12240C34O12255C38O12247C42O12346C44O12361C45O12377C49O12400C55O12417C61O12433C67O12451C73O12477C78O12486C90O12493C96O12500C102O12510C106O12486C111O12538C119O12561C124O12584C125O12601C129O12632C137O12652C142O12670C143O12684C149O12717C151O12732C155O12744C157O12758C161O12775C162O12789C166O12802C167O12813C171O12833C176O12863C190O12833C195O12878C196O12889C200O13024C204O13045C211O13063C216O13073",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/net:52:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 798,
    "tm": 350440,
    "source": {
      "script": 451,
      "start": 1732,
      "end": 2111,
      "positions": "C0O1756C2O1764C7O1785C14O1800C19O1800C27O1830C37O1860C44O1851C48O1887C50O1896C62O1928C77O1896C82O1972C88O2013C95O2020C100O2020C106O2060C110O2054C114O2081C118O2088C119O2101C123O2110",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "onwrite node:internal/streams/writable:428:17",
    "type": "JS",
    "kind": "Unopt",
    "func": 799,
    "tm": 350552,
    "source": {
      "script": 67,
      "start": 13890,
      "end": 15568,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Readable.removeListener node:internal/streams/readable:916:45",
    "type": "JS",
    "kind": "Unopt",
    "func": 800,
    "tm": 350641,
    "source": {
      "script": 60,
      "start": 29930,
      "end": 30502,
      "positions": "C0O29956C5O29963C10O29973C15O29988C29O29988C35O30065C37O30072C42O30429C45O30437C53O30437C59O30488C61O30499",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "destroyHooksExist node:internal/async_hooks:486:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 801,
    "tm": 350672,
    "source": {
      "script": 19,
      "start": 16757,
      "end": 16794,
      "positions": "C0O16765C5O16781C8O16772C12O16791",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "emitAfterScript node:internal/async_hooks:517:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 802,
    "tm": 350695,
    "source": {
      "script": 19,
      "start": 17517,
      "end": 17618,
      "positions": "C0O17532C5O17545C8O17536C14O17559C19O17559C23O17590C26O17590C31O17617",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "popAsyncContext node:internal/async_hooks:553:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 803,
    "tm": 350734,
    "source": {
      "script": 19,
      "start": 18653,
      "end": 19255,
      "positions": "C0O18688C7O18706C9O18705C13O18724C14O18740C19O18747C20O18760C21O18766C24O18770C31O18793C36O18809C38O18808C44O18828C49O18912C54O18919C58O18945C59O18971C61O18983C65O18991C72O19007C77O19028C80O19039C87O19057C90O19054C93O19026C97O19071C104O19087C109O19106C112O19117C119O19135C122O19144C125O19132C128O19104C132O19153C137O19179C142O19179C146O19189C153O19207C158O19221C162O19234C163O19248C166O19252",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "enabledHooksExist node:internal/async_hooks:474:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 804,
    "tm": 350777,
    "source": {
      "script": 19,
      "start": 16568,
      "end": 16603,
      "positions": "C0O16576C5O16592C8O16583C12O16600",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "afterWriteTick node:internal/streams/writable:485:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 805,
    "tm": 350816,
    "source": {
      "script": 67,
      "start": 15595,
      "end": 15714,
      "positions": "C0O15598C5O15606C10O15613C15O15620C20O15631C21O15656C25O15667C40O15674C45O15711",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "afterWrite node:internal/streams/writable:490:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 806,
    "tm": 350854,
    "source": {
      "script": 67,
      "start": 15737,
      "end": 16111,
      "positions": "C0O15794C7O15812C14O15831C20O15838C25O15858C30O15872C32O15894C33O15910C37O15931C45O15931C50O15971C60O15971C65O15983C71O15998C75O16007C78O15956C81O16033C87O16051C90O16051C94O16081C97O16081C103O16110",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get node:internal/streams/duplex:103:8",
    "type": "JS",
    "kind": "Unopt",
    "func": 807,
    "tm": 350890,
    "source": {
      "script": 59,
      "start": 3916,
      "end": 4131,
      "positions": "C0O3937C6O3983C12O4024C13O4037C14O4066C19O4081C25O4099C30O4114C34O4124",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/console/constructor:356:10",
    "type": "JS",
    "kind": "Unopt",
    "func": 808,
    "tm": 350925,
    "source": {
      "script": 110,
      "start": 11043,
      "end": 11877,
      "positions": "C0O11264C7O11281C9O11277C17O11310C26O11329C31O11343C35O11371C40O11386C46O11788C54O11788C61O11811C66O11836C79O11836C86O11876",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "finishMaybe node:internal/streams/writable:718:21",
    "type": "JS",
    "kind": "Unopt",
    "func": 809,
    "tm": 350978,
    "source": {
      "script": 67,
      "start": 21729,
      "end": 22227,
      "positions": "C0O21756C3O21760C9O21786C12O21786C17O21827C23O21837C28O21853C32O21874C38O21889C42O21902C45O21910C61O21910C68O22119C71O22123C77O22153C83O22168C87O22181C90O22181C96O22226",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "needFinish node:internal/streams/writable:653:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 810,
    "tm": 351016,
    "source": {
      "script": 67,
      "start": 20066,
      "end": 20398,
      "positions": "C0O20093C6O20121C13O20151C19O20183C25O20190C30O20217C37O20245C42O20254C48O20261C53O20288C60O20318C67O20347C74O20381C79O20395",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "processPromiseRejections node:internal/process/promises:220:34",
    "type": "JS",
    "kind": "Unopt",
    "func": 811,
    "tm": 351147,
    "source": {
      "script": 40,
      "start": 6880,
      "end": 10099,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setHasRejectionToWarn node:internal/process/promises:77:31",
    "type": "JS",
    "kind": "Unopt",
    "func": 812,
    "tm": 351606,
    "source": {
      "script": 40,
      "start": 2220,
      "end": 2282,
      "positions": "C0O2233C7O2242C12O2265C19O2263C24O2281",
      "inlined": "",
      "fns": []
    }
  }
],
  "functions": [
  {
    "name": " node:internal/main/run_main_module:1:1",
    "codes": [
      2086
    ]
  },
  {
    "name": " node:internal/main/run_main_module:1:1",
    "codes": [
      2087
    ]
  },
  {
    "name": " node:internal/process/pre_execution:1:1",
    "codes": [
      2088
    ]
  },
  {
    "name": " node:internal/process/pre_execution:1:1",
    "codes": [
      2089
    ]
  },
  {
    "name": "prepareMainThreadExecution node:internal/process/pre_execution:36:36",
    "codes": [
      2090
    ]
  },
  {
    "name": "prepareExecution node:internal/process/pre_execution:52:26",
    "codes": [
      2091
    ]
  },
  {
    "name": "refreshRuntimeOptions node:internal/process/pre_execution:123:31",
    "codes": [
      2092
    ]
  },
  {
    "name": "refreshOptions node:internal/options:39:24",
    "codes": [
      2093
    ]
  },
  {
    "name": "reconnectZeroFillToggle node:internal/buffer:1074:33",
    "codes": [
      2094
    ]
  },
  {
    "name": "patchProcessObject node:internal/process/pre_execution:127:28",
    "codes": [
      2095
    ]
  },
  {
    "name": "getOptionValue node:internal/options:44:24",
    "codes": [
      2096,
      2237
    ]
  },
  {
    "name": "getCLIOptionsFromBinding node:internal/options:18:34",
    "codes": [
      2097,
      2239
    ]
  },
  {
    "name": "resolve node:path:158:10",
    "codes": [
      2098,
      2302,
      2741
    ]
  },
  {
    "name": "isPathSeparator node:path:52:25",
    "codes": [
      2099,
      2236
    ]
  },
  {
    "name": "isWindowsDeviceRoot node:path:60:29",
    "codes": [
      2100,
      2294
    ]
  },
  {
    "name": "wrappedCwd node:internal/bootstrap/switches/does_own_process_state:124:20",
    "codes": [
      2101
    ]
  },
  {
    "name": "normalizeString node:path:66:25",
    "codes": [
      2102,
      2293,
      2456
    ]
  },
  {
    "name": "initializeGlobalConsole node:internal/console/constructor:688:33",
    "codes": [
      2103
    ]
  },
  {
    "name": "value node:internal/console/constructor:201:20",
    "codes": [
      2104
    ]
  },
  {
    "name": "value node:internal/console/constructor:231:20",
    "codes": [
      2105
    ]
  },
  {
    "name": "createWriteErrorHandler node:internal/console/constructor:355:33",
    "codes": [
      2106
    ]
  },
  {
    "name": "isBuildingSnapshot node:internal/v8/startup_snapshot:17:28",
    "codes": [
      2107
    ]
  },
  {
    "name": "addReadOnlyProcessAlias node:internal/process/pre_execution:179:33",
    "codes": [
      2108
    ]
  },
  {
    "name": "setupTraceCategoryState node:internal/process/pre_execution:367:33",
    "codes": [
      2109
    ]
  },
  {
    "name": "toggleTraceCategoryState node:internal/process/per_thread:409:34",
    "codes": [
      2110
    ]
  },
  {
    "name": "setupPerfHooks node:internal/process/pre_execution:373:24",
    "codes": [
      2111
    ]
  },
  {
    "name": "refreshTimeOrigin node:internal/perf/performance:227:27",
    "codes": [
      2112
    ]
  },
  {
    "name": "refreshTimeOrigin node:internal/perf/utils:25:27",
    "codes": [
      2113
    ]
  },
  {
    "name": "setupInspectorHooks node:internal/process/pre_execution:378:29",
    "codes": [
      2114
    ]
  },
  {
    "name": " node:internal/inspector_async_hook:1:1",
    "codes": [
      2115
    ]
  },
  {
    "name": " node:internal/inspector_async_hook:1:1",
    "codes": [
      2116
    ]
  },
  {
    "name": "setupWarningHandler node:internal/process/pre_execution:192:29",
    "codes": [
      2117
    ]
  },
  {
    "name": "setupFetch node:internal/process/pre_execution:213:20",
    "codes": [
      2118
    ]
  },
  {
    "name": "get node:internal/bootstrap/node:171:6",
    "codes": [
      2119
    ]
  },
  {
    "name": "get node:internal/bootstrap/node:144:6",
    "codes": [
      2120
    ]
  },
  {
    "name": "lazyInterface node:internal/process/pre_execution:235:25",
    "codes": [
      2121
    ]
  },
  {
    "name": " node:internal/wasm_web_api:1:1",
    "codes": [
      2122
    ]
  },
  {
    "name": " node:internal/wasm_web_api:1:1",
    "codes": [
      2123
    ]
  },
  {
    "name": "setupWebCrypto node:internal/process/pre_execution:262:24",
    "codes": [
      2124
    ]
  },
  {
    "name": "setupCustomEvent node:internal/process/pre_execution:299:26",
    "codes": [
      2125
    ]
  },
  {
    "name": "setupCodeCoverage node:internal/process/pre_execution:284:27",
    "codes": [
      2126
    ]
  },
  {
    "name": "setupDebugEnv node:internal/process/pre_execution:330:23",
    "codes": [
      2127
    ]
  },
  {
    "name": "initializeDebugEnv node:internal/util/debuglog:22:28",
    "codes": [
      2128
    ]
  },
  {
    "name": "initializeReport node:internal/process/pre_execution:318:26",
    "codes": [
      2129
    ]
  },
  {
    "name": " node:internal/process/report:1:1",
    "codes": [
      2130
    ]
  },
  {
    "name": " node:internal/process/report:1:1",
    "codes": [
      2131
    ]
  },
  {
    "name": "initializeSourceMapsHandlers node:internal/process/pre_execution:581:38",
    "codes": [
      2132
    ]
  },
  {
    "name": " node:internal/source_map/source_map_cache:1:1",
    "codes": [
      2133
    ]
  },
  {
    "name": " node:internal/source_map/source_map_cache:1:1",
    "codes": [
      2134
    ]
  },
  {
    "name": " node:internal/util/iterable_weak_map:1:1",
    "codes": [
      2135
    ]
  },
  {
    "name": " node:internal/util/iterable_weak_map:1:1",
    "codes": [
      2136
    ]
  },
  {
    "name": "<instance_members_initializer> node:internal/util/iterable_weak_map:16:1",
    "codes": [
      2137
    ]
  },
  {
    "name": " node:internal/modules/cjs/helpers:1:1",
    "codes": [
      2138
    ]
  },
  {
    "name": " node:internal/modules/cjs/helpers:1:1",
    "codes": [
      2139
    ]
  },
  {
    "name": "IterableWeakMap node:internal/util/iterable_weak_map:16:1",
    "codes": [
      2140
    ]
  },
  {
    "name": "getSourceMapsEnabled node:internal/source_map/source_map_cache:51:30",
    "codes": [
      2141
    ]
  },
  {
    "name": "setSourceMapsEnabled node:internal/source_map/source_map_cache:58:30",
    "codes": [
      2142
    ]
  },
  {
    "name": "validateBoolean node:internal/validators:217:25",
    "codes": [
      2143,
      2622
    ]
  },
  {
    "name": "initializeDeprecations node:internal/process/pre_execution:396:32",
    "codes": [
      2144
    ]
  },
  {
    "name": "initializeWASI node:internal/process/pre_execution:535:24",
    "codes": [
      2145
    ]
  },
  {
    "name": " node:internal/dns/utils:1:1",
    "codes": [
      2146
    ]
  },
  {
    "name": " node:internal/dns/utils:1:1",
    "codes": [
      2147
    ]
  },
  {
    "name": " node:internal/net:1:1",
    "codes": [
      2148
    ]
  },
  {
    "name": " node:internal/net:1:1",
    "codes": [
      2149
    ]
  },
  {
    "name": "initializeDns node:internal/dns/utils:201:23",
    "codes": [
      2150
    ]
  },
  {
    "name": "assert node:internal/assert:11:16",
    "codes": [
      2151,
      2620
    ]
  },
  {
    "name": "readPolicyFromDisk node:internal/process/pre_execution:485:28",
    "codes": [
      2152
    ]
  },
  {
    "name": "setupStacktracePrinterOnSigint node:internal/process/pre_execution:308:40",
    "codes": [
      2153
    ]
  },
  {
    "name": "initializeReportSignalHandlers node:internal/process/pre_execution:338:40",
    "codes": [
      2154
    ]
  },
  {
    "name": "addSignalHandler node:internal/process/report:98:26",
    "codes": [
      2155
    ]
  },
  {
    "name": "initializeHeapSnapshotSignalHandlers node:internal/process/pre_execution:344:46",
    "codes": [
      2156
    ]
  },
  {
    "name": "setupChildProcessIpcChannel node:internal/process/pre_execution:457:37",
    "codes": [
      2157
    ]
  },
  {
    "name": "initializeClusterIPC node:internal/process/pre_execution:476:30",
    "codes": [
      2158
    ]
  },
  {
    "name": "runDeserializeCallbacks node:internal/v8/startup_snapshot:30:33",
    "codes": [
      2159
    ]
  },
  {
    "name": "setupUserModules node:internal/process/pre_execution:113:26",
    "codes": [
      2160
    ]
  },
  {
    "name": "initializeCJSLoader node:internal/process/pre_execution:542:29",
    "codes": [
      2161
    ]
  },
  {
    "name": " node:internal/modules/cjs/loader:1:1",
    "codes": [
      2162
    ]
  },
  {
    "name": " node:internal/modules/cjs/loader:1:1",
    "codes": [
      2163,
      2235
    ]
  },
  {
    "name": " node:internal/modules/package_json_reader:1:1",
    "codes": [
      2164
    ]
  },
  {
    "name": " node:internal/modules/package_json_reader:1:1",
    "codes": [
      2165
    ]
  },
  {
    "name": " node:internal/process/esm_loader:1:1",
    "codes": [
      2166
    ]
  },
  {
    "name": " node:internal/process/esm_loader:1:1",
    "codes": [
      2167
    ]
  },
  {
    "name": " node:internal/modules/esm/loader:1:1",
    "codes": [
      2168
    ]
  },
  {
    "name": " node:internal/modules/esm/loader:1:1",
    "codes": [
      2169
    ]
  },
  {
    "name": "<instance_members_initializer> node:internal/modules/esm/loader:181:1",
    "codes": [
      2170
    ]
  },
  {
    "name": " node:internal/modules/esm/module_map:1:1",
    "codes": [
      2171
    ]
  },
  {
    "name": " node:internal/modules/esm/module_map:1:1",
    "codes": [
      2172
    ]
  },
  {
    "name": " node:internal/modules/esm/module_job:1:1",
    "codes": [
      2173
    ]
  },
  {
    "name": " node:internal/modules/esm/module_job:1:1",
    "codes": [
      2174
    ]
  },
  {
    "name": " node:internal/modules/esm/assert:1:1",
    "codes": [
      2175
    ]
  },
  {
    "name": " node:internal/modules/esm/assert:1:1",
    "codes": [
      2176
    ]
  },
  {
    "name": " node:internal/modules/esm/assert:43:3",
    "codes": [
      2177
    ]
  },
  {
    "name": " node:internal/modules/esm/resolve:1:1",
    "codes": [
      2178
    ]
  },
  {
    "name": " node:internal/modules/esm/resolve:1:1",
    "codes": [
      2179
    ]
  },
  {
    "name": " node:internal/modules/esm/package_config:1:1",
    "codes": [
      2180
    ]
  },
  {
    "name": " node:internal/modules/esm/package_config:1:1",
    "codes": [
      2181
    ]
  },
  {
    "name": " node:internal/modules/esm/get_format:1:1",
    "codes": [
      2182
    ]
  },
  {
    "name": " node:internal/modules/esm/get_format:1:1",
    "codes": [
      2183
    ]
  },
  {
    "name": " node:internal/modules/esm/fetch_module:1:1",
    "codes": [
      2184
    ]
  },
  {
    "name": " node:internal/modules/esm/fetch_module:1:1",
    "codes": [
      2185
    ]
  },
  {
    "name": " node:net:1:1",
    "codes": [
      2186
    ]
  },
  {
    "name": " node:net:1:1",
    "codes": [
      2187
    ]
  },
  {
    "name": " node:internal/dtrace:1:1",
    "codes": [
      2188
    ]
  },
  {
    "name": " node:internal/dtrace:1:1",
    "codes": [
      2189
    ]
  },
  {
    "name": "protoGetter node:net:844:21",
    "codes": [
      2190,
      2242
    ]
  },
  {
    "name": "get BlockList node:net:2235:16",
    "codes": [
      2191
    ]
  },
  {
    "name": " node:internal/blocklist:1:1",
    "codes": [
      2192
    ]
  },
  {
    "name": " node:internal/blocklist:1:1",
    "codes": [
      2193
    ]
  },
  {
    "name": " node:internal/socketaddress:1:1",
    "codes": [
      2194
    ]
  },
  {
    "name": " node:internal/socketaddress:1:1",
    "codes": [
      2195
    ]
  },
  {
    "name": "BlockList node:internal/blocklist:40:14",
    "codes": [
      2196
    ]
  },
  {
    "name": "addAddress node:internal/blocklist:60:13",
    "codes": [
      2197
    ]
  },
  {
    "name": "isSocketAddress node:internal/socketaddress:44:25",
    "codes": [
      2198
    ]
  },
  {
    "name": "SocketAddress node:internal/socketaddress:48:14",
    "codes": [
      2199
    ]
  },
  {
    "name": " node:internal/validators:247:3",
    "codes": [
      2200
    ]
  },
  {
    "name": "getOwnPropertyValueOrDefault node:internal/validators:228:38",
    "codes": [
      2201,
      2295
    ]
  },
  {
    "name": "validatePort node:internal/validators:384:22",
    "codes": [
      2202
    ]
  },
  {
    "name": " node:internal/validators:138:40",
    "codes": [
      2203,
      2432
    ]
  },
  {
    "name": "addRange node:internal/blocklist:72:11",
    "codes": [
      2204
    ]
  },
  {
    "name": " node:internal/modules/esm/formats:1:1",
    "codes": [
      2205
    ]
  },
  {
    "name": " node:internal/modules/esm/formats:1:1",
    "codes": [
      2206
    ]
  },
  {
    "name": " node:internal/modules/esm/initialize_import_meta:1:1",
    "codes": [
      2207
    ]
  },
  {
    "name": " node:internal/modules/esm/initialize_import_meta:1:1",
    "codes": [
      2208
    ]
  },
  {
    "name": " node:internal/modules/esm/load:1:1",
    "codes": [
      2209
    ]
  },
  {
    "name": " node:internal/modules/esm/load:1:1",
    "codes": [
      2210
    ]
  },
  {
    "name": " node:internal/fs/promises:1:1",
    "codes": [
      2211
    ]
  },
  {
    "name": " node:internal/fs/promises:1:1",
    "codes": [
      2212
    ]
  },
  {
    "name": "<instance_members_initializer> node:internal/fs/promises:133:1",
    "codes": [
      2213
    ]
  },
  {
    "name": " node:internal/fs/rimraf:1:1",
    "codes": [
      2214
    ]
  },
  {
    "name": " node:internal/fs/rimraf:1:1",
    "codes": [
      2215
    ]
  },
  {
    "name": " node:internal/readline/interface:1:1",
    "codes": [
      2216
    ]
  },
  {
    "name": " node:internal/readline/interface:1:1",
    "codes": [
      2217
    ]
  },
  {
    "name": " node:internal/readline/utils:1:1",
    "codes": [
      2218
    ]
  },
  {
    "name": " node:internal/readline/utils:1:1",
    "codes": [
      2219
    ]
  },
  {
    "name": "CSI node:internal/readline/utils:19:13",
    "codes": [
      2220
    ]
  },
  {
    "name": " node:internal/readline/callbacks:1:1",
    "codes": [
      2221
    ]
  },
  {
    "name": " node:internal/readline/callbacks:1:1",
    "codes": [
      2222
    ]
  },
  {
    "name": "EventEmitterMixin node:internal/event_target:1061:27",
    "codes": [
      2223
    ]
  },
  {
    "name": " node:internal/modules/esm/translators:1:1",
    "codes": [
      2224
    ]
  },
  {
    "name": " node:internal/modules/esm/translators:1:1",
    "codes": [
      2225
    ]
  },
  {
    "name": " node:internal/modules/esm/create_dynamic_module:1:1",
    "codes": [
      2226
    ]
  },
  {
    "name": " node:internal/modules/esm/create_dynamic_module:1:1",
    "codes": [
      2227
    ]
  },
  {
    "name": " node:internal/vm/module:1:1",
    "codes": [
      2228
    ]
  },
  {
    "name": " node:internal/vm/module:1:1",
    "codes": [
      2229
    ]
  },
  {
    "name": "<instance_members_initializer> node:internal/vm/module:258:1",
    "codes": [
      2230
    ]
  },
  {
    "name": "ESMLoader node:internal/modules/esm/loader:237:14",
    "codes": [
      2231
    ]
  },
  {
    "name": "ModuleMap node:internal/modules/esm/module_map:17:14",
    "codes": [
      2232
    ]
  },
  {
    "name": "desc.value node:internal/per_context/primordials:370:32",
    "codes": [
      2233
    ]
  },
  {
    "name": "canBeRequiredWithoutScheme node:internal/bootstrap/loaders:255:36",
    "codes": [
      2234,
      2245
    ]
  },
  {
    "name": "requireBuiltin node:internal/bootstrap/loaders:356:24",
    "codes": [
      2238
    ]
  },
  {
    "name": "compileForInternalLoader node:internal/bootstrap/loaders:319:27",
    "codes": [
      2240
    ]
  },
  {
    "name": "internalBinding node:internal/bootstrap/loaders:172:45",
    "codes": [
      2241
    ]
  },
  {
    "name": "SafeMap node:internal/per_context/primordials:396:16",
    "codes": [
      2243
    ]
  },
  {
    "name": "next node:internal/per_context/primordials:318:9",
    "codes": [
      2244
    ]
  },
  {
    "name": " node:internal/modules/cjs/loader:253:41",
    "codes": [
      2246,
      2292
    ]
  },
  {
    "name": "getSchemeOnlyModuleNames node:internal/bootstrap/loaders:259:34",
    "codes": [
      2247
    ]
  },
  {
    "name": " node:internal/modules/cjs/loader:255:50",
    "codes": [
      2248
    ]
  },
  {
    "name": "getEmbedderOptions node:internal/options:32:28",
    "codes": [
      2249
    ]
  },
  {
    "name": "Module._initPaths node:internal/modules/cjs/loader:1382:29",
    "codes": [
      2250
    ]
  },
  {
    "name": " node:internal/modules/run_main:1:1",
    "codes": [
      2251
    ]
  },
  {
    "name": " node:internal/modules/run_main:1:1",
    "codes": [
      2252
    ]
  },
  {
    "name": "initializeESMLoader node:internal/process/pre_execution:552:29",
    "codes": [
      2253
    ]
  },
  {
    "name": "get hasLoadedAnyUserCJSModule node:internal/modules/cjs/loader:75:32",
    "codes": [
      2254
    ]
  },
  {
    "name": "loadPreloadModules node:internal/process/pre_execution:597:28",
    "codes": [
      2255
    ]
  },
  {
    "name": "initializeFrozenIntrinsics node:internal/process/pre_execution:589:36",
    "codes": [
      2256
    ]
  },
  {
    "name": "markBootstrapComplete node:internal/process/pre_execution:610:31",
    "codes": [
      2257
    ]
  },
  {
    "name": "executeUserEntryPoint node:internal/modules/run_main:74:31",
    "codes": [
      2258
    ]
  },
  {
    "name": "resolveMainPath node:internal/modules/run_main:15:25",
    "codes": [
      2259
    ]
  },
  {
    "name": "Module._findPath node:internal/modules/cjs/loader:582:28",
    "codes": [
      2260,
      2532
    ]
  },
  {
    "name": "isAbsolute node:path:402:13",
    "codes": [
      2261,
      2441
    ]
  },
  {
    "name": "stat node:internal/modules/cjs/loader:180:14",
    "codes": [
      2262,
      2384
    ]
  },
  {
    "name": "toNamespacedPath node:path:618:19",
    "codes": [
      2263,
      2370
    ]
  },
  {
    "name": "toRealPath node:internal/modules/cjs/loader:476:20",
    "codes": [
      2264,
      2435
    ]
  },
  {
    "name": "realpathSync node:fs:2502:22",
    "codes": [
      2265,
      2413
    ]
  },
  {
    "name": "getOptions node:internal/fs/utils:318:20",
    "codes": [
      2266,
      2425
    ]
  },
  {
    "name": "assertEncoding node:internal/fs/utils:155:24",
    "codes": [
      2267,
      2518
    ]
  },
  {
    "name": "toPathIfFileURL node:internal/url:1570:25",
    "codes": [
      2268,
      2427
    ]
  },
  {
    "name": "isURLInstance node:internal/url:1566:23",
    "codes": [
      2269,
      2419
    ]
  },
  {
    "name": " node:internal/fs/utils:691:38",
    "codes": [
      2270,
      2431
    ]
  },
  {
    "name": " node:internal/fs/utils:360:35",
    "codes": [
      2271,
      2436
    ]
  },
  {
    "name": "isUint8Array node:internal/util/types:13:22",
    "codes": [
      2272,
      2414
    ]
  },
  {
    "name": "splitRoot node:fs:2454:33",
    "codes": [
      2273,
      2444
    ]
  },
  {
    "name": "SideEffectFreeRegExpPrototypeExec node:internal/util:568:43",
    "codes": [
      2274,
      2443
    ]
  },
  {
    "name": "getInternalGlobal node:internal/util:559:27",
    "codes": [
      2275,
      2618
    ]
  },
  {
    "name": "runInNewContext node:vm:294:25",
    "codes": [
      2276
    ]
  },
  {
    "name": "getContextOptions node:vm:188:27",
    "codes": [
      2277
    ]
  },
  {
    "name": "createContext node:vm:217:23",
    "codes": [
      2278
    ]
  },
  {
    "name": "isContext node:internal/vm:25:19",
    "codes": [
      2279
    ]
  },
  {
    "name": "createScript node:vm:258:22",
    "codes": [
      2280
    ]
  },
  {
    "name": "Script node:vm:66:14",
    "codes": [
      2281
    ]
  },
  {
    "name": " node:internal/validators:115:3",
    "codes": [
      2282,
      2467
    ]
  },
  {
    "name": " evalmachine.<anonymous>:1:1",
    "codes": [
      2283
    ]
  },
  {
    "name": "runInNewContext node:vm:144:18",
    "codes": [
      2284
    ]
  },
  {
    "name": "runInContext node:vm:132:15",
    "codes": [
      2285
    ]
  },
  {
    "name": "validateContext node:vm:150:25",
    "codes": [
      2286
    ]
  },
  {
    "name": "getRunInContextArgs node:vm:157:29",
    "codes": [
      2287
    ]
  },
  {
    "name": "handleErrorFromBinding node:internal/fs/utils:343:32",
    "codes": [
      2288,
      2426
    ]
  },
  {
    "name": "nextPart node:fs:2480:31",
    "codes": [
      2289,
      2291
    ]
  },
  {
    "name": "isFileType node:fs:215:20",
    "codes": [
      2290,
      2372
    ]
  },
  {
    "name": "validateString node:internal/validators:161:24",
    "codes": [
      2296
    ]
  },
  {
    "name": "encodeRealpathResult node:fs:2467:30",
    "codes": [
      2297,
      2732
    ]
  },
  {
    "name": "shouldUseESMLoader node:internal/modules/run_main:30:28",
    "codes": [
      2298
    ]
  },
  {
    "name": "readPackageScope node:internal/modules/cjs/loader:404:26",
    "codes": [
      2299,
      2415
    ]
  },
  {
    "name": "readPackage node:internal/modules/cjs/loader:362:21",
    "codes": [
      2300,
      2433
    ]
  },
  {
    "name": "read node:internal/modules/package_json_reader:16:14",
    "codes": [
      2301,
      2534
    ]
  },
  {
    "name": "filterOwnProperties node:internal/util:529:29",
    "codes": [
      2303,
      2381
    ]
  },
  {
    "name": "Module._load node:internal/modules/cjs/loader:886:24",
    "codes": [
      2304,
      2599
    ]
  },
  {
    "name": "Module._resolveFilename node:internal/modules/cjs/loader:984:35",
    "codes": [
      2305,
      2703
    ]
  },
  {
    "name": "canBeRequiredByUsers node:internal/bootstrap/loaders:248:30",
    "codes": [
      2306,
      2417
    ]
  },
  {
    "name": "Module._resolveLookupPaths node:internal/modules/cjs/loader:785:38",
    "codes": [
      2307,
      2551
    ]
  },
  {
    "name": "logger node:internal/util/debuglog:95:18",
    "codes": [
      2308
    ]
  },
  {
    "name": "debug node:internal/util/debuglog:76:15",
    "codes": [
      2309
    ]
  },
  {
    "name": "init node:internal/util/debuglog:72:16",
    "codes": [
      2310
    ]
  },
  {
    "name": "testEnabled node:internal/util/debuglog:32:19",
    "codes": [
      2311
    ]
  },
  {
    "name": "debuglogImpl node:internal/util/debuglog:49:22",
    "codes": [
      2312
    ]
  },
  {
    "name": " node:internal/modules/cjs/loader:344:66",
    "codes": [
      2313
    ]
  },
  {
    "name": "noop node:internal/util/debuglog:47:14",
    "codes": [
      2314,
      2383
    ]
  },
  {
    "name": "trySelfParentPath node:internal/modules/cjs/loader:510:27",
    "codes": [
      2315,
      2662
    ]
  },
  {
    "name": "trySelf node:internal/modules/cjs/loader:524:17",
    "codes": [
      2316,
      2685
    ]
  },
  {
    "name": "loadBuiltinModule node:internal/modules/cjs/helpers:51:27",
    "codes": [
      2317,
      2469
    ]
  },
  {
    "name": "Module node:internal/modules/cjs/loader:225:16",
    "codes": [
      2318,
      2508
    ]
  },
  {
    "name": "dirname node:path:653:10",
    "codes": [
      2319,
      2382
    ]
  },
  {
    "name": "setOwnProperty node:internal/util:548:24",
    "codes": [
      2320,
      2416
    ]
  },
  {
    "name": "updateChildren node:internal/modules/cjs/loader:206:24",
    "codes": [
      2321,
      2509
    ]
  },
  {
    "name": "reportModuleToWatchMode node:internal/modules/cjs/loader:212:33",
    "codes": [
      2322,
      2602
    ]
  },
  {
    "name": "Module.load node:internal/modules/cjs/loader:1105:33",
    "codes": [
      2323,
      2554
    ]
  },
  {
    "name": "Module._nodeModulePaths node:internal/modules/cjs/loader:701:37",
    "codes": [
      2324,
      2373
    ]
  },
  {
    "name": "findLongestRegisteredExtension node:internal/modules/cjs/loader:496:40",
    "codes": [
      2325,
      2445
    ]
  },
  {
    "name": "basename node:path:749:11",
    "codes": [
      2326,
      2428
    ]
  },
  {
    "name": "Module._extensions..js node:internal/modules/cjs/loader:1263:37",
    "codes": [
      2327,
      2822
    ]
  },
  {
    "name": "readFileSync node:fs:466:22",
    "codes": [
      2328,
      2520
    ]
  },
  {
    "name": "isEncoding node:buffer:542:40",
    "codes": [
      2329,
      2446
    ]
  },
  {
    "name": "normalizeEncoding node:internal/util:175:27",
    "codes": [
      2330,
      2552
    ]
  },
  {
    "name": "isUint32 node:internal/validators:51:18",
    "codes": [
      2331,
      2447
    ]
  },
  {
    "name": "openSync node:fs:592:18",
    "codes": [
      2332,
      2449
    ]
  },
  {
    "name": " node:internal/fs/utils:703:42",
    "codes": [
      2333,
      2448
    ]
  },
  {
    "name": "stringToFlags node:internal/fs/utils:578:23",
    "codes": [
      2334
    ]
  },
  {
    "name": "parseFileMode node:internal/validators:70:23",
    "codes": [
      2335,
      2621
    ]
  },
  {
    "name": "tryStatSync node:fs:420:21",
    "codes": [
      2336,
      2524
    ]
  },
  {
    "name": "tryCreateBuffer node:fs:430:25",
    "codes": [
      2337,
      2526
    ]
  },
  {
    "name": "allocUnsafe node:buffer:385:42",
    "codes": [
      2338,
      2450
    ]
  },
  {
    "name": " node:buffer:361:36",
    "codes": [
      2339,
      2533
    ]
  },
  {
    "name": "validateNumber node:internal/validators:176:24",
    "codes": [
      2340,
      2661
    ]
  },
  {
    "name": "allocate node:buffer:410:18",
    "codes": [
      2341,
      2525
    ]
  },
  {
    "name": "tryReadSync node:fs:445:21",
    "codes": [
      2342,
      2511
    ]
  },
  {
    "name": "readSync node:fs:706:18",
    "codes": [
      2343,
      2510
    ]
  },
  {
    "name": " node:internal/fs/utils:709:40",
    "codes": [
      2344,
      2420
    ]
  },
  {
    "name": " node:internal/validators:354:40",
    "codes": [
      2345,
      2553
    ]
  },
  {
    "name": " node:internal/validators:94:3",
    "codes": [
      2346,
      2470
    ]
  },
  {
    "name": " node:internal/fs/utils:659:3",
    "codes": [
      2347,
      2625
    ]
  },
  {
    "name": " node:internal/fs/utils:918:42",
    "codes": [
      2348,
      2819
    ]
  },
  {
    "name": "closeSync node:fs:542:19",
    "codes": [
      2349,
      2451
    ]
  },
  {
    "name": "toString node:buffer:796:46",
    "codes": [
      2350,
      2527
    ]
  },
  {
    "name": "getEncodingOps node:buffer:691:24",
    "codes": [
      2351,
      2731
    ]
  },
  {
    "name": "slice node:buffer:606:12",
    "codes": [
      2352,
      2452
    ]
  },
  {
    "name": "Module._compile node:internal/modules/cjs/loader:1208:37",
    "codes": [
      2353,
      2683
    ]
  },
  {
    "name": "wrapSafe node:internal/modules/cjs/loader:1152:18",
    "codes": [
      2354,
      2624
    ]
  },
  {
    "name": "internalCompileFunction node:internal/vm:31:33",
    "codes": [
      2355,
      2466
    ]
  },
  {
    "name": "validateStringArray node:internal/validators:306:29",
    "codes": [
      2356,
      2369
    ]
  },
  {
    "name": " node:internal/validators:288:39",
    "codes": [
      2357,
      2468
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\index.js:1:1",
    "codes": [
      2358
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\index.js:1:1",
    "codes": [
      2359
    ]
  },
  {
    "name": "importModuleDynamicallyWrap node:internal/vm/module:427:37",
    "codes": [
      2360,
      2453
    ]
  },
  {
    "name": "makeRequireFunction node:internal/modules/cjs/helpers:65:29",
    "codes": [
      2361,
      2528
    ]
  },
  {
    "name": "require node:internal/modules/cjs/helpers:108:31",
    "codes": [
      2362,
      2512
    ]
  },
  {
    "name": "Module.require node:internal/modules/cjs/loader:1133:36",
    "codes": [
      2363,
      2521
    ]
  },
  {
    "name": "resolveExports node:internal/modules/cjs/loader:555:24",
    "codes": [
      2364,
      2601
    ]
  },
  {
    "name": "tryExtensions node:internal/modules/cjs/loader:483:23",
    "codes": [
      2365,
      2418
    ]
  },
  {
    "name": "tryFile node:internal/modules/cjs/loader:467:17",
    "codes": [
      2366,
      2434
    ]
  },
  {
    "name": "tryPackage node:internal/modules/cjs/loader:421:20",
    "codes": [
      2367,
      2765
    ]
  },
  {
    "name": "SafeSet node:internal/per_context/primordials:409:16",
    "codes": [
      2371
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\index.js:1:1",
    "codes": [
      2374
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\index.js:1:1",
    "codes": [
      2375
    ]
  },
  {
    "name": "normalize node:path:304:12",
    "codes": [
      2376,
      2890
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\express.js:1:1",
    "codes": [
      2378
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\express.js:1:1",
    "codes": [
      2379
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\body-parser\\index.js:1:1",
    "codes": [
      2385
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\body-parser\\index.js:1:1",
    "codes": [
      2386
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\depd\\index.js:1:1",
    "codes": [
      2387
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\depd\\index.js:1:1",
    "codes": [
      2388
    ]
  },
  {
    "name": " node:internal/modules/cjs/helpers:36:66",
    "codes": [
      2389
    ]
  },
  {
    "name": "compileForPublicLoader node:internal/bootstrap/loaders:264:25",
    "codes": [
      2390,
      2766
    ]
  },
  {
    "name": "getESMFacade node:internal/bootstrap/loaders:282:15",
    "codes": [
      2391,
      2734
    ]
  },
  {
    "name": " node:internal/bootstrap/loaders:293:15",
    "codes": [
      2392,
      2764
    ]
  },
  {
    "name": "syncExports node:internal/bootstrap/loaders:307:14",
    "codes": [
      2393,
      2422
    ]
  },
  {
    "name": "getOwn node:internal/bootstrap/loaders:188:16",
    "codes": [
      2394,
      2421
    ]
  },
  {
    "name": "get node:internal/bootstrap/node:411:8",
    "codes": [
      2395,
      2514
    ]
  },
  {
    "name": "depd D:\\doc\\node.js\\mfg\\node_modules\\depd\\index.js:103:15",
    "codes": [
      2396,
      3009
    ]
  },
  {
    "name": "getStack D:\\doc\\node.js\\mfg\\node_modules\\depd\\index.js:381:19",
    "codes": [
      2397,
      2814
    ]
  },
  {
    "name": "prepareStackTrace node:internal/errors:89:27",
    "codes": [
      2398
    ]
  },
  {
    "name": "maybeOverridePrepareStackTrace node:internal/errors:134:40",
    "codes": [
      2399,
      2892
    ]
  },
  {
    "name": "prepareObjectStackTrace D:\\doc\\node.js\\mfg\\node_modules\\depd\\index.js:405:34",
    "codes": [
      2400,
      2821
    ]
  },
  {
    "name": "callSiteLocation D:\\doc\\node.js\\mfg\\node_modules\\depd\\index.js:267:27",
    "codes": [
      2401,
      2823
    ]
  },
  {
    "name": "isignored D:\\doc\\node.js\\mfg\\node_modules\\depd\\index.js:153:20",
    "codes": [
      2402,
      3007
    ]
  },
  {
    "name": "containsNamespace D:\\doc\\node.js\\mfg\\node_modules\\depd\\index.js:29:28",
    "codes": [
      2403,
      2815
    ]
  },
  {
    "name": "istraced D:\\doc\\node.js\\mfg\\node_modules\\depd\\index.js:169:19",
    "codes": [
      2404,
      3008
    ]
  },
  {
    "name": "wrapfunction D:\\doc\\node.js\\mfg\\node_modules\\depd\\index.js:413:23",
    "codes": [
      2406,
      2859
    ]
  },
  {
    "name": "createArgumentsString D:\\doc\\node.js\\mfg\\node_modules\\depd\\index.js:71:32",
    "codes": [
      2407,
      2858
    ]
  },
  {
    "name": " :1:1",
    "codes": [
      2408
    ]
  },
  {
    "name": " :1:20",
    "codes": [
      2409
    ]
  },
  {
    "name": "createParserGetter D:\\doc\\node.js\\mfg\\node_modules\\body-parser\\index.js:120:29",
    "codes": [
      2410
    ]
  },
  {
    "name": "get node:events:227:6",
    "codes": [
      2411
    ]
  },
  {
    "name": "lazyEventEmitterAsyncResource node:events:95:39",
    "codes": [
      2412
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\merge-descriptors\\index.js:1:1",
    "codes": [
      2423
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\merge-descriptors\\index.js:1:1",
    "codes": [
      2424
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\application.js:1:1",
    "codes": [
      2429
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\application.js:1:1",
    "codes": [
      2430
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\finalhandler\\index.js:1:1",
    "codes": [
      2437
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\finalhandler\\index.js:1:1",
    "codes": [
      2438
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\debug\\src\\index.js:1:1",
    "codes": [
      2439
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\debug\\src\\index.js:1:1",
    "codes": [
      2440
    ]
  },
  {
    "name": "FastBuffer node:internal/buffer:960:14",
    "codes": [
      2442
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\debug\\src\\node.js:1:1",
    "codes": [
      2454
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\debug\\src\\node.js:1:1",
    "codes": [
      2455
    ]
  },
  {
    "name": " node:tty:1:1",
    "codes": [
      2457
    ]
  },
  {
    "name": " node:tty:1:1",
    "codes": [
      2458
    ]
  },
  {
    "name": " node:internal/tty:1:1",
    "codes": [
      2459
    ]
  },
  {
    "name": " node:internal/tty:1:1",
    "codes": [
      2460
    ]
  },
  {
    "name": "get transferableAbortSignal node:util:397:30",
    "codes": [
      2461
    ]
  },
  {
    "name": "lazyAbortController node:util:85:29",
    "codes": [
      2462
    ]
  },
  {
    "name": "get transferableAbortController node:util:400:34",
    "codes": [
      2463
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\debug\\src\\debug.js:1:1",
    "codes": [
      2464
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\debug\\src\\debug.js:1:1",
    "codes": [
      2465
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\ms\\index.js:1:1",
    "codes": [
      2471
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\ms\\index.js:1:1",
    "codes": [
      2472
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\debug\\src\\node.js:34:64",
    "codes": [
      2473,
      2513
    ]
  },
  {
    "name": "getStderr node:internal/bootstrap/switches/is_main_thread:168:19",
    "codes": [
      2475
    ]
  },
  {
    "name": "createWritableStdioStream node:internal/bootstrap/switches/is_main_thread:45:35",
    "codes": [
      2476
    ]
  },
  {
    "name": "Socket node:net:338:16",
    "codes": [
      2477
    ]
  },
  {
    "name": "Duplex node:internal/streams/duplex:54:16",
    "codes": [
      2478
    ]
  },
  {
    "name": "Readable node:internal/streams/readable:186:18",
    "codes": [
      2479
    ]
  },
  {
    "name": "Stream node:internal/streams/legacy:10:16",
    "codes": [
      2480
    ]
  },
  {
    "name": "ReadableState node:internal/streams/readable:83:23",
    "codes": [
      2481
    ]
  },
  {
    "name": "getHighWaterMark node:internal/streams/state:19:26",
    "codes": [
      2482
    ]
  },
  {
    "name": "highWaterMarkFrom node:internal/streams/state:10:27",
    "codes": [
      2483
    ]
  },
  {
    "name": "getDefaultHighWaterMark node:internal/streams/state:15:33",
    "codes": [
      2484
    ]
  },
  {
    "name": "BufferList node:internal/streams/buffer_list:14:14",
    "codes": [
      2485
    ]
  },
  {
    "name": "construct node:internal/streams/destroy:219:19",
    "codes": [
      2486
    ]
  },
  {
    "name": "Writable node:internal/streams/writable:220:18",
    "codes": [
      2487
    ]
  },
  {
    "name": "WritableState node:internal/streams/writable:77:23",
    "codes": [
      2488
    ]
  },
  {
    "name": "resetBuffer node:internal/streams/writable:202:21",
    "codes": [
      2489
    ]
  },
  {
    "name": "createHandle node:net:172:22",
    "codes": [
      2490
    ]
  },
  {
    "name": "set node:net:2163:6",
    "codes": [
      2491
    ]
  },
  {
    "name": "get node:net:2162:6",
    "codes": [
      2492,
      2515
    ]
  },
  {
    "name": "makeSyncWrite node:internal/net:51:23",
    "codes": [
      2493
    ]
  },
  {
    "name": "Readable.on node:internal/streams/readable:886:33",
    "codes": [
      2494
    ]
  },
  {
    "name": "initSocketHandle node:net:294:26",
    "codes": [
      2495
    ]
  },
  {
    "name": "undestroy node:internal/streams/destroy:154:19",
    "codes": [
      2496
    ]
  },
  {
    "name": "getNewAsyncId node:net:191:23",
    "codes": [
      2497
    ]
  },
  {
    "name": "addCleanup node:internal/bootstrap/switches/is_main_thread:140:20",
    "codes": [
      2498
    ]
  },
  {
    "name": "load D:\\doc\\node.js\\mfg\\node_modules\\debug\\src\\node.js:156:14",
    "codes": [
      2499
    ]
  },
  {
    "name": "enable D:\\doc\\node.js\\mfg\\node_modules\\debug\\src\\debug.js:138:16",
    "codes": [
      2500
    ]
  },
  {
    "name": "save D:\\doc\\node.js\\mfg\\node_modules\\debug\\src\\node.js:139:14",
    "codes": [
      2501
    ]
  },
  {
    "name": "createDebug D:\\doc\\node.js\\mfg\\node_modules\\debug\\src\\debug.js:63:21",
    "codes": [
      2502,
      3006
    ]
  },
  {
    "name": "enabled D:\\doc\\node.js\\mfg\\node_modules\\debug\\src\\debug.js:176:17",
    "codes": [
      2503
    ]
  },
  {
    "name": "useColors D:\\doc\\node.js\\mfg\\node_modules\\debug\\src\\node.js:75:19",
    "codes": [
      2504
    ]
  },
  {
    "name": "isatty node:tty:42:16",
    "codes": [
      2505,
      3005
    ]
  },
  {
    "name": "selectColor D:\\doc\\node.js\\mfg\\node_modules\\debug\\src\\debug.js:44:21",
    "codes": [
      2506,
      2600
    ]
  },
  {
    "name": "init D:\\doc\\node.js\\mfg\\node_modules\\debug\\src\\node.js:235:15",
    "codes": [
      2507
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\encodeurl\\index.js:1:1",
    "codes": [
      2516
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\encodeurl\\index.js:1:1",
    "codes": [
      2517
    ]
  },
  {
    "name": "alignPool node:buffer:170:19",
    "codes": [
      2519
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\escape-html\\index.js:1:1",
    "codes": [
      2522
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\escape-html\\index.js:1:1",
    "codes": [
      2523
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\on-finished\\index.js:1:1",
    "codes": [
      2529
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\on-finished\\index.js:1:1",
    "codes": [
      2530
    ]
  },
  {
    "name": "tryRequireAsyncHooks D:\\doc\\node.js\\mfg\\node_modules\\on-finished\\index.js:205:31",
    "codes": [
      2531
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\ee-first\\index.js:1:1",
    "codes": [
      2535
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\ee-first\\index.js:1:1",
    "codes": [
      2536
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\parseurl\\index.js:1:1",
    "codes": [
      2537
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\parseurl\\index.js:1:1",
    "codes": [
      2538
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\statuses\\index.js:1:1",
    "codes": [
      2539
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\statuses\\index.js:1:1",
    "codes": [
      2540
    ]
  },
  {
    "name": "Module._extensions..json node:internal/modules/cjs/loader:1313:39",
    "codes": [
      2541
    ]
  },
  {
    "name": "stripBOM node:internal/modules/cjs/helpers:143:18",
    "codes": [
      2542
    ]
  },
  {
    "name": "createMessageToStatusCodeMap D:\\doc\\node.js\\mfg\\node_modules\\statuses\\index.js:63:39",
    "codes": [
      2543
    ]
  },
  {
    "name": "forEachCode D:\\doc\\node.js\\mfg\\node_modules\\statuses\\index.js:66:51",
    "codes": [
      2544,
      2555
    ]
  },
  {
    "name": "createStatusCodeList D:\\doc\\node.js\\mfg\\node_modules\\statuses\\index.js:82:31",
    "codes": [
      2545
    ]
  },
  {
    "name": "mapCode D:\\doc\\node.js\\mfg\\node_modules\\statuses\\index.js:83:50",
    "codes": [
      2546,
      2556
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\unpipe\\index.js:1:1",
    "codes": [
      2547
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\unpipe\\index.js:1:1",
    "codes": [
      2548
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\router\\index.js:1:1",
    "codes": [
      2549
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\router\\index.js:1:1",
    "codes": [
      2550
    ]
  },
  {
    "name": "createUnsafeBuffer node:internal/buffer:1061:28",
    "codes": [
      2557
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\router\\route.js:1:1",
    "codes": [
      2558
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\router\\route.js:1:1",
    "codes": [
      2559
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\array-flatten\\array-flatten.js:1:1",
    "codes": [
      2560
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\array-flatten\\array-flatten.js:1:1",
    "codes": [
      2561
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\router\\layer.js:1:1",
    "codes": [
      2562
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\router\\layer.js:1:1",
    "codes": [
      2563
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\path-to-regexp\\index.js:1:1",
    "codes": [
      2564
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\path-to-regexp\\index.js:1:1",
    "codes": [
      2565
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\methods\\index.js:1:1",
    "codes": [
      2566
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\methods\\index.js:1:1",
    "codes": [
      2567
    ]
  },
  {
    "name": " node:http:1:1",
    "codes": [
      2568
    ]
  },
  {
    "name": " node:http:1:1",
    "codes": [
      2569
    ]
  },
  {
    "name": " node:_http_agent:1:1",
    "codes": [
      2570
    ]
  },
  {
    "name": " node:_http_agent:1:1",
    "codes": [
      2571
    ]
  },
  {
    "name": "Agent node:_http_agent:90:15",
    "codes": [
      2572
    ]
  },
  {
    "name": " node:internal/validators:198:39",
    "codes": [
      2573
    ]
  },
  {
    "name": " node:_http_client:1:1",
    "codes": [
      2574
    ]
  },
  {
    "name": " node:_http_client:1:1",
    "codes": [
      2575
    ]
  },
  {
    "name": " node:_http_common:1:1",
    "codes": [
      2576
    ]
  },
  {
    "name": " node:_http_common:1:1",
    "codes": [
      2577
    ]
  },
  {
    "name": " node:internal/freelist:1:1",
    "codes": [
      2578
    ]
  },
  {
    "name": " node:internal/freelist:1:1",
    "codes": [
      2579
    ]
  },
  {
    "name": " node:_http_incoming:1:1",
    "codes": [
      2580
    ]
  },
  {
    "name": " node:_http_incoming:1:1",
    "codes": [
      2581
    ]
  },
  {
    "name": "FreeList node:internal/freelist:8:14",
    "codes": [
      2582
    ]
  },
  {
    "name": " node:_http_outgoing:1:1",
    "codes": [
      2583
    ]
  },
  {
    "name": " node:_http_outgoing:1:1",
    "codes": [
      2584
    ]
  },
  {
    "name": " node:internal/http:1:1",
    "codes": [
      2585
    ]
  },
  {
    "name": " node:internal/http:1:1",
    "codes": [
      2586
    ]
  },
  {
    "name": " node:diagnostics_channel:1:1",
    "codes": [
      2587
    ]
  },
  {
    "name": " node:diagnostics_channel:1:1",
    "codes": [
      2588
    ]
  },
  {
    "name": "channel node:diagnostics_channel:97:17",
    "codes": [
      2589
    ]
  },
  {
    "name": "Channel node:diagnostics_channel:67:14",
    "codes": [
      2590
    ]
  },
  {
    "name": " node:_http_server:1:1",
    "codes": [
      2591
    ]
  },
  {
    "name": " node:_http_server:1:1",
    "codes": [
      2592
    ]
  },
  {
    "name": "byteLength node:buffer:640:17",
    "codes": [
      2593
    ]
  },
  {
    "name": "write node:buffer:641:12",
    "codes": [
      2594
    ]
  },
  {
    "name": "get node:http:139:6",
    "codes": [
      2595
    ]
  },
  {
    "name": "get node:http:153:6",
    "codes": [
      2596
    ]
  },
  {
    "name": "getCurrentNodeMethods D:\\doc\\node.js\\mfg\\node_modules\\methods\\index.js:29:31",
    "codes": [
      2597
    ]
  },
  {
    "name": "lowerCaseMethod D:\\doc\\node.js\\mfg\\node_modules\\methods\\index.js:30:67",
    "codes": [
      2598,
      2605
    ]
  },
  {
    "name": " node:internal/validators:419:42",
    "codes": [
      2603
    ]
  },
  {
    "name": "debuglog node:internal/util/debuglog:71:18",
    "codes": [
      2604
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\router\\route.js:201:25",
    "codes": [
      2606,
      2619
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\utils-merge\\index.js:1:1",
    "codes": [
      2607
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\utils-merge\\index.js:1:1",
    "codes": [
      2608
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\setprototypeof\\index.js:1:1",
    "codes": [
      2609
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\setprototypeof\\index.js:1:1",
    "codes": [
      2610
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\router\\index.js:518:39",
    "codes": [
      2611,
      2623
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\middleware\\init.js:1:1",
    "codes": [
      2612
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\middleware\\init.js:1:1",
    "codes": [
      2613
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\middleware\\query.js:1:1",
    "codes": [
      2614
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\middleware\\query.js:1:1",
    "codes": [
      2615
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\qs\\lib\\index.js:1:1",
    "codes": [
      2616
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\qs\\lib\\index.js:1:1",
    "codes": [
      2617
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\qs\\lib\\stringify.js:1:1",
    "codes": [
      2626
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\qs\\lib\\stringify.js:1:1",
    "codes": [
      2627
    ]
  },
  {
    "name": "pathToFileURL node:internal/url:1529:23",
    "codes": [
      2628
    ]
  },
  {
    "name": "URL node:internal/url:638:14",
    "codes": [
      2629,
      2660
    ]
  },
  {
    "name": "URLContext node:internal/url:163:14",
    "codes": [
      2630,
      2665
    ]
  },
  {
    "name": "onParseComplete node:internal/url:546:25",
    "codes": [
      2631,
      2666
    ]
  },
  {
    "name": "URLSearchParams node:internal/url:185:14",
    "codes": [
      2632
    ]
  },
  {
    "name": "initSearchParams node:internal/url:1089:26",
    "codes": [
      2633,
      2698
    ]
  },
  {
    "name": "encodePathChars node:internal/url:1514:25",
    "codes": [
      2634
    ]
  },
  {
    "name": "set pathname node:internal/url:938:15",
    "codes": [
      2635
    ]
  },
  {
    "name": "isURLThis node:internal/url:633:19",
    "codes": [
      2636,
      2663
    ]
  },
  {
    "name": " node:internal/url:655:21",
    "codes": [
      2637,
      2664
    ]
  },
  {
    "name": "onParsePathComplete node:internal/url:605:29",
    "codes": [
      2638
    ]
  },
  {
    "name": "packageExportsResolve node:internal/modules/esm/resolve:625:31",
    "codes": [
      2639
    ]
  },
  {
    "name": "isConditionalExportsMainSugar node:internal/modules/esm/resolve:594:39",
    "codes": [
      2640
    ]
  },
  {
    "name": "resolvePackageTarget node:internal/modules/esm/resolve:519:30",
    "codes": [
      2641
    ]
  },
  {
    "name": "isArrayIndex node:internal/modules/esm/resolve:500:22",
    "codes": [
      2642
    ]
  },
  {
    "name": "resolvePackageTargetString node:internal/modules/esm/resolve:412:36",
    "codes": [
      2643
    ]
  },
  {
    "name": "toString node:internal/url:749:11",
    "codes": [
      2644,
      2701
    ]
  },
  {
    "name": " node:internal/url:701:12",
    "codes": [
      2645,
      2699
    ]
  },
  {
    "name": "get pathname node:internal/url:927:15",
    "codes": [
      2646,
      2700
    ]
  },
  {
    "name": "finalizeEsmResolution node:internal/modules/cjs/loader:1081:31",
    "codes": [
      2647
    ]
  },
  {
    "name": "fileURLToPath node:internal/url:1487:23",
    "codes": [
      2648
    ]
  },
  {
    "name": "get href node:internal/url:755:11",
    "codes": [
      2649
    ]
  },
  {
    "name": "get origin node:internal/url:772:13",
    "codes": [
      2650
    ]
  },
  {
    "name": "get protocol node:internal/url:797:15",
    "codes": [
      2651
    ]
  },
  {
    "name": "getPathFromURLWin32 node:internal/url:1434:29",
    "codes": [
      2652,
      2684
    ]
  },
  {
    "name": "get hostname node:internal/url:885:15",
    "codes": [
      2653
    ]
  },
  {
    "name": "SideEffectFreeRegExpPrototypeSymbolReplace node:internal/util:593:52",
    "codes": [
      2654
    ]
  },
  {
    "name": "getCrossRelmRegex node:internal/util:574:27",
    "codes": [
      2655
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\side-channel\\index.js:1:1",
    "codes": [
      2657
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\side-channel\\index.js:1:1",
    "codes": [
      2658
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\get-intrinsic\\index.js:1:1",
    "codes": [
      2668
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\get-intrinsic\\index.js:1:1",
    "codes": [
      2669
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\get-intrinsic\\index.js:29:14",
    "codes": [
      2670
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\has-symbols\\index.js:1:1",
    "codes": [
      2671
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\has-symbols\\index.js:1:1",
    "codes": [
      2672
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\has-symbols\\shams.js:1:1",
    "codes": [
      2673
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\has-symbols\\shams.js:1:1",
    "codes": [
      2674
    ]
  },
  {
    "name": "hasNativeSymbols D:\\doc\\node.js\\mfg\\node_modules\\has-symbols\\index.js:6:43",
    "codes": [
      2675
    ]
  },
  {
    "name": "hasSymbols D:\\doc\\node.js\\mfg\\node_modules\\has-symbols\\shams.js:4:37",
    "codes": [
      2676
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\function-bind\\index.js:1:1",
    "codes": [
      2677
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\function-bind\\index.js:1:1",
    "codes": [
      2678
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\function-bind\\implementation.js:1:1",
    "codes": [
      2679
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\function-bind\\implementation.js:1:1",
    "codes": [
      2680
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\has\\src\\index.js:1:1",
    "codes": [
      2681
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\has\\src\\index.js:1:1",
    "codes": [
      2682
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\call-bind\\callBound.js:1:1",
    "codes": [
      2687
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\call-bind\\callBound.js:1:1",
    "codes": [
      2688
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\call-bind\\index.js:1:1",
    "codes": [
      2689
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\call-bind\\index.js:1:1",
    "codes": [
      2690
    ]
  },
  {
    "name": "GetIntrinsic D:\\doc\\node.js\\mfg\\node_modules\\get-intrinsic\\index.js:263:39",
    "codes": [
      2691,
      2710
    ]
  },
  {
    "name": "stringToPath D:\\doc\\node.js\\mfg\\node_modules\\get-intrinsic\\index.js:220:41",
    "codes": [
      2692,
      2711
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\get-intrinsic\\index.js:229:40",
    "codes": [
      2694,
      2697
    ]
  },
  {
    "name": "getBaseIntrinsic D:\\doc\\node.js\\mfg\\node_modules\\get-intrinsic\\index.js:236:49",
    "codes": [
      2695
    ]
  },
  {
    "name": "callBind D:\\doc\\node.js\\mfg\\node_modules\\call-bind\\index.js:23:35",
    "codes": [
      2702
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\object-inspect\\index.js:1:1",
    "codes": [
      2704
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\object-inspect\\index.js:1:1",
    "codes": [
      2705
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\object-inspect\\util.inspect.js:1:1",
    "codes": [
      2706
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\object-inspect\\util.inspect.js:1:1",
    "codes": [
      2707
    ]
  },
  {
    "name": "isSymbol D:\\doc\\node.js\\mfg\\node_modules\\object-inspect\\index.js:276:18",
    "codes": [
      2708
    ]
  },
  {
    "name": "callBoundIntrinsic D:\\doc\\node.js\\mfg\\node_modules\\call-bind\\callBound.js:9:45",
    "codes": [
      2709
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\qs\\lib\\utils.js:1:1",
    "codes": [
      2712
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\qs\\lib\\utils.js:1:1",
    "codes": [
      2713
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\qs\\lib\\utils.js:8:26",
    "codes": [
      2714,
      2733
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\qs\\lib\\formats.js:1:1",
    "codes": [
      2715
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\qs\\lib\\formats.js:1:1",
    "codes": [
      2716
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\qs\\lib\\parse.js:1:1",
    "codes": [
      2717
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\qs\\lib\\parse.js:1:1",
    "codes": [
      2718
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\view.js:1:1",
    "codes": [
      2719
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\view.js:1:1",
    "codes": [
      2720
    ]
  },
  {
    "name": "get ReadStream node:fs:3080:17",
    "codes": [
      2721
    ]
  },
  {
    "name": "lazyLoadStreams node:fs:2935:25",
    "codes": [
      2722
    ]
  },
  {
    "name": " node:internal/fs/streams:1:1",
    "codes": [
      2723
    ]
  },
  {
    "name": " node:internal/fs/streams:1:1",
    "codes": [
      2724
    ]
  },
  {
    "name": "get WriteStream node:fs:3089:18",
    "codes": [
      2725
    ]
  },
  {
    "name": "get FileReadStream node:fs:3100:21",
    "codes": [
      2726
    ]
  },
  {
    "name": "get FileWriteStream node:fs:3109:22",
    "codes": [
      2727
    ]
  },
  {
    "name": "get node:fs:3137:8",
    "codes": [
      2728
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\utils.js:1:1",
    "codes": [
      2729
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\utils.js:1:1",
    "codes": [
      2730
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\safe-buffer\\index.js:1:1",
    "codes": [
      2735
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\safe-buffer\\index.js:1:1",
    "codes": [
      2736
    ]
  },
  {
    "name": "get node:buffer:1372:8",
    "codes": [
      2737
    ]
  },
  {
    "name": "copyProps D:\\doc\\node.js\\mfg\\node_modules\\safe-buffer\\index.js:7:20",
    "codes": [
      2738
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\content-disposition\\index.js:1:1",
    "codes": [
      2739
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\content-disposition\\index.js:1:1",
    "codes": [
      2740
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\content-type\\index.js:1:1",
    "codes": [
      2742
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\content-type\\index.js:1:1",
    "codes": [
      2743
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\send\\index.js:1:1",
    "codes": [
      2744
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\send\\index.js:1:1",
    "codes": [
      2745
    ]
  },
  {
    "name": "reportModuleNotFoundToWatchMode node:internal/modules/cjs/loader:218:41",
    "codes": [
      2746
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\http-errors\\index.js:1:1",
    "codes": [
      2747
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\http-errors\\index.js:1:1",
    "codes": [
      2748
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\inherits\\inherits.js:1:1",
    "codes": [
      2749
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\inherits\\inherits.js:1:1",
    "codes": [
      2750
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\toidentifier\\index.js:1:1",
    "codes": [
      2751
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\toidentifier\\index.js:1:1",
    "codes": [
      2752
    ]
  },
  {
    "name": "createHttpErrorConstructor D:\\doc\\node.js\\mfg\\node_modules\\http-errors\\index.js:112:37",
    "codes": [
      2753
    ]
  },
  {
    "name": "inherits node:util:243:18",
    "codes": [
      2754,
      2778
    ]
  },
  {
    "name": "createIsHttpErrorFunction D:\\doc\\node.js\\mfg\\node_modules\\http-errors\\index.js:175:36",
    "codes": [
      2755
    ]
  },
  {
    "name": "populateConstructorExports D:\\doc\\node.js\\mfg\\node_modules\\http-errors\\index.js:258:37",
    "codes": [
      2756
    ]
  },
  {
    "name": "forEachCode D:\\doc\\node.js\\mfg\\node_modules\\http-errors\\index.js:259:38",
    "codes": [
      2757,
      2774
    ]
  },
  {
    "name": "toIdentifier D:\\doc\\node.js\\mfg\\node_modules\\toidentifier\\index.js:24:23",
    "codes": [
      2758,
      2763
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\toidentifier\\index.js:27:19",
    "codes": [
      2759,
      2767
    ]
  },
  {
    "name": "codeClass D:\\doc\\node.js\\mfg\\node_modules\\http-errors\\index.js:38:20",
    "codes": [
      2760,
      2773
    ]
  },
  {
    "name": "createClientErrorConstructor D:\\doc\\node.js\\mfg\\node_modules\\http-errors\\index.js:127:39",
    "codes": [
      2768,
      2777
    ]
  },
  {
    "name": "toClassName D:\\doc\\node.js\\mfg\\node_modules\\http-errors\\index.js:285:22",
    "codes": [
      2769,
      2775
    ]
  },
  {
    "name": "nameFunc D:\\doc\\node.js\\mfg\\node_modules\\http-errors\\index.js:244:19",
    "codes": [
      2770,
      2776
    ]
  },
  {
    "name": "createServerErrorConstructor D:\\doc\\node.js\\mfg\\node_modules\\http-errors\\index.js:196:39",
    "codes": [
      2771,
      2772
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\destroy\\index.js:1:1",
    "codes": [
      2779
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\destroy\\index.js:1:1",
    "codes": [
      2780
    ]
  },
  {
    "name": "get node:stream:109:6",
    "codes": [
      2781
    ]
  },
  {
    "name": " node:zlib:1:1",
    "codes": [
      2782
    ]
  },
  {
    "name": " node:zlib:1:1",
    "codes": [
      2783
    ]
  },
  {
    "name": "fromArrayBuffer node:buffer:461:25",
    "codes": [
      2784
    ]
  },
  {
    "name": " node:zlib:806:3",
    "codes": [
      2785,
      2816
    ]
  },
  {
    "name": "createConvenienceMethod node:zlib:789:33",
    "codes": [
      2786,
      2817
    ]
  },
  {
    "name": "createProperty node:zlib:874:24",
    "codes": [
      2787,
      2818
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\etag\\index.js:1:1",
    "codes": [
      2788
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\etag\\index.js:1:1",
    "codes": [
      2789
    ]
  },
  {
    "name": "get node:crypto:369:8",
    "codes": [
      2790
    ]
  },
  {
    "name": "lazyWebCrypto node:crypto:125:23",
    "codes": [
      2791
    ]
  },
  {
    "name": " node:internal/crypto/webcrypto:1:1",
    "codes": [
      2792
    ]
  },
  {
    "name": " node:internal/crypto/webcrypto:1:1",
    "codes": [
      2793
    ]
  },
  {
    "name": " node:internal/crypto/webcrypto:743:41",
    "codes": [
      2794
    ]
  },
  {
    "name": "SubtleCrypto node:internal/crypto/webcrypto:739:14",
    "codes": [
      2795
    ]
  },
  {
    "name": " node:internal/crypto/webcrypto:755:41",
    "codes": [
      2796
    ]
  },
  {
    "name": "Crypto node:internal/crypto/webcrypto:746:14",
    "codes": [
      2797
    ]
  },
  {
    "name": "get node:crypto:377:8",
    "codes": [
      2798
    ]
  },
  {
    "name": "get subtle node:internal/crypto/webcrypto:750:13",
    "codes": [
      2799
    ]
  },
  {
    "name": "get node:crypto:385:10",
    "codes": [
      2800
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\fresh\\index.js:1:1",
    "codes": [
      2801
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\fresh\\index.js:1:1",
    "codes": [
      2802
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\mime\\mime.js:1:1",
    "codes": [
      2803
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\mime\\mime.js:1:1",
    "codes": [
      2804
    ]
  },
  {
    "name": "Mime D:\\doc\\node.js\\mfg\\node_modules\\mime\\mime.js:4:14",
    "codes": [
      2805
    ]
  },
  {
    "name": "Mime.define D:\\doc\\node.js\\mfg\\node_modules\\mime\\mime.js:21:34",
    "codes": [
      2806,
      2820
    ]
  },
  {
    "name": "Mime.lookup D:\\doc\\node.js\\mfg\\node_modules\\mime\\mime.js:69:33",
    "codes": [
      2807
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\send\\node_modules\\ms\\index.js:1:1",
    "codes": [
      2808
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\send\\node_modules\\ms\\index.js:1:1",
    "codes": [
      2809
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\range-parser\\index.js:1:1",
    "codes": [
      2810
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\range-parser\\index.js:1:1",
    "codes": [
      2811
    ]
  },
  {
    "name": " :1:1",
    "codes": [
      2812
    ]
  },
  {
    "name": " :1:20",
    "codes": [
      2813
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\proxy-addr\\index.js:1:1",
    "codes": [
      2824
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\proxy-addr\\index.js:1:1",
    "codes": [
      2825
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\forwarded\\index.js:1:1",
    "codes": [
      2826
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\forwarded\\index.js:1:1",
    "codes": [
      2827
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\ipaddr.js\\lib\\ipaddr.js:1:1",
    "codes": [
      2828
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\ipaddr.js\\lib\\ipaddr.js:1:1",
    "codes": [
      2829
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\ipaddr.js\\lib\\ipaddr.js:1:10",
    "codes": [
      2830
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\ipaddr.js\\lib\\ipaddr.js:199:26",
    "codes": [
      2831
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\ipaddr.js\\lib\\ipaddr.js:56:26",
    "codes": [
      2832
    ]
  },
  {
    "name": "IPv4 D:\\doc\\node.js\\mfg\\node_modules\\ipaddr.js\\lib\\ipaddr.js:57:18",
    "codes": [
      2833,
      2856
    ]
  },
  {
    "name": "IPv6 D:\\doc\\node.js\\mfg\\node_modules\\ipaddr.js\\lib\\ipaddr.js:200:18",
    "codes": [
      2834,
      2857
    ]
  },
  {
    "name": "createETagGenerator D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\utils.js:272:30",
    "codes": [
      2835
    ]
  },
  {
    "name": " :1:1",
    "codes": [
      2836
    ]
  },
  {
    "name": " :1:20",
    "codes": [
      2837
    ]
  },
  {
    "name": " :1:1",
    "codes": [
      2838
    ]
  },
  {
    "name": " :1:20",
    "codes": [
      2839
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\application.js:489:25",
    "codes": [
      2840,
      2860
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\request.js:1:1",
    "codes": [
      2841
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\request.js:1:1",
    "codes": [
      2842
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\accepts\\index.js:1:1",
    "codes": [
      2843
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\accepts\\index.js:1:1",
    "codes": [
      2844
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\negotiator\\index.js:1:1",
    "codes": [
      2845
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\negotiator\\index.js:1:1",
    "codes": [
      2846
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\negotiator\\lib\\charset.js:1:1",
    "codes": [
      2847
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\negotiator\\lib\\charset.js:1:1",
    "codes": [
      2848
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\negotiator\\lib\\encoding.js:1:1",
    "codes": [
      2849
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\negotiator\\lib\\encoding.js:1:1",
    "codes": [
      2850
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\negotiator\\lib\\language.js:1:1",
    "codes": [
      2851
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\negotiator\\lib\\language.js:1:1",
    "codes": [
      2852
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\negotiator\\lib\\mediaType.js:1:1",
    "codes": [
      2853
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\negotiator\\lib\\mediaType.js:1:1",
    "codes": [
      2854
    ]
  },
  {
    "name": "markAsUntransferable node:internal/buffer:1050:30",
    "codes": [
      2855
    ]
  },
  {
    "name": "createPool node:buffer:162:20",
    "codes": [
      2861
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\mime-types\\index.js:1:1",
    "codes": [
      2862
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\mime-types\\index.js:1:1",
    "codes": [
      2863
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\mime-db\\index.js:1:1",
    "codes": [
      2864
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\mime-db\\index.js:1:1",
    "codes": [
      2865
    ]
  },
  {
    "name": "populateMaps D:\\doc\\node.js\\mfg\\node_modules\\mime-types\\index.js:154:23",
    "codes": [
      2866
    ]
  },
  {
    "name": "forEachMimeType D:\\doc\\node.js\\mfg\\node_modules\\mime-types\\index.js:158:52",
    "codes": [
      2867,
      2891
    ]
  },
  {
    "name": "get SocketAddress node:net:2239:20",
    "codes": [
      2868
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\type-is\\index.js:1:1",
    "codes": [
      2869
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\type-is\\index.js:1:1",
    "codes": [
      2870
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\media-typer\\index.js:1:1",
    "codes": [
      2871
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\media-typer\\index.js:1:1",
    "codes": [
      2872
    ]
  },
  {
    "name": " :1:1",
    "codes": [
      2873
    ]
  },
  {
    "name": " :1:20",
    "codes": [
      2874
    ]
  },
  {
    "name": " :1:1",
    "codes": [
      2875
    ]
  },
  {
    "name": " :1:20",
    "codes": [
      2876
    ]
  },
  {
    "name": "defineGetter D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\request.js:519:22",
    "codes": [
      2877,
      2893
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\response.js:1:1",
    "codes": [
      2878
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\response.js:1:1",
    "codes": [
      2879
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\cookie-signature\\index.js:1:1",
    "codes": [
      2880
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\cookie-signature\\index.js:1:1",
    "codes": [
      2881
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\cookie\\index.js:1:1",
    "codes": [
      2882
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\cookie\\index.js:1:1",
    "codes": [
      2883
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\vary\\index.js:1:1",
    "codes": [
      2884
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\vary\\index.js:1:1",
    "codes": [
      2885
    ]
  },
  {
    "name": " :1:1",
    "codes": [
      2886
    ]
  },
  {
    "name": " :1:20",
    "codes": [
      2887
    ]
  },
  {
    "name": "get D:\\doc\\node.js\\mfg\\node_modules\\body-parser\\index.js:121:23",
    "codes": [
      2888
    ]
  },
  {
    "name": "loadParser D:\\doc\\node.js\\mfg\\node_modules\\body-parser\\index.js:131:21",
    "codes": [
      2889
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\body-parser\\lib\\types\\json.js:1:1",
    "codes": [
      2894
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\body-parser\\lib\\types\\json.js:1:1",
    "codes": [
      2895
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\bytes\\index.js:1:1",
    "codes": [
      2896
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\bytes\\index.js:1:1",
    "codes": [
      2897
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\body-parser\\lib\\read.js:1:1",
    "codes": [
      2898
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\body-parser\\lib\\read.js:1:1",
    "codes": [
      2899
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\raw-body\\index.js:1:1",
    "codes": [
      2900
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\raw-body\\index.js:1:1",
    "codes": [
      2901
    ]
  },
  {
    "name": "tryRequireAsyncHooks D:\\doc\\node.js\\mfg\\node_modules\\raw-body\\index.js:300:31",
    "codes": [
      2902
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\iconv-lite\\lib\\index.js:1:1",
    "codes": [
      2903
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\iconv-lite\\lib\\index.js:1:1",
    "codes": [
      2904
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\safer-buffer\\safer.js:1:1",
    "codes": [
      2905
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\safer-buffer\\safer.js:1:1",
    "codes": [
      2906
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\iconv-lite\\lib\\bom-handling.js:1:1",
    "codes": [
      2907
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\iconv-lite\\lib\\bom-handling.js:1:1",
    "codes": [
      2908
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\iconv-lite\\lib\\streams.js:1:1",
    "codes": [
      2909
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\iconv-lite\\lib\\streams.js:1:1",
    "codes": [
      2910
    ]
  },
  {
    "name": "module.exports D:\\doc\\node.js\\mfg\\node_modules\\iconv-lite\\lib\\streams.js:8:26",
    "codes": [
      2911
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\iconv-lite\\lib\\extend-node.js:1:1",
    "codes": [
      2912
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\iconv-lite\\lib\\extend-node.js:1:1",
    "codes": [
      2913
    ]
  },
  {
    "name": "module.exports D:\\doc\\node.js\\mfg\\node_modules\\iconv-lite\\lib\\extend-node.js:7:27",
    "codes": [
      2914
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\body-parser\\lib\\types\\raw.js:1:1",
    "codes": [
      2915
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\body-parser\\lib\\types\\raw.js:1:1",
    "codes": [
      2916
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\serve-static\\index.js:1:1",
    "codes": [
      2917
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\serve-static\\index.js:1:1",
    "codes": [
      2918
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\body-parser\\lib\\types\\text.js:1:1",
    "codes": [
      2919
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\body-parser\\lib\\types\\text.js:1:1",
    "codes": [
      2920
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\body-parser\\lib\\types\\urlencoded.js:1:1",
    "codes": [
      2921
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\body-parser\\lib\\types\\urlencoded.js:1:1",
    "codes": [
      2922
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\express.js:109:37",
    "codes": [
      2923,
      3010
    ]
  },
  {
    "name": "getExportsForCircularRequire node:internal/modules/cjs/loader:862:38",
    "codes": [
      2924
    ]
  },
  {
    "name": "createApplication D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\express.js:37:27",
    "codes": [
      2925
    ]
  },
  {
    "name": "merge D:\\doc\\node.js\\mfg\\node_modules\\merge-descriptors\\index.js:34:15",
    "codes": [
      2926
    ]
  },
  {
    "name": "forEachOwnPropertyName D:\\doc\\node.js\\mfg\\node_modules\\merge-descriptors\\index.js:48:74",
    "codes": [
      2927,
      3011
    ]
  },
  {
    "name": "init D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\application.js:64:25",
    "codes": [
      2928
    ]
  },
  {
    "name": "defaultConfiguration D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\application.js:77:57",
    "codes": [
      2929
    ]
  },
  {
    "name": "enable D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\application.js:469:29",
    "codes": [
      2930
    ]
  },
  {
    "name": "set D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\application.js:359:23",
    "codes": [
      2931
    ]
  },
  {
    "name": "debug D:\\doc\\node.js\\mfg\\node_modules\\debug\\src\\debug.js:65:17",
    "codes": [
      2932
    ]
  },
  {
    "name": "exports.compileETag D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\utils.js:152:31",
    "codes": [
      2933
    ]
  },
  {
    "name": "compileQueryParser D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\utils.js:184:57",
    "codes": [
      2934
    ]
  },
  {
    "name": "exports.compileTrust D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\utils.js:217:32",
    "codes": [
      2935
    ]
  },
  {
    "name": "compile D:\\doc\\node.js\\mfg\\node_modules\\proxy-addr\\index.js:84:18",
    "codes": [
      2936
    ]
  },
  {
    "name": "compileRangeSubnets D:\\doc\\node.js\\mfg\\node_modules\\proxy-addr\\index.js:122:30",
    "codes": [
      2937
    ]
  },
  {
    "name": "compileTrust D:\\doc\\node.js\\mfg\\node_modules\\proxy-addr\\index.js:139:23",
    "codes": [
      2938
    ]
  },
  {
    "name": "app.<computed> D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\application.js:490:25",
    "codes": [
      2939
    ]
  },
  {
    "name": "lazyrouter D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\application.js:144:37",
    "codes": [
      2940
    ]
  },
  {
    "name": "enabled D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\application.js:438:31",
    "codes": [
      2941
    ]
  },
  {
    "name": "module.exports D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\router\\index.js:43:38",
    "codes": [
      2942
    ]
  },
  {
    "name": "query D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\middleware\\query.js:25:32",
    "codes": [
      2943
    ]
  },
  {
    "name": "module.exports D:\\doc\\node.js\\mfg\\node_modules\\utils-merge\\index.js:16:36",
    "codes": [
      2944
    ]
  },
  {
    "name": "use D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\router\\index.js:439:25",
    "codes": [
      2945
    ]
  },
  {
    "name": "arrayFlatten D:\\doc\\node.js\\mfg\\node_modules\\array-flatten\\array-flatten.js:58:23",
    "codes": [
      2946
    ]
  },
  {
    "name": "flattenForever D:\\doc\\node.js\\mfg\\node_modules\\array-flatten\\array-flatten.js:37:25",
    "codes": [
      2947
    ]
  },
  {
    "name": "Layer D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\router\\layer.js:33:15",
    "codes": [
      2948
    ]
  },
  {
    "name": "pathtoRegexp D:\\doc\\node.js\\mfg\\node_modules\\path-to-regexp\\index.js:28:22",
    "codes": [
      2949
    ]
  },
  {
    "name": "exports.init D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\middleware\\init.js:28:24",
    "codes": [
      2952
    ]
  },
  {
    "name": "route D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\router\\index.js:502:29",
    "codes": [
      2954
    ]
  },
  {
    "name": "Route D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\router\\route.js:43:15",
    "codes": [
      2955
    ]
  },
  {
    "name": "Route.<computed> D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\router\\route.js:202:37",
    "codes": [
      2956
    ]
  },
  {
    "name": "listen D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\application.js:633:29",
    "codes": [
      2957
    ]
  },
  {
    "name": "createServer node:http:60:22",
    "codes": [
      2958
    ]
  },
  {
    "name": "Server node:_http_server:495:16",
    "codes": [
      2959
    ]
  },
  {
    "name": "Server node:net:1585:16",
    "codes": [
      2960
    ]
  },
  {
    "name": "storeHTTPOptions node:_http_server:425:26",
    "codes": [
      2961
    ]
  },
  {
    "name": "setupConnectionsTracking node:_http_server:485:34",
    "codes": [
      2962
    ]
  },
  {
    "name": "setInterval node:timers:210:21",
    "codes": [
      2963
    ]
  },
  {
    "name": "Timeout node:internal/timers:169:14",
    "codes": [
      2964
    ]
  },
  {
    "name": "incRefCount node:internal/timers:309:21",
    "codes": [
      2965
    ]
  },
  {
    "name": "initAsyncResource node:internal/timers:159:27",
    "codes": [
      2966
    ]
  },
  {
    "name": "newAsyncId node:internal/async_hooks:416:20",
    "codes": [
      2967
    ]
  },
  {
    "name": "getDefaultTriggerAsyncId node:internal/async_hooks:432:34",
    "codes": [
      2968
    ]
  },
  {
    "name": "initHooksExist node:internal/async_hooks:478:24",
    "codes": [
      2969
    ]
  },
  {
    "name": "hasHooks node:internal/async_hooks:470:18",
    "codes": [
      2970
    ]
  },
  {
    "name": "insert node:internal/timers:360:16",
    "codes": [
      2971
    ]
  },
  {
    "name": " node:internal/timers:124:65",
    "codes": [
      2972
    ]
  },
  {
    "name": "TimersList node:internal/timers:245:14",
    "codes": [
      2973
    ]
  },
  {
    "name": "insert node:internal/priority_queue:26:9",
    "codes": [
      2974
    ]
  },
  {
    "name": "percolateUp node:internal/priority_queue:65:14",
    "codes": [
      2975
    ]
  },
  {
    "name": "setPosition node:internal/timers:421:21",
    "codes": [
      2976
    ]
  },
  {
    "name": "append node:internal/linkedlist:30:16",
    "codes": [
      2977
    ]
  },
  {
    "name": "remove node:internal/linkedlist:16:16",
    "codes": [
      2978
    ]
  },
  {
    "name": "unref node:internal/timers:221:8",
    "codes": [
      2979
    ]
  },
  {
    "name": "decRefCount node:internal/timers:314:21",
    "codes": [
      2980
    ]
  },
  {
    "name": "parseUniqueHeadersOption node:_http_outgoing:647:34",
    "codes": [
      2981
    ]
  },
  {
    "name": "Server.listen node:net:1821:35",
    "codes": [
      2982
    ]
  },
  {
    "name": "normalizeArgs node:net:257:23",
    "codes": [
      2983
    ]
  },
  {
    "name": "isPipeName node:net:197:20",
    "codes": [
      2984
    ]
  },
  {
    "name": "once node:events:646:44",
    "codes": [
      2985
    ]
  },
  {
    "name": "_onceWrap node:events:632:19",
    "codes": [
      2986
    ]
  },
  {
    "name": "toNumber node:net:1632:18",
    "codes": [
      2987
    ]
  },
  {
    "name": "getFlags node:net:168:18",
    "codes": [
      2988
    ]
  },
  {
    "name": "addAbortSignalOption node:net:1568:30",
    "codes": [
      2989
    ]
  },
  {
    "name": "listenInCluster node:net:1778:25",
    "codes": [
      2990
    ]
  },
  {
    "name": " node:cluster:1:1",
    "codes": [
      2991
    ]
  },
  {
    "name": " node:cluster:1:1",
    "codes": [
      2992
    ]
  },
  {
    "name": " node:internal/cluster/primary:1:1",
    "codes": [
      2993
    ]
  },
  {
    "name": " node:internal/cluster/primary:1:1",
    "codes": [
      2994
    ]
  },
  {
    "name": " node:child_process:1:1",
    "codes": [
      2995
    ]
  },
  {
    "name": " node:child_process:1:1",
    "codes": [
      2996
    ]
  },
  {
    "name": " node:internal/child_process:1:1",
    "codes": [
      2997
    ]
  },
  {
    "name": " node:internal/child_process:1:1",
    "codes": [
      2998
    ]
  },
  {
    "name": "<instance_members_initializer> node:internal/child_process:522:1",
    "codes": [
      2999
    ]
  },
  {
    "name": " node:dgram:1:1",
    "codes": [
      3000
    ]
  },
  {
    "name": " node:dgram:1:1",
    "codes": [
      3001
    ]
  },
  {
    "name": " node:internal/dgram:1:1",
    "codes": [
      3002
    ]
  },
  {
    "name": " node:internal/dgram:1:1",
    "codes": [
      3003
    ]
  },
  {
    "name": "deprecate node:internal/util:112:19",
    "codes": [
      3004
    ]
  },
  {
    "name": "checkListener node:events:265:23",
    "codes": [
      3012
    ]
  },
  {
    "name": " node:internal/socket_list:1:1",
    "codes": [
      3013
    ]
  },
  {
    "name": " node:internal/socket_list:1:1",
    "codes": [
      3014
    ]
  },
  {
    "name": "customPromiseExecFunction node:child_process:237:35",
    "codes": [
      3015
    ]
  },
  {
    "name": " node:internal/cluster/round_robin_handle:1:1",
    "codes": [
      3016
    ]
  },
  {
    "name": " node:internal/cluster/round_robin_handle:1:1",
    "codes": [
      3017
    ]
  },
  {
    "name": " node:internal/cluster/utils:1:1",
    "codes": [
      3018
    ]
  },
  {
    "name": " node:internal/cluster/utils:1:1",
    "codes": [
      3019
    ]
  },
  {
    "name": " node:internal/cluster/shared_handle:1:1",
    "codes": [
      3020
    ]
  },
  {
    "name": " node:internal/cluster/shared_handle:1:1",
    "codes": [
      3021
    ]
  },
  {
    "name": " node:internal/cluster/worker:1:1",
    "codes": [
      3022
    ]
  },
  {
    "name": " node:internal/cluster/worker:1:1",
    "codes": [
      3023
    ]
  },
  {
    "name": "setupListenHandle node:net:1693:27",
    "codes": [
      3024
    ]
  },
  {
    "name": " node:net:42:63",
    "codes": [
      3025
    ]
  },
  {
    "name": "createServerHandle node:net:1635:28",
    "codes": [
      3026
    ]
  },
  {
    "name": "defaultTriggerAsyncIdScope node:internal/async_hooks:455:36",
    "codes": [
      3027
    ]
  },
  {
    "name": "nextTick node:internal/process/task_queues:103:18",
    "codes": [
      3028
    ]
  },
  {
    "name": "get node:internal/bootstrap/node:92:8",
    "codes": [
      3029
    ]
  },
  {
    "name": "isEmpty node:internal/fixed_queue:95:10",
    "codes": [
      3030
    ]
  },
  {
    "name": "isEmpty node:internal/fixed_queue:67:10",
    "codes": [
      3031
    ]
  },
  {
    "name": "setHasTickScheduled node:internal/process/task_queues:51:29",
    "codes": [
      3032
    ]
  },
  {
    "name": "push node:internal/fixed_queue:99:7",
    "codes": [
      3033
    ]
  },
  {
    "name": "isFull node:internal/fixed_queue:71:9",
    "codes": [
      3034
    ]
  },
  {
    "name": "push node:internal/fixed_queue:75:7",
    "codes": [
      3035
    ]
  },
  {
    "name": "processTicksAndRejections node:internal/process/task_queues:67:35",
    "codes": [
      3036
    ]
  },
  {
    "name": "shift node:internal/fixed_queue:108:8",
    "codes": [
      3037
    ]
  },
  {
    "name": "shift node:internal/fixed_queue:80:8",
    "codes": [
      3038
    ]
  },
  {
    "name": "emitBeforeScript node:internal/async_hooks:509:26",
    "codes": [
      3039
    ]
  },
  {
    "name": "pushAsyncContext node:internal/async_hooks:539:26",
    "codes": [
      3040
    ]
  },
  {
    "name": "emitListeningNT node:net:1771:25",
    "codes": [
      3041
    ]
  },
  {
    "name": "onceWrapper node:events:622:21",
    "codes": [
      3042
    ]
  },
  {
    "name": "removeListener node:events:675:28",
    "codes": [
      3043
    ]
  },
  {
    "name": " D:\\doc\\node.js\\mfg\\index.js:18:20",
    "codes": [
      3044
    ]
  },
  {
    "name": "log node:internal/console/constructor:376:6",
    "codes": [
      3045
    ]
  },
  {
    "name": "value node:internal/console/constructor:337:20",
    "codes": [
      3046
    ]
  },
  {
    "name": "get node:internal/console/constructor:209:14",
    "codes": [
      3047
    ]
  },
  {
    "name": "getStdout node:internal/bootstrap/switches/is_main_thread:146:19",
    "codes": [
      3048
    ]
  },
  {
    "name": "value node:internal/console/constructor:315:20",
    "codes": [
      3049
    ]
  },
  {
    "name": "formatWithOptions node:internal/util/inspect:2133:27",
    "codes": [
      3050
    ]
  },
  {
    "name": "formatWithOptionsInternal node:internal/util/inspect:2154:35",
    "codes": [
      3051
    ]
  },
  {
    "name": "value node:internal/console/constructor:272:20",
    "codes": [
      3052
    ]
  },
  {
    "name": "listenerCount node:events:840:23",
    "codes": [
      3053
    ]
  },
  {
    "name": "Writable.write node:internal/streams/writable:336:36",
    "codes": [
      3054
    ]
  },
  {
    "name": "_write node:internal/streams/writable:286:16",
    "codes": [
      3055
    ]
  },
  {
    "name": "writeOrBuffer node:internal/streams/writable:368:23",
    "codes": [
      3056
    ]
  },
  {
    "name": " node:internal/net:52:18",
    "codes": [
      3057
    ]
  },
  {
    "name": "onwrite node:internal/streams/writable:428:17",
    "codes": [
      3058
    ]
  },
  {
    "name": "Readable.removeListener node:internal/streams/readable:916:45",
    "codes": [
      3059
    ]
  },
  {
    "name": "destroyHooksExist node:internal/async_hooks:486:27",
    "codes": [
      3060
    ]
  },
  {
    "name": "emitAfterScript node:internal/async_hooks:517:25",
    "codes": [
      3061
    ]
  },
  {
    "name": "popAsyncContext node:internal/async_hooks:553:25",
    "codes": [
      3062
    ]
  },
  {
    "name": "enabledHooksExist node:internal/async_hooks:474:27",
    "codes": [
      3063
    ]
  },
  {
    "name": "afterWriteTick node:internal/streams/writable:485:24",
    "codes": [
      3064
    ]
  },
  {
    "name": "afterWrite node:internal/streams/writable:490:20",
    "codes": [
      3065
    ]
  },
  {
    "name": "get node:internal/streams/duplex:103:8",
    "codes": [
      3066
    ]
  },
  {
    "name": " node:internal/console/constructor:356:10",
    "codes": [
      3067
    ]
  },
  {
    "name": "finishMaybe node:internal/streams/writable:718:21",
    "codes": [
      3068
    ]
  },
  {
    "name": "needFinish node:internal/streams/writable:653:20",
    "codes": [
      3069
    ]
  },
  {
    "name": "processPromiseRejections node:internal/process/promises:220:34",
    "codes": [
      3070
    ]
  },
  {
    "name": "setHasRejectionToWarn node:internal/process/promises:77:31",
    "codes": [
      3071
    ]
  }
],
  "ticks": [
  ],
  "scripts": [
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  {
    "url": "node:internal/per_context/primordials",
    "source": "'use strict';\r\n\r\n/* eslint-disable node-core/prefer-primordials */\r\n\r\n// This file subclasses and stores the JS builtins that come from the VM\r\n// so that Node.js's builtin modules do not need to later look these up from\r\n// the global proxy, which can be mutated by users.\r\n\r\n// Use of primordials have sometimes a dramatic impact on performance, please\r\n// benchmark all changes made in performance-sensitive areas of the codebase.\r\n// See: https://github.com/nodejs/node/pull/38248\r\n\r\nconst {\r\n  defineProperty: ReflectDefineProperty,\r\n  getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor,\r\n  ownKeys: ReflectOwnKeys,\r\n} = Reflect;\r\n\r\n// `uncurryThis` is equivalent to `func => Function.prototype.call.bind(func)`.\r\n// It is using `bind.bind(call)` to avoid using `Function.prototype.bind`\r\n// and `Function.prototype.call` after it may have been mutated by users.\r\nconst { apply, bind, call } = Function.prototype;\r\nconst uncurryThis = bind.bind(call);\r\nprimordials.uncurryThis = uncurryThis;\r\n\r\n// `applyBind` is equivalent to `func => Function.prototype.apply.bind(func)`.\r\n// It is using `bind.bind(apply)` to avoid using `Function.prototype.bind`\r\n// and `Function.prototype.apply` after it may have been mutated by users.\r\nconst applyBind = bind.bind(apply);\r\nprimordials.applyBind = applyBind;\r\n\r\n// Methods that accept a variable number of arguments, and thus it's useful to\r\n// also create `${prefix}${key}Apply`, which uses `Function.prototype.apply`,\r\n// instead of `Function.prototype.call`, and thus doesn't require iterator\r\n// destructuring.\r\nconst varargsMethods = [\r\n  // 'ArrayPrototypeConcat' is omitted, because it performs the spread\r\n  // on its own for arrays and array-likes with a truthy\r\n  // @@isConcatSpreadable symbol property.\r\n  'ArrayOf',\r\n  'ArrayPrototypePush',\r\n  'ArrayPrototypeUnshift',\r\n  // 'FunctionPrototypeCall' is omitted, since there's 'ReflectApply'\r\n  // and 'FunctionPrototypeApply'.\r\n  'MathHypot',\r\n  'MathMax',\r\n  'MathMin',\r\n  'StringFromCharCode',\r\n  'StringFromCodePoint',\r\n  'StringPrototypeConcat',\r\n  'TypedArrayOf',\r\n];\r\n\r\nfunction getNewKey(key) {\r\n  return typeof key === 'symbol' ?\r\n    `Symbol${key.description[7].toUpperCase()}${key.description.slice(8)}` :\r\n    `${key[0].toUpperCase()}${key.slice(1)}`;\r\n}\r\n\r\nfunction copyAccessor(dest, prefix, key, { enumerable, get, set }) {\r\n  ReflectDefineProperty(dest, `${prefix}Get${key}`, {\r\n    __proto__: null,\r\n    value: uncurryThis(get),\r\n    enumerable\r\n  });\r\n  if (set !== undefined) {\r\n    ReflectDefineProperty(dest, `${prefix}Set${key}`, {\r\n      __proto__: null,\r\n      value: uncurryThis(set),\r\n      enumerable\r\n    });\r\n  }\r\n}\r\n\r\nfunction copyPropsRenamed(src, dest, prefix) {\r\n  for (const key of ReflectOwnKeys(src)) {\r\n    const newKey = getNewKey(key);\r\n    const desc = ReflectGetOwnPropertyDescriptor(src, key);\r\n    if ('get' in desc) {\r\n      copyAccessor(dest, prefix, newKey, desc);\r\n    } else {\r\n      const name = `${prefix}${newKey}`;\r\n      ReflectDefineProperty(dest, name, { __proto__: null, ...desc });\r\n      if (varargsMethods.includes(name)) {\r\n        ReflectDefineProperty(dest, `${name}Apply`, {\r\n          __proto__: null,\r\n          // `src` is bound as the `this` so that the static `this` points\r\n          // to the object it was defined on,\r\n          // e.g.: `ArrayOfApply` gets a `this` of `Array`:\r\n          value: applyBind(desc.value, src),\r\n        });\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction copyPropsRenamedBound(src, dest, prefix) {\r\n  for (const key of ReflectOwnKeys(src)) {\r\n    const newKey = getNewKey(key);\r\n    const desc = ReflectGetOwnPropertyDescriptor(src, key);\r\n    if ('get' in desc) {\r\n      copyAccessor(dest, prefix, newKey, desc);\r\n    } else {\r\n      const { value } = desc;\r\n      if (typeof value === 'function') {\r\n        desc.value = value.bind(src);\r\n      }\r\n\r\n      const name = `${prefix}${newKey}`;\r\n      ReflectDefineProperty(dest, name, { __proto__: null, ...desc });\r\n      if (varargsMethods.includes(name)) {\r\n        ReflectDefineProperty(dest, `${name}Apply`, {\r\n          __proto__: null,\r\n          value: applyBind(value, src),\r\n        });\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction copyPrototype(src, dest, prefix) {\r\n  for (const key of ReflectOwnKeys(src)) {\r\n    const newKey = getNewKey(key);\r\n    const desc = ReflectGetOwnPropertyDescriptor(src, key);\r\n    if ('get' in desc) {\r\n      copyAccessor(dest, prefix, newKey, desc);\r\n    } else {\r\n      const { value } = desc;\r\n      if (typeof value === 'function') {\r\n        desc.value = uncurryThis(value);\r\n      }\r\n\r\n      const name = `${prefix}${newKey}`;\r\n      ReflectDefineProperty(dest, name, { __proto__: null, ...desc });\r\n      if (varargsMethods.includes(name)) {\r\n        ReflectDefineProperty(dest, `${name}Apply`, {\r\n          __proto__: null,\r\n          value: applyBind(value),\r\n        });\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Create copies of configurable value properties of the global object\r\n[\r\n  'Proxy',\r\n  'globalThis',\r\n].forEach((name) => {\r\n  // eslint-disable-next-line no-restricted-globals\r\n  primordials[name] = globalThis[name];\r\n});\r\n\r\n// Create copies of URI handling functions\r\n[\r\n  decodeURI,\r\n  decodeURIComponent,\r\n  encodeURI,\r\n  encodeURIComponent,\r\n].forEach((fn) => {\r\n  primordials[fn.name] = fn;\r\n});\r\n\r\n// Create copies of legacy functions\r\n[\r\n  escape,\r\n  eval,\r\n  unescape,\r\n].forEach((fn) => {\r\n  primordials[fn.name] = fn;\r\n});\r\n\r\n// Create copies of the namespace objects\r\n[\r\n  'JSON',\r\n  'Math',\r\n  'Proxy',\r\n  'Reflect',\r\n].forEach((name) => {\r\n  // eslint-disable-next-line no-restricted-globals\r\n  copyPropsRenamed(globalThis[name], primordials, name);\r\n});\r\n\r\n// Create copies of intrinsic objects\r\n[\r\n  'AggregateError',\r\n  'Array',\r\n  'ArrayBuffer',\r\n  'BigInt',\r\n  'BigInt64Array',\r\n  'BigUint64Array',\r\n  'Boolean',\r\n  'DataView',\r\n  'Date',\r\n  'Error',\r\n  'EvalError',\r\n  'FinalizationRegistry',\r\n  'Float32Array',\r\n  'Float64Array',\r\n  'Function',\r\n  'Int16Array',\r\n  'Int32Array',\r\n  'Int8Array',\r\n  'Map',\r\n  'Number',\r\n  'Object',\r\n  'RangeError',\r\n  'ReferenceError',\r\n  'RegExp',\r\n  'Set',\r\n  'String',\r\n  'Symbol',\r\n  'SyntaxError',\r\n  'TypeError',\r\n  'URIError',\r\n  'Uint16Array',\r\n  'Uint32Array',\r\n  'Uint8Array',\r\n  'Uint8ClampedArray',\r\n  'WeakMap',\r\n  'WeakRef',\r\n  'WeakSet',\r\n].forEach((name) => {\r\n  // eslint-disable-next-line no-restricted-globals\r\n  const original = globalThis[name];\r\n  primordials[name] = original;\r\n  copyPropsRenamed(original, primordials, name);\r\n  copyPrototype(original.prototype, primordials, `${name}Prototype`);\r\n});\r\n\r\n// Create copies of intrinsic objects that require a valid `this` to call\r\n// static methods.\r\n// Refs: https://www.ecma-international.org/ecma-262/#sec-promise.all\r\n[\r\n  'Promise',\r\n].forEach((name) => {\r\n  // eslint-disable-next-line no-restricted-globals\r\n  const original = globalThis[name];\r\n  primordials[name] = original;\r\n  copyPropsRenamedBound(original, primordials, name);\r\n  copyPrototype(original.prototype, primordials, `${name}Prototype`);\r\n});\r\n\r\n// Create copies of abstract intrinsic objects that are not directly exposed\r\n// on the global object.\r\n// Refs: https://tc39.es/ecma262/#sec-%typedarray%-intrinsic-object\r\n[\r\n  { name: 'TypedArray', original: Reflect.getPrototypeOf(Uint8Array) },\r\n  { name: 'ArrayIterator', original: {\r\n    prototype: Reflect.getPrototypeOf(Array.prototype[Symbol.iterator]()),\r\n  } },\r\n  { name: 'StringIterator', original: {\r\n    prototype: Reflect.getPrototypeOf(String.prototype[Symbol.iterator]()),\r\n  } },\r\n].forEach(({ name, original }) => {\r\n  primordials[name] = original;\r\n  // The static %TypedArray% methods require a valid `this`, but can't be bound,\r\n  // as they need a subclass constructor as the receiver:\r\n  copyPrototype(original, primordials, name);\r\n  copyPrototype(original.prototype, primordials, `${name}Prototype`);\r\n});\r\n\r\nprimordials.IteratorPrototype = Reflect.getPrototypeOf(primordials.ArrayIteratorPrototype);\r\n\r\n/* eslint-enable node-core/prefer-primordials */\r\n\r\nconst {\r\n  Array: ArrayConstructor,\r\n  ArrayPrototypeForEach,\r\n  ArrayPrototypeMap,\r\n  FinalizationRegistry,\r\n  FunctionPrototypeCall,\r\n  Map,\r\n  ObjectDefineProperties,\r\n  ObjectDefineProperty,\r\n  ObjectFreeze,\r\n  ObjectSetPrototypeOf,\r\n  Promise,\r\n  PromisePrototypeThen,\r\n  PromiseResolve,\r\n  ReflectApply,\r\n  ReflectConstruct,\r\n  ReflectSet,\r\n  ReflectGet,\r\n  RegExp,\r\n  RegExpPrototype,\r\n  RegExpPrototypeExec,\r\n  RegExpPrototypeGetDotAll,\r\n  RegExpPrototypeGetFlags,\r\n  RegExpPrototypeGetGlobal,\r\n  RegExpPrototypeGetHasIndices,\r\n  RegExpPrototypeGetIgnoreCase,\r\n  RegExpPrototypeGetMultiline,\r\n  RegExpPrototypeGetSource,\r\n  RegExpPrototypeGetSticky,\r\n  RegExpPrototypeGetUnicode,\r\n  Set,\r\n  SymbolIterator,\r\n  SymbolMatch,\r\n  SymbolMatchAll,\r\n  SymbolReplace,\r\n  SymbolSearch,\r\n  SymbolSpecies,\r\n  SymbolSplit,\r\n  WeakMap,\r\n  WeakRef,\r\n  WeakSet,\r\n} = primordials;\r\n\r\n// Because these functions are used by `makeSafe`, which is exposed\r\n// on the `primordials` object, it's important to use const references\r\n// to the primordials that they use:\r\nconst createSafeIterator = (factory, next) => {\r\n  class SafeIterator {\r\n    constructor(iterable) {\r\n      this._iterator = factory(iterable);\r\n    }\r\n    next() {\r\n      return next(this._iterator);\r\n    }\r\n    [SymbolIterator]() {\r\n      return this;\r\n    }\r\n  }\r\n  ObjectSetPrototypeOf(SafeIterator.prototype, null);\r\n  ObjectFreeze(SafeIterator.prototype);\r\n  ObjectFreeze(SafeIterator);\r\n  return SafeIterator;\r\n};\r\n\r\nprimordials.SafeArrayIterator = createSafeIterator(\r\n  primordials.ArrayPrototypeSymbolIterator,\r\n  primordials.ArrayIteratorPrototypeNext\r\n);\r\nprimordials.SafeStringIterator = createSafeIterator(\r\n  primordials.StringPrototypeSymbolIterator,\r\n  primordials.StringIteratorPrototypeNext\r\n);\r\n\r\nconst copyProps = (src, dest) => {\r\n  ArrayPrototypeForEach(ReflectOwnKeys(src), (key) => {\r\n    if (!ReflectGetOwnPropertyDescriptor(dest, key)) {\r\n      ReflectDefineProperty(\r\n        dest,\r\n        key,\r\n        { __proto__: null, ...ReflectGetOwnPropertyDescriptor(src, key) });\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * @type {typeof primordials.makeSafe}\r\n */\r\nconst makeSafe = (unsafe, safe) => {\r\n  if (SymbolIterator in unsafe.prototype) {\r\n    const dummy = new unsafe();\r\n    let next; // We can reuse the same `next` method.\r\n\r\n    ArrayPrototypeForEach(ReflectOwnKeys(unsafe.prototype), (key) => {\r\n      if (!ReflectGetOwnPropertyDescriptor(safe.prototype, key)) {\r\n        const desc = ReflectGetOwnPropertyDescriptor(unsafe.prototype, key);\r\n        if (\r\n          typeof desc.value === 'function' &&\r\n          desc.value.length === 0 &&\r\n          SymbolIterator in (FunctionPrototypeCall(desc.value, dummy) ?? {})\r\n        ) {\r\n          const createIterator = uncurryThis(desc.value);\r\n          next ??= uncurryThis(createIterator(dummy).next);\r\n          const SafeIterator = createSafeIterator(createIterator, next);\r\n          desc.value = function() {\r\n            return new SafeIterator(this);\r\n          };\r\n        }\r\n        ReflectDefineProperty(safe.prototype, key, { __proto__: null, ...desc });\r\n      }\r\n    });\r\n  } else {\r\n    copyProps(unsafe.prototype, safe.prototype);\r\n  }\r\n  copyProps(unsafe, safe);\r\n\r\n  ObjectSetPrototypeOf(safe.prototype, null);\r\n  ObjectFreeze(safe.prototype);\r\n  ObjectFreeze(safe);\r\n  return safe;\r\n};\r\nprimordials.makeSafe = makeSafe;\r\n\r\n// Subclass the constructors because we need to use their prototype\r\n// methods later.\r\n// Defining the `constructor` is necessary here to avoid the default\r\n// constructor which uses the user-mutable `%ArrayIteratorPrototype%.next`.\r\nprimordials.SafeMap = makeSafe(\r\n  Map,\r\n  class SafeMap extends Map {\r\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\r\n  }\r\n);\r\nprimordials.SafeWeakMap = makeSafe(\r\n  WeakMap,\r\n  class SafeWeakMap extends WeakMap {\r\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\r\n  }\r\n);\r\n\r\nprimordials.SafeSet = makeSafe(\r\n  Set,\r\n  class SafeSet extends Set {\r\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\r\n  }\r\n);\r\nprimordials.SafeWeakSet = makeSafe(\r\n  WeakSet,\r\n  class SafeWeakSet extends WeakSet {\r\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\r\n  }\r\n);\r\n\r\nprimordials.SafeFinalizationRegistry = makeSafe(\r\n  FinalizationRegistry,\r\n  class SafeFinalizationRegistry extends FinalizationRegistry {\r\n    // eslint-disable-next-line no-useless-constructor\r\n    constructor(cleanupCallback) { super(cleanupCallback); }\r\n  }\r\n);\r\nprimordials.SafeWeakRef = makeSafe(\r\n  WeakRef,\r\n  class SafeWeakRef extends WeakRef {\r\n    // eslint-disable-next-line no-useless-constructor\r\n    constructor(target) { super(target); }\r\n  }\r\n);\r\n\r\nconst SafePromise = makeSafe(\r\n  Promise,\r\n  class SafePromise extends Promise {\r\n    // eslint-disable-next-line no-useless-constructor\r\n    constructor(executor) { super(executor); }\r\n  }\r\n);\r\n\r\n/**\r\n * Attaches a callback that is invoked when the Promise is settled (fulfilled or\r\n * rejected). The resolved value cannot be modified from the callback.\r\n * Prefer using async functions when possible.\r\n * @param {Promise<any>} thisPromise\r\n * @param {() => void) | undefined | null} onFinally The callback to execute\r\n *        when the Promise is settled (fulfilled or rejected).\r\n * @returns {Promise} A Promise for the completion of the callback.\r\n */\r\nprimordials.SafePromisePrototypeFinally = (thisPromise, onFinally) =>\r\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\r\n  // prototype to user-land.\r\n  new Promise((a, b) =>\r\n    new SafePromise((a, b) => PromisePrototypeThen(thisPromise, a, b))\r\n      .finally(onFinally)\r\n      .then(a, b)\r\n  );\r\n\r\nprimordials.AsyncIteratorPrototype =\r\n  primordials.ReflectGetPrototypeOf(\r\n    primordials.ReflectGetPrototypeOf(\r\n      async function* () {}).prototype);\r\n\r\nconst arrayToSafePromiseIterable = (promises, mapFn) =>\r\n  new primordials.SafeArrayIterator(\r\n    ArrayPrototypeMap(\r\n      promises,\r\n      (promise, i) =>\r\n        new SafePromise((a, b) => PromisePrototypeThen(mapFn == null ? promise : mapFn(promise, i), a, b))\r\n    )\r\n  );\r\n\r\n/**\r\n * @template T,U\r\n * @param {Array<T | PromiseLike<T>>} promises\r\n * @param {(v: T|PromiseLike<T>, k: number) => U|PromiseLike<U>} [mapFn]\r\n * @returns {Promise<Awaited<U>[]>}\r\n */\r\nprimordials.SafePromiseAll = (promises, mapFn) =>\r\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\r\n  // prototype to user-land.\r\n  new Promise((a, b) =>\r\n    SafePromise.all(arrayToSafePromiseIterable(promises, mapFn)).then(a, b)\r\n  );\r\n\r\n/**\r\n * Should only be used for internal functions, this would produce similar\r\n * results as `Promise.all` but without prototype pollution, and the return\r\n * value is not a genuine Array but an array-like object.\r\n * @template T,U\r\n * @param {ArrayLike<T | PromiseLike<T>>} promises\r\n * @param {(v: T|PromiseLike<T>, k: number) => U|PromiseLike<U>} [mapFn]\r\n * @returns {Promise<ArrayLike<Awaited<U>>>}\r\n */\r\nprimordials.SafePromiseAllReturnArrayLike = (promises, mapFn) =>\r\n  new Promise((resolve, reject) => {\r\n    const { length } = promises;\r\n\r\n    const returnVal = ArrayConstructor(length);\r\n    ObjectSetPrototypeOf(returnVal, null);\r\n    if (length === 0) resolve(returnVal);\r\n\r\n    let pendingPromises = length;\r\n    for (let i = 0; i < length; i++) {\r\n      const promise = mapFn != null ? mapFn(promises[i], i) : promises[i];\r\n      PromisePrototypeThen(PromiseResolve(promise), (result) => {\r\n        returnVal[i] = result;\r\n        if (--pendingPromises === 0) resolve(returnVal);\r\n      }, reject);\r\n    }\r\n  });\r\n\r\n/**\r\n * Should only be used when we only care about waiting for all the promises to\r\n * resolve, not what value they resolve to.\r\n * @template T,U\r\n * @param {ArrayLike<T | PromiseLike<T>>} promises\r\n * @param {(v: T|PromiseLike<T>, k: number) => U|PromiseLike<U>} [mapFn]\r\n * @returns {Promise<void>}\r\n */\r\nprimordials.SafePromiseAllReturnVoid = (promises, mapFn) =>\r\n  new Promise((resolve, reject) => {\r\n    let pendingPromises = promises.length;\r\n    if (pendingPromises === 0) resolve();\r\n    for (let i = 0; i < promises.length; i++) {\r\n      const promise = mapFn != null ? mapFn(promises[i], i) : promises[i];\r\n      PromisePrototypeThen(PromiseResolve(promise), () => {\r\n        if (--pendingPromises === 0) resolve();\r\n      }, reject);\r\n    }\r\n  });\r\n\r\n/**\r\n * @template T,U\r\n * @param {Array<T|PromiseLike<T>>} promises\r\n * @param {(v: T|PromiseLike<T>, k: number) => U|PromiseLike<U>} [mapFn]\r\n * @returns {Promise<PromiseSettledResult<any>[]>}\r\n */\r\nprimordials.SafePromiseAllSettled = (promises, mapFn) =>\r\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\r\n  // prototype to user-land.\r\n  new Promise((a, b) =>\r\n    SafePromise.allSettled(arrayToSafePromiseIterable(promises, mapFn)).then(a, b)\r\n  );\r\n\r\n/**\r\n * Should only be used when we only care about waiting for all the promises to\r\n * settle, not what value they resolve or reject to.\r\n * @template T,U\r\n * @param {ArrayLike<T|PromiseLike<T>>} promises\r\n * @param {(v: T|PromiseLike<T>, k: number) => U|PromiseLike<U>} [mapFn]\r\n * @returns {Promise<void>}\r\n */\r\nprimordials.SafePromiseAllSettledReturnVoid = async (promises, mapFn) => {\r\n  for (let i = 0; i < promises.length; i++) {\r\n    try {\r\n      await (mapFn != null ? mapFn(promises[i], i) : promises[i]);\r\n    } catch {\r\n      // In all settled, we can ignore errors.\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * @template T,U\r\n * @param {Array<T|PromiseLike<T>>} promises\r\n * @param {(v: T|PromiseLike<T>, k: number) => U|PromiseLike<U>} [mapFn]\r\n * @returns {Promise<Awaited<U>>}\r\n */\r\nprimordials.SafePromiseAny = (promises, mapFn) =>\r\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\r\n  // prototype to user-land.\r\n  new Promise((a, b) =>\r\n    SafePromise.any(arrayToSafePromiseIterable(promises, mapFn)).then(a, b)\r\n  );\r\n\r\n/**\r\n * @template T,U\r\n * @param {Array<T|PromiseLike<T>>} promises\r\n * @param {(v: T|PromiseLike<T>, k: number) => U|PromiseLike<U>} [mapFn]\r\n * @returns {Promise<Awaited<U>>}\r\n */\r\nprimordials.SafePromiseRace = (promises, mapFn) =>\r\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\r\n  // prototype to user-land.\r\n  new Promise((a, b) =>\r\n    SafePromise.race(arrayToSafePromiseIterable(promises, mapFn)).then(a, b)\r\n  );\r\n\r\n\r\nconst {\r\n  exec: OriginalRegExpPrototypeExec,\r\n  [SymbolMatch]: OriginalRegExpPrototypeSymbolMatch,\r\n  [SymbolMatchAll]: OriginalRegExpPrototypeSymbolMatchAll,\r\n  [SymbolReplace]: OriginalRegExpPrototypeSymbolReplace,\r\n  [SymbolSearch]: OriginalRegExpPrototypeSymbolSearch,\r\n  [SymbolSplit]: OriginalRegExpPrototypeSymbolSplit,\r\n} = RegExpPrototype;\r\n\r\nclass RegExpLikeForStringSplitting {\r\n  #regex;\r\n  constructor() {\r\n    this.#regex = ReflectConstruct(RegExp, arguments);\r\n  }\r\n\r\n  get lastIndex() {\r\n    return ReflectGet(this.#regex, 'lastIndex');\r\n  }\r\n  set lastIndex(value) {\r\n    ReflectSet(this.#regex, 'lastIndex', value);\r\n  }\r\n\r\n  exec() {\r\n    return ReflectApply(OriginalRegExpPrototypeExec, this.#regex, arguments);\r\n  }\r\n}\r\nObjectSetPrototypeOf(RegExpLikeForStringSplitting.prototype, null);\r\n\r\nprimordials.hardenRegExp = function hardenRegExp(pattern) {\r\n  ObjectDefineProperties(pattern, {\r\n    [SymbolMatch]: {\r\n      __proto__: null,\r\n      configurable: true,\r\n      value: OriginalRegExpPrototypeSymbolMatch,\r\n    },\r\n    [SymbolMatchAll]: {\r\n      __proto__: null,\r\n      configurable: true,\r\n      value: OriginalRegExpPrototypeSymbolMatchAll,\r\n    },\r\n    [SymbolReplace]: {\r\n      __proto__: null,\r\n      configurable: true,\r\n      value: OriginalRegExpPrototypeSymbolReplace,\r\n    },\r\n    [SymbolSearch]: {\r\n      __proto__: null,\r\n      configurable: true,\r\n      value: OriginalRegExpPrototypeSymbolSearch,\r\n    },\r\n    [SymbolSplit]: {\r\n      __proto__: null,\r\n      configurable: true,\r\n      value: OriginalRegExpPrototypeSymbolSplit,\r\n    },\r\n    constructor: {\r\n      __proto__: null,\r\n      configurable: true,\r\n      value: {\r\n        [SymbolSpecies]: RegExpLikeForStringSplitting,\r\n      }\r\n    },\r\n    dotAll: {\r\n      __proto__: null,\r\n      configurable: true,\r\n      value: RegExpPrototypeGetDotAll(pattern),\r\n    },\r\n    exec: {\r\n      __proto__: null,\r\n      configurable: true,\r\n      value: OriginalRegExpPrototypeExec,\r\n    },\r\n    global: {\r\n      __proto__: null,\r\n      configurable: true,\r\n      value: RegExpPrototypeGetGlobal(pattern),\r\n    },\r\n    hasIndices: {\r\n      __proto__: null,\r\n      configurable: true,\r\n      value: RegExpPrototypeGetHasIndices(pattern),\r\n    },\r\n    ignoreCase: {\r\n      __proto__: null,\r\n      configurable: true,\r\n      value: RegExpPrototypeGetIgnoreCase(pattern),\r\n    },\r\n    multiline: {\r\n      __proto__: null,\r\n      configurable: true,\r\n      value: RegExpPrototypeGetMultiline(pattern),\r\n    },\r\n    source: {\r\n      __proto__: null,\r\n      configurable: true,\r\n      value: RegExpPrototypeGetSource(pattern),\r\n    },\r\n    sticky: {\r\n      __proto__: null,\r\n      configurable: true,\r\n      value: RegExpPrototypeGetSticky(pattern),\r\n    },\r\n    unicode: {\r\n      __proto__: null,\r\n      configurable: true,\r\n      value: RegExpPrototypeGetUnicode(pattern),\r\n    },\r\n  });\r\n  ObjectDefineProperty(pattern, 'flags', {\r\n    __proto__: null,\r\n    configurable: true,\r\n    value: RegExpPrototypeGetFlags(pattern),\r\n  });\r\n  return pattern;\r\n};\r\n\r\n\r\nprimordials.SafeStringPrototypeSearch = (str, regexp) => {\r\n  regexp.lastIndex = 0;\r\n  const match = RegExpPrototypeExec(regexp, str);\r\n  return match ? match.index : -1;\r\n};\r\n\r\nObjectSetPrototypeOf(primordials, null);\r\nObjectFreeze(primordials);\r\n",
    "name": "primordials",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 12,
    "sourcePositions": []
  },
  null,
  null,
  {
    "url": "node:internal/bootstrap/loaders",
    "source": "// This file creates the internal module & binding loaders used by built-in\r\n// modules. In contrast, user land modules are loaded using\r\n// lib/internal/modules/cjs/loader.js (CommonJS Modules) or\r\n// lib/internal/modules/esm/* (ES Modules).\r\n//\r\n// This file is compiled and run by node.cc before bootstrap/node.js\r\n// was called, therefore the loaders are bootstrapped before we start to\r\n// actually bootstrap Node.js. It creates the following objects:\r\n//\r\n// C++ binding loaders:\r\n// - process.binding(): the legacy C++ binding loader, accessible from user land\r\n//   because it is an object attached to the global process object.\r\n//   These C++ bindings are created using NODE_BUILTIN_MODULE_CONTEXT_AWARE()\r\n//   and have their nm_flags set to NM_F_BUILTIN. We do not make any guarantees\r\n//   about the stability of these bindings, but still have to take care of\r\n//   compatibility issues caused by them from time to time.\r\n// - process._linkedBinding(): intended to be used by embedders to add\r\n//   additional C++ bindings in their applications. These C++ bindings\r\n//   can be created using NODE_MODULE_CONTEXT_AWARE_CPP() with the flag\r\n//   NM_F_LINKED.\r\n// - internalBinding(): the private internal C++ binding loader, inaccessible\r\n//   from user land unless through `require('internal/test/binding')`.\r\n//   These C++ bindings are created using NODE_MODULE_CONTEXT_AWARE_INTERNAL()\r\n//   and have their nm_flags set to NM_F_INTERNAL.\r\n//\r\n// Internal JavaScript module loader:\r\n// - BuiltinModule: a minimal module system used to load the JavaScript core\r\n//   modules found in lib/**/*.js and deps/**/*.js. All core modules are\r\n//   compiled into the node binary via node_javascript.cc generated by js2c.py,\r\n//   so they can be loaded faster without the cost of I/O. This class makes the\r\n//   lib/internal/*, deps/internal/* modules and internalBinding() available by\r\n//   default to core modules, and lets the core modules require itself via\r\n//   require('internal/bootstrap/loaders') even when this file is not written in\r\n//   CommonJS style.\r\n//\r\n// Other objects:\r\n// - process.moduleLoadList: an array recording the bindings and the modules\r\n//   loaded in the process and the order in which they are loaded.\r\n\r\n'use strict';\r\n\r\n// This file is compiled as if it's wrapped in a function with arguments\r\n// passed by node::RunBootstrapping()\r\n/* global process, getLinkedBinding, getInternalBinding, primordials */\r\n\r\nconst {\r\n  ArrayFrom,\r\n  ArrayPrototypeMap,\r\n  ArrayPrototypePush,\r\n  ArrayPrototypeSlice,\r\n  Error,\r\n  ObjectCreate,\r\n  ObjectDefineProperty,\r\n  ObjectKeys,\r\n  ObjectPrototypeHasOwnProperty,\r\n  ObjectSetPrototypeOf,\r\n  ReflectGet,\r\n  SafeMap,\r\n  SafeSet,\r\n  String,\r\n  StringPrototypeStartsWith,\r\n  TypeError,\r\n} = primordials;\r\n\r\n// Set up process.moduleLoadList.\r\nconst moduleLoadList = [];\r\nObjectDefineProperty(process, 'moduleLoadList', {\r\n  __proto__: null,\r\n  value: moduleLoadList,\r\n  configurable: true,\r\n  enumerable: true,\r\n  writable: false\r\n});\r\n\r\n\r\n// internalBindingAllowlist contains the name of internalBinding modules\r\n// that are allowed for access via process.binding()... This is used\r\n// to provide a transition path for modules that are being moved over to\r\n// internalBinding.\r\nconst internalBindingAllowlist = new SafeSet([\r\n  'async_wrap',\r\n  'buffer',\r\n  'cares_wrap',\r\n  'config',\r\n  'constants',\r\n  'contextify',\r\n  'crypto',\r\n  'fs',\r\n  'fs_event_wrap',\r\n  'http_parser',\r\n  'icu',\r\n  'inspector',\r\n  'js_stream',\r\n  'natives',\r\n  'os',\r\n  'pipe_wrap',\r\n  'process_wrap',\r\n  'signal_wrap',\r\n  'spawn_sync',\r\n  'stream_wrap',\r\n  'tcp_wrap',\r\n  'tls_wrap',\r\n  'tty_wrap',\r\n  'udp_wrap',\r\n  'url',\r\n  'util',\r\n  'uv',\r\n  'v8',\r\n  'zlib',\r\n]);\r\n\r\nconst runtimeDeprecatedList = new SafeSet([\r\n  'async_wrap',\r\n  'crypto',\r\n  'http_parser',\r\n  'signal_wrap',\r\n  'url',\r\n  'v8',\r\n]);\r\n\r\nconst legacyWrapperList = new SafeSet([\r\n  'util',\r\n]);\r\n\r\n// Modules that can only be imported via the node: scheme.\r\nconst schemelessBlockList = new SafeSet([\r\n  'test',\r\n]);\r\n\r\n// Set up process.binding() and process._linkedBinding().\r\n{\r\n  const bindingObj = ObjectCreate(null);\r\n\r\n  process.binding = function binding(module) {\r\n    module = String(module);\r\n    // Deprecated specific process.binding() modules, but not all, allow\r\n    // selective fallback to internalBinding for the deprecated ones.\r\n    if (internalBindingAllowlist.has(module)) {\r\n      if (runtimeDeprecatedList.has(module)) {\r\n        runtimeDeprecatedList.delete(module);\r\n        process.emitWarning(\r\n          `Access to process.binding('${module}') is deprecated.`,\r\n          'DeprecationWarning',\r\n          'DEP0111');\r\n      }\r\n      if (legacyWrapperList.has(module)) {\r\n        return requireBuiltin('internal/legacy/processbinding')[module]();\r\n      }\r\n      return internalBinding(module);\r\n    }\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    throw new Error(`No such module: ${module}`);\r\n  };\r\n\r\n  process._linkedBinding = function _linkedBinding(module) {\r\n    module = String(module);\r\n    let mod = bindingObj[module];\r\n    if (typeof mod !== 'object')\r\n      mod = bindingObj[module] = getLinkedBinding(module);\r\n    return mod;\r\n  };\r\n}\r\n\r\n// Set up internalBinding() in the closure.\r\n/**\r\n * @type {InternalBinding}\r\n */\r\nlet internalBinding;\r\n{\r\n  const bindingObj = ObjectCreate(null);\r\n  // eslint-disable-next-line no-global-assign\r\n  internalBinding = function internalBinding(module) {\r\n    let mod = bindingObj[module];\r\n    if (typeof mod !== 'object') {\r\n      mod = bindingObj[module] = getInternalBinding(module);\r\n      ArrayPrototypePush(moduleLoadList, `Internal Binding ${module}`);\r\n    }\r\n    return mod;\r\n  };\r\n}\r\n\r\nconst loaderId = 'internal/bootstrap/loaders';\r\nconst {\r\n  builtinIds,\r\n  compileFunction\r\n} = internalBinding('builtins');\r\n\r\nconst getOwn = (target, property, receiver) => {\r\n  return ObjectPrototypeHasOwnProperty(target, property) ?\r\n    ReflectGet(target, property, receiver) :\r\n    undefined;\r\n};\r\n\r\n/**\r\n * An internal abstraction for the built-in JavaScript modules of Node.js.\r\n * Be careful not to expose this to user land unless --expose-internals is\r\n * used, in which case there is no compatibility guarantee about this class.\r\n */\r\nclass BuiltinModule {\r\n  /**\r\n   * A map from the module IDs to the module instances.\r\n   * @type {Map<string, BuiltinModule>}\r\n   */\r\n  static map = new SafeMap(\r\n    ArrayPrototypeMap(builtinIds, (id) => [id, new BuiltinModule(id)])\r\n  );\r\n\r\n  constructor(id) {\r\n    this.filename = `${id}.js`;\r\n    this.id = id;\r\n    this.canBeRequiredByUsers = !StringPrototypeStartsWith(id, 'internal/');\r\n\r\n    // The CJS exports object of the module.\r\n    this.exports = {};\r\n    // States used to work around circular dependencies.\r\n    this.loaded = false;\r\n    this.loading = false;\r\n\r\n    // The following properties are used by the ESM implementation and only\r\n    // initialized when the built-in module is loaded by users.\r\n    /**\r\n     * The C++ ModuleWrap binding used to interface with the ESM implementation.\r\n     * @type {ModuleWrap|undefined}\r\n     */\r\n    this.module = undefined;\r\n    /**\r\n     * Exported names for the ESM imports.\r\n     * @type {string[]|undefined}\r\n     */\r\n    this.exportKeys = undefined;\r\n  }\r\n\r\n  // To be called during pre-execution when --expose-internals is on.\r\n  // Enables the user-land module loader to access internal modules.\r\n  static exposeInternals() {\r\n    for (const { 0: id, 1: mod } of BuiltinModule.map) {\r\n      // Do not expose this to user land even with --expose-internals.\r\n      if (id !== loaderId) {\r\n        mod.canBeRequiredByUsers = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  static exists(id) {\r\n    return BuiltinModule.map.has(id);\r\n  }\r\n\r\n  static canBeRequiredByUsers(id) {\r\n    const mod = BuiltinModule.map.get(id);\r\n    return mod && mod.canBeRequiredByUsers;\r\n  }\r\n\r\n  // Determine if a core module can be loaded without the node: prefix. This\r\n  // function does not validate if the module actually exists.\r\n  static canBeRequiredWithoutScheme(id) {\r\n    return !schemelessBlockList.has(id);\r\n  }\r\n\r\n  static getSchemeOnlyModuleNames() {\r\n    return ArrayFrom(schemelessBlockList);\r\n  }\r\n\r\n  // Used by user-land module loaders to compile and load builtins.\r\n  compileForPublicLoader() {\r\n    if (!this.canBeRequiredByUsers) {\r\n      // No code because this is an assertion against bugs\r\n      // eslint-disable-next-line no-restricted-syntax\r\n      throw new Error(`Should not compile ${this.id} for public use`);\r\n    }\r\n    this.compileForInternalLoader();\r\n    if (!this.exportKeys) {\r\n      // When using --expose-internals, we do not want to reflect the named\r\n      // exports from core modules as this can trigger unnecessary getters.\r\n      const internal = StringPrototypeStartsWith(this.id, 'internal/');\r\n      this.exportKeys = internal ? [] : ObjectKeys(this.exports);\r\n    }\r\n    this.getESMFacade();\r\n    this.syncExports();\r\n    return this.exports;\r\n  }\r\n\r\n  getESMFacade() {\r\n    if (this.module) return this.module;\r\n    const { ModuleWrap } = internalBinding('module_wrap');\r\n    // TODO(aduh95): move this to C++, alongside the initialization of the class.\r\n    ObjectSetPrototypeOf(ModuleWrap.prototype, null);\r\n    const url = `node:${this.id}`;\r\n    const builtin = this;\r\n    const exportsKeys = ArrayPrototypeSlice(this.exportKeys);\r\n    ArrayPrototypePush(exportsKeys, 'default');\r\n    this.module = new ModuleWrap(\r\n      url, undefined, exportsKeys,\r\n      function() {\r\n        builtin.syncExports();\r\n        this.setExport('default', builtin.exports);\r\n      });\r\n    // Ensure immediate sync execution to capture exports now\r\n    this.module.instantiate();\r\n    this.module.evaluate(-1, false);\r\n    return this.module;\r\n  }\r\n\r\n  // Provide named exports for all builtin libraries so that the libraries\r\n  // may be imported in a nicer way for ESM users. The default export is left\r\n  // as the entire namespace (module.exports) and updates when this function is\r\n  // called so that APMs and other behavior are supported.\r\n  syncExports() {\r\n    const names = this.exportKeys;\r\n    if (this.module) {\r\n      for (let i = 0; i < names.length; i++) {\r\n        const exportName = names[i];\r\n        if (exportName === 'default') continue;\r\n        this.module.setExport(exportName,\r\n                              getOwn(this.exports, exportName, this.exports));\r\n      }\r\n    }\r\n  }\r\n\r\n  compileForInternalLoader() {\r\n    if (this.loaded || this.loading) {\r\n      return this.exports;\r\n    }\r\n\r\n    const id = this.id;\r\n    this.loading = true;\r\n\r\n    try {\r\n      const requireFn = StringPrototypeStartsWith(this.id, 'internal/deps/') ?\r\n        requireWithFallbackInDeps : requireBuiltin;\r\n\r\n      const fn = compileFunction(id);\r\n      // Arguments must match the parameters specified in\r\n      // BuiltinLoader::LookupAndCompile().\r\n      fn(this.exports, requireFn, this, process, internalBinding, primordials);\r\n\r\n      this.loaded = true;\r\n    } finally {\r\n      this.loading = false;\r\n    }\r\n\r\n    // \"NativeModule\" is a legacy name of \"BuiltinModule\". We keep it\r\n    // here to avoid breaking users who parse process.moduleLoadList.\r\n    ArrayPrototypePush(moduleLoadList, `NativeModule ${id}`);\r\n    return this.exports;\r\n  }\r\n}\r\n\r\n// Think of this as module.exports in this file even though it is not\r\n// written in CommonJS style.\r\nconst loaderExports = {\r\n  internalBinding,\r\n  BuiltinModule,\r\n  require: requireBuiltin\r\n};\r\n\r\nfunction requireBuiltin(id) {\r\n  if (id === loaderId) {\r\n    return loaderExports;\r\n  }\r\n\r\n  const mod = BuiltinModule.map.get(id);\r\n  // Can't load the internal errors module from here, have to use a raw error.\r\n  // eslint-disable-next-line no-restricted-syntax\r\n  if (!mod) throw new TypeError(`Missing internal module '${id}'`);\r\n  return mod.compileForInternalLoader();\r\n}\r\n\r\n// Allow internal modules from dependencies to require\r\n// other modules from dependencies by providing fallbacks.\r\nfunction requireWithFallbackInDeps(request) {\r\n  if (!BuiltinModule.map.has(request)) {\r\n    request = `internal/deps/${request}`;\r\n  }\r\n  return requireBuiltin(request);\r\n}\r\n\r\n// Pass the exports back to C++ land for C++ internals to use.\r\nreturn loaderExports;\r\n",
    "name": "loaders",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 15,
    "sourcePositions": []
  },
  {
    "url": "node:internal/bootstrap/node",
    "source": "// Hello, and welcome to hacking node.js!\r\n//\r\n// This file is invoked by `Realm::BootstrapNode()` in `src/node_realm.cc`,\r\n// and is responsible for setting up Node.js core before main scripts\r\n// under `lib/internal/main/` are executed.\r\n//\r\n// By default, Node.js binaries come with an embedded V8 startup snapshot\r\n// that is generated at build-time with a `node_mksnapshot` executable.\r\n// The snapshot generation code can be found in `SnapshotBuilder::Generate()`\r\n// from `src/node_snapshotable.cc`.\r\n// This snapshot captures the V8 heap initialized by scripts under\r\n// `lib/internal/bootstrap/`, including this file. When initializing the main\r\n// thread, Node.js deserializes the heap from the snapshot, instead of actually\r\n// running this script and others in `lib/internal/bootstrap/`. To disable this\r\n// behavior, pass `--no-node-snapshot` when starting the process so that\r\n// Node.js actually runs this script to initialize the heap.\r\n//\r\n// This script is expected not to perform any asynchronous operations itself\r\n// when being executed - those should be done in either\r\n// `lib/internal/process/pre_execution.js` or in main scripts. It should not\r\n// query any run-time states (e.g. command line arguments, environment\r\n// variables) when being executed - functions in this script that are invoked\r\n// at a later time can, however, query those states lazily.\r\n// The majority of the code here focuses on setting up the global object and\r\n// the process object in a synchronous, environment-independent manner.\r\n//\r\n// Scripts run before this file:\r\n// - `lib/internal/per_context/primordials.js`: this saves copies of JavaScript\r\n//   builtins that won't be affected by user land monkey-patching for internal\r\n//   modules to use.\r\n// - `lib/internal/per_context/domexception.js`: implementation of the\r\n//   `DOMException` class.\r\n// - `lib/internal/per_context/messageport.js`: JS-side components of the\r\n//   `MessagePort` implementation.\r\n// - `lib/internal/bootstrap/loaders.js`: this sets up internal binding and\r\n//   module loaders, including `process.binding()`, `process._linkedBinding()`,\r\n//   `internalBinding()` and `BuiltinModule`.\r\n//\r\n// The initialization done in this script is included in both the main thread\r\n// and the worker threads. After this, further initialization is done based\r\n// on the configuration of the Node.js instance by executing the scripts in\r\n// `lib/internal/bootstrap/switches/`.\r\n//\r\n// Then, depending on how the Node.js instance is launched, one of the main\r\n// scripts in `lib/internal/main` will be selected by C++ to start the actual\r\n// execution. They may run additional setups exported by\r\n// `lib/internal/process/pre_execution.js` depending on the run-time states.\r\n\r\n'use strict';\r\n\r\n// This file is compiled as if it's wrapped in a function with arguments\r\n// passed by `BuiltinLoader::CompileAndCall()`.\r\n/* global process, require, internalBinding, primordials */\r\n\r\nsetupPrepareStackTrace();\r\n\r\nconst {\r\n  FunctionPrototypeCall,\r\n  JSONParse,\r\n  ObjectDefineProperty,\r\n  ObjectGetPrototypeOf,\r\n  ObjectPreventExtensions,\r\n  ObjectSetPrototypeOf,\r\n  ReflectGet,\r\n  ReflectSet,\r\n  SymbolToStringTag,\r\n  globalThis,\r\n} = primordials;\r\nconst config = internalBinding('config');\r\nconst internalTimers = require('internal/timers');\r\nconst {\r\n  defineOperation,\r\n  deprecate,\r\n  exposeInterface,\r\n} = require('internal/util');\r\nconst {\r\n  privateSymbols: {\r\n    exiting_aliased_Uint32Array,\r\n  },\r\n} = internalBinding('util');\r\n\r\nsetupProcessObject();\r\n\r\nsetupGlobalProxy();\r\nsetupBuffer();\r\n\r\nprocess.domain = null;\r\n{\r\n  const exitingAliasedUint32Array = process[exiting_aliased_Uint32Array];\r\n  ObjectDefineProperty(process, '_exiting', {\r\n    __proto__: null,\r\n    get() {\r\n      return exitingAliasedUint32Array[0] === 1;\r\n    },\r\n    set(value) {\r\n      exitingAliasedUint32Array[0] = value ? 1 : 0;\r\n    },\r\n    enumerable: true,\r\n    configurable: true,\r\n  });\r\n}\r\nprocess._exiting = false;\r\n\r\n// TODO(@jasnell): Once this has gone through one full major\r\n// release cycle, remove the Proxy and setter and update the\r\n// getter to either return a read-only object or always return\r\n// a freshly parsed version of nativeModule.config.\r\n\r\nconst deprecationHandler = {\r\n  warned: false,\r\n  message: 'Setting process.config is deprecated. ' +\r\n           'In the future the property will be read-only.',\r\n  code: 'DEP0150',\r\n  maybeWarn() {\r\n    if (!this.warned) {\r\n      process.emitWarning(this.message, {\r\n        type: 'DeprecationWarning',\r\n        code: this.code\r\n      });\r\n      this.warned = true;\r\n    }\r\n  },\r\n\r\n  defineProperty(target, key, descriptor) {\r\n    this.maybeWarn();\r\n    return ObjectDefineProperty(target, key, descriptor);\r\n  },\r\n\r\n  deleteProperty(target, key) {\r\n    this.maybeWarn();\r\n    delete target[key];\r\n  },\r\n\r\n  preventExtensions(target) {\r\n    this.maybeWarn();\r\n    return ObjectPreventExtensions(target);\r\n  },\r\n\r\n  set(target, key, value) {\r\n    this.maybeWarn();\r\n    return ReflectSet(target, key, value);\r\n  },\r\n\r\n  get(target, key, receiver) {\r\n    const val = ReflectGet(target, key, receiver);\r\n    if (val != null && typeof val === 'object') {\r\n      // eslint-disable-next-line node-core/prefer-primordials\r\n      return new Proxy(val, deprecationHandler);\r\n    }\r\n    return val;\r\n  },\r\n\r\n  setPrototypeOf(target, proto) {\r\n    this.maybeWarn();\r\n    return ObjectSetPrototypeOf(target, proto);\r\n  }\r\n};\r\n\r\n// process.config is serialized config.gypi\r\nconst binding = internalBinding('builtins');\r\n\r\n// eslint-disable-next-line node-core/prefer-primordials\r\nlet processConfig = new Proxy(\r\n  JSONParse(binding.config),\r\n  deprecationHandler);\r\n\r\nObjectDefineProperty(process, 'config', {\r\n  __proto__: null,\r\n  enumerable: true,\r\n  configurable: true,\r\n  get() { return processConfig; },\r\n  set(value) {\r\n    deprecationHandler.maybeWarn();\r\n    processConfig = value;\r\n  }\r\n});\r\n\r\nrequire('internal/worker/js_transferable').setup();\r\n\r\n// Bootstrappers for all threads, including worker threads and main thread\r\nconst perThreadSetup = require('internal/process/per_thread');\r\nconst rawMethods = internalBinding('process_methods');\r\n\r\n// Set up methods on the process object for all threads\r\n{\r\n  process.dlopen = rawMethods.dlopen;\r\n  process.uptime = rawMethods.uptime;\r\n\r\n  // TODO(joyeecheung): either remove them or make them public\r\n  process._getActiveRequests = rawMethods._getActiveRequests;\r\n  process._getActiveHandles = rawMethods._getActiveHandles;\r\n  process.getActiveResourcesInfo = rawMethods.getActiveResourcesInfo;\r\n\r\n  // TODO(joyeecheung): remove these\r\n  process.reallyExit = rawMethods.reallyExit;\r\n  process._kill = rawMethods._kill;\r\n\r\n  const wrapped = perThreadSetup.wrapProcessMethods(rawMethods);\r\n  process._rawDebug = wrapped._rawDebug;\r\n  process.cpuUsage = wrapped.cpuUsage;\r\n  process.resourceUsage = wrapped.resourceUsage;\r\n  process.memoryUsage = wrapped.memoryUsage;\r\n  process.constrainedMemory = rawMethods.constrainedMemory;\r\n  process.kill = wrapped.kill;\r\n  process.exit = wrapped.exit;\r\n\r\n  process.hrtime = perThreadSetup.hrtime;\r\n  process.hrtime.bigint = perThreadSetup.hrtimeBigInt;\r\n\r\n  process.openStdin = function() {\r\n    process.stdin.resume();\r\n    return process.stdin;\r\n  };\r\n}\r\n\r\nconst credentials = internalBinding('credentials');\r\nif (credentials.implementsPosixCredentials) {\r\n  process.getuid = credentials.getuid;\r\n  process.geteuid = credentials.geteuid;\r\n  process.getgid = credentials.getgid;\r\n  process.getegid = credentials.getegid;\r\n  process.getgroups = credentials.getgroups;\r\n}\r\n\r\n// Setup the callbacks that node::AsyncWrap will call when there are hooks to\r\n// process. They use the same functions as the JS embedder API. These callbacks\r\n// are setup immediately to prevent async_wrap.setupHooks() from being hijacked\r\n// and the cost of doing so is negligible.\r\nconst { nativeHooks } = require('internal/async_hooks');\r\ninternalBinding('async_wrap').setupHooks(nativeHooks);\r\n\r\nconst {\r\n  setupTaskQueue,\r\n  queueMicrotask\r\n} = require('internal/process/task_queues');\r\n\r\n// Non-standard extensions:\r\nconst { BroadcastChannel } = require('internal/worker/io');\r\nexposeInterface(globalThis, 'BroadcastChannel', BroadcastChannel);\r\n\r\ndefineOperation(globalThis, 'queueMicrotask', queueMicrotask);\r\n\r\nconst timers = require('timers');\r\ndefineOperation(globalThis, 'clearImmediate', timers.clearImmediate);\r\ndefineOperation(globalThis, 'setImmediate', timers.setImmediate);\r\n\r\nconst {\r\n  structuredClone,\r\n} = require('internal/structured_clone');\r\ndefineOperation(globalThis, 'structuredClone', structuredClone);\r\n\r\n// Set the per-Environment callback that will be called\r\n// when the TrackingTraceStateObserver updates trace state.\r\n// Note that when NODE_USE_V8_PLATFORM is true, the observer is\r\n// attached to the per-process TracingController.\r\nconst { setTraceCategoryStateUpdateHandler } = internalBinding('trace_events');\r\nsetTraceCategoryStateUpdateHandler(perThreadSetup.toggleTraceCategoryState);\r\n\r\n// process.allowedNodeEnvironmentFlags\r\nObjectDefineProperty(process, 'allowedNodeEnvironmentFlags', {\r\n  __proto__: null,\r\n  get() {\r\n    const flags = perThreadSetup.buildAllowedFlags();\r\n    process.allowedNodeEnvironmentFlags = flags;\r\n    return process.allowedNodeEnvironmentFlags;\r\n  },\r\n  // If the user tries to set this to another value, override\r\n  // this completely to that value.\r\n  set(value) {\r\n    ObjectDefineProperty(this, 'allowedNodeEnvironmentFlags', {\r\n      __proto__: null,\r\n      value,\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true\r\n    });\r\n  },\r\n  enumerable: true,\r\n  configurable: true\r\n});\r\n\r\n// process.assert\r\nprocess.assert = deprecate(\r\n  perThreadSetup.assert,\r\n  'process.assert() is deprecated. Please use the `assert` module instead.',\r\n  'DEP0100');\r\n\r\n// TODO(joyeecheung): this property has not been well-maintained, should we\r\n// deprecate it in favor of a better API?\r\nconst { isDebugBuild, hasOpenSSL, hasInspector } = config;\r\nconst features = {\r\n  inspector: hasInspector,\r\n  debug: isDebugBuild,\r\n  uv: true,\r\n  ipv6: true,  // TODO(bnoordhuis) ping libuv\r\n  tls_alpn: hasOpenSSL,\r\n  tls_sni: hasOpenSSL,\r\n  tls_ocsp: hasOpenSSL,\r\n  tls: hasOpenSSL,\r\n  // This needs to be dynamic because --no-node-snapshot disables the\r\n  // code cache even if the binary is built with embedded code cache.\r\n  get cached_builtins() {\r\n    return binding.hasCachedBuiltins();\r\n  }\r\n};\r\n\r\nObjectDefineProperty(process, 'features', {\r\n  __proto__: null,\r\n  enumerable: true,\r\n  writable: false,\r\n  configurable: false,\r\n  value: features\r\n});\r\n\r\n{\r\n  const {\r\n    onGlobalUncaughtException,\r\n    setUncaughtExceptionCaptureCallback,\r\n    hasUncaughtExceptionCaptureCallback\r\n  } = require('internal/process/execution');\r\n\r\n  // For legacy reasons this is still called `_fatalException`, even\r\n  // though it is now a global uncaught exception handler.\r\n  // The C++ land node::errors::TriggerUncaughtException grabs it\r\n  // from the process object because it has been monkey-patchable.\r\n  // TODO(joyeecheung): investigate whether process._fatalException\r\n  // can be deprecated.\r\n  process._fatalException = onGlobalUncaughtException;\r\n  process.setUncaughtExceptionCaptureCallback =\r\n    setUncaughtExceptionCaptureCallback;\r\n  process.hasUncaughtExceptionCaptureCallback =\r\n    hasUncaughtExceptionCaptureCallback;\r\n}\r\n\r\nconst { emitWarning } = require('internal/process/warning');\r\nprocess.emitWarning = emitWarning;\r\n\r\n// We initialize the tick callbacks and the timer callbacks last during\r\n// bootstrap to make sure that any operation done before this are synchronous.\r\n// If any ticks or timers are scheduled before this they are unlikely to work.\r\n{\r\n  const { nextTick, runNextTicks } = setupTaskQueue();\r\n  process.nextTick = nextTick;\r\n  // Used to emulate a tick manually in the JS land.\r\n  // A better name for this function would be `runNextTicks` but\r\n  // it has been exposed to the process object so we keep this legacy name\r\n  // TODO(joyeecheung): either remove it or make it public\r\n  process._tickCallback = runNextTicks;\r\n\r\n  const { setupTimers } = internalBinding('timers');\r\n  const {\r\n    processImmediate,\r\n    processTimers,\r\n  } = internalTimers.getTimerCallbacks(runNextTicks);\r\n  // Sets two per-Environment callbacks that will be run from libuv:\r\n  // - processImmediate will be run in the callback of the per-Environment\r\n  //   check handle.\r\n  // - processTimers will be run in the callback of the per-Environment timer.\r\n  setupTimers(processImmediate, processTimers);\r\n  // Note: only after this point are the timers effective\r\n}\r\n\r\n// Preload modules so that they are included in the builtin snapshot.\r\nrequire('fs');\r\nrequire('v8');\r\nrequire('vm');\r\nrequire('url');\r\nrequire('internal/options');\r\nif (config.hasOpenSSL) {\r\n  require('crypto');\r\n}\r\n\r\nfunction setupPrepareStackTrace() {\r\n  const {\r\n    setEnhanceStackForFatalException,\r\n    setPrepareStackTraceCallback\r\n  } = internalBinding('errors');\r\n  const {\r\n    prepareStackTrace,\r\n    fatalExceptionStackEnhancers: {\r\n      beforeInspector,\r\n      afterInspector\r\n    }\r\n  } = require('internal/errors');\r\n  // Tell our PrepareStackTraceCallback passed to the V8 API\r\n  // to call prepareStackTrace().\r\n  setPrepareStackTraceCallback(prepareStackTrace);\r\n  // Set the function used to enhance the error stack for printing\r\n  setEnhanceStackForFatalException(beforeInspector, afterInspector);\r\n}\r\n\r\nfunction setupProcessObject() {\r\n  const EventEmitter = require('events');\r\n  const origProcProto = ObjectGetPrototypeOf(process);\r\n  ObjectSetPrototypeOf(origProcProto, EventEmitter.prototype);\r\n  FunctionPrototypeCall(EventEmitter, process);\r\n  ObjectDefineProperty(process, SymbolToStringTag, {\r\n    __proto__: null,\r\n    enumerable: false,\r\n    writable: true,\r\n    configurable: false,\r\n    value: 'process'\r\n  });\r\n\r\n  // Create global.process as getters so that we have a\r\n  // deprecation path for these in ES Modules.\r\n  // See https://github.com/nodejs/node/pull/26334.\r\n  let _process = process;\r\n  ObjectDefineProperty(globalThis, 'process', {\r\n    __proto__: null,\r\n    get() {\r\n      return _process;\r\n    },\r\n    set(value) {\r\n      _process = value;\r\n    },\r\n    enumerable: false,\r\n    configurable: true,\r\n  });\r\n}\r\n\r\nfunction setupGlobalProxy() {\r\n  ObjectDefineProperty(globalThis, SymbolToStringTag, {\r\n    __proto__: null,\r\n    value: 'global',\r\n    writable: false,\r\n    enumerable: false,\r\n    configurable: true\r\n  });\r\n  globalThis.global = globalThis;\r\n}\r\n\r\nfunction setupBuffer() {\r\n  const {\r\n    Buffer,\r\n  } = require('buffer');\r\n  const bufferBinding = internalBinding('buffer');\r\n\r\n  // Only after this point can C++ use Buffer::New()\r\n  bufferBinding.setBufferPrototype(Buffer.prototype);\r\n  delete bufferBinding.setBufferPrototype;\r\n  delete bufferBinding.zeroFill;\r\n\r\n  // Create global.Buffer as getters so that we have a\r\n  // deprecation path for these in ES Modules.\r\n  // See https://github.com/nodejs/node/pull/26334.\r\n  let _Buffer = Buffer;\r\n  ObjectDefineProperty(globalThis, 'Buffer', {\r\n    __proto__: null,\r\n    get() {\r\n      return _Buffer;\r\n    },\r\n    set(value) {\r\n      _Buffer = value;\r\n    },\r\n    enumerable: false,\r\n    configurable: true,\r\n  });\r\n}\r\n",
    "name": "node",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 16,
    "sourcePositions": []
  },
  {
    "url": "node:internal/errors",
    "source": "/* eslint node-core/documented-errors: \"error\" */\r\n/* eslint node-core/alphabetize-errors: \"error\" */\r\n/* eslint node-core/prefer-util-format-errors: \"error\" */\r\n\r\n'use strict';\r\n\r\n// The whole point behind this internal module is to allow Node.js to no\r\n// longer be forced to treat every error message change as a semver-major\r\n// change. The NodeError classes here all expose a `code` property whose\r\n// value statically and permanently identifies the error. While the error\r\n// message may change, the code should not.\r\n\r\nconst {\r\n  AggregateError,\r\n  ArrayFrom,\r\n  ArrayIsArray,\r\n  ArrayPrototypeFilter,\r\n  ArrayPrototypeIncludes,\r\n  ArrayPrototypeIndexOf,\r\n  ArrayPrototypeJoin,\r\n  ArrayPrototypeMap,\r\n  ArrayPrototypePush,\r\n  ArrayPrototypeSlice,\r\n  ArrayPrototypeSplice,\r\n  ArrayPrototypeUnshift,\r\n  Error,\r\n  ErrorCaptureStackTrace,\r\n  ErrorPrototypeToString,\r\n  JSONStringify,\r\n  MapPrototypeGet,\r\n  MathAbs,\r\n  MathMax,\r\n  Number,\r\n  NumberIsInteger,\r\n  ObjectAssign,\r\n  ObjectDefineProperty,\r\n  ObjectDefineProperties,\r\n  ObjectIsExtensible,\r\n  ObjectGetOwnPropertyDescriptor,\r\n  ObjectKeys,\r\n  ObjectPrototypeHasOwnProperty,\r\n  RangeError,\r\n  ReflectApply,\r\n  RegExpPrototypeExec,\r\n  SafeArrayIterator,\r\n  SafeMap,\r\n  SafeWeakMap,\r\n  String,\r\n  StringPrototypeEndsWith,\r\n  StringPrototypeIncludes,\r\n  StringPrototypeSlice,\r\n  StringPrototypeSplit,\r\n  StringPrototypeStartsWith,\r\n  StringPrototypeToLowerCase,\r\n  Symbol,\r\n  SymbolFor,\r\n  SyntaxError,\r\n  TypeError,\r\n  URIError,\r\n} = primordials;\r\n\r\nconst kIsNodeError = Symbol('kIsNodeError');\r\n\r\nconst isWindows = process.platform === 'win32';\r\n\r\nconst messages = new SafeMap();\r\nconst codes = {};\r\n\r\nconst classRegExp = /^([A-Z][a-z0-9]*)+$/;\r\n// Sorted by a rough estimate on most frequently used entries.\r\nconst kTypes = [\r\n  'string',\r\n  'function',\r\n  'number',\r\n  'object',\r\n  // Accept 'Function' and 'Object' as alternative to the lower cased version.\r\n  'Function',\r\n  'Object',\r\n  'boolean',\r\n  'bigint',\r\n  'symbol',\r\n];\r\n\r\nconst MainContextError = Error;\r\nconst overrideStackTrace = new SafeWeakMap();\r\nconst kNoOverride = Symbol('kNoOverride');\r\nlet userStackTraceLimit;\r\nconst nodeInternalPrefix = '__node_internal_';\r\nconst prepareStackTrace = (globalThis, error, trace) => {\r\n  // API for node internals to override error stack formatting\r\n  // without interfering with userland code.\r\n  if (overrideStackTrace.has(error)) {\r\n    const f = overrideStackTrace.get(error);\r\n    overrideStackTrace.delete(error);\r\n    return f(error, trace);\r\n  }\r\n\r\n  const firstFrame = trace[0]?.getFunctionName();\r\n  if (firstFrame && StringPrototypeStartsWith(firstFrame, nodeInternalPrefix)) {\r\n    for (let l = trace.length - 1; l >= 0; l--) {\r\n      const fn = trace[l]?.getFunctionName();\r\n      if (fn && StringPrototypeStartsWith(fn, nodeInternalPrefix)) {\r\n        ArrayPrototypeSplice(trace, 0, l + 1);\r\n        break;\r\n      }\r\n    }\r\n    // `userStackTraceLimit` is the user value for `Error.stackTraceLimit`,\r\n    // it is updated at every new exception in `captureLargerStackTrace`.\r\n    if (trace.length > userStackTraceLimit)\r\n      ArrayPrototypeSplice(trace, userStackTraceLimit);\r\n  }\r\n\r\n  const globalOverride =\r\n    maybeOverridePrepareStackTrace(globalThis, error, trace);\r\n  if (globalOverride !== kNoOverride) return globalOverride;\r\n\r\n  // Normal error formatting:\r\n  //\r\n  // Error: Message\r\n  //     at function (file)\r\n  //     at file\r\n  let errorString;\r\n  if (kIsNodeError in error) {\r\n    errorString = `${error.name} [${error.code}]: ${error.message}`;\r\n  } else {\r\n    errorString = ErrorPrototypeToString(error);\r\n  }\r\n  if (trace.length === 0) {\r\n    return errorString;\r\n  }\r\n  return `${errorString}\\n    at ${ArrayPrototypeJoin(trace, '\\n    at ')}`;\r\n};\r\n\r\nconst maybeOverridePrepareStackTrace = (globalThis, error, trace) => {\r\n  // Polyfill of V8's Error.prepareStackTrace API.\r\n  // https://crbug.com/v8/7848\r\n  // `globalThis` is the global that contains the constructor which\r\n  // created `error`.\r\n  if (typeof globalThis.Error?.prepareStackTrace === 'function') {\r\n    return globalThis.Error.prepareStackTrace(error, trace);\r\n  }\r\n  // We still have legacy usage that depends on the main context's `Error`\r\n  // being used, even when the error is from a different context.\r\n  // TODO(devsnek): evaluate if this can be eventually deprecated/removed.\r\n  if (typeof MainContextError.prepareStackTrace === 'function') {\r\n    return MainContextError.prepareStackTrace(error, trace);\r\n  }\r\n\r\n  return kNoOverride;\r\n};\r\n\r\nconst aggregateTwoErrors = hideStackFrames((innerError, outerError) => {\r\n  if (innerError && outerError && innerError !== outerError) {\r\n    if (ArrayIsArray(outerError.errors)) {\r\n      // If `outerError` is already an `AggregateError`.\r\n      ArrayPrototypePush(outerError.errors, innerError);\r\n      return outerError;\r\n    }\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    const err = new AggregateError(new SafeArrayIterator([\r\n      outerError,\r\n      innerError,\r\n    ]), outerError.message);\r\n    err.code = outerError.code;\r\n    return err;\r\n  }\r\n  return innerError || outerError;\r\n});\r\n\r\nconst aggregateErrors = hideStackFrames((errors, message, code) => {\r\n  // eslint-disable-next-line no-restricted-syntax\r\n  const err = new AggregateError(new SafeArrayIterator(errors), message);\r\n  err.code = errors[0]?.code;\r\n  return err;\r\n});\r\n\r\n// Lazily loaded\r\nlet util;\r\nlet assert;\r\n\r\nlet internalUtil = null;\r\nfunction lazyInternalUtil() {\r\n  internalUtil ??= require('internal/util');\r\n  return internalUtil;\r\n}\r\n\r\nlet internalUtilInspect = null;\r\nfunction lazyInternalUtilInspect() {\r\n  internalUtilInspect ??= require('internal/util/inspect');\r\n  return internalUtilInspect;\r\n}\r\n\r\nlet buffer;\r\nfunction lazyBuffer() {\r\n  buffer ??= require('buffer').Buffer;\r\n  return buffer;\r\n}\r\n\r\nfunction isErrorStackTraceLimitWritable() {\r\n  // Do no touch Error.stackTraceLimit as V8 would attempt to install\r\n  // it again during deserialization.\r\n  if (require('v8').startupSnapshot.isBuildingSnapshot()) {\r\n    return false;\r\n  }\r\n\r\n  const desc = ObjectGetOwnPropertyDescriptor(Error, 'stackTraceLimit');\r\n  if (desc === undefined) {\r\n    return ObjectIsExtensible(Error);\r\n  }\r\n\r\n  return ObjectPrototypeHasOwnProperty(desc, 'writable') ?\r\n    desc.writable :\r\n    desc.set !== undefined;\r\n}\r\n\r\nfunction inspectWithNoCustomRetry(obj, options) {\r\n  const utilInspect = lazyInternalUtilInspect();\r\n\r\n  try {\r\n    return utilInspect.inspect(obj, options);\r\n  } catch {\r\n    return utilInspect.inspect(obj, { ...options, customInspect: false });\r\n  }\r\n}\r\n\r\n// A specialized Error that includes an additional info property with\r\n// additional information about the error condition.\r\n// It has the properties present in a UVException but with a custom error\r\n// message followed by the uv error code and uv error message.\r\n// It also has its own error code with the original uv error context put into\r\n// `err.info`.\r\n// The context passed into this error must have .code, .syscall and .message,\r\n// and may have .path and .dest.\r\nclass SystemError extends Error {\r\n  constructor(key, context) {\r\n    const limit = Error.stackTraceLimit;\r\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\r\n    super();\r\n    // Reset the limit and setting the name property.\r\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = limit;\r\n    const prefix = getMessage(key, [], this);\r\n    let message = `${prefix}: ${context.syscall} returned ` +\r\n                  `${context.code} (${context.message})`;\r\n\r\n    if (context.path !== undefined)\r\n      message += ` ${context.path}`;\r\n    if (context.dest !== undefined)\r\n      message += ` => ${context.dest}`;\r\n\r\n    captureLargerStackTrace(this);\r\n\r\n    this.code = key;\r\n\r\n    ObjectDefineProperties(this, {\r\n      [kIsNodeError]: {\r\n        __proto__: null,\r\n        value: true,\r\n        enumerable: false,\r\n        writable: false,\r\n        configurable: true,\r\n      },\r\n      name: {\r\n        __proto__: null,\r\n        value: 'SystemError',\r\n        enumerable: false,\r\n        writable: true,\r\n        configurable: true,\r\n      },\r\n      message: {\r\n        __proto__: null,\r\n        value: message,\r\n        enumerable: false,\r\n        writable: true,\r\n        configurable: true,\r\n      },\r\n      info: {\r\n        __proto__: null,\r\n        value: context,\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: false,\r\n      },\r\n      errno: {\r\n        __proto__: null,\r\n        get() {\r\n          return context.errno;\r\n        },\r\n        set: (value) => {\r\n          context.errno = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true,\r\n      },\r\n      syscall: {\r\n        __proto__: null,\r\n        get() {\r\n          return context.syscall;\r\n        },\r\n        set: (value) => {\r\n          context.syscall = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true,\r\n      },\r\n    });\r\n\r\n    if (context.path !== undefined) {\r\n      // TODO(BridgeAR): Investigate why and when the `.toString()` was\r\n      // introduced. The `path` and `dest` properties in the context seem to\r\n      // always be of type string. We should probably just remove the\r\n      // `.toString()` and `Buffer.from()` operations and set the value on the\r\n      // context as the user did.\r\n      ObjectDefineProperty(this, 'path', {\r\n        __proto__: null,\r\n        get() {\r\n          return context.path != null ?\r\n            context.path.toString() : context.path;\r\n        },\r\n        set: (value) => {\r\n          context.path = value ?\r\n            lazyBuffer().from(value.toString()) : undefined;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n      });\r\n    }\r\n\r\n    if (context.dest !== undefined) {\r\n      ObjectDefineProperty(this, 'dest', {\r\n        __proto__: null,\r\n        get() {\r\n          return context.dest != null ?\r\n            context.dest.toString() : context.dest;\r\n        },\r\n        set: (value) => {\r\n          context.dest = value ?\r\n            lazyBuffer().from(value.toString()) : undefined;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n      });\r\n    }\r\n  }\r\n\r\n  toString() {\r\n    return `${this.name} [${this.code}]: ${this.message}`;\r\n  }\r\n\r\n  [SymbolFor('nodejs.util.inspect.custom')](recurseTimes, ctx) {\r\n    return lazyInternalUtilInspect().inspect(this, {\r\n      ...ctx,\r\n      getters: true,\r\n      customInspect: false\r\n    });\r\n  }\r\n}\r\n\r\nfunction makeSystemErrorWithCode(key) {\r\n  return class NodeError extends SystemError {\r\n    constructor(ctx) {\r\n      super(key, ctx);\r\n    }\r\n  };\r\n}\r\n\r\nfunction makeNodeErrorWithCode(Base, key) {\r\n  return function NodeError(...args) {\r\n    const limit = Error.stackTraceLimit;\r\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\r\n    const error = new Base();\r\n    // Reset the limit and setting the name property.\r\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = limit;\r\n    const message = getMessage(key, args, error);\r\n    ObjectDefineProperties(error, {\r\n      [kIsNodeError]: {\r\n        __proto__: null,\r\n        value: true,\r\n        enumerable: false,\r\n        writable: false,\r\n        configurable: true,\r\n      },\r\n      message: {\r\n        __proto__: null,\r\n        value: message,\r\n        enumerable: false,\r\n        writable: true,\r\n        configurable: true,\r\n      },\r\n      toString: {\r\n        __proto__: null,\r\n        value() {\r\n          return `${this.name} [${key}]: ${this.message}`;\r\n        },\r\n        enumerable: false,\r\n        writable: true,\r\n        configurable: true,\r\n      },\r\n    });\r\n    captureLargerStackTrace(error);\r\n    error.code = key;\r\n    return error;\r\n  };\r\n}\r\n\r\n/**\r\n * This function removes unnecessary frames from Node.js core errors.\r\n * @template {(...args: unknown[]) => unknown} T\r\n * @param {T} fn\r\n * @returns {T}\r\n */\r\nfunction hideStackFrames(fn) {\r\n  // We rename the functions that will be hidden to cut off the stacktrace\r\n  // at the outermost one\r\n  const hidden = nodeInternalPrefix + fn.name;\r\n  ObjectDefineProperty(fn, 'name', { __proto__: null, value: hidden });\r\n  return fn;\r\n}\r\n\r\n// Utility function for registering the error codes. Only used here. Exported\r\n// *only* to allow for testing.\r\nfunction E(sym, val, def, ...otherClasses) {\r\n  // Special case for SystemError that formats the error message differently\r\n  // The SystemErrors only have SystemError as their base classes.\r\n  messages.set(sym, val);\r\n  if (def === SystemError) {\r\n    def = makeSystemErrorWithCode(sym);\r\n  } else {\r\n    def = makeNodeErrorWithCode(def, sym);\r\n  }\r\n\r\n  if (otherClasses.length !== 0) {\r\n    otherClasses.forEach((clazz) => {\r\n      def[clazz.name] = makeNodeErrorWithCode(clazz, sym);\r\n    });\r\n  }\r\n  codes[sym] = def;\r\n}\r\n\r\nfunction getMessage(key, args, self) {\r\n  const msg = messages.get(key);\r\n\r\n  assert ??= require('internal/assert');\r\n\r\n  if (typeof msg === 'function') {\r\n    assert(\r\n      msg.length <= args.length, // Default options do not count.\r\n      `Code: ${key}; The provided arguments length (${args.length}) does not ` +\r\n        `match the required ones (${msg.length}).`\r\n    );\r\n    return ReflectApply(msg, self, args);\r\n  }\r\n\r\n  const regex = /%[dfijoOs]/g;\r\n  let expectedLength = 0;\r\n  while (RegExpPrototypeExec(regex, msg) !== null) expectedLength++;\r\n  assert(\r\n    expectedLength === args.length,\r\n    `Code: ${key}; The provided arguments length (${args.length}) does not ` +\r\n      `match the required ones (${expectedLength}).`\r\n  );\r\n  if (args.length === 0)\r\n    return msg;\r\n\r\n  ArrayPrototypeUnshift(args, msg);\r\n  return ReflectApply(lazyInternalUtilInspect().format, null, args);\r\n}\r\n\r\nlet uvBinding;\r\n\r\nfunction lazyUv() {\r\n  uvBinding ??= internalBinding('uv');\r\n  return uvBinding;\r\n}\r\n\r\nconst uvUnmappedError = ['UNKNOWN', 'unknown error'];\r\n\r\nfunction uvErrmapGet(name) {\r\n  uvBinding = lazyUv();\r\n  uvBinding.errmap ??= uvBinding.getErrorMap();\r\n  return MapPrototypeGet(uvBinding.errmap, name);\r\n}\r\n\r\nconst captureLargerStackTrace = hideStackFrames(\r\n  function captureLargerStackTrace(err) {\r\n    const stackTraceLimitIsWritable = isErrorStackTraceLimitWritable();\r\n    if (stackTraceLimitIsWritable) {\r\n      userStackTraceLimit = Error.stackTraceLimit;\r\n      Error.stackTraceLimit = Infinity;\r\n    }\r\n    ErrorCaptureStackTrace(err);\r\n    // Reset the limit\r\n    if (stackTraceLimitIsWritable) Error.stackTraceLimit = userStackTraceLimit;\r\n\r\n    return err;\r\n  });\r\n\r\n/**\r\n * This creates an error compatible with errors produced in the C++\r\n * function UVException using a context object with data assembled in C++.\r\n * The goal is to migrate them to ERR_* errors later when compatibility is\r\n * not a concern.\r\n *\r\n * @param {object} ctx\r\n * @returns {Error}\r\n */\r\nconst uvException = hideStackFrames(function uvException(ctx) {\r\n  const { 0: code, 1: uvmsg } = uvErrmapGet(ctx.errno) || uvUnmappedError;\r\n  let message = `${code}: ${ctx.message || uvmsg}, ${ctx.syscall}`;\r\n\r\n  let path;\r\n  let dest;\r\n  if (ctx.path) {\r\n    path = ctx.path.toString();\r\n    message += ` '${path}'`;\r\n  }\r\n  if (ctx.dest) {\r\n    dest = ctx.dest.toString();\r\n    message += ` -> '${dest}'`;\r\n  }\r\n\r\n  // Reducing the limit improves the performance significantly. We do not lose\r\n  // the stack frames due to the `captureStackTrace()` function that is called\r\n  // later.\r\n  const tmpLimit = Error.stackTraceLimit;\r\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\r\n  // Pass the message to the constructor instead of setting it on the object\r\n  // to make sure it is the same as the one created in C++\r\n  // eslint-disable-next-line no-restricted-syntax\r\n  const err = new Error(message);\r\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmpLimit;\r\n\r\n  for (const prop of ObjectKeys(ctx)) {\r\n    if (prop === 'message' || prop === 'path' || prop === 'dest') {\r\n      continue;\r\n    }\r\n    err[prop] = ctx[prop];\r\n  }\r\n\r\n  err.code = code;\r\n  if (path) {\r\n    err.path = path;\r\n  }\r\n  if (dest) {\r\n    err.dest = dest;\r\n  }\r\n\r\n  return captureLargerStackTrace(err);\r\n});\r\n\r\n/**\r\n * This creates an error compatible with errors produced in the C++\r\n * This function should replace the deprecated\r\n * `exceptionWithHostPort()` function.\r\n *\r\n * @param {number} err - A libuv error number\r\n * @param {string} syscall\r\n * @param {string} address\r\n * @param {number} [port]\r\n * @returns {Error}\r\n */\r\nconst uvExceptionWithHostPort = hideStackFrames(\r\n  function uvExceptionWithHostPort(err, syscall, address, port) {\r\n    const { 0: code, 1: uvmsg } = uvErrmapGet(err) || uvUnmappedError;\r\n    const message = `${syscall} ${code}: ${uvmsg}`;\r\n    let details = '';\r\n\r\n    if (port && port > 0) {\r\n      details = ` ${address}:${port}`;\r\n    } else if (address) {\r\n      details = ` ${address}`;\r\n    }\r\n\r\n    // Reducing the limit improves the performance significantly. We do not\r\n    // lose the stack frames due to the `captureStackTrace()` function that\r\n    // is called later.\r\n    const tmpLimit = Error.stackTraceLimit;\r\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    const ex = new Error(`${message}${details}`);\r\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmpLimit;\r\n    ex.code = code;\r\n    ex.errno = err;\r\n    ex.syscall = syscall;\r\n    ex.address = address;\r\n    if (port) {\r\n      ex.port = port;\r\n    }\r\n\r\n    return captureLargerStackTrace(ex);\r\n  });\r\n\r\n/**\r\n * This used to be util._errnoException().\r\n *\r\n * @param {number} err - A libuv error number\r\n * @param {string} syscall\r\n * @param {string} [original]\r\n * @returns {Error}\r\n */\r\nconst errnoException = hideStackFrames(\r\n  function errnoException(err, syscall, original) {\r\n    // TODO(joyeecheung): We have to use the type-checked\r\n    // getSystemErrorName(err) to guard against invalid arguments from users.\r\n    // This can be replaced with [ code ] = errmap.get(err) when this method\r\n    // is no longer exposed to user land.\r\n    util ??= require('util');\r\n    const code = util.getSystemErrorName(err);\r\n    const message = original ?\r\n      `${syscall} ${code} ${original}` : `${syscall} ${code}`;\r\n\r\n    const tmpLimit = Error.stackTraceLimit;\r\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    const ex = new Error(message);\r\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmpLimit;\r\n    ex.errno = err;\r\n    ex.code = code;\r\n    ex.syscall = syscall;\r\n\r\n    return captureLargerStackTrace(ex);\r\n  });\r\n\r\n/**\r\n * Deprecated, new function is `uvExceptionWithHostPort()`\r\n * New function added the error description directly\r\n * from C++. this method for backwards compatibility\r\n * @param {number} err - A libuv error number\r\n * @param {string} syscall\r\n * @param {string} address\r\n * @param {number} [port]\r\n * @param {string} [additional]\r\n * @returns {Error}\r\n */\r\nconst exceptionWithHostPort = hideStackFrames(\r\n  function exceptionWithHostPort(err, syscall, address, port, additional) {\r\n    // TODO(joyeecheung): We have to use the type-checked\r\n    // getSystemErrorName(err) to guard against invalid arguments from users.\r\n    // This can be replaced with [ code ] = errmap.get(err) when this method\r\n    // is no longer exposed to user land.\r\n    util ??= require('util');\r\n    const code = util.getSystemErrorName(err);\r\n    let details = '';\r\n    if (port && port > 0) {\r\n      details = ` ${address}:${port}`;\r\n    } else if (address) {\r\n      details = ` ${address}`;\r\n    }\r\n    if (additional) {\r\n      details += ` - Local (${additional})`;\r\n    }\r\n\r\n    // Reducing the limit improves the performance significantly. We do not\r\n    // lose the stack frames due to the `captureStackTrace()` function that\r\n    // is called later.\r\n    const tmpLimit = Error.stackTraceLimit;\r\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    const ex = new Error(`${syscall} ${code}${details}`);\r\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmpLimit;\r\n    ex.errno = err;\r\n    ex.code = code;\r\n    ex.syscall = syscall;\r\n    ex.address = address;\r\n    if (port) {\r\n      ex.port = port;\r\n    }\r\n\r\n    return captureLargerStackTrace(ex);\r\n  });\r\n\r\n/**\r\n * @param {number|string} code - A libuv error number or a c-ares error code\r\n * @param {string} syscall\r\n * @param {string} [hostname]\r\n * @returns {Error}\r\n */\r\nconst dnsException = hideStackFrames(function(code, syscall, hostname) {\r\n  let errno;\r\n  // If `code` is of type number, it is a libuv error number, else it is a\r\n  // c-ares error code.\r\n  // TODO(joyeecheung): translate c-ares error codes into numeric ones and\r\n  // make them available in a property that's not error.errno (since they\r\n  // can be in conflict with libuv error codes). Also make sure\r\n  // util.getSystemErrorName() can understand them when an being informed that\r\n  // the number is a c-ares error code.\r\n  if (typeof code === 'number') {\r\n    errno = code;\r\n    // ENOTFOUND is not a proper POSIX error, but this error has been in place\r\n    // long enough that it's not practical to remove it.\r\n    if (code === lazyUv().UV_EAI_NODATA || code === lazyUv().UV_EAI_NONAME) {\r\n      code = 'ENOTFOUND'; // Fabricated error name.\r\n    } else {\r\n      code = lazyInternalUtil().getSystemErrorName(code);\r\n    }\r\n  }\r\n  const message = `${syscall} ${code}${hostname ? ` ${hostname}` : ''}`;\r\n  // Reducing the limit improves the performance significantly. We do not lose\r\n  // the stack frames due to the `captureStackTrace()` function that is called\r\n  // later.\r\n  const tmpLimit = Error.stackTraceLimit;\r\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\r\n  // eslint-disable-next-line no-restricted-syntax\r\n  const ex = new Error(message);\r\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmpLimit;\r\n  ex.errno = errno;\r\n  ex.code = code;\r\n  ex.syscall = syscall;\r\n  if (hostname) {\r\n    ex.hostname = hostname;\r\n  }\r\n\r\n  return captureLargerStackTrace(ex);\r\n});\r\n\r\nfunction connResetException(msg) {\r\n  // eslint-disable-next-line no-restricted-syntax\r\n  const ex = new Error(msg);\r\n  ex.code = 'ECONNRESET';\r\n  return ex;\r\n}\r\n\r\nlet maxStack_ErrorName;\r\nlet maxStack_ErrorMessage;\r\n/**\r\n * Returns true if `err.name` and `err.message` are equal to engine-specific\r\n * values indicating max call stack size has been exceeded.\r\n * \"Maximum call stack size exceeded\" in V8.\r\n *\r\n * @param {Error} err\r\n * @returns {boolean}\r\n */\r\nfunction isStackOverflowError(err) {\r\n  if (maxStack_ErrorMessage === undefined) {\r\n    try {\r\n      function overflowStack() { overflowStack(); }\r\n      overflowStack();\r\n    } catch (err) {\r\n      maxStack_ErrorMessage = err.message;\r\n      maxStack_ErrorName = err.name;\r\n    }\r\n  }\r\n\r\n  return err && err.name === maxStack_ErrorName &&\r\n         err.message === maxStack_ErrorMessage;\r\n}\r\n\r\n// Only use this for integers! Decimal numbers do not work with this function.\r\nfunction addNumericalSeparator(val) {\r\n  let res = '';\r\n  let i = val.length;\r\n  const start = val[0] === '-' ? 1 : 0;\r\n  for (; i >= start + 4; i -= 3) {\r\n    res = `_${StringPrototypeSlice(val, i - 3, i)}${res}`;\r\n  }\r\n  return `${StringPrototypeSlice(val, 0, i)}${res}`;\r\n}\r\n\r\n// Used to enhance the stack that will be picked up by the inspector\r\nconst kEnhanceStackBeforeInspector = Symbol('kEnhanceStackBeforeInspector');\r\n\r\n// These are supposed to be called only on fatal exceptions before\r\n// the process exits.\r\nconst fatalExceptionStackEnhancers = {\r\n  beforeInspector(error) {\r\n    if (typeof error[kEnhanceStackBeforeInspector] !== 'function') {\r\n      return error.stack;\r\n    }\r\n\r\n    try {\r\n      // Set the error.stack here so it gets picked up by the\r\n      // inspector.\r\n      error.stack = error[kEnhanceStackBeforeInspector]();\r\n    } catch {\r\n      // We are just enhancing the error. If it fails, ignore it.\r\n    }\r\n    return error.stack;\r\n  },\r\n  afterInspector(error) {\r\n    const originalStack = error.stack;\r\n    let useColors = true;\r\n    // Some consoles do not convert ANSI escape sequences to colors,\r\n    // rather display them directly to the stdout. On those consoles,\r\n    // libuv emulates colors by intercepting stdout stream and calling\r\n    // corresponding Windows API functions for setting console colors.\r\n    // However, fatal error are handled differently and we cannot easily\r\n    // highlight them. On Windows, detecting whether a console supports\r\n    // ANSI escape sequences is not reliable.\r\n    if (process.platform === 'win32') {\r\n      const info = internalBinding('os').getOSInformation();\r\n      const ver = ArrayPrototypeMap(StringPrototypeSplit(info[2], '.'),\r\n                                    Number);\r\n      if (ver[0] !== 10 || ver[2] < 14393) {\r\n        useColors = false;\r\n      }\r\n    }\r\n    const {\r\n      inspect,\r\n      inspectDefaultOptions: {\r\n        colors: defaultColors\r\n      }\r\n    } = lazyInternalUtilInspect();\r\n    const colors = useColors &&\r\n                   ((internalBinding('util').guessHandleType(2) === 'TTY' &&\r\n                   require('internal/tty').hasColors()) ||\r\n                   defaultColors);\r\n    try {\r\n      return inspect(error, {\r\n        colors,\r\n        customInspect: false,\r\n        depth: MathMax(inspect.defaultOptions.depth, 5)\r\n      });\r\n    } catch {\r\n      return originalStack;\r\n    }\r\n  }\r\n};\r\n\r\nconst {\r\n  privateSymbols: {\r\n    arrow_message_private_symbol,\r\n  }\r\n} = internalBinding('util');\r\n// Ensures the printed error line is from user code.\r\nfunction setArrowMessage(err, arrowMessage) {\r\n  err[arrow_message_private_symbol] = arrowMessage;\r\n}\r\n\r\n// Hide stack lines before the first user code line.\r\nfunction hideInternalStackFrames(error) {\r\n  overrideStackTrace.set(error, (error, stackFrames) => {\r\n    let frames = stackFrames;\r\n    if (typeof stackFrames === 'object') {\r\n      frames = ArrayPrototypeFilter(\r\n        stackFrames,\r\n        (frm) => !StringPrototypeStartsWith(frm.getFileName() || '',\r\n                                            'node:internal')\r\n      );\r\n    }\r\n    ArrayPrototypeUnshift(frames, error);\r\n    return ArrayPrototypeJoin(frames, '\\n    at ');\r\n  });\r\n}\r\n\r\n// Node uses an AbortError that isn't exactly the same as the DOMException\r\n// to make usage of the error in userland and readable-stream easier.\r\n// It is a regular error with `.code` and `.name`.\r\nclass AbortError extends Error {\r\n  constructor(message = 'The operation was aborted', options = undefined) {\r\n    if (options !== undefined && typeof options !== 'object') {\r\n      throw new codes.ERR_INVALID_ARG_TYPE('options', 'Object', options);\r\n    }\r\n    super(message, options);\r\n    this.code = 'ABORT_ERR';\r\n    this.name = 'AbortError';\r\n  }\r\n}\r\n\r\n/**\r\n * This creates a generic Node.js error.\r\n *\r\n * @param {string} message The error message.\r\n * @param {object} errorProperties Object with additional properties to be added to the error.\r\n * @returns {Error}\r\n */\r\nconst genericNodeError = hideStackFrames(function genericNodeError(message, errorProperties) {\r\n  // eslint-disable-next-line no-restricted-syntax\r\n  const err = new Error(message);\r\n  ObjectAssign(err, errorProperties);\r\n  return err;\r\n});\r\n\r\n/**\r\n * Determine the specific type of a value for type-mismatch errors.\r\n * @param {*} value\r\n * @returns {string}\r\n */\r\nfunction determineSpecificType(value) {\r\n  if (value == null) {\r\n    return '' + value;\r\n  }\r\n  if (typeof value === 'function' && value.name) {\r\n    return `function ${value.name}`;\r\n  }\r\n  if (typeof value === 'object') {\r\n    if (value.constructor?.name) {\r\n      return `an instance of ${value.constructor.name}`;\r\n    }\r\n    return `${lazyInternalUtilInspect().inspect(value, { depth: -1 })}`;\r\n  }\r\n  let inspected = lazyInternalUtilInspect()\r\n    .inspect(value, { colors: false });\r\n  if (inspected.length > 28) { inspected = `${StringPrototypeSlice(inspected, 0, 25)}...`; }\r\n\r\n  return `type ${typeof value} (${inspected})`;\r\n}\r\n\r\n/**\r\n * Create a list string in the form like 'A and B' or 'A, B, ..., and Z'.\r\n * We cannot use Intl.ListFormat because it's not available in\r\n * --without-intl builds.\r\n * @param {string[]} array An array of strings.\r\n * @param {string} [type] The list type to be inserted before the last element.\r\n * @returns {string}\r\n */\r\nfunction formatList(array, type = 'and') {\r\n  return array.length < 3 ? ArrayPrototypeJoin(array, ` ${type} `) :\r\n    `${ArrayPrototypeJoin(ArrayPrototypeSlice(array, 0, -1), ', ')}, ${type} ${array[array.length - 1]}`;\r\n}\r\n\r\nmodule.exports = {\r\n  AbortError,\r\n  aggregateTwoErrors,\r\n  aggregateErrors,\r\n  captureLargerStackTrace,\r\n  codes,\r\n  connResetException,\r\n  dnsException,\r\n  // This is exported only to facilitate testing.\r\n  determineSpecificType,\r\n  E,\r\n  errnoException,\r\n  exceptionWithHostPort,\r\n  fatalExceptionStackEnhancers,\r\n  formatList,\r\n  genericNodeError,\r\n  getMessage,\r\n  hideInternalStackFrames,\r\n  hideStackFrames,\r\n  inspectWithNoCustomRetry,\r\n  isErrorStackTraceLimitWritable,\r\n  isStackOverflowError,\r\n  kEnhanceStackBeforeInspector,\r\n  kIsNodeError,\r\n  kNoOverride,\r\n  maybeOverridePrepareStackTrace,\r\n  overrideStackTrace,\r\n  prepareStackTrace,\r\n  setArrowMessage,\r\n  SystemError,\r\n  uvErrmapGet,\r\n  uvException,\r\n  uvExceptionWithHostPort,\r\n};\r\n\r\n// To declare an error message, use the E(sym, val, def) function above. The sym\r\n// must be an upper case string. The val can be either a function or a string.\r\n// The def must be an error class.\r\n// The return value of the function must be a string.\r\n// Examples:\r\n// E('EXAMPLE_KEY1', 'This is the error value', Error);\r\n// E('EXAMPLE_KEY2', (a, b) => return `${a} ${b}`, RangeError);\r\n//\r\n// Once an error code has been assigned, the code itself MUST NOT change and\r\n// any given error code must never be reused to identify a different error.\r\n//\r\n// Any error code added here should also be added to the documentation\r\n//\r\n// Note: Please try to keep these in alphabetical order\r\n//\r\n// Note: Node.js specific errors must begin with the prefix ERR_\r\n\r\nE('ERR_AMBIGUOUS_ARGUMENT', 'The \"%s\" argument is ambiguous. %s', TypeError);\r\nE('ERR_ARG_NOT_ITERABLE', '%s must be iterable', TypeError);\r\nE('ERR_ASSERTION', '%s', Error);\r\nE('ERR_ASYNC_CALLBACK', '%s must be a function', TypeError);\r\nE('ERR_ASYNC_TYPE', 'Invalid name for async \"type\": %s', TypeError);\r\nE('ERR_BROTLI_INVALID_PARAM', '%s is not a valid Brotli parameter', RangeError);\r\nE('ERR_BUFFER_OUT_OF_BOUNDS',\r\n  // Using a default argument here is important so the argument is not counted\r\n  // towards `Function#length`.\r\n  (name = undefined) => {\r\n    if (name) {\r\n      return `\"${name}\" is outside of buffer bounds`;\r\n    }\r\n    return 'Attempt to access memory outside buffer bounds';\r\n  }, RangeError);\r\nE('ERR_BUFFER_TOO_LARGE',\r\n  'Cannot create a Buffer larger than %s bytes',\r\n  RangeError);\r\nE('ERR_CANNOT_WATCH_SIGINT', 'Cannot watch for SIGINT signals', Error);\r\nE('ERR_CHILD_CLOSED_BEFORE_REPLY',\r\n  'Child closed before reply received', Error);\r\nE('ERR_CHILD_PROCESS_IPC_REQUIRED',\r\n  \"Forked processes must have an IPC channel, missing value 'ipc' in %s\",\r\n  Error);\r\nE('ERR_CHILD_PROCESS_STDIO_MAXBUFFER', '%s maxBuffer length exceeded',\r\n  RangeError);\r\nE('ERR_CONSOLE_WRITABLE_STREAM',\r\n  'Console expects a writable stream instance for %s', TypeError);\r\nE('ERR_CONTEXT_NOT_INITIALIZED', 'context used is not initialized', Error);\r\nE('ERR_CRYPTO_CUSTOM_ENGINE_NOT_SUPPORTED',\r\n  'Custom engines not supported by this OpenSSL', Error);\r\nE('ERR_CRYPTO_ECDH_INVALID_FORMAT', 'Invalid ECDH format: %s', TypeError);\r\nE('ERR_CRYPTO_ECDH_INVALID_PUBLIC_KEY',\r\n  'Public key is not valid for specified curve', Error);\r\nE('ERR_CRYPTO_ENGINE_UNKNOWN', 'Engine \"%s\" was not found', Error);\r\nE('ERR_CRYPTO_FIPS_FORCED',\r\n  'Cannot set FIPS mode, it was forced with --force-fips at startup.', Error);\r\nE('ERR_CRYPTO_FIPS_UNAVAILABLE', 'Cannot set FIPS mode in a non-FIPS build.',\r\n  Error);\r\nE('ERR_CRYPTO_HASH_FINALIZED', 'Digest already called', Error);\r\nE('ERR_CRYPTO_HASH_UPDATE_FAILED', 'Hash update failed', Error);\r\nE('ERR_CRYPTO_INCOMPATIBLE_KEY', 'Incompatible %s: %s', Error);\r\nE('ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS', 'The selected key encoding %s %s.',\r\n  Error);\r\nE('ERR_CRYPTO_INVALID_DIGEST', 'Invalid digest: %s', TypeError);\r\nE('ERR_CRYPTO_INVALID_JWK', 'Invalid JWK data', TypeError);\r\nE('ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE',\r\n  'Invalid key object type %s, expected %s.', TypeError);\r\nE('ERR_CRYPTO_INVALID_STATE', 'Invalid state for operation %s', Error);\r\nE('ERR_CRYPTO_PBKDF2_ERROR', 'PBKDF2 error', Error);\r\nE('ERR_CRYPTO_SCRYPT_INVALID_PARAMETER', 'Invalid scrypt parameter', Error);\r\nE('ERR_CRYPTO_SCRYPT_NOT_SUPPORTED', 'Scrypt algorithm not supported', Error);\r\n// Switch to TypeError. The current implementation does not seem right.\r\nE('ERR_CRYPTO_SIGN_KEY_REQUIRED', 'No key provided to sign', Error);\r\nE('ERR_DEBUGGER_ERROR', '%s', Error);\r\nE('ERR_DEBUGGER_STARTUP_ERROR', '%s', Error);\r\nE('ERR_DIR_CLOSED', 'Directory handle was closed', Error);\r\nE('ERR_DIR_CONCURRENT_OPERATION',\r\n  'Cannot do synchronous work on directory handle with concurrent ' +\r\n  'asynchronous operations', Error);\r\nE('ERR_DNS_SET_SERVERS_FAILED', 'c-ares failed to set servers: \"%s\" [%s]',\r\n  Error);\r\nE('ERR_DOMAIN_CALLBACK_NOT_AVAILABLE',\r\n  'A callback was registered through ' +\r\n     'process.setUncaughtExceptionCaptureCallback(), which is mutually ' +\r\n     'exclusive with using the `domain` module',\r\n  Error);\r\nE('ERR_DOMAIN_CANNOT_SET_UNCAUGHT_EXCEPTION_CAPTURE',\r\n  'The `domain` module is in use, which is mutually exclusive with calling ' +\r\n     'process.setUncaughtExceptionCaptureCallback()',\r\n  Error);\r\nE('ERR_DUPLICATE_STARTUP_SNAPSHOT_MAIN_FUNCTION',\r\n  'Deserialize main function is already configured.', Error);\r\nE('ERR_ENCODING_INVALID_ENCODED_DATA', function(encoding, ret) {\r\n  this.errno = ret;\r\n  return `The encoded data was not valid for encoding ${encoding}`;\r\n}, TypeError);\r\nE('ERR_ENCODING_NOT_SUPPORTED', 'The \"%s\" encoding is not supported',\r\n  RangeError);\r\nE('ERR_EVAL_ESM_CANNOT_PRINT', '--print cannot be used with ESM input', Error);\r\nE('ERR_EVENT_RECURSION', 'The event \"%s\" is already being dispatched', Error);\r\nE('ERR_FALSY_VALUE_REJECTION', function(reason) {\r\n  this.reason = reason;\r\n  return 'Promise was rejected with falsy value';\r\n}, Error);\r\nE('ERR_FEATURE_UNAVAILABLE_ON_PLATFORM',\r\n  'The feature %s is unavailable on the current platform' +\r\n  ', which is being used to run Node.js',\r\n  TypeError);\r\nE('ERR_FS_CP_DIR_TO_NON_DIR',\r\n  'Cannot overwrite directory with non-directory', SystemError);\r\nE('ERR_FS_CP_EEXIST', 'Target already exists', SystemError);\r\nE('ERR_FS_CP_EINVAL', 'Invalid src or dest', SystemError);\r\nE('ERR_FS_CP_FIFO_PIPE', 'Cannot copy a FIFO pipe', SystemError);\r\nE('ERR_FS_CP_NON_DIR_TO_DIR',\r\n  'Cannot overwrite non-directory with directory', SystemError);\r\nE('ERR_FS_CP_SOCKET', 'Cannot copy a socket file', SystemError);\r\nE('ERR_FS_CP_SYMLINK_TO_SUBDIRECTORY',\r\n  'Cannot overwrite symlink in subdirectory of self', SystemError);\r\nE('ERR_FS_CP_UNKNOWN', 'Cannot copy an unknown file type', SystemError);\r\nE('ERR_FS_EISDIR', 'Path is a directory', SystemError);\r\nE('ERR_FS_FILE_TOO_LARGE', 'File size (%s) is greater than 2 GiB', RangeError);\r\nE('ERR_FS_INVALID_SYMLINK_TYPE',\r\n  'Symlink type must be one of \"dir\", \"file\", or \"junction\". Received \"%s\"',\r\n  Error); // Switch to TypeError. The current implementation does not seem right\r\nE('ERR_HTTP2_ALTSVC_INVALID_ORIGIN',\r\n  'HTTP/2 ALTSVC frames require a valid origin', TypeError);\r\nE('ERR_HTTP2_ALTSVC_LENGTH',\r\n  'HTTP/2 ALTSVC frames are limited to 16382 bytes', TypeError);\r\nE('ERR_HTTP2_CONNECT_AUTHORITY',\r\n  ':authority header is required for CONNECT requests', Error);\r\nE('ERR_HTTP2_CONNECT_PATH',\r\n  'The :path header is forbidden for CONNECT requests', Error);\r\nE('ERR_HTTP2_CONNECT_SCHEME',\r\n  'The :scheme header is forbidden for CONNECT requests', Error);\r\nE('ERR_HTTP2_GOAWAY_SESSION',\r\n  'New streams cannot be created after receiving a GOAWAY', Error);\r\nE('ERR_HTTP2_HEADERS_AFTER_RESPOND',\r\n  'Cannot specify additional headers after response initiated', Error);\r\nE('ERR_HTTP2_HEADERS_SENT', 'Response has already been initiated.', Error);\r\nE('ERR_HTTP2_HEADER_SINGLE_VALUE',\r\n  'Header field \"%s\" must only have a single value', TypeError);\r\nE('ERR_HTTP2_INFO_STATUS_NOT_ALLOWED',\r\n  'Informational status codes cannot be used', RangeError);\r\nE('ERR_HTTP2_INVALID_CONNECTION_HEADERS',\r\n  'HTTP/1 Connection specific headers are forbidden: \"%s\"', TypeError);\r\nE('ERR_HTTP2_INVALID_HEADER_VALUE',\r\n  'Invalid value \"%s\" for header \"%s\"', TypeError);\r\nE('ERR_HTTP2_INVALID_INFO_STATUS',\r\n  'Invalid informational status code: %s', RangeError);\r\nE('ERR_HTTP2_INVALID_ORIGIN',\r\n  'HTTP/2 ORIGIN frames require a valid origin', TypeError);\r\nE('ERR_HTTP2_INVALID_PACKED_SETTINGS_LENGTH',\r\n  'Packed settings length must be a multiple of six', RangeError);\r\nE('ERR_HTTP2_INVALID_PSEUDOHEADER',\r\n  '\"%s\" is an invalid pseudoheader or is used incorrectly', TypeError);\r\nE('ERR_HTTP2_INVALID_SESSION', 'The session has been destroyed', Error);\r\nE('ERR_HTTP2_INVALID_SETTING_VALUE',\r\n  // Using default arguments here is important so the arguments are not counted\r\n  // towards `Function#length`.\r\n  function(name, actual, min = undefined, max = undefined) {\r\n    this.actual = actual;\r\n    if (min !== undefined) {\r\n      this.min = min;\r\n      this.max = max;\r\n    }\r\n    return `Invalid value for setting \"${name}\": ${actual}`;\r\n  }, TypeError, RangeError);\r\nE('ERR_HTTP2_INVALID_STREAM', 'The stream has been destroyed', Error);\r\nE('ERR_HTTP2_MAX_PENDING_SETTINGS_ACK',\r\n  'Maximum number of pending settings acknowledgements', Error);\r\nE('ERR_HTTP2_NESTED_PUSH',\r\n  'A push stream cannot initiate another push stream.', Error);\r\nE('ERR_HTTP2_NO_MEM', 'Out of memory', Error);\r\nE('ERR_HTTP2_NO_SOCKET_MANIPULATION',\r\n  'HTTP/2 sockets should not be directly manipulated (e.g. read and written)',\r\n  Error);\r\nE('ERR_HTTP2_ORIGIN_LENGTH',\r\n  'HTTP/2 ORIGIN frames are limited to 16382 bytes', TypeError);\r\nE('ERR_HTTP2_OUT_OF_STREAMS',\r\n  'No stream ID is available because maximum stream ID has been reached',\r\n  Error);\r\nE('ERR_HTTP2_PAYLOAD_FORBIDDEN',\r\n  'Responses with %s status must not have a payload', Error);\r\nE('ERR_HTTP2_PING_CANCEL', 'HTTP2 ping cancelled', Error);\r\nE('ERR_HTTP2_PING_LENGTH', 'HTTP2 ping payload must be 8 bytes', RangeError);\r\nE('ERR_HTTP2_PSEUDOHEADER_NOT_ALLOWED',\r\n  'Cannot set HTTP/2 pseudo-headers', TypeError);\r\nE('ERR_HTTP2_PUSH_DISABLED', 'HTTP/2 client has disabled push streams', Error);\r\nE('ERR_HTTP2_SEND_FILE', 'Directories cannot be sent', Error);\r\nE('ERR_HTTP2_SEND_FILE_NOSEEK',\r\n  'Offset or length can only be specified for regular files', Error);\r\nE('ERR_HTTP2_SESSION_ERROR', 'Session closed with error code %s', Error);\r\nE('ERR_HTTP2_SETTINGS_CANCEL', 'HTTP2 session settings canceled', Error);\r\nE('ERR_HTTP2_SOCKET_BOUND',\r\n  'The socket is already bound to an Http2Session', Error);\r\nE('ERR_HTTP2_SOCKET_UNBOUND',\r\n  'The socket has been disconnected from the Http2Session', Error);\r\nE('ERR_HTTP2_STATUS_101',\r\n  'HTTP status code 101 (Switching Protocols) is forbidden in HTTP/2', Error);\r\nE('ERR_HTTP2_STATUS_INVALID', 'Invalid status code: %s', RangeError);\r\nE('ERR_HTTP2_STREAM_CANCEL', function(error) {\r\n  let msg = 'The pending stream has been canceled';\r\n  if (error) {\r\n    this.cause = error;\r\n    if (typeof error.message === 'string')\r\n      msg += ` (caused by: ${error.message})`;\r\n  }\r\n  return msg;\r\n}, Error);\r\nE('ERR_HTTP2_STREAM_ERROR', 'Stream closed with error code %s', Error);\r\nE('ERR_HTTP2_STREAM_SELF_DEPENDENCY',\r\n  'A stream cannot depend on itself', Error);\r\nE('ERR_HTTP2_TOO_MANY_INVALID_FRAMES', 'Too many invalid HTTP/2 frames', Error);\r\nE('ERR_HTTP2_TRAILERS_ALREADY_SENT',\r\n  'Trailing headers have already been sent', Error);\r\nE('ERR_HTTP2_TRAILERS_NOT_READY',\r\n  'Trailing headers cannot be sent until after the wantTrailers event is ' +\r\n  'emitted', Error);\r\nE('ERR_HTTP2_UNSUPPORTED_PROTOCOL', 'protocol \"%s\" is unsupported.', Error);\r\nE('ERR_HTTP_CONTENT_LENGTH_MISMATCH',\r\n  'Response body\\'s content-length of %s byte(s) does not match the content-length of %s byte(s) set in header', Error);\r\nE('ERR_HTTP_HEADERS_SENT',\r\n  'Cannot %s headers after they are sent to the client', Error);\r\nE('ERR_HTTP_INVALID_HEADER_VALUE',\r\n  'Invalid value \"%s\" for header \"%s\"', TypeError);\r\nE('ERR_HTTP_INVALID_STATUS_CODE', 'Invalid status code: %s', RangeError);\r\nE('ERR_HTTP_REQUEST_TIMEOUT', 'Request timeout', Error);\r\nE('ERR_HTTP_SOCKET_ENCODING',\r\n  'Changing the socket encoding is not allowed per RFC7230 Section 3.', Error);\r\nE('ERR_HTTP_TRAILER_INVALID',\r\n  'Trailers are invalid with this transfer encoding', Error);\r\nE('ERR_ILLEGAL_CONSTRUCTOR', 'Illegal constructor', TypeError);\r\nE('ERR_IMPORT_ASSERTION_TYPE_FAILED',\r\n  'Module \"%s\" is not of type \"%s\"', TypeError);\r\nE('ERR_IMPORT_ASSERTION_TYPE_MISSING',\r\n  'Module \"%s\" needs an import assertion of type \"%s\"', TypeError);\r\nE('ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED',\r\n  'Import assertion type \"%s\" is unsupported', TypeError);\r\nE('ERR_INCOMPATIBLE_OPTION_PAIR',\r\n  'Option \"%s\" cannot be used in combination with option \"%s\"', TypeError);\r\nE('ERR_INPUT_TYPE_NOT_ALLOWED', '--input-type can only be used with string ' +\r\n  'input via --eval, --print, or STDIN', Error);\r\nE('ERR_INSPECTOR_ALREADY_ACTIVATED',\r\n  'Inspector is already activated. Close it with inspector.close() ' +\r\n  'before activating it again.',\r\n  Error);\r\nE('ERR_INSPECTOR_ALREADY_CONNECTED', '%s is already connected', Error);\r\nE('ERR_INSPECTOR_CLOSED', 'Session was closed', Error);\r\nE('ERR_INSPECTOR_COMMAND', 'Inspector error %d: %s', Error);\r\nE('ERR_INSPECTOR_NOT_ACTIVE', 'Inspector is not active', Error);\r\nE('ERR_INSPECTOR_NOT_AVAILABLE', 'Inspector is not available', Error);\r\nE('ERR_INSPECTOR_NOT_CONNECTED', 'Session is not connected', Error);\r\nE('ERR_INSPECTOR_NOT_WORKER', 'Current thread is not a worker', Error);\r\nE('ERR_INTERNAL_ASSERTION', (message) => {\r\n  const suffix = 'This is caused by either a bug in Node.js ' +\r\n    'or incorrect usage of Node.js internals.\\n' +\r\n    'Please open an issue with this stack trace at ' +\r\n    'https://github.com/nodejs/node/issues\\n';\r\n  return message === undefined ? suffix : `${message}\\n${suffix}`;\r\n}, Error);\r\nE('ERR_INVALID_ADDRESS_FAMILY', function(addressType, host, port) {\r\n  this.host = host;\r\n  this.port = port;\r\n  return `Invalid address family: ${addressType} ${host}:${port}`;\r\n}, RangeError);\r\nE('ERR_INVALID_ARG_TYPE',\r\n  (name, expected, actual) => {\r\n    assert(typeof name === 'string', \"'name' must be a string\");\r\n    if (!ArrayIsArray(expected)) {\r\n      expected = [expected];\r\n    }\r\n\r\n    let msg = 'The ';\r\n    if (StringPrototypeEndsWith(name, ' argument')) {\r\n      // For cases like 'first argument'\r\n      msg += `${name} `;\r\n    } else {\r\n      const type = StringPrototypeIncludes(name, '.') ? 'property' : 'argument';\r\n      msg += `\"${name}\" ${type} `;\r\n    }\r\n    msg += 'must be ';\r\n\r\n    const types = [];\r\n    const instances = [];\r\n    const other = [];\r\n\r\n    for (const value of expected) {\r\n      assert(typeof value === 'string',\r\n             'All expected entries have to be of type string');\r\n      if (ArrayPrototypeIncludes(kTypes, value)) {\r\n        ArrayPrototypePush(types, StringPrototypeToLowerCase(value));\r\n      } else if (RegExpPrototypeExec(classRegExp, value) !== null) {\r\n        ArrayPrototypePush(instances, value);\r\n      } else {\r\n        assert(value !== 'object',\r\n               'The value \"object\" should be written as \"Object\"');\r\n        ArrayPrototypePush(other, value);\r\n      }\r\n    }\r\n\r\n    // Special handle `object` in case other instances are allowed to outline\r\n    // the differences between each other.\r\n    if (instances.length > 0) {\r\n      const pos = ArrayPrototypeIndexOf(types, 'object');\r\n      if (pos !== -1) {\r\n        ArrayPrototypeSplice(types, pos, 1);\r\n        ArrayPrototypePush(instances, 'Object');\r\n      }\r\n    }\r\n\r\n    if (types.length > 0) {\r\n      msg += `${types.length > 1 ? 'one of type' : 'of type'} ${formatList(types, 'or')}`;\r\n      if (instances.length > 0 || other.length > 0)\r\n        msg += ' or ';\r\n    }\r\n\r\n    if (instances.length > 0) {\r\n      msg += `an instance of ${formatList(instances, 'or')}`;\r\n      if (other.length > 0)\r\n        msg += ' or ';\r\n    }\r\n\r\n    if (other.length > 0) {\r\n      if (other.length > 1) {\r\n        msg += `one of ${formatList(other, 'or')}`;\r\n      } else {\r\n        if (StringPrototypeToLowerCase(other[0]) !== other[0])\r\n          msg += 'an ';\r\n        msg += `${other[0]}`;\r\n      }\r\n    }\r\n\r\n    msg += `. Received ${determineSpecificType(actual)}`;\r\n\r\n    return msg;\r\n  }, TypeError);\r\nE('ERR_INVALID_ARG_VALUE', (name, value, reason = 'is invalid') => {\r\n  let inspected = lazyInternalUtilInspect().inspect(value);\r\n  if (inspected.length > 128) {\r\n    inspected = `${StringPrototypeSlice(inspected, 0, 128)}...`;\r\n  }\r\n  const type = StringPrototypeIncludes(name, '.') ? 'property' : 'argument';\r\n  return `The ${type} '${name}' ${reason}. Received ${inspected}`;\r\n}, TypeError, RangeError);\r\nE('ERR_INVALID_ASYNC_ID', 'Invalid %s value: %s', RangeError);\r\nE('ERR_INVALID_BUFFER_SIZE',\r\n  'Buffer size must be a multiple of %s', RangeError);\r\nE('ERR_INVALID_CHAR',\r\n  // Using a default argument here is important so the argument is not counted\r\n  // towards `Function#length`.\r\n  (name, field = undefined) => {\r\n    let msg = `Invalid character in ${name}`;\r\n    if (field !== undefined) {\r\n      msg += ` [\"${field}\"]`;\r\n    }\r\n    return msg;\r\n  }, TypeError);\r\nE('ERR_INVALID_CURSOR_POS',\r\n  'Cannot set cursor row without setting its column', TypeError);\r\nE('ERR_INVALID_FD',\r\n  '\"fd\" must be a positive integer: %s', RangeError);\r\nE('ERR_INVALID_FD_TYPE', 'Unsupported fd type: %s', TypeError);\r\nE('ERR_INVALID_FILE_URL_HOST',\r\n  'File URL host must be \"localhost\" or empty on %s', TypeError);\r\nE('ERR_INVALID_FILE_URL_PATH', 'File URL path %s', TypeError);\r\nE('ERR_INVALID_HANDLE_TYPE', 'This handle type cannot be sent', TypeError);\r\nE('ERR_INVALID_HTTP_TOKEN', '%s must be a valid HTTP token [\"%s\"]', TypeError);\r\nE('ERR_INVALID_IP_ADDRESS', 'Invalid IP address: %s', TypeError);\r\nE('ERR_INVALID_MIME_SYNTAX', (production, str, invalidIndex) => {\r\n  const msg = invalidIndex !== -1 ? ` at ${invalidIndex}` : '';\r\n  return `The MIME syntax for a ${production} in \"${str}\" is invalid` + msg;\r\n}, TypeError);\r\nE('ERR_INVALID_MODULE_SPECIFIER', (request, reason, base = undefined) => {\r\n  return `Invalid module \"${request}\" ${reason}${base ?\r\n    ` imported from ${base}` : ''}`;\r\n}, TypeError);\r\nE('ERR_INVALID_PACKAGE_CONFIG', (path, base, message) => {\r\n  return `Invalid package config ${path}${base ? ` while importing ${base}` :\r\n    ''}${message ? `. ${message}` : ''}`;\r\n}, Error);\r\nE('ERR_INVALID_PACKAGE_TARGET',\r\n  (pkgPath, key, target, isImport = false, base = undefined) => {\r\n    const relError = typeof target === 'string' && !isImport &&\r\n      target.length && !StringPrototypeStartsWith(target, './');\r\n    if (key === '.') {\r\n      assert(isImport === false);\r\n      return `Invalid \"exports\" main target ${JSONStringify(target)} defined ` +\r\n        `in the package config ${pkgPath}package.json${base ?\r\n          ` imported from ${base}` : ''}${relError ?\r\n          '; targets must start with \"./\"' : ''}`;\r\n    }\r\n    return `Invalid \"${isImport ? 'imports' : 'exports'}\" target ${\r\n      JSONStringify(target)} defined for '${key}' in the package config ${\r\n      pkgPath}package.json${base ? ` imported from ${base}` : ''}${relError ?\r\n      '; targets must start with \"./\"' : ''}`;\r\n  }, Error);\r\nE('ERR_INVALID_PROTOCOL',\r\n  'Protocol \"%s\" not supported. Expected \"%s\"',\r\n  TypeError);\r\nE('ERR_INVALID_REPL_EVAL_CONFIG',\r\n  'Cannot specify both \"breakEvalOnSigint\" and \"eval\" for REPL', TypeError);\r\nE('ERR_INVALID_REPL_INPUT', '%s', TypeError);\r\nE('ERR_INVALID_RETURN_PROPERTY', (input, name, prop, value) => {\r\n  return `Expected a valid ${input} to be returned for the \"${prop}\" from the` +\r\n         ` \"${name}\" function but got ${value}.`;\r\n}, TypeError);\r\nE('ERR_INVALID_RETURN_PROPERTY_VALUE', (input, name, prop, value) => {\r\n  let type;\r\n  if (value?.constructor?.name) {\r\n    type = `instance of ${value.constructor.name}`;\r\n  } else {\r\n    type = `type ${typeof value}`;\r\n  }\r\n  return `Expected ${input} to be returned for the \"${prop}\" from the` +\r\n         ` \"${name}\" function but got ${type}.`;\r\n}, TypeError);\r\nE('ERR_INVALID_RETURN_VALUE', (input, name, value) => {\r\n  const type = determineSpecificType(value);\r\n\r\n  return `Expected ${input} to be returned from the \"${name}\"` +\r\n         ` function but got ${type}.`;\r\n}, TypeError, RangeError);\r\nE('ERR_INVALID_STATE', 'Invalid state: %s', Error, TypeError, RangeError);\r\nE('ERR_INVALID_SYNC_FORK_INPUT',\r\n  'Asynchronous forks do not support ' +\r\n    'Buffer, TypedArray, DataView or string input: %s',\r\n  TypeError);\r\nE('ERR_INVALID_THIS', 'Value of \"this\" must be of type %s', TypeError);\r\nE('ERR_INVALID_TUPLE', '%s must be an iterable %s tuple', TypeError);\r\nE('ERR_INVALID_URI', 'URI malformed', URIError);\r\nE('ERR_INVALID_URL', function(input) {\r\n  this.input = input;\r\n  // Don't include URL in message.\r\n  // (See https://github.com/nodejs/node/pull/38614)\r\n  return 'Invalid URL';\r\n}, TypeError);\r\nE('ERR_INVALID_URL_SCHEME',\r\n  (expected) => {\r\n    if (typeof expected === 'string')\r\n      expected = [expected];\r\n    assert(expected.length <= 2);\r\n    const res = expected.length === 2 ?\r\n      `one of scheme ${expected[0]} or ${expected[1]}` :\r\n      `of scheme ${expected[0]}`;\r\n    return `The URL must be ${res}`;\r\n  }, TypeError);\r\nE('ERR_IPC_CHANNEL_CLOSED', 'Channel closed', Error);\r\nE('ERR_IPC_DISCONNECTED', 'IPC channel is already disconnected', Error);\r\nE('ERR_IPC_ONE_PIPE', 'Child process can have only one IPC pipe', Error);\r\nE('ERR_IPC_SYNC_FORK', 'IPC cannot be used with synchronous forks', Error);\r\nE(\r\n  'ERR_LOADER_CHAIN_INCOMPLETE',\r\n  '\"%s\" did not call the next hook in its chain and did not' +\r\n  ' explicitly signal a short circuit. If this is intentional, include' +\r\n  ' `shortCircuit: true` in the hook\\'s return.',\r\n  Error\r\n);\r\nE('ERR_MANIFEST_ASSERT_INTEGRITY',\r\n  (moduleURL, realIntegrities) => {\r\n    let msg = `The content of \"${\r\n      moduleURL\r\n    }\" does not match the expected integrity.`;\r\n    if (realIntegrities.size) {\r\n      const sri = ArrayPrototypeJoin(\r\n        ArrayFrom(realIntegrities.entries(),\r\n                  ({ 0: alg, 1: dgs }) => `${alg}-${dgs}`),\r\n        ' '\r\n      );\r\n      msg += ` Integrities found are: ${sri}`;\r\n    } else {\r\n      msg += ' The resource was not found in the policy.';\r\n    }\r\n    return msg;\r\n  }, Error);\r\nE('ERR_MANIFEST_DEPENDENCY_MISSING',\r\n  'Manifest resource %s does not list %s as a dependency specifier for ' +\r\n  'conditions: %s',\r\n  Error);\r\nE('ERR_MANIFEST_INTEGRITY_MISMATCH',\r\n  'Manifest resource %s has multiple entries but integrity lists do not match',\r\n  SyntaxError);\r\nE('ERR_MANIFEST_INVALID_RESOURCE_FIELD',\r\n  'Manifest resource %s has invalid property value for %s',\r\n  TypeError);\r\nE('ERR_MANIFEST_INVALID_SPECIFIER',\r\n  'Manifest resource %s has invalid dependency mapping %s',\r\n  TypeError);\r\nE('ERR_MANIFEST_TDZ', 'Manifest initialization has not yet run', Error);\r\nE('ERR_MANIFEST_UNKNOWN_ONERROR',\r\n  'Manifest specified unknown error behavior \"%s\".',\r\n  SyntaxError);\r\nE('ERR_METHOD_NOT_IMPLEMENTED', 'The %s method is not implemented', Error);\r\nE('ERR_MISSING_ARGS',\r\n  (...args) => {\r\n    assert(args.length > 0, 'At least one arg needs to be specified');\r\n    let msg = 'The ';\r\n    const len = args.length;\r\n    const wrap = (a) => `\"${a}\"`;\r\n    args = ArrayPrototypeMap(\r\n      args,\r\n      (a) => (ArrayIsArray(a) ?\r\n        ArrayPrototypeJoin(ArrayPrototypeMap(a, wrap), ' or ') :\r\n        wrap(a))\r\n    );\r\n    msg += `${formatList(args)} argument${len > 1 ? 's' : ''}`;\r\n    return `${msg} must be specified`;\r\n  }, TypeError);\r\nE('ERR_MISSING_OPTION', '%s is required', TypeError);\r\nE('ERR_MODULE_NOT_FOUND', (path, base, type = 'package') => {\r\n  return `Cannot find ${type} '${path}' imported from ${base}`;\r\n}, Error);\r\nE('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times', Error);\r\nE('ERR_NAPI_CONS_FUNCTION', 'Constructor must be a function', TypeError);\r\nE('ERR_NAPI_INVALID_DATAVIEW_ARGS',\r\n  'byte_offset + byte_length should be less than or equal to the size in ' +\r\n    'bytes of the array passed in',\r\n  RangeError);\r\nE('ERR_NAPI_INVALID_TYPEDARRAY_ALIGNMENT',\r\n  'start offset of %s should be a multiple of %s', RangeError);\r\nE('ERR_NAPI_INVALID_TYPEDARRAY_LENGTH',\r\n  'Invalid typed array length', RangeError);\r\nE('ERR_NETWORK_IMPORT_BAD_RESPONSE',\r\n  \"import '%s' received a bad response: %s\", Error);\r\nE('ERR_NETWORK_IMPORT_DISALLOWED',\r\n  \"import of '%s' by %s is not supported: %s\", Error);\r\nE('ERR_NOT_BUILDING_SNAPSHOT',\r\n  'Operation cannot be invoked when not building startup snapshot', Error);\r\nE('ERR_NO_CRYPTO',\r\n  'Node.js is not compiled with OpenSSL crypto support', Error);\r\nE('ERR_NO_ICU',\r\n  '%s is not supported on Node.js compiled without ICU', TypeError);\r\nE('ERR_OPERATION_FAILED', 'Operation failed: %s', Error, TypeError);\r\nE('ERR_OUT_OF_RANGE',\r\n  (str, range, input, replaceDefaultBoolean = false) => {\r\n    assert(range, 'Missing \"range\" argument');\r\n    let msg = replaceDefaultBoolean ? str :\r\n      `The value of \"${str}\" is out of range.`;\r\n    let received;\r\n    if (NumberIsInteger(input) && MathAbs(input) > 2 ** 32) {\r\n      received = addNumericalSeparator(String(input));\r\n    } else if (typeof input === 'bigint') {\r\n      received = String(input);\r\n      if (input > 2n ** 32n || input < -(2n ** 32n)) {\r\n        received = addNumericalSeparator(received);\r\n      }\r\n      received += 'n';\r\n    } else {\r\n      received = lazyInternalUtilInspect().inspect(input);\r\n    }\r\n    msg += ` It must be ${range}. Received ${received}`;\r\n    return msg;\r\n  }, RangeError);\r\nE('ERR_PACKAGE_IMPORT_NOT_DEFINED', (specifier, packagePath, base) => {\r\n  return `Package import specifier \"${specifier}\" is not defined${packagePath ?\r\n    ` in package ${packagePath}package.json` : ''} imported from ${base}`;\r\n}, TypeError);\r\nE('ERR_PACKAGE_PATH_NOT_EXPORTED', (pkgPath, subpath, base = undefined) => {\r\n  if (subpath === '.')\r\n    return `No \"exports\" main defined in ${pkgPath}package.json${base ?\r\n      ` imported from ${base}` : ''}`;\r\n  return `Package subpath '${subpath}' is not defined by \"exports\" in ${\r\n    pkgPath}package.json${base ? ` imported from ${base}` : ''}`;\r\n}, Error);\r\nE('ERR_PARSE_ARGS_INVALID_OPTION_VALUE', '%s', TypeError);\r\nE('ERR_PARSE_ARGS_UNEXPECTED_POSITIONAL', \"Unexpected argument '%s'. This \" +\r\n  'command does not take positional arguments', TypeError);\r\nE('ERR_PARSE_ARGS_UNKNOWN_OPTION', (option, allowPositionals) => {\r\n  const suggestDashDash = allowPositionals ? '. To specify a positional ' +\r\n    \"argument starting with a '-', place it at the end of the command after \" +\r\n    `'--', as in '-- ${JSONStringify(option)}` : '';\r\n  return `Unknown option '${option}'${suggestDashDash}`;\r\n}, TypeError);\r\nE('ERR_PERFORMANCE_INVALID_TIMESTAMP',\r\n  '%d is not a valid timestamp', TypeError);\r\nE('ERR_PERFORMANCE_MEASURE_INVALID_OPTIONS', '%s', TypeError);\r\nE('ERR_REQUIRE_ESM',\r\n  function(filename, hasEsmSyntax, parentPath = null, packageJsonPath = null) {\r\n    hideInternalStackFrames(this);\r\n    let msg = `require() of ES Module ${filename}${parentPath ? ` from ${\r\n      parentPath}` : ''} not supported.`;\r\n    if (!packageJsonPath) {\r\n      if (StringPrototypeEndsWith(filename, '.mjs'))\r\n        msg += `\\nInstead change the require of ${filename} to a dynamic ` +\r\n            'import() which is available in all CommonJS modules.';\r\n      return msg;\r\n    }\r\n    const path = require('path');\r\n    const basename = parentPath && path.basename(filename) ===\r\n      path.basename(parentPath) ? filename : path.basename(filename);\r\n    if (hasEsmSyntax) {\r\n      msg += `\\nInstead change the require of ${basename} in ${parentPath} to` +\r\n        ' a dynamic import() which is available in all CommonJS modules.';\r\n      return msg;\r\n    }\r\n    msg += `\\n${basename} is treated as an ES module file as it is a .js ` +\r\n      'file whose nearest parent package.json contains \"type\": \"module\" ' +\r\n      'which declares all .js files in that package scope as ES modules.' +\r\n      `\\nInstead rename ${basename} to end in .cjs, change the requiring ` +\r\n      'code to use dynamic import() which is available in all CommonJS ' +\r\n      'modules, or change \"type\": \"module\" to \"type\": \"commonjs\" in ' +\r\n      `${packageJsonPath} to treat all .js files as CommonJS (using .mjs for ` +\r\n      'all ES modules instead).\\n';\r\n    return msg;\r\n  }, Error);\r\nE('ERR_SCRIPT_EXECUTION_INTERRUPTED',\r\n  'Script execution was interrupted by `SIGINT`', Error);\r\nE('ERR_SERVER_ALREADY_LISTEN',\r\n  'Listen method has been called more than once without closing.', Error);\r\nE('ERR_SERVER_NOT_RUNNING', 'Server is not running.', Error);\r\nE('ERR_SOCKET_ALREADY_BOUND', 'Socket is already bound', Error);\r\nE('ERR_SOCKET_BAD_BUFFER_SIZE',\r\n  'Buffer size must be a positive integer', TypeError);\r\nE('ERR_SOCKET_BAD_PORT', (name, port, allowZero = true) => {\r\n  assert(typeof allowZero === 'boolean',\r\n         \"The 'allowZero' argument must be of type boolean.\");\r\n  const operator = allowZero ? '>=' : '>';\r\n  return `${name} should be ${operator} 0 and < 65536. Received ${determineSpecificType(port)}.`;\r\n}, RangeError);\r\nE('ERR_SOCKET_BAD_TYPE',\r\n  'Bad socket type specified. Valid types are: udp4, udp6', TypeError);\r\nE('ERR_SOCKET_BUFFER_SIZE',\r\n  'Could not get or set buffer size',\r\n  SystemError);\r\nE('ERR_SOCKET_CLOSED', 'Socket is closed', Error);\r\nE('ERR_SOCKET_CLOSED_BEFORE_CONNECTION',\r\n  'Socket closed before the connection was established',\r\n  Error);\r\nE('ERR_SOCKET_DGRAM_IS_CONNECTED', 'Already connected', Error);\r\nE('ERR_SOCKET_DGRAM_NOT_CONNECTED', 'Not connected', Error);\r\nE('ERR_SOCKET_DGRAM_NOT_RUNNING', 'Not running', Error);\r\nE('ERR_SRI_PARSE',\r\n  'Subresource Integrity string %j had an unexpected %j at position %d',\r\n  SyntaxError);\r\nE('ERR_STREAM_ALREADY_FINISHED',\r\n  'Cannot call %s after a stream was finished',\r\n  Error);\r\nE('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable', Error);\r\nE('ERR_STREAM_DESTROYED', 'Cannot call %s after a stream was destroyed', Error);\r\nE('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\r\nE('ERR_STREAM_PREMATURE_CLOSE', 'Premature close', Error);\r\nE('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF', Error);\r\nE('ERR_STREAM_UNSHIFT_AFTER_END_EVENT',\r\n  'stream.unshift() after end event', Error);\r\nE('ERR_STREAM_WRAP', 'Stream has StringDecoder set or is in objectMode', Error);\r\nE('ERR_STREAM_WRITE_AFTER_END', 'write after end', Error);\r\nE('ERR_SYNTHETIC', 'JavaScript Callstack', Error);\r\nE('ERR_SYSTEM_ERROR', 'A system error occurred', SystemError);\r\nE('ERR_TAP_LEXER_ERROR', function(errorMsg) {\r\n  hideInternalStackFrames(this);\r\n  return errorMsg;\r\n}, Error);\r\nE('ERR_TAP_PARSER_ERROR', function(errorMsg, details, tokenCausedError, source) {\r\n  hideInternalStackFrames(this);\r\n  this.cause = tokenCausedError;\r\n  const { column, line, start, end } = tokenCausedError.location;\r\n  const errorDetails = `${details} at line ${line}, column ${column} (start ${start}, end ${end})`;\r\n  return errorMsg + errorDetails;\r\n}, SyntaxError);\r\nE('ERR_TAP_VALIDATION_ERROR', function(errorMsg) {\r\n  hideInternalStackFrames(this);\r\n  return errorMsg;\r\n}, Error);\r\nE('ERR_TEST_FAILURE', function(error, failureType) {\r\n  hideInternalStackFrames(this);\r\n  assert(typeof failureType === 'string' || typeof failureType === 'symbol',\r\n         \"The 'failureType' argument must be of type string or symbol.\");\r\n\r\n  let msg = error?.message ?? error;\r\n\r\n  if (typeof msg !== 'string') {\r\n    msg = inspectWithNoCustomRetry(msg);\r\n  }\r\n\r\n  this.failureType = failureType;\r\n  this.cause = error;\r\n  return msg;\r\n}, Error);\r\nE('ERR_TLS_CERT_ALTNAME_FORMAT', 'Invalid subject alternative name string',\r\n  SyntaxError);\r\nE('ERR_TLS_CERT_ALTNAME_INVALID', function(reason, host, cert) {\r\n  this.reason = reason;\r\n  this.host = host;\r\n  this.cert = cert;\r\n  return `Hostname/IP does not match certificate's altnames: ${reason}`;\r\n}, Error);\r\nE('ERR_TLS_DH_PARAM_SIZE', 'DH parameter size %s is less than 2048', Error);\r\nE('ERR_TLS_HANDSHAKE_TIMEOUT', 'TLS handshake timeout', Error);\r\nE('ERR_TLS_INVALID_CONTEXT', '%s must be a SecureContext', TypeError);\r\nE('ERR_TLS_INVALID_PROTOCOL_VERSION',\r\n  '%j is not a valid %s TLS protocol version', TypeError);\r\nE('ERR_TLS_INVALID_STATE', 'TLS socket connection must be securely established',\r\n  Error);\r\nE('ERR_TLS_PROTOCOL_VERSION_CONFLICT',\r\n  'TLS protocol version %j conflicts with secureProtocol %j', TypeError);\r\nE('ERR_TLS_RENEGOTIATION_DISABLED',\r\n  'TLS session renegotiation disabled for this socket', Error);\r\n\r\n// This should probably be a `TypeError`.\r\nE('ERR_TLS_REQUIRED_SERVER_NAME',\r\n  '\"servername\" is required parameter for Server.addContext', Error);\r\nE('ERR_TLS_SESSION_ATTACK', 'TLS session renegotiation attack detected', Error);\r\nE('ERR_TLS_SNI_FROM_SERVER',\r\n  'Cannot issue SNI from a TLS server-side socket', Error);\r\nE('ERR_TRACE_EVENTS_CATEGORY_REQUIRED',\r\n  'At least one category is required', TypeError);\r\nE('ERR_TRACE_EVENTS_UNAVAILABLE', 'Trace events are unavailable', Error);\r\n\r\n// This should probably be a `RangeError`.\r\nE('ERR_TTY_INIT_FAILED', 'TTY initialization failed', SystemError);\r\nE('ERR_UNAVAILABLE_DURING_EXIT', 'Cannot call function in process exit ' +\r\n  'handler', Error);\r\nE('ERR_UNCAUGHT_EXCEPTION_CAPTURE_ALREADY_SET',\r\n  '`process.setupUncaughtExceptionCapture()` was called while a capture ' +\r\n    'callback was already active',\r\n  Error);\r\nE('ERR_UNESCAPED_CHARACTERS', '%s contains unescaped characters', TypeError);\r\nE('ERR_UNHANDLED_ERROR',\r\n  // Using a default argument here is important so the argument is not counted\r\n  // towards `Function#length`.\r\n  (err = undefined) => {\r\n    const msg = 'Unhandled error.';\r\n    if (err === undefined) return msg;\r\n    return `${msg} (${err})`;\r\n  }, Error);\r\nE('ERR_UNKNOWN_BUILTIN_MODULE', 'No such built-in module: %s', Error);\r\nE('ERR_UNKNOWN_CREDENTIAL', '%s identifier does not exist: %s', Error);\r\nE('ERR_UNKNOWN_ENCODING', 'Unknown encoding: %s', TypeError);\r\nE('ERR_UNKNOWN_FILE_EXTENSION', (ext, path, suggestion) => {\r\n  let msg = `Unknown file extension \"${ext}\" for ${path}`;\r\n  if (suggestion) {\r\n    msg += `. ${suggestion}`;\r\n  }\r\n  return msg;\r\n}, TypeError);\r\nE('ERR_UNKNOWN_MODULE_FORMAT', 'Unknown module format: %s for URL %s',\r\n  RangeError);\r\nE('ERR_UNKNOWN_SIGNAL', 'Unknown signal: %s', TypeError);\r\nE('ERR_UNSUPPORTED_DIR_IMPORT', \"Directory import '%s' is not supported \" +\r\n'resolving ES modules imported from %s', Error);\r\nE('ERR_UNSUPPORTED_ESM_URL_SCHEME', (url, supported) => {\r\n  let msg = `Only URLs with a scheme in: ${formatList(supported)} are supported by the default ESM loader`;\r\n  if (isWindows && url.protocol.length === 2) {\r\n    msg +=\r\n      '. On Windows, absolute paths must be valid file:// URLs';\r\n  }\r\n  msg += `. Received protocol '${url.protocol}'`;\r\n  return msg;\r\n}, Error);\r\nE('ERR_USE_AFTER_CLOSE', '%s was closed', Error);\r\n\r\n// This should probably be a `TypeError`.\r\nE('ERR_VALID_PERFORMANCE_ENTRY_TYPE',\r\n  'At least one valid performance entry type is required', Error);\r\nE('ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING',\r\n  'A dynamic import callback was not specified.', TypeError);\r\nE('ERR_VM_MODULE_ALREADY_LINKED', 'Module has already been linked', Error);\r\nE('ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA',\r\n  'Cached data cannot be created for a module which has been evaluated', Error);\r\nE('ERR_VM_MODULE_DIFFERENT_CONTEXT',\r\n  'Linked modules must use the same context', Error);\r\nE('ERR_VM_MODULE_LINK_FAILURE', function(message, cause) {\r\n  this.cause = cause;\r\n  return message;\r\n}, Error);\r\nE('ERR_VM_MODULE_NOT_MODULE',\r\n  'Provided module is not an instance of Module', Error);\r\nE('ERR_VM_MODULE_STATUS', 'Module status %s', Error);\r\nE('ERR_WASI_ALREADY_STARTED', 'WASI instance has already started', Error);\r\nE('ERR_WEBASSEMBLY_RESPONSE', 'WebAssembly response %s', TypeError);\r\nE('ERR_WORKER_INIT_FAILED', 'Worker initialization failure: %s', Error);\r\nE('ERR_WORKER_INVALID_EXEC_ARGV', (errors, msg = 'invalid execArgv flags') =>\r\n  `Initiated Worker with ${msg}: ${ArrayPrototypeJoin(errors, ', ')}`,\r\n  Error);\r\nE('ERR_WORKER_NOT_RUNNING', 'Worker instance not running', Error);\r\nE('ERR_WORKER_OUT_OF_MEMORY',\r\n  'Worker terminated due to reaching memory limit: %s', Error);\r\nE('ERR_WORKER_PATH', (filename) =>\r\n  'The worker script or module filename must be an absolute path or a ' +\r\n  'relative path starting with \\'./\\' or \\'../\\'.' +\r\n  (StringPrototypeStartsWith(filename, 'file://') ?\r\n    ' Wrap file:// URLs with `new URL`.' : ''\r\n  ) +\r\n  (StringPrototypeStartsWith(filename, 'data:text/javascript') ?\r\n    ' Wrap data: URLs with `new URL`.' : ''\r\n  ) +\r\n  ` Received \"${filename}\"`,\r\n  TypeError);\r\nE('ERR_WORKER_UNSERIALIZABLE_ERROR',\r\n  'Serializing an uncaught exception failed', Error);\r\nE('ERR_WORKER_UNSUPPORTED_OPERATION',\r\n  '%s is not supported in workers', TypeError);\r\nE('ERR_ZLIB_INITIALIZATION_FAILED', 'Initialization failed', Error);\r\n",
    "name": "errors",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 17,
    "sourcePositions": []
  },
  {
    "url": "node:internal/timers",
    "source": "'use strict';\r\n\r\n// HOW and WHY the timers implementation works the way it does.\r\n//\r\n// Timers are crucial to Node.js. Internally, any TCP I/O connection creates a\r\n// timer so that we can time out of connections. Additionally, many user\r\n// libraries and applications also use timers. As such there may be a\r\n// significantly large amount of timeouts scheduled at any given time.\r\n// Therefore, it is very important that the timers implementation is performant\r\n// and efficient.\r\n//\r\n// Note: It is suggested you first read through the lib/internal/linkedlist.js\r\n// linked list implementation, since timers depend on it extensively. It can be\r\n// somewhat counter-intuitive at first, as it is not actually a class. Instead,\r\n// it is a set of helpers that operate on an existing object.\r\n//\r\n// In order to be as performant as possible, the architecture and data\r\n// structures are designed so that they are optimized to handle the following\r\n// use cases as efficiently as possible:\r\n\r\n// - Adding a new timer. (insert)\r\n// - Removing an existing timer. (remove)\r\n// - Handling a timer timing out. (timeout)\r\n//\r\n// Whenever possible, the implementation tries to make the complexity of these\r\n// operations as close to constant-time as possible.\r\n// (So that performance is not impacted by the number of scheduled timers.)\r\n//\r\n// Object maps are kept which contain linked lists keyed by their duration in\r\n// milliseconds.\r\n//\r\n/* eslint-disable node-core/non-ascii-character */\r\n//\r\n// ╔════ > Object Map\r\n// ║\r\n// ╠══\r\n// ║ lists: { '40': { }, '320': { etc } } (keys of millisecond duration)\r\n// ╚══          ┌────┘\r\n//              │\r\n// ╔══          │\r\n// ║ TimersList { _idleNext: { }, _idlePrev: (self) }\r\n// ║         ┌────────────────┘\r\n// ║    ╔══  │                              ^\r\n// ║    ║    { _idleNext: { },  _idlePrev: { }, _onTimeout: (callback) }\r\n// ║    ║      ┌───────────┘\r\n// ║    ║      │                                  ^\r\n// ║    ║      { _idleNext: { etc },  _idlePrev: { }, _onTimeout: (callback) }\r\n// ╠══  ╠══\r\n// ║    ║\r\n// ║    ╚════ >  Actual JavaScript timeouts\r\n// ║\r\n// ╚════ > Linked List\r\n//\r\n/* eslint-enable node-core/non-ascii-character */\r\n//\r\n// With this, virtually constant-time insertion (append), removal, and timeout\r\n// is possible in the JavaScript layer. Any one list of timers is able to be\r\n// sorted by just appending to it because all timers within share the same\r\n// duration. Therefore, any timer added later will always have been scheduled to\r\n// timeout later, thus only needing to be appended.\r\n// Removal from an object-property linked list is also virtually constant-time\r\n// as can be seen in the lib/internal/linkedlist.js implementation.\r\n// Timeouts only need to process any timers currently due to expire, which will\r\n// always be at the beginning of the list for reasons stated above. Any timers\r\n// after the first one encountered that does not yet need to timeout will also\r\n// always be due to timeout at a later time.\r\n//\r\n// Less-than constant time operations are thus contained in two places:\r\n// The PriorityQueue — an efficient binary heap implementation that does all\r\n// operations in worst-case O(log n) time — which manages the order of expiring\r\n// Timeout lists and the object map lookup of a specific list by the duration of\r\n// timers within (or creation of a new list). However, these operations combined\r\n// have shown to be trivial in comparison to other timers architectures.\r\n\r\nconst {\r\n  MathMax,\r\n  MathTrunc,\r\n  NumberIsFinite,\r\n  NumberMIN_SAFE_INTEGER,\r\n  ObjectCreate,\r\n  ReflectApply,\r\n  Symbol,\r\n} = primordials;\r\n\r\nconst {\r\n  scheduleTimer,\r\n  toggleTimerRef,\r\n  getLibuvNow,\r\n  immediateInfo,\r\n  timeoutInfo,\r\n  toggleImmediateRef\r\n} = internalBinding('timers');\r\n\r\nconst {\r\n  getDefaultTriggerAsyncId,\r\n  newAsyncId,\r\n  initHooksExist,\r\n  destroyHooksExist,\r\n  // The needed emit*() functions.\r\n  emitInit,\r\n  emitBefore,\r\n  emitAfter,\r\n  emitDestroy,\r\n} = require('internal/async_hooks');\r\n\r\n// Symbols for storing async id state.\r\nconst async_id_symbol = Symbol('asyncId');\r\nconst trigger_async_id_symbol = Symbol('triggerId');\r\n\r\nconst kHasPrimitive = Symbol('kHasPrimitive');\r\n\r\nconst {\r\n  ERR_OUT_OF_RANGE\r\n} = require('internal/errors').codes;\r\nconst {\r\n  validateFunction,\r\n  validateNumber,\r\n} = require('internal/validators');\r\n\r\nconst L = require('internal/linkedlist');\r\nconst PriorityQueue = require('internal/priority_queue');\r\n\r\nconst { inspect } = require('internal/util/inspect');\r\nlet debug = require('internal/util/debuglog').debuglog('timer', (fn) => {\r\n  debug = fn;\r\n});\r\n\r\n// *Must* match Environment::ImmediateInfo::Fields in src/env.h.\r\nconst kCount = 0;\r\nconst kRefCount = 1;\r\nconst kHasOutstanding = 2;\r\n\r\n// Timeout values > TIMEOUT_MAX are set to 1.\r\nconst TIMEOUT_MAX = 2 ** 31 - 1;\r\n\r\nlet timerListId = NumberMIN_SAFE_INTEGER;\r\n\r\nconst kRefed = Symbol('refed');\r\n\r\nlet nextExpiry = Infinity;\r\n// timeoutInfo is an Int32Array that contains the reference count of Timeout\r\n// objects at index 0. This is a TypedArray so that GetActiveResourcesInfo() in\r\n// `src/node_process_methods.cc` is able to access this value without crossing\r\n// the JS-C++ boundary, which is slow at the time of writing.\r\ntimeoutInfo[0] = 0;\r\n\r\n// This is a priority queue with a custom sorting function that first compares\r\n// the expiry times of two lists and if they're the same then compares their\r\n// individual IDs to determine which list was created first.\r\nconst timerListQueue = new PriorityQueue(compareTimersLists, setPosition);\r\n\r\n// Object map containing linked lists of timers, keyed and sorted by their\r\n// duration in milliseconds.\r\n//\r\n// - key = time in milliseconds\r\n// - value = linked list\r\nconst timerListMap = ObjectCreate(null);\r\n\r\nfunction initAsyncResource(resource, type) {\r\n  const asyncId = resource[async_id_symbol] = newAsyncId();\r\n  const triggerAsyncId =\r\n    resource[trigger_async_id_symbol] = getDefaultTriggerAsyncId();\r\n  if (initHooksExist())\r\n    emitInit(asyncId, type, triggerAsyncId, resource);\r\n}\r\nclass Timeout {\r\n  // Timer constructor function.\r\n  // The entire prototype is defined in lib/timers.js\r\n  constructor(callback, after, args, isRepeat, isRefed) {\r\n    after *= 1; // Coalesce to number or NaN\r\n    if (!(after >= 1 && after <= TIMEOUT_MAX)) {\r\n      if (after > TIMEOUT_MAX) {\r\n        process.emitWarning(`${after} does not fit into` +\r\n                            ' a 32-bit signed integer.' +\r\n                            '\\nTimeout duration was set to 1.',\r\n                            'TimeoutOverflowWarning');\r\n      }\r\n      after = 1; // Schedule on next tick, follows browser behavior\r\n    }\r\n\r\n    this._idleTimeout = after;\r\n    this._idlePrev = this;\r\n    this._idleNext = this;\r\n    this._idleStart = null;\r\n    // This must be set to null first to avoid function tracking\r\n    // on the hidden class, revisit in V8 versions after 6.2\r\n    this._onTimeout = null;\r\n    this._onTimeout = callback;\r\n    this._timerArgs = args;\r\n    this._repeat = isRepeat ? after : null;\r\n    this._destroyed = false;\r\n\r\n    if (isRefed)\r\n      incRefCount();\r\n    this[kRefed] = isRefed;\r\n    this[kHasPrimitive] = false;\r\n\r\n    initAsyncResource(this, 'Timeout');\r\n  }\r\n\r\n  // Make sure the linked list only shows the minimal necessary information.\r\n  [inspect.custom](_, options) {\r\n    return inspect(this, {\r\n      ...options,\r\n      // Only inspect one level.\r\n      depth: 0,\r\n      // It should not recurse.\r\n      customInspect: false\r\n    });\r\n  }\r\n\r\n  refresh() {\r\n    if (this[kRefed])\r\n      active(this);\r\n    else\r\n      unrefActive(this);\r\n\r\n    return this;\r\n  }\r\n\r\n  unref() {\r\n    if (this[kRefed]) {\r\n      this[kRefed] = false;\r\n      if (!this._destroyed)\r\n        decRefCount();\r\n    }\r\n    return this;\r\n  }\r\n\r\n  ref() {\r\n    if (!this[kRefed]) {\r\n      this[kRefed] = true;\r\n      if (!this._destroyed)\r\n        incRefCount();\r\n    }\r\n    return this;\r\n  }\r\n\r\n  hasRef() {\r\n    return this[kRefed];\r\n  }\r\n}\r\n\r\nclass TimersList {\r\n  constructor(expiry, msecs) {\r\n    this._idleNext = this; // Create the list with the linkedlist properties to\r\n    this._idlePrev = this; // Prevent any unnecessary hidden class changes.\r\n    this.expiry = expiry;\r\n    this.id = timerListId++;\r\n    this.msecs = msecs;\r\n    this.priorityQueuePosition = null;\r\n  }\r\n\r\n  // Make sure the linked list only shows the minimal necessary information.\r\n  [inspect.custom](_, options) {\r\n    return inspect(this, {\r\n      ...options,\r\n      // Only inspect one level.\r\n      depth: 0,\r\n      // It should not recurse.\r\n      customInspect: false\r\n    });\r\n  }\r\n}\r\n\r\n// A linked list for storing `setImmediate()` requests\r\nclass ImmediateList {\r\n  constructor() {\r\n    this.head = null;\r\n    this.tail = null;\r\n  }\r\n\r\n  // Appends an item to the end of the linked list, adjusting the current tail's\r\n  // next pointer and the item's previous pointer where applicable\r\n  append(item) {\r\n    if (this.tail !== null) {\r\n      this.tail._idleNext = item;\r\n      item._idlePrev = this.tail;\r\n    } else {\r\n      this.head = item;\r\n    }\r\n    this.tail = item;\r\n  }\r\n\r\n  // Removes an item from the linked list, adjusting the pointers of adjacent\r\n  // items and the linked list's head or tail pointers as necessary\r\n  remove(item) {\r\n    if (item._idleNext) {\r\n      item._idleNext._idlePrev = item._idlePrev;\r\n    }\r\n\r\n    if (item._idlePrev) {\r\n      item._idlePrev._idleNext = item._idleNext;\r\n    }\r\n\r\n    if (item === this.head)\r\n      this.head = item._idleNext;\r\n    if (item === this.tail)\r\n      this.tail = item._idlePrev;\r\n\r\n    item._idleNext = null;\r\n    item._idlePrev = null;\r\n  }\r\n}\r\n\r\n// Create a single linked list instance only once at startup\r\nconst immediateQueue = new ImmediateList();\r\n\r\nfunction incRefCount() {\r\n  if (timeoutInfo[0]++ === 0)\r\n    toggleTimerRef(true);\r\n}\r\n\r\nfunction decRefCount() {\r\n  if (--timeoutInfo[0] === 0)\r\n    toggleTimerRef(false);\r\n}\r\n\r\n// Schedule or re-schedule a timer.\r\n// The item must have been enroll()'d first.\r\nfunction active(item) {\r\n  insertGuarded(item, true);\r\n}\r\n\r\n// Internal APIs that need timeouts should use `unrefActive()` instead of\r\n// `active()` so that they do not unnecessarily keep the process open.\r\nfunction unrefActive(item) {\r\n  insertGuarded(item, false);\r\n}\r\n\r\n// The underlying logic for scheduling or re-scheduling a timer.\r\n//\r\n// Appends a timer onto the end of an existing timers list, or creates a new\r\n// list if one does not already exist for the specified timeout duration.\r\nfunction insertGuarded(item, refed, start) {\r\n  const msecs = item._idleTimeout;\r\n  if (msecs < 0 || msecs === undefined)\r\n    return;\r\n\r\n  insert(item, msecs, start);\r\n\r\n  const isDestroyed = item._destroyed;\r\n  if (isDestroyed || !item[async_id_symbol]) {\r\n    item._destroyed = false;\r\n    initAsyncResource(item, 'Timeout');\r\n  }\r\n\r\n  if (isDestroyed) {\r\n    if (refed)\r\n      incRefCount();\r\n  } else if (refed === !item[kRefed]) {\r\n    if (refed)\r\n      incRefCount();\r\n    else\r\n      decRefCount();\r\n  }\r\n  item[kRefed] = refed;\r\n}\r\n\r\nfunction insert(item, msecs, start = getLibuvNow()) {\r\n  // Truncate so that accuracy of sub-millisecond timers is not assumed.\r\n  msecs = MathTrunc(msecs);\r\n  item._idleStart = start;\r\n\r\n  // Use an existing list if there is one, otherwise we need to make a new one.\r\n  let list = timerListMap[msecs];\r\n  if (list === undefined) {\r\n    debug('no %d list was found in insert, creating a new one', msecs);\r\n    const expiry = start + msecs;\r\n    timerListMap[msecs] = list = new TimersList(expiry, msecs);\r\n    timerListQueue.insert(list);\r\n\r\n    if (nextExpiry > expiry) {\r\n      scheduleTimer(msecs);\r\n      nextExpiry = expiry;\r\n    }\r\n  }\r\n\r\n  L.append(list, item);\r\n}\r\n\r\nfunction setUnrefTimeout(callback, after) {\r\n  // Type checking identical to setTimeout()\r\n  validateFunction(callback, 'callback');\r\n\r\n  const timer = new Timeout(callback, after, undefined, false, false);\r\n  insert(timer, timer._idleTimeout);\r\n\r\n  return timer;\r\n}\r\n\r\n// Type checking used by timers.enroll() and Socket#setTimeout()\r\nfunction getTimerDuration(msecs, name) {\r\n  validateNumber(msecs, name);\r\n  if (msecs < 0 || !NumberIsFinite(msecs)) {\r\n    throw new ERR_OUT_OF_RANGE(name, 'a non-negative finite number', msecs);\r\n  }\r\n\r\n  // Ensure that msecs fits into signed int32\r\n  if (msecs > TIMEOUT_MAX) {\r\n    process.emitWarning(`${msecs} does not fit into a 32-bit signed integer.` +\r\n                        `\\nTimer duration was truncated to ${TIMEOUT_MAX}.`,\r\n                        'TimeoutOverflowWarning');\r\n    return TIMEOUT_MAX;\r\n  }\r\n\r\n  return msecs;\r\n}\r\n\r\nfunction compareTimersLists(a, b) {\r\n  const expiryDiff = a.expiry - b.expiry;\r\n  if (expiryDiff === 0) {\r\n    if (a.id < b.id)\r\n      return -1;\r\n    if (a.id > b.id)\r\n      return 1;\r\n  }\r\n  return expiryDiff;\r\n}\r\n\r\nfunction setPosition(node, pos) {\r\n  node.priorityQueuePosition = pos;\r\n}\r\n\r\nfunction getTimerCallbacks(runNextTicks) {\r\n  // If an uncaught exception was thrown during execution of immediateQueue,\r\n  // this queue will store all remaining Immediates that need to run upon\r\n  // resolution of all error handling (if process is still alive).\r\n  const outstandingQueue = new ImmediateList();\r\n\r\n  function processImmediate() {\r\n    const queue = outstandingQueue.head !== null ?\r\n      outstandingQueue : immediateQueue;\r\n    let immediate = queue.head;\r\n\r\n    // Clear the linked list early in case new `setImmediate()`\r\n    // calls occur while immediate callbacks are executed\r\n    if (queue !== outstandingQueue) {\r\n      queue.head = queue.tail = null;\r\n      immediateInfo[kHasOutstanding] = 1;\r\n    }\r\n\r\n    let prevImmediate;\r\n    let ranAtLeastOneImmediate = false;\r\n    while (immediate !== null) {\r\n      if (ranAtLeastOneImmediate)\r\n        runNextTicks();\r\n      else\r\n        ranAtLeastOneImmediate = true;\r\n\r\n      // It's possible for this current Immediate to be cleared while executing\r\n      // the next tick queue above, which means we need to use the previous\r\n      // Immediate's _idleNext which is guaranteed to not have been cleared.\r\n      if (immediate._destroyed) {\r\n        outstandingQueue.head = immediate = prevImmediate._idleNext;\r\n        continue;\r\n      }\r\n\r\n      // TODO(RaisinTen): Destroy and unref the Immediate after _onImmediate()\r\n      // gets executed, just like how Timeouts work.\r\n      immediate._destroyed = true;\r\n\r\n      immediateInfo[kCount]--;\r\n      if (immediate[kRefed])\r\n        immediateInfo[kRefCount]--;\r\n      immediate[kRefed] = null;\r\n\r\n      prevImmediate = immediate;\r\n\r\n      const asyncId = immediate[async_id_symbol];\r\n      emitBefore(asyncId, immediate[trigger_async_id_symbol], immediate);\r\n\r\n      try {\r\n        const argv = immediate._argv;\r\n        if (!argv)\r\n          immediate._onImmediate();\r\n        else\r\n          immediate._onImmediate(...argv);\r\n      } finally {\r\n        immediate._onImmediate = null;\r\n\r\n        if (destroyHooksExist())\r\n          emitDestroy(asyncId);\r\n\r\n        outstandingQueue.head = immediate = immediate._idleNext;\r\n      }\r\n\r\n      emitAfter(asyncId);\r\n    }\r\n\r\n    if (queue === outstandingQueue)\r\n      outstandingQueue.head = null;\r\n    immediateInfo[kHasOutstanding] = 0;\r\n  }\r\n\r\n\r\n  function processTimers(now) {\r\n    debug('process timer lists %d', now);\r\n    nextExpiry = Infinity;\r\n\r\n    let list;\r\n    let ranAtLeastOneList = false;\r\n    while ((list = timerListQueue.peek()) != null) {\r\n      if (list.expiry > now) {\r\n        nextExpiry = list.expiry;\r\n        return timeoutInfo[0] > 0 ? nextExpiry : -nextExpiry;\r\n      }\r\n      if (ranAtLeastOneList)\r\n        runNextTicks();\r\n      else\r\n        ranAtLeastOneList = true;\r\n      listOnTimeout(list, now);\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  function listOnTimeout(list, now) {\r\n    const msecs = list.msecs;\r\n\r\n    debug('timeout callback %d', msecs);\r\n\r\n    let ranAtLeastOneTimer = false;\r\n    let timer;\r\n    while ((timer = L.peek(list)) != null) {\r\n      const diff = now - timer._idleStart;\r\n\r\n      // Check if this loop iteration is too early for the next timer.\r\n      // This happens if there are more timers scheduled for later in the list.\r\n      if (diff < msecs) {\r\n        list.expiry = MathMax(timer._idleStart + msecs, now + 1);\r\n        list.id = timerListId++;\r\n        timerListQueue.percolateDown(1);\r\n        debug('%d list wait because diff is %d', msecs, diff);\r\n        return;\r\n      }\r\n\r\n      if (ranAtLeastOneTimer)\r\n        runNextTicks();\r\n      else\r\n        ranAtLeastOneTimer = true;\r\n\r\n      // The actual logic for when a timeout happens.\r\n      L.remove(timer);\r\n\r\n      const asyncId = timer[async_id_symbol];\r\n\r\n      if (!timer._onTimeout) {\r\n        if (!timer._destroyed) {\r\n          timer._destroyed = true;\r\n\r\n          if (timer[kRefed])\r\n            timeoutInfo[0]--;\r\n\r\n          if (destroyHooksExist())\r\n            emitDestroy(asyncId);\r\n        }\r\n        continue;\r\n      }\r\n\r\n      emitBefore(asyncId, timer[trigger_async_id_symbol], timer);\r\n\r\n      let start;\r\n      if (timer._repeat)\r\n        start = getLibuvNow();\r\n\r\n      try {\r\n        const args = timer._timerArgs;\r\n        if (args === undefined)\r\n          timer._onTimeout();\r\n        else\r\n          ReflectApply(timer._onTimeout, timer, args);\r\n      } finally {\r\n        if (timer._repeat && timer._idleTimeout !== -1) {\r\n          timer._idleTimeout = timer._repeat;\r\n          insert(timer, timer._idleTimeout, start);\r\n        } else if (!timer._idleNext && !timer._idlePrev && !timer._destroyed) {\r\n          timer._destroyed = true;\r\n\r\n          if (timer[kRefed])\r\n            timeoutInfo[0]--;\r\n\r\n          if (destroyHooksExist())\r\n            emitDestroy(asyncId);\r\n        }\r\n      }\r\n\r\n      emitAfter(asyncId);\r\n    }\r\n\r\n    // If `L.peek(list)` returned nothing, the list was either empty or we have\r\n    // called all of the timer timeouts.\r\n    // As such, we can remove the list from the object map and\r\n    // the PriorityQueue.\r\n    debug('%d list empty', msecs);\r\n\r\n    // The current list may have been removed and recreated since the reference\r\n    // to `list` was created. Make sure they're the same instance of the list\r\n    // before destroying.\r\n    if (list === timerListMap[msecs]) {\r\n      delete timerListMap[msecs];\r\n      timerListQueue.shift();\r\n    }\r\n  }\r\n\r\n  return {\r\n    processImmediate,\r\n    processTimers\r\n  };\r\n}\r\n\r\nclass Immediate {\r\n  constructor(callback, args) {\r\n    this._idleNext = null;\r\n    this._idlePrev = null;\r\n    this._onImmediate = callback;\r\n    this._argv = args;\r\n    this._destroyed = false;\r\n    this[kRefed] = false;\r\n\r\n    initAsyncResource(this, 'Immediate');\r\n\r\n    this.ref();\r\n    immediateInfo[kCount]++;\r\n\r\n    immediateQueue.append(this);\r\n  }\r\n\r\n  ref() {\r\n    if (this[kRefed] === false) {\r\n      this[kRefed] = true;\r\n      if (immediateInfo[kRefCount]++ === 0)\r\n        toggleImmediateRef(true);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  unref() {\r\n    if (this[kRefed] === true) {\r\n      this[kRefed] = false;\r\n      if (--immediateInfo[kRefCount] === 0)\r\n        toggleImmediateRef(false);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  hasRef() {\r\n    return !!this[kRefed];\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  TIMEOUT_MAX,\r\n  kTimeout: Symbol('timeout'), // For hiding Timeouts on other internals.\r\n  async_id_symbol,\r\n  trigger_async_id_symbol,\r\n  Timeout,\r\n  Immediate,\r\n  kRefed,\r\n  kHasPrimitive,\r\n  initAsyncResource,\r\n  setUnrefTimeout,\r\n  getTimerDuration,\r\n  immediateQueue,\r\n  getTimerCallbacks,\r\n  immediateInfoFields: {\r\n    kCount,\r\n    kRefCount,\r\n    kHasOutstanding\r\n  },\r\n  active,\r\n  unrefActive,\r\n  insert,\r\n  timerListMap,\r\n  timerListQueue,\r\n  decRefCount,\r\n  incRefCount,\r\n};\r\n",
    "name": "timers",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 18,
    "sourcePositions": []
  },
  {
    "url": "node:internal/async_hooks",
    "source": "'use strict';\r\n\r\nconst {\r\n  ArrayPrototypeSlice,\r\n  ErrorCaptureStackTrace,\r\n  ObjectPrototypeHasOwnProperty,\r\n  ObjectDefineProperty,\r\n  Symbol,\r\n} = primordials;\r\n\r\nconst promiseHooks = require('internal/promise_hooks');\r\n\r\nconst async_wrap = internalBinding('async_wrap');\r\nconst { setCallbackTrampoline } = async_wrap;\r\n/* async_hook_fields is a Uint32Array wrapping the uint32_t array of\r\n * Environment::AsyncHooks::fields_[]. Each index tracks the number of active\r\n * hooks for each type.\r\n *\r\n * async_id_fields is a Float64Array wrapping the double array of\r\n * Environment::AsyncHooks::async_id_fields_[]. Each index contains the ids for\r\n * the various asynchronous states of the application. These are:\r\n *  kExecutionAsyncId: The async_id assigned to the resource responsible for the\r\n *    current execution stack.\r\n *  kTriggerAsyncId: The async_id of the resource that caused (or 'triggered')\r\n *    the resource corresponding to the current execution stack.\r\n *  kAsyncIdCounter: Incremental counter tracking the next assigned async_id.\r\n *  kDefaultTriggerAsyncId: Written immediately before a resource's constructor\r\n *    that sets the value of the init()'s triggerAsyncId. The precedence order\r\n *    of retrieving the triggerAsyncId value is:\r\n *    1. the value passed directly to the constructor\r\n *    2. value set in kDefaultTriggerAsyncId\r\n *    3. executionAsyncId of the current resource.\r\n *\r\n * async_ids_stack is a Float64Array that contains part of the async ID\r\n * stack. Each pushAsyncContext() call adds two doubles to it, and each\r\n * popAsyncContext() call removes two doubles from it.\r\n * It has a fixed size, so if that is exceeded, calls to the native\r\n * side are used instead in pushAsyncContext() and popAsyncContext().\r\n */\r\nconst {\r\n  async_hook_fields,\r\n  async_id_fields,\r\n  execution_async_resources\r\n} = async_wrap;\r\n// Store the pair executionAsyncId and triggerAsyncId in a AliasedFloat64Array\r\n// in Environment::AsyncHooks::async_ids_stack_ which tracks the resource\r\n// responsible for the current execution stack. This is unwound as each resource\r\n// exits. In the case of a fatal exception this stack is emptied after calling\r\n// each hook's after() callback.\r\nconst {\r\n  pushAsyncContext: pushAsyncContext_,\r\n  popAsyncContext: popAsyncContext_,\r\n  executionAsyncResource: executionAsyncResource_,\r\n  clearAsyncIdStack,\r\n} = async_wrap;\r\n// Properties in active_hooks are used to keep track of the set of hooks being\r\n// executed in case another hook is enabled/disabled. The new set of hooks is\r\n// then restored once the active set of hooks is finished executing.\r\nconst active_hooks = {\r\n  // Array of all AsyncHooks that will be iterated whenever an async event\r\n  // fires. Using var instead of (preferably const) in order to assign\r\n  // active_hooks.tmp_array if a hook is enabled/disabled during hook\r\n  // execution.\r\n  array: [],\r\n  // Use a counter to track nested calls of async hook callbacks and make sure\r\n  // the active_hooks.array isn't altered mid execution.\r\n  call_depth: 0,\r\n  // Use to temporarily store and updated active_hooks.array if the user\r\n  // enables or disables a hook while hooks are being processed. If a hook is\r\n  // enabled() or disabled() during hook execution then the current set of\r\n  // active hooks is duplicated and set equal to active_hooks.tmp_array. Any\r\n  // subsequent changes are on the duplicated array. When all hooks have\r\n  // completed executing active_hooks.tmp_array is assigned to\r\n  // active_hooks.array.\r\n  tmp_array: null,\r\n  // Keep track of the field counts held in active_hooks.tmp_array. Because the\r\n  // async_hook_fields can't be reassigned, store each uint32 in an array that\r\n  // is written back to async_hook_fields when active_hooks.array is restored.\r\n  tmp_fields: null\r\n};\r\n\r\nconst { registerDestroyHook } = async_wrap;\r\nconst { enqueueMicrotask } = internalBinding('task_queue');\r\nconst { resource_symbol, owner_symbol } = internalBinding('symbols');\r\n\r\n// Each constant tracks how many callbacks there are for any given step of\r\n// async execution. These are tracked so if the user didn't include callbacks\r\n// for a given step, that step can bail out early.\r\nconst {\r\n  kInit, kBefore, kAfter, kDestroy, kTotals, kPromiseResolve,\r\n  kCheck, kExecutionAsyncId, kAsyncIdCounter, kTriggerAsyncId,\r\n  kDefaultTriggerAsyncId, kStackLength, kUsesExecutionAsyncResource,\r\n} = async_wrap.constants;\r\n\r\nconst { async_id_symbol,\r\n        trigger_async_id_symbol } = internalBinding('symbols');\r\n\r\n// Lazy load of internal/util/inspect;\r\nlet inspect;\r\n\r\n// Used in AsyncHook and AsyncResource.\r\nconst init_symbol = Symbol('init');\r\nconst before_symbol = Symbol('before');\r\nconst after_symbol = Symbol('after');\r\nconst destroy_symbol = Symbol('destroy');\r\nconst promise_resolve_symbol = Symbol('promiseResolve');\r\nconst emitBeforeNative = emitHookFactory(before_symbol, 'emitBeforeNative');\r\nconst emitAfterNative = emitHookFactory(after_symbol, 'emitAfterNative');\r\nconst emitDestroyNative = emitHookFactory(destroy_symbol, 'emitDestroyNative');\r\nconst emitPromiseResolveNative =\r\n    emitHookFactory(promise_resolve_symbol, 'emitPromiseResolveNative');\r\n\r\nlet domain_cb;\r\nfunction useDomainTrampoline(fn) {\r\n  domain_cb = fn;\r\n}\r\n\r\nfunction callbackTrampoline(asyncId, resource, cb, ...args) {\r\n  const index = async_hook_fields[kStackLength] - 1;\r\n  execution_async_resources[index] = resource;\r\n\r\n  if (asyncId !== 0 && hasHooks(kBefore))\r\n    emitBeforeNative(asyncId);\r\n\r\n  let result;\r\n  if (asyncId === 0 && typeof domain_cb === 'function') {\r\n    args.unshift(cb);\r\n    result = domain_cb.apply(this, args);\r\n  } else {\r\n    result = cb.apply(this, args);\r\n  }\r\n\r\n  if (asyncId !== 0 && hasHooks(kAfter))\r\n    emitAfterNative(asyncId);\r\n\r\n  execution_async_resources.pop();\r\n  return result;\r\n}\r\n\r\nconst topLevelResource = {};\r\n\r\nfunction executionAsyncResource() {\r\n  // Indicate to the native layer that this function is likely to be used,\r\n  // in which case it will inform JS about the current async resource via\r\n  // the trampoline above.\r\n  async_hook_fields[kUsesExecutionAsyncResource] = 1;\r\n\r\n  const index = async_hook_fields[kStackLength] - 1;\r\n  if (index === -1) return topLevelResource;\r\n  const resource = execution_async_resources[index] ||\r\n    executionAsyncResource_(index);\r\n  return lookupPublicResource(resource);\r\n}\r\n\r\nfunction inspectExceptionValue(e) {\r\n  inspect ??= require('internal/util/inspect').inspect;\r\n  return { message: inspect(e) };\r\n}\r\n\r\n// Used to fatally abort the process if a callback throws.\r\nfunction fatalError(e) {\r\n  if (typeof e?.stack === 'string') {\r\n    process._rawDebug(e.stack);\r\n  } else {\r\n    const o = inspectExceptionValue(e);\r\n    ErrorCaptureStackTrace(o, fatalError);\r\n    process._rawDebug(o.stack);\r\n  }\r\n\r\n  const { getOptionValue } = require('internal/options');\r\n  if (getOptionValue('--abort-on-uncaught-exception')) {\r\n    process.abort();\r\n  }\r\n  process.exit(1);\r\n}\r\n\r\nfunction lookupPublicResource(resource) {\r\n  if (typeof resource !== 'object' || resource === null) return resource;\r\n  // TODO(addaleax): Merge this with owner_symbol and use it across all\r\n  // AsyncWrap instances.\r\n  const publicResource = resource[resource_symbol];\r\n  if (publicResource !== undefined)\r\n    return publicResource;\r\n  return resource;\r\n}\r\n\r\n// Emit From Native //\r\n\r\n// Used by C++ to call all init() callbacks. Because some state can be setup\r\n// from C++ there's no need to perform all the same operations as in\r\n// emitInitScript.\r\nfunction emitInitNative(asyncId, type, triggerAsyncId, resource) {\r\n  active_hooks.call_depth += 1;\r\n  resource = lookupPublicResource(resource);\r\n  // Use a single try/catch for all hooks to avoid setting up one per iteration.\r\n  try {\r\n    // Using var here instead of let because \"for (var ...)\" is faster than let.\r\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\r\n    // eslint-disable-next-line no-var\r\n    for (var i = 0; i < active_hooks.array.length; i++) {\r\n      if (typeof active_hooks.array[i][init_symbol] === 'function') {\r\n        active_hooks.array[i][init_symbol](\r\n          asyncId, type, triggerAsyncId,\r\n          resource\r\n        );\r\n      }\r\n    }\r\n  } catch (e) {\r\n    fatalError(e);\r\n  } finally {\r\n    active_hooks.call_depth -= 1;\r\n  }\r\n\r\n  // Hooks can only be restored if there have been no recursive hook calls.\r\n  // Also the active hooks do not need to be restored if enable()/disable()\r\n  // weren't called during hook execution, in which case active_hooks.tmp_array\r\n  // will be null.\r\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\r\n    restoreActiveHooks();\r\n  }\r\n}\r\n\r\n// Called from native. The asyncId stack handling is taken care of there\r\n// before this is called.\r\nfunction emitHook(symbol, asyncId) {\r\n  active_hooks.call_depth += 1;\r\n  // Use a single try/catch for all hook to avoid setting up one per\r\n  // iteration.\r\n  try {\r\n    // Using var here instead of let because \"for (var ...)\" is faster than let.\r\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\r\n    // eslint-disable-next-line no-var\r\n    for (var i = 0; i < active_hooks.array.length; i++) {\r\n      if (typeof active_hooks.array[i][symbol] === 'function') {\r\n        active_hooks.array[i][symbol](asyncId);\r\n      }\r\n    }\r\n  } catch (e) {\r\n    fatalError(e);\r\n  } finally {\r\n    active_hooks.call_depth -= 1;\r\n  }\r\n\r\n  // Hooks can only be restored if there have been no recursive hook calls.\r\n  // Also the active hooks do not need to be restored if enable()/disable()\r\n  // weren't called during hook execution, in which case\r\n  // active_hooks.tmp_array will be null.\r\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\r\n    restoreActiveHooks();\r\n  }\r\n}\r\n\r\nfunction emitHookFactory(symbol, name) {\r\n  const fn = emitHook.bind(undefined, symbol);\r\n\r\n  // Set the name property of the function as it looks good in the stack trace.\r\n  ObjectDefineProperty(fn, 'name', {\r\n    __proto__: null,\r\n    value: name\r\n  });\r\n  return fn;\r\n}\r\n\r\n// Manage Active Hooks //\r\n\r\nfunction getHookArrays() {\r\n  if (active_hooks.call_depth === 0)\r\n    return [active_hooks.array, async_hook_fields];\r\n  // If this hook is being enabled while in the middle of processing the array\r\n  // of currently active hooks then duplicate the current set of active hooks\r\n  // and store this there. This shouldn't fire until the next time hooks are\r\n  // processed.\r\n  if (active_hooks.tmp_array === null)\r\n    storeActiveHooks();\r\n  return [active_hooks.tmp_array, active_hooks.tmp_fields];\r\n}\r\n\r\n\r\nfunction storeActiveHooks() {\r\n  active_hooks.tmp_array = ArrayPrototypeSlice(active_hooks.array);\r\n  // Don't want to make the assumption that kInit to kDestroy are indexes 0 to\r\n  // 4. So do this the long way.\r\n  active_hooks.tmp_fields = [];\r\n  copyHooks(active_hooks.tmp_fields, async_hook_fields);\r\n}\r\n\r\nfunction copyHooks(destination, source) {\r\n  destination[kInit] = source[kInit];\r\n  destination[kBefore] = source[kBefore];\r\n  destination[kAfter] = source[kAfter];\r\n  destination[kDestroy] = source[kDestroy];\r\n  destination[kPromiseResolve] = source[kPromiseResolve];\r\n}\r\n\r\n\r\n// Then restore the correct hooks array in case any hooks were added/removed\r\n// during hook callback execution.\r\nfunction restoreActiveHooks() {\r\n  active_hooks.array = active_hooks.tmp_array;\r\n  copyHooks(async_hook_fields, active_hooks.tmp_fields);\r\n\r\n  active_hooks.tmp_array = null;\r\n  active_hooks.tmp_fields = null;\r\n}\r\n\r\nfunction trackPromise(promise, parent) {\r\n  if (promise[async_id_symbol]) {\r\n    return;\r\n  }\r\n\r\n  // Get trigger id from parent async id before making the async id of the\r\n  // child so if a new one must be made it will be lower than the child.\r\n  const triggerAsyncId = parent ? getOrSetAsyncId(parent) :\r\n    getDefaultTriggerAsyncId();\r\n\r\n  promise[async_id_symbol] = newAsyncId();\r\n  promise[trigger_async_id_symbol] = triggerAsyncId;\r\n}\r\n\r\nfunction promiseInitHook(promise, parent) {\r\n  trackPromise(promise, parent);\r\n  const asyncId = promise[async_id_symbol];\r\n  const triggerAsyncId = promise[trigger_async_id_symbol];\r\n  emitInitScript(asyncId, 'PROMISE', triggerAsyncId, promise);\r\n}\r\n\r\nfunction promiseInitHookWithDestroyTracking(promise, parent) {\r\n  promiseInitHook(promise, parent);\r\n  destroyTracking(promise, parent);\r\n}\r\n\r\nfunction destroyTracking(promise, parent) {\r\n  trackPromise(promise, parent);\r\n  const asyncId = promise[async_id_symbol];\r\n  registerDestroyHook(promise, asyncId);\r\n}\r\n\r\nfunction promiseBeforeHook(promise) {\r\n  trackPromise(promise);\r\n  const asyncId = promise[async_id_symbol];\r\n  const triggerId = promise[trigger_async_id_symbol];\r\n  emitBeforeScript(asyncId, triggerId, promise);\r\n}\r\n\r\nfunction promiseAfterHook(promise) {\r\n  trackPromise(promise);\r\n  const asyncId = promise[async_id_symbol];\r\n  if (hasHooks(kAfter)) {\r\n    emitAfterNative(asyncId);\r\n  }\r\n  if (asyncId === executionAsyncId()) {\r\n    // This condition might not be true if async_hooks was enabled during\r\n    // the promise callback execution.\r\n    // Popping it off the stack can be skipped in that case, because it is\r\n    // known that it would correspond to exactly one call with\r\n    // PromiseHookType::kBefore that was not witnessed by the PromiseHook.\r\n    popAsyncContext(asyncId);\r\n  }\r\n}\r\n\r\nfunction promiseResolveHook(promise) {\r\n  trackPromise(promise);\r\n  const asyncId = promise[async_id_symbol];\r\n  emitPromiseResolveNative(asyncId);\r\n}\r\n\r\nlet wantPromiseHook = false;\r\nfunction enableHooks() {\r\n  async_hook_fields[kCheck] += 1;\r\n\r\n  setCallbackTrampoline(callbackTrampoline);\r\n}\r\n\r\nlet stopPromiseHook;\r\nfunction updatePromiseHookMode() {\r\n  wantPromiseHook = true;\r\n  let initHook;\r\n  if (initHooksExist()) {\r\n    initHook = destroyHooksExist() ? promiseInitHookWithDestroyTracking :\r\n      promiseInitHook;\r\n  } else if (destroyHooksExist()) {\r\n    initHook = destroyTracking;\r\n  }\r\n  if (stopPromiseHook) stopPromiseHook();\r\n  stopPromiseHook = promiseHooks.createHook({\r\n    init: initHook,\r\n    before: promiseBeforeHook,\r\n    after: promiseAfterHook,\r\n    settled: promiseResolveHooksExist() ? promiseResolveHook : undefined\r\n  });\r\n}\r\n\r\nfunction disableHooks() {\r\n  async_hook_fields[kCheck] -= 1;\r\n\r\n  wantPromiseHook = false;\r\n\r\n  setCallbackTrampoline();\r\n\r\n  // Delay the call to `disablePromiseHook()` because we might currently be\r\n  // between the `before` and `after` calls of a Promise.\r\n  enqueueMicrotask(disablePromiseHookIfNecessary);\r\n}\r\n\r\nfunction disablePromiseHookIfNecessary() {\r\n  if (!wantPromiseHook && stopPromiseHook) {\r\n    stopPromiseHook();\r\n  }\r\n}\r\n\r\n// Internal Embedder API //\r\n\r\n// Increment the internal id counter and return the value. Important that the\r\n// counter increment first. Since it's done the same way in\r\n// Environment::new_async_uid()\r\nfunction newAsyncId() {\r\n  return ++async_id_fields[kAsyncIdCounter];\r\n}\r\n\r\nfunction getOrSetAsyncId(object) {\r\n  if (ObjectPrototypeHasOwnProperty(object, async_id_symbol)) {\r\n    return object[async_id_symbol];\r\n  }\r\n\r\n  return object[async_id_symbol] = newAsyncId();\r\n}\r\n\r\n\r\n// Return the triggerAsyncId meant for the constructor calling it. It's up to\r\n// the user to safeguard this call and make sure it's zero'd out when the\r\n// constructor is complete.\r\nfunction getDefaultTriggerAsyncId() {\r\n  const defaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\r\n  // If defaultTriggerAsyncId isn't set, use the executionAsyncId\r\n  if (defaultTriggerAsyncId < 0)\r\n    return async_id_fields[kExecutionAsyncId];\r\n  return defaultTriggerAsyncId;\r\n}\r\n\r\n\r\nfunction clearDefaultTriggerAsyncId() {\r\n  async_id_fields[kDefaultTriggerAsyncId] = -1;\r\n}\r\n\r\n/**\r\n * Sets a default top level trigger ID to be used\r\n *\r\n * @template {Array<unknown>} T\r\n * @template {unknown} R\r\n * @param {number} triggerAsyncId\r\n * @param { (...T: args) => R } block\r\n * @param  {T} args\r\n * @returns {R}\r\n */\r\nfunction defaultTriggerAsyncIdScope(triggerAsyncId, block, ...args) {\r\n  if (triggerAsyncId === undefined)\r\n    return block.apply(null, args);\r\n  // CHECK(NumberIsSafeInteger(triggerAsyncId))\r\n  // CHECK(triggerAsyncId > 0)\r\n  const oldDefaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\r\n  async_id_fields[kDefaultTriggerAsyncId] = triggerAsyncId;\r\n\r\n  try {\r\n    return block.apply(null, args);\r\n  } finally {\r\n    async_id_fields[kDefaultTriggerAsyncId] = oldDefaultTriggerAsyncId;\r\n  }\r\n}\r\n\r\nfunction hasHooks(key) {\r\n  return async_hook_fields[key] > 0;\r\n}\r\n\r\nfunction enabledHooksExist() {\r\n  return hasHooks(kCheck);\r\n}\r\n\r\nfunction initHooksExist() {\r\n  return hasHooks(kInit);\r\n}\r\n\r\nfunction afterHooksExist() {\r\n  return hasHooks(kAfter);\r\n}\r\n\r\nfunction destroyHooksExist() {\r\n  return hasHooks(kDestroy);\r\n}\r\n\r\nfunction promiseResolveHooksExist() {\r\n  return hasHooks(kPromiseResolve);\r\n}\r\n\r\n\r\nfunction emitInitScript(asyncId, type, triggerAsyncId, resource) {\r\n  // Short circuit all checks for the common case. Which is that no hooks have\r\n  // been set. Do this to remove performance impact for embedders (and core).\r\n  if (!hasHooks(kInit))\r\n    return;\r\n\r\n  if (triggerAsyncId === null) {\r\n    triggerAsyncId = getDefaultTriggerAsyncId();\r\n  }\r\n\r\n  emitInitNative(asyncId, type, triggerAsyncId, resource);\r\n}\r\n\r\n\r\nfunction emitBeforeScript(asyncId, triggerAsyncId, resource) {\r\n  pushAsyncContext(asyncId, triggerAsyncId, resource);\r\n\r\n  if (hasHooks(kBefore))\r\n    emitBeforeNative(asyncId);\r\n}\r\n\r\n\r\nfunction emitAfterScript(asyncId) {\r\n  if (hasHooks(kAfter))\r\n    emitAfterNative(asyncId);\r\n\r\n  popAsyncContext(asyncId);\r\n}\r\n\r\n\r\nfunction emitDestroyScript(asyncId) {\r\n  // Return early if there are no destroy callbacks, or invalid asyncId.\r\n  if (!hasHooks(kDestroy) || asyncId <= 0)\r\n    return;\r\n  async_wrap.queueDestroyAsyncId(asyncId);\r\n}\r\n\r\n\r\nfunction hasAsyncIdStack() {\r\n  return hasHooks(kStackLength);\r\n}\r\n\r\n\r\n// This is the equivalent of the native push_async_ids() call.\r\nfunction pushAsyncContext(asyncId, triggerAsyncId, resource) {\r\n  const offset = async_hook_fields[kStackLength];\r\n  execution_async_resources[offset] = resource;\r\n  if (offset * 2 >= async_wrap.async_ids_stack.length)\r\n    return pushAsyncContext_(asyncId, triggerAsyncId);\r\n  async_wrap.async_ids_stack[offset * 2] = async_id_fields[kExecutionAsyncId];\r\n  async_wrap.async_ids_stack[offset * 2 + 1] = async_id_fields[kTriggerAsyncId];\r\n  async_hook_fields[kStackLength]++;\r\n  async_id_fields[kExecutionAsyncId] = asyncId;\r\n  async_id_fields[kTriggerAsyncId] = triggerAsyncId;\r\n}\r\n\r\n\r\n// This is the equivalent of the native pop_async_ids() call.\r\nfunction popAsyncContext(asyncId) {\r\n  const stackLength = async_hook_fields[kStackLength];\r\n  if (stackLength === 0) return false;\r\n\r\n  if (enabledHooksExist() && async_id_fields[kExecutionAsyncId] !== asyncId) {\r\n    // Do the same thing as the native code (i.e. crash hard).\r\n    return popAsyncContext_(asyncId);\r\n  }\r\n\r\n  const offset = stackLength - 1;\r\n  async_id_fields[kExecutionAsyncId] = async_wrap.async_ids_stack[2 * offset];\r\n  async_id_fields[kTriggerAsyncId] = async_wrap.async_ids_stack[2 * offset + 1];\r\n  execution_async_resources.pop();\r\n  async_hook_fields[kStackLength] = offset;\r\n  return offset > 0;\r\n}\r\n\r\n\r\nfunction executionAsyncId() {\r\n  return async_id_fields[kExecutionAsyncId];\r\n}\r\n\r\nfunction triggerAsyncId() {\r\n  return async_id_fields[kTriggerAsyncId];\r\n}\r\n\r\n\r\nmodule.exports = {\r\n  executionAsyncId,\r\n  triggerAsyncId,\r\n  // Private API\r\n  getHookArrays,\r\n  symbols: {\r\n    async_id_symbol, trigger_async_id_symbol,\r\n    init_symbol, before_symbol, after_symbol, destroy_symbol,\r\n    promise_resolve_symbol, owner_symbol\r\n  },\r\n  constants: {\r\n    kInit, kBefore, kAfter, kDestroy, kTotals, kPromiseResolve\r\n  },\r\n  enableHooks,\r\n  disableHooks,\r\n  updatePromiseHookMode,\r\n  clearDefaultTriggerAsyncId,\r\n  clearAsyncIdStack,\r\n  hasAsyncIdStack,\r\n  executionAsyncResource,\r\n  // Internal Embedder API\r\n  newAsyncId,\r\n  getOrSetAsyncId,\r\n  getDefaultTriggerAsyncId,\r\n  defaultTriggerAsyncIdScope,\r\n  enabledHooksExist,\r\n  initHooksExist,\r\n  afterHooksExist,\r\n  destroyHooksExist,\r\n  emitInit: emitInitScript,\r\n  emitBefore: emitBeforeScript,\r\n  emitAfter: emitAfterScript,\r\n  emitDestroy: emitDestroyScript,\r\n  pushAsyncContext,\r\n  popAsyncContext,\r\n  registerDestroyHook,\r\n  useDomainTrampoline,\r\n  nativeHooks: {\r\n    init: emitInitNative,\r\n    before: emitBeforeNative,\r\n    after: emitAfterNative,\r\n    destroy: emitDestroyNative,\r\n    promise_resolve: emitPromiseResolveNative\r\n  },\r\n  asyncWrap: {\r\n    Providers: async_wrap.Providers,\r\n  }\r\n};\r\n",
    "name": "async_hooks",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 19,
    "sourcePositions": []
  },
  null,
  {
    "url": "node:internal/util",
    "source": "'use strict';\r\n\r\nconst {\r\n  ArrayBufferPrototypeGetByteLength,\r\n  ArrayFrom,\r\n  ArrayIsArray,\r\n  ArrayPrototypePush,\r\n  ArrayPrototypeSlice,\r\n  ArrayPrototypeSort,\r\n  Error,\r\n  FunctionPrototypeCall,\r\n  ObjectCreate,\r\n  ObjectDefineProperties,\r\n  ObjectDefineProperty,\r\n  ObjectGetOwnPropertyDescriptor,\r\n  ObjectGetOwnPropertyDescriptors,\r\n  ObjectGetPrototypeOf,\r\n  ObjectFreeze,\r\n  ObjectPrototypeHasOwnProperty,\r\n  ObjectSetPrototypeOf,\r\n  ObjectValues,\r\n  Promise,\r\n  ReflectApply,\r\n  ReflectConstruct,\r\n  RegExpPrototypeExec,\r\n  RegExpPrototypeGetDotAll,\r\n  RegExpPrototypeGetGlobal,\r\n  RegExpPrototypeGetHasIndices,\r\n  RegExpPrototypeGetIgnoreCase,\r\n  RegExpPrototypeGetMultiline,\r\n  RegExpPrototypeGetSticky,\r\n  RegExpPrototypeGetUnicode,\r\n  RegExpPrototypeGetSource,\r\n  SafeMap,\r\n  SafeSet,\r\n  SafeWeakMap,\r\n  StringPrototypeReplace,\r\n  StringPrototypeToLowerCase,\r\n  StringPrototypeToUpperCase,\r\n  Symbol,\r\n  SymbolFor,\r\n  SymbolReplace,\r\n  SymbolSplit,\r\n} = primordials;\r\n\r\nconst {\r\n  hideStackFrames,\r\n  codes: {\r\n    ERR_NO_CRYPTO,\r\n    ERR_UNKNOWN_SIGNAL\r\n  },\r\n  uvErrmapGet,\r\n  overrideStackTrace,\r\n} = require('internal/errors');\r\nconst { signals } = internalBinding('constants').os;\r\nconst {\r\n  isArrayBufferDetached: _isArrayBufferDetached,\r\n  privateSymbols: {\r\n    arrow_message_private_symbol,\r\n    decorated_private_symbol,\r\n  },\r\n  sleep: _sleep,\r\n  toUSVString: _toUSVString,\r\n} = internalBinding('util');\r\nconst { isNativeError } = internalBinding('types');\r\n\r\nconst noCrypto = !process.versions.openssl;\r\n\r\nconst experimentalWarnings = new SafeSet();\r\n\r\nconst colorRegExp = /\\u001b\\[\\d\\d?m/g; // eslint-disable-line no-control-regex\r\n\r\nconst unpairedSurrogateRe =\r\n  /(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])/;\r\nfunction toUSVString(val) {\r\n  const str = `${val}`;\r\n  // As of V8 5.5, `str.search()` (and `unpairedSurrogateRe[@@search]()`) are\r\n  // slower than `unpairedSurrogateRe.exec()`.\r\n  const match = RegExpPrototypeExec(unpairedSurrogateRe, str);\r\n  if (!match)\r\n    return str;\r\n  return _toUSVString(str, match.index);\r\n}\r\n\r\nlet uvBinding;\r\n\r\nfunction lazyUv() {\r\n  uvBinding ??= internalBinding('uv');\r\n  return uvBinding;\r\n}\r\n\r\nfunction removeColors(str) {\r\n  return StringPrototypeReplace(str, colorRegExp, '');\r\n}\r\n\r\nfunction isError(e) {\r\n  // An error could be an instance of Error while not being a native error\r\n  // or could be from a different realm and not be instance of Error but still\r\n  // be a native error.\r\n  return isNativeError(e) || e instanceof Error;\r\n}\r\n\r\n// Keep a list of deprecation codes that have been warned on so we only warn on\r\n// each one once.\r\nconst codesWarned = new SafeSet();\r\n\r\nlet validateString;\r\n\r\n// Mark that a method should not be used.\r\n// Returns a modified function which warns once by default.\r\n// If --no-deprecation is set, then it is a no-op.\r\nfunction deprecate(fn, msg, code) {\r\n  if (process.noDeprecation === true) {\r\n    return fn;\r\n  }\r\n\r\n  // Lazy-load to avoid a circular dependency.\r\n  if (validateString === undefined)\r\n    ({ validateString } = require('internal/validators'));\r\n\r\n  if (code !== undefined)\r\n    validateString(code, 'code');\r\n\r\n  let warned = false;\r\n  function deprecated(...args) {\r\n    if (!warned) {\r\n      warned = true;\r\n      if (code !== undefined) {\r\n        if (!codesWarned.has(code)) {\r\n          process.emitWarning(msg, 'DeprecationWarning', code, deprecated);\r\n          codesWarned.add(code);\r\n        }\r\n      } else {\r\n        process.emitWarning(msg, 'DeprecationWarning', deprecated);\r\n      }\r\n    }\r\n    if (new.target) {\r\n      return ReflectConstruct(fn, args, new.target);\r\n    }\r\n    return ReflectApply(fn, this, args);\r\n  }\r\n\r\n  // The wrapper will keep the same prototype as fn to maintain prototype chain\r\n  ObjectSetPrototypeOf(deprecated, fn);\r\n  if (fn.prototype) {\r\n    // Setting this (rather than using Object.setPrototype, as above) ensures\r\n    // that calling the unwrapped constructor gives an instanceof the wrapped\r\n    // constructor.\r\n    deprecated.prototype = fn.prototype;\r\n  }\r\n\r\n  return deprecated;\r\n}\r\n\r\nfunction decorateErrorStack(err) {\r\n  if (!(isError(err) && err.stack) || err[decorated_private_symbol])\r\n    return;\r\n\r\n  const arrow = err[arrow_message_private_symbol];\r\n\r\n  if (arrow) {\r\n    err.stack = arrow + err.stack;\r\n    err[decorated_private_symbol] = true;\r\n  }\r\n}\r\n\r\nfunction assertCrypto() {\r\n  if (noCrypto)\r\n    throw new ERR_NO_CRYPTO();\r\n}\r\n\r\n// Return undefined if there is no match.\r\n// Move the \"slow cases\" to a separate function to make sure this function gets\r\n// inlined properly. That prioritizes the common case.\r\nfunction normalizeEncoding(enc) {\r\n  if (enc == null || enc === 'utf8' || enc === 'utf-8') return 'utf8';\r\n  return slowCases(enc);\r\n}\r\n\r\nfunction slowCases(enc) {\r\n  switch (enc.length) {\r\n    case 4:\r\n      if (enc === 'UTF8') return 'utf8';\r\n      if (enc === 'ucs2' || enc === 'UCS2') return 'utf16le';\r\n      enc = `${enc}`.toLowerCase();\r\n      if (enc === 'utf8') return 'utf8';\r\n      if (enc === 'ucs2') return 'utf16le';\r\n      break;\r\n    case 3:\r\n      if (enc === 'hex' || enc === 'HEX' ||\r\n          `${enc}`.toLowerCase() === 'hex')\r\n        return 'hex';\r\n      break;\r\n    case 5:\r\n      if (enc === 'ascii') return 'ascii';\r\n      if (enc === 'ucs-2') return 'utf16le';\r\n      if (enc === 'UTF-8') return 'utf8';\r\n      if (enc === 'ASCII') return 'ascii';\r\n      if (enc === 'UCS-2') return 'utf16le';\r\n      enc = `${enc}`.toLowerCase();\r\n      if (enc === 'utf-8') return 'utf8';\r\n      if (enc === 'ascii') return 'ascii';\r\n      if (enc === 'ucs-2') return 'utf16le';\r\n      break;\r\n    case 6:\r\n      if (enc === 'base64') return 'base64';\r\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\r\n      if (enc === 'BASE64') return 'base64';\r\n      if (enc === 'LATIN1' || enc === 'BINARY') return 'latin1';\r\n      enc = `${enc}`.toLowerCase();\r\n      if (enc === 'base64') return 'base64';\r\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\r\n      break;\r\n    case 7:\r\n      if (enc === 'utf16le' || enc === 'UTF16LE' ||\r\n          `${enc}`.toLowerCase() === 'utf16le')\r\n        return 'utf16le';\r\n      break;\r\n    case 8:\r\n      if (enc === 'utf-16le' || enc === 'UTF-16LE' ||\r\n        `${enc}`.toLowerCase() === 'utf-16le')\r\n        return 'utf16le';\r\n      break;\r\n    case 9:\r\n      if (enc === 'base64url' || enc === 'BASE64URL' ||\r\n          `${enc}`.toLowerCase() === 'base64url')\r\n        return 'base64url';\r\n      break;\r\n    default:\r\n      if (enc === '') return 'utf8';\r\n  }\r\n}\r\n\r\nfunction emitExperimentalWarning(feature) {\r\n  if (experimentalWarnings.has(feature)) return;\r\n  const msg = `${feature} is an experimental feature and might change at any time`;\r\n  experimentalWarnings.add(feature);\r\n  process.emitWarning(msg, 'ExperimentalWarning');\r\n}\r\n\r\nfunction filterDuplicateStrings(items, low) {\r\n  const map = new SafeMap();\r\n  for (let i = 0; i < items.length; i++) {\r\n    const item = items[i];\r\n    const key = StringPrototypeToLowerCase(item);\r\n    if (low) {\r\n      map.set(key, key);\r\n    } else {\r\n      map.set(key, item);\r\n    }\r\n  }\r\n  return ArrayPrototypeSort(ArrayFrom(map.values()));\r\n}\r\n\r\nfunction cachedResult(fn) {\r\n  let result;\r\n  return () => {\r\n    if (result === undefined)\r\n      result = fn();\r\n    return ArrayPrototypeSlice(result);\r\n  };\r\n}\r\n\r\n// Useful for Wrapping an ES6 Class with a constructor Function that\r\n// does not require the new keyword. For instance:\r\n//   class A { constructor(x) {this.x = x;}}\r\n//   const B = createClassWrapper(A);\r\n//   B() instanceof A // true\r\n//   B() instanceof B // true\r\nfunction createClassWrapper(type) {\r\n  function fn(...args) {\r\n    return ReflectConstruct(type, args, new.target || type);\r\n  }\r\n  // Mask the wrapper function name and length values\r\n  ObjectDefineProperties(fn, {\r\n    name: { __proto__: null, value: type.name },\r\n    length: { __proto__: null, value: type.length },\r\n  });\r\n  ObjectSetPrototypeOf(fn, type);\r\n  fn.prototype = type.prototype;\r\n  return fn;\r\n}\r\n\r\nlet signalsToNamesMapping;\r\nfunction getSignalsToNamesMapping() {\r\n  if (signalsToNamesMapping !== undefined)\r\n    return signalsToNamesMapping;\r\n\r\n  signalsToNamesMapping = ObjectCreate(null);\r\n  for (const key in signals) {\r\n    signalsToNamesMapping[signals[key]] = key;\r\n  }\r\n\r\n  return signalsToNamesMapping;\r\n}\r\n\r\nfunction convertToValidSignal(signal) {\r\n  if (typeof signal === 'number' && getSignalsToNamesMapping()[signal])\r\n    return signal;\r\n\r\n  if (typeof signal === 'string') {\r\n    const signalName = signals[StringPrototypeToUpperCase(signal)];\r\n    if (signalName) return signalName;\r\n  }\r\n\r\n  throw new ERR_UNKNOWN_SIGNAL(signal);\r\n}\r\n\r\nfunction getConstructorOf(obj) {\r\n  while (obj) {\r\n    const descriptor = ObjectGetOwnPropertyDescriptor(obj, 'constructor');\r\n    if (descriptor !== undefined &&\r\n        typeof descriptor.value === 'function' &&\r\n        descriptor.value.name !== '') {\r\n      return descriptor.value;\r\n    }\r\n\r\n    obj = ObjectGetPrototypeOf(obj);\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction getSystemErrorName(err) {\r\n  const entry = uvErrmapGet(err);\r\n  return entry ? entry[0] : `Unknown system error ${err}`;\r\n}\r\n\r\nfunction getSystemErrorMap() {\r\n  return lazyUv().getErrorMap();\r\n}\r\n\r\nconst kCustomPromisifiedSymbol = SymbolFor('nodejs.util.promisify.custom');\r\nconst kCustomPromisifyArgsSymbol = Symbol('customPromisifyArgs');\r\n\r\nlet validateFunction;\r\n\r\nfunction promisify(original) {\r\n  // Lazy-load to avoid a circular dependency.\r\n  if (validateFunction === undefined)\r\n    ({ validateFunction } = require('internal/validators'));\r\n\r\n  validateFunction(original, 'original');\r\n\r\n  if (original[kCustomPromisifiedSymbol]) {\r\n    const fn = original[kCustomPromisifiedSymbol];\r\n\r\n    validateFunction(fn, 'util.promisify.custom');\r\n\r\n    return ObjectDefineProperty(fn, kCustomPromisifiedSymbol, {\r\n      __proto__: null,\r\n      value: fn, enumerable: false, writable: false, configurable: true\r\n    });\r\n  }\r\n\r\n  // Names to create an object from in case the callback receives multiple\r\n  // arguments, e.g. ['bytesRead', 'buffer'] for fs.read.\r\n  const argumentNames = original[kCustomPromisifyArgsSymbol];\r\n\r\n  function fn(...args) {\r\n    return new Promise((resolve, reject) => {\r\n      ArrayPrototypePush(args, (err, ...values) => {\r\n        if (err) {\r\n          return reject(err);\r\n        }\r\n        if (argumentNames !== undefined && values.length > 1) {\r\n          const obj = {};\r\n          for (let i = 0; i < argumentNames.length; i++)\r\n            obj[argumentNames[i]] = values[i];\r\n          resolve(obj);\r\n        } else {\r\n          resolve(values[0]);\r\n        }\r\n      });\r\n      ReflectApply(original, this, args);\r\n    });\r\n  }\r\n\r\n  ObjectSetPrototypeOf(fn, ObjectGetPrototypeOf(original));\r\n\r\n  ObjectDefineProperty(fn, kCustomPromisifiedSymbol, {\r\n    __proto__: null,\r\n    value: fn, enumerable: false, writable: false, configurable: true\r\n  });\r\n\r\n  const descriptors = ObjectGetOwnPropertyDescriptors(original);\r\n  const propertiesValues = ObjectValues(descriptors);\r\n  for (let i = 0; i < propertiesValues.length; i++) {\r\n    // We want to use null-prototype objects to not rely on globally mutable\r\n    // %Object.prototype%.\r\n    ObjectSetPrototypeOf(propertiesValues[i], null);\r\n  }\r\n  return ObjectDefineProperties(fn, descriptors);\r\n}\r\n\r\npromisify.custom = kCustomPromisifiedSymbol;\r\n\r\n// The built-in Array#join is slower in v8 6.0\r\nfunction join(output, separator) {\r\n  let str = '';\r\n  if (output.length !== 0) {\r\n    const lastIndex = output.length - 1;\r\n    for (let i = 0; i < lastIndex; i++) {\r\n      // It is faster not to use a template string here\r\n      str += output[i];\r\n      str += separator;\r\n    }\r\n    str += output[lastIndex];\r\n  }\r\n  return str;\r\n}\r\n\r\n// As of V8 6.6, depending on the size of the array, this is anywhere\r\n// between 1.5-10x faster than the two-arg version of Array#splice()\r\nfunction spliceOne(list, index) {\r\n  for (; index + 1 < list.length; index++)\r\n    list[index] = list[index + 1];\r\n  list.pop();\r\n}\r\n\r\nconst kNodeModulesRE = /^(.*)[\\\\/]node_modules[\\\\/]/;\r\n\r\nlet getStructuredStack;\r\n\r\nfunction isInsideNodeModules() {\r\n  if (getStructuredStack === undefined) {\r\n    // Lazy-load to avoid a circular dependency.\r\n    const { runInNewContext } = require('vm');\r\n    // Use `runInNewContext()` to get something tamper-proof and\r\n    // side-effect-free. Since this is currently only used for a deprecated API,\r\n    // the perf implications should be okay.\r\n    getStructuredStack = runInNewContext(`(function() {\r\n      try { Error.stackTraceLimit = Infinity; } catch {}\r\n      return function structuredStack() {\r\n        const e = new Error();\r\n        overrideStackTrace.set(e, (err, trace) => trace);\r\n        return e.stack;\r\n      };\r\n    })()`, { overrideStackTrace }, { filename: 'structured-stack' });\r\n  }\r\n\r\n  const stack = getStructuredStack();\r\n\r\n  // Iterate over all stack frames and look for the first one not coming\r\n  // from inside Node.js itself:\r\n  if (ArrayIsArray(stack)) {\r\n    for (const frame of stack) {\r\n      const filename = frame.getFileName();\r\n      // If a filename does not start with / or contain \\,\r\n      // it's likely from Node.js core.\r\n      if (RegExpPrototypeExec(/^\\/|\\\\/, filename) === null)\r\n        continue;\r\n      return RegExpPrototypeExec(kNodeModulesRE, filename) !== null;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction once(callback) {\r\n  let called = false;\r\n  return function(...args) {\r\n    if (called) return;\r\n    called = true;\r\n    return ReflectApply(callback, this, args);\r\n  };\r\n}\r\n\r\nlet validateUint32;\r\n\r\nfunction sleep(msec) {\r\n  // Lazy-load to avoid a circular dependency.\r\n  if (validateUint32 === undefined)\r\n    ({ validateUint32 } = require('internal/validators'));\r\n\r\n  validateUint32(msec, 'msec');\r\n  _sleep(msec);\r\n}\r\n\r\nfunction createDeferredPromise() {\r\n  let resolve;\r\n  let reject;\r\n  const promise = new Promise((res, rej) => {\r\n    resolve = res;\r\n    reject = rej;\r\n  });\r\n\r\n  return { promise, resolve, reject };\r\n}\r\n\r\n// https://heycam.github.io/webidl/#define-the-operations\r\nfunction defineOperation(target, name, method) {\r\n  ObjectDefineProperty(target, name, {\r\n    __proto__: null,\r\n    writable: true,\r\n    enumerable: true,\r\n    configurable: true,\r\n    value: method\r\n  });\r\n}\r\n\r\n// https://heycam.github.io/webidl/#es-interfaces\r\nfunction exposeInterface(target, name, interfaceObject) {\r\n  ObjectDefineProperty(target, name, {\r\n    __proto__: null,\r\n    writable: true,\r\n    enumerable: false,\r\n    configurable: true,\r\n    value: interfaceObject\r\n  });\r\n}\r\n\r\nlet _DOMException;\r\nconst lazyDOMExceptionClass = () => {\r\n  _DOMException ??= internalBinding('messaging').DOMException;\r\n  return _DOMException;\r\n};\r\n\r\nconst lazyDOMException = hideStackFrames((message, name) => {\r\n  _DOMException ??= internalBinding('messaging').DOMException;\r\n  return new _DOMException(message, name);\r\n});\r\n\r\nconst kEnumerableProperty = ObjectCreate(null);\r\nkEnumerableProperty.enumerable = true;\r\nObjectFreeze(kEnumerableProperty);\r\n\r\nconst kEmptyObject = ObjectFreeze(ObjectCreate(null));\r\n\r\nfunction filterOwnProperties(source, keys) {\r\n  const filtered = ObjectCreate(null);\r\n  for (let i = 0; i < keys.length; i++) {\r\n    const key = keys[i];\r\n    if (ObjectPrototypeHasOwnProperty(source, key)) {\r\n      filtered[key] = source[key];\r\n    }\r\n  }\r\n\r\n  return filtered;\r\n}\r\n\r\n/**\r\n * Mimics `obj[key] = value` but ignoring potential prototype inheritance.\r\n * @param {any} obj\r\n * @param {string} key\r\n * @param {any} value\r\n * @returns {any}\r\n */\r\nfunction setOwnProperty(obj, key, value) {\r\n  return ObjectDefineProperty(obj, key, {\r\n    __proto__: null,\r\n    configurable: true,\r\n    enumerable: true,\r\n    value,\r\n    writable: true,\r\n  });\r\n}\r\n\r\nlet internalGlobal;\r\nfunction getInternalGlobal() {\r\n  if (internalGlobal == null) {\r\n    // Lazy-load to avoid a circular dependency.\r\n    const { runInNewContext } = require('vm');\r\n    internalGlobal = runInNewContext('this', undefined, { contextName: 'internal' });\r\n  }\r\n  return internalGlobal;\r\n}\r\n\r\nfunction SideEffectFreeRegExpPrototypeExec(regex, string) {\r\n  const { RegExp: RegExpFromAnotherRealm } = getInternalGlobal();\r\n  return FunctionPrototypeCall(RegExpFromAnotherRealm.prototype.exec, regex, string);\r\n}\r\n\r\nconst crossRelmRegexes = new SafeWeakMap();\r\nfunction getCrossRelmRegex(regex) {\r\n  const cached = crossRelmRegexes.get(regex);\r\n  if (cached) return cached;\r\n\r\n  let flagString = '';\r\n  if (RegExpPrototypeGetHasIndices(regex)) flagString += 'd';\r\n  if (RegExpPrototypeGetGlobal(regex)) flagString += 'g';\r\n  if (RegExpPrototypeGetIgnoreCase(regex)) flagString += 'i';\r\n  if (RegExpPrototypeGetMultiline(regex)) flagString += 'm';\r\n  if (RegExpPrototypeGetDotAll(regex)) flagString += 's';\r\n  if (RegExpPrototypeGetUnicode(regex)) flagString += 'u';\r\n  if (RegExpPrototypeGetSticky(regex)) flagString += 'y';\r\n\r\n  const { RegExp: RegExpFromAnotherRealm } = getInternalGlobal();\r\n  const crossRelmRegex = new RegExpFromAnotherRealm(RegExpPrototypeGetSource(regex), flagString);\r\n  crossRelmRegexes.set(regex, crossRelmRegex);\r\n  return crossRelmRegex;\r\n}\r\n\r\nfunction SideEffectFreeRegExpPrototypeSymbolReplace(regex, string, replacement) {\r\n  return getCrossRelmRegex(regex)[SymbolReplace](string, replacement);\r\n}\r\n\r\nfunction SideEffectFreeRegExpPrototypeSymbolSplit(regex, string, limit = undefined) {\r\n  return getCrossRelmRegex(regex)[SymbolSplit](string, limit);\r\n}\r\n\r\n\r\nfunction isArrayBufferDetached(value) {\r\n  if (ArrayBufferPrototypeGetByteLength(value) === 0) {\r\n    return _isArrayBufferDetached(value);\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n// Setup user-facing NODE_V8_COVERAGE environment variable that writes\r\n// ScriptCoverage objects to a specified directory.\r\nfunction setupCoverageHooks(dir) {\r\n  const cwd = require('internal/process/execution').tryGetCwd();\r\n  const { resolve } = require('path');\r\n  const coverageDirectory = resolve(cwd, dir);\r\n  const { sourceMapCacheToObject } =\r\n    require('internal/source_map/source_map_cache');\r\n\r\n  if (process.features.inspector) {\r\n    internalBinding('profiler').setCoverageDirectory(coverageDirectory);\r\n    internalBinding('profiler').setSourceMapCacheGetter(sourceMapCacheToObject);\r\n  } else {\r\n    process.emitWarning('The inspector is disabled, ' +\r\n                        'coverage could not be collected',\r\n                        'Warning');\r\n    return '';\r\n  }\r\n  return coverageDirectory;\r\n}\r\n\r\nmodule.exports = {\r\n  assertCrypto,\r\n  cachedResult,\r\n  convertToValidSignal,\r\n  createClassWrapper,\r\n  createDeferredPromise,\r\n  decorateErrorStack,\r\n  defineOperation,\r\n  deprecate,\r\n  emitExperimentalWarning,\r\n  exposeInterface,\r\n  filterDuplicateStrings,\r\n  filterOwnProperties,\r\n  getConstructorOf,\r\n  getInternalGlobal,\r\n  getSystemErrorMap,\r\n  getSystemErrorName,\r\n  isArrayBufferDetached,\r\n  isError,\r\n  isInsideNodeModules,\r\n  join,\r\n  lazyDOMException,\r\n  lazyDOMExceptionClass,\r\n  normalizeEncoding,\r\n  once,\r\n  promisify,\r\n  SideEffectFreeRegExpPrototypeExec,\r\n  SideEffectFreeRegExpPrototypeSymbolReplace,\r\n  SideEffectFreeRegExpPrototypeSymbolSplit,\r\n  sleep,\r\n  spliceOne,\r\n  setupCoverageHooks,\r\n  toUSVString,\r\n  removeColors,\r\n\r\n  // Symbol used to customize promisify conversion\r\n  customPromisifyArgs: kCustomPromisifyArgsSymbol,\r\n\r\n  // Symbol used to provide a custom inspect function for an object as an\r\n  // alternative to using 'inspect'\r\n  customInspectSymbol: SymbolFor('nodejs.util.inspect.custom'),\r\n\r\n  // Used by the buffer module to capture an internal reference to the\r\n  // default isEncoding implementation, just in case userland overrides it.\r\n  kIsEncodingSymbol: Symbol('kIsEncodingSymbol'),\r\n  kVmBreakFirstLineSymbol: Symbol('kVmBreakFirstLineSymbol'),\r\n\r\n  kEmptyObject,\r\n  kEnumerableProperty,\r\n  setOwnProperty,\r\n};\r\n",
    "name": "util",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 21,
    "sourcePositions": []
  },
  {
    "url": "node:internal/validators",
    "source": "/* eslint jsdoc/require-jsdoc: \"error\" */\r\n\r\n'use strict';\r\n\r\nconst {\r\n  ArrayIsArray,\r\n  ArrayPrototypeIncludes,\r\n  ArrayPrototypeJoin,\r\n  ArrayPrototypeMap,\r\n  NumberIsInteger,\r\n  NumberIsNaN,\r\n  NumberMAX_SAFE_INTEGER,\r\n  NumberMIN_SAFE_INTEGER,\r\n  NumberParseInt,\r\n  ObjectPrototypeHasOwnProperty,\r\n  RegExpPrototypeExec,\r\n  String,\r\n  StringPrototypeToUpperCase,\r\n  StringPrototypeTrim,\r\n} = primordials;\r\n\r\nconst {\r\n  hideStackFrames,\r\n  codes: {\r\n    ERR_SOCKET_BAD_PORT,\r\n    ERR_INVALID_ARG_TYPE,\r\n    ERR_INVALID_ARG_VALUE,\r\n    ERR_OUT_OF_RANGE,\r\n    ERR_UNKNOWN_SIGNAL,\r\n  }\r\n} = require('internal/errors');\r\nconst { normalizeEncoding } = require('internal/util');\r\nconst {\r\n  isAsyncFunction,\r\n  isArrayBufferView\r\n} = require('internal/util/types');\r\nconst { signals } = internalBinding('constants').os;\r\n\r\n/**\r\n * @param {*} value\r\n * @returns {boolean}\r\n */\r\nfunction isInt32(value) {\r\n  return value === (value | 0);\r\n}\r\n\r\n/**\r\n * @param {*} value\r\n * @returns {boolean}\r\n */\r\nfunction isUint32(value) {\r\n  return value === (value >>> 0);\r\n}\r\n\r\nconst octalReg = /^[0-7]+$/;\r\nconst modeDesc = 'must be a 32-bit unsigned integer or an octal string';\r\n\r\n/**\r\n * Parse and validate values that will be converted into mode_t (the S_*\r\n * constants). Only valid numbers and octal strings are allowed. They could be\r\n * converted to 32-bit unsigned integers or non-negative signed integers in the\r\n * C++ land, but any value higher than 0o777 will result in platform-specific\r\n * behaviors.\r\n *\r\n * @param {*} value Values to be validated\r\n * @param {string} name Name of the argument\r\n * @param {number} [def] If specified, will be returned for invalid values\r\n * @returns {number}\r\n */\r\nfunction parseFileMode(value, name, def) {\r\n  value ??= def;\r\n  if (typeof value === 'string') {\r\n    if (RegExpPrototypeExec(octalReg, value) === null) {\r\n      throw new ERR_INVALID_ARG_VALUE(name, value, modeDesc);\r\n    }\r\n    value = NumberParseInt(value, 8);\r\n  }\r\n\r\n  validateUint32(value, name);\r\n  return value;\r\n}\r\n\r\n/**\r\n * @callback validateInteger\r\n * @param {*} value\r\n * @param {string} name\r\n * @param {number} [min]\r\n * @param {number} [max]\r\n * @returns {asserts value is number}\r\n */\r\n\r\n/** @type {validateInteger} */\r\nconst validateInteger = hideStackFrames(\r\n  (value, name, min = NumberMIN_SAFE_INTEGER, max = NumberMAX_SAFE_INTEGER) => {\r\n    if (typeof value !== 'number')\r\n      throw new ERR_INVALID_ARG_TYPE(name, 'number', value);\r\n    if (!NumberIsInteger(value))\r\n      throw new ERR_OUT_OF_RANGE(name, 'an integer', value);\r\n    if (value < min || value > max)\r\n      throw new ERR_OUT_OF_RANGE(name, `>= ${min} && <= ${max}`, value);\r\n  }\r\n);\r\n\r\n/**\r\n * @callback validateInt32\r\n * @param {*} value\r\n * @param {string} name\r\n * @param {number} [min]\r\n * @param {number} [max]\r\n * @returns {asserts value is number}\r\n */\r\n\r\n/** @type {validateInt32} */\r\nconst validateInt32 = hideStackFrames(\r\n  (value, name, min = -2147483648, max = 2147483647) => {\r\n    // The defaults for min and max correspond to the limits of 32-bit integers.\r\n    if (typeof value !== 'number') {\r\n      throw new ERR_INVALID_ARG_TYPE(name, 'number', value);\r\n    }\r\n    if (!NumberIsInteger(value)) {\r\n      throw new ERR_OUT_OF_RANGE(name, 'an integer', value);\r\n    }\r\n    if (value < min || value > max) {\r\n      throw new ERR_OUT_OF_RANGE(name, `>= ${min} && <= ${max}`, value);\r\n    }\r\n  }\r\n);\r\n\r\n/**\r\n * @callback validateUint32\r\n * @param {*} value\r\n * @param {string} name\r\n * @param {number|boolean} [positive=false]\r\n * @returns {asserts value is number}\r\n */\r\n\r\n/** @type {validateUint32} */\r\nconst validateUint32 = hideStackFrames((value, name, positive = false) => {\r\n  if (typeof value !== 'number') {\r\n    throw new ERR_INVALID_ARG_TYPE(name, 'number', value);\r\n  }\r\n  if (!NumberIsInteger(value)) {\r\n    throw new ERR_OUT_OF_RANGE(name, 'an integer', value);\r\n  }\r\n  const min = positive ? 1 : 0;\r\n  // 2 ** 32 === 4294967296\r\n  const max = 4_294_967_295;\r\n  if (value < min || value > max) {\r\n    throw new ERR_OUT_OF_RANGE(name, `>= ${min} && <= ${max}`, value);\r\n  }\r\n});\r\n\r\n/**\r\n * @callback validateString\r\n * @param {*} value\r\n * @param {string} name\r\n * @returns {asserts value is string}\r\n */\r\n\r\n/** @type {validateString} */\r\nfunction validateString(value, name) {\r\n  if (typeof value !== 'string')\r\n    throw new ERR_INVALID_ARG_TYPE(name, 'string', value);\r\n}\r\n\r\n/**\r\n * @callback validateNumber\r\n * @param {*} value\r\n * @param {string} name\r\n * @param {number} [min]\r\n * @param {number} [max]\r\n * @returns {asserts value is number}\r\n */\r\n\r\n/** @type {validateNumber} */\r\nfunction validateNumber(value, name, min = undefined, max) {\r\n  if (typeof value !== 'number')\r\n    throw new ERR_INVALID_ARG_TYPE(name, 'number', value);\r\n\r\n  if ((min != null && value < min) || (max != null && value > max) ||\r\n      ((min != null || max != null) && NumberIsNaN(value))) {\r\n    throw new ERR_OUT_OF_RANGE(\r\n      name,\r\n      `${min != null ? `>= ${min}` : ''}${min != null && max != null ? ' && ' : ''}${max != null ? `<= ${max}` : ''}`,\r\n      value);\r\n  }\r\n}\r\n\r\n/**\r\n * @callback validateOneOf\r\n * @template T\r\n * @param {T} value\r\n * @param {string} name\r\n * @param {T[]} oneOf\r\n */\r\n\r\n/** @type {validateOneOf} */\r\nconst validateOneOf = hideStackFrames((value, name, oneOf) => {\r\n  if (!ArrayPrototypeIncludes(oneOf, value)) {\r\n    const allowed = ArrayPrototypeJoin(\r\n      ArrayPrototypeMap(oneOf, (v) =>\r\n        (typeof v === 'string' ? `'${v}'` : String(v))),\r\n      ', ');\r\n    const reason = 'must be one of: ' + allowed;\r\n    throw new ERR_INVALID_ARG_VALUE(name, value, reason);\r\n  }\r\n});\r\n\r\n/**\r\n * @callback validateBoolean\r\n * @param {*} value\r\n * @param {string} name\r\n * @returns {asserts value is boolean}\r\n */\r\n\r\n/** @type {validateBoolean} */\r\nfunction validateBoolean(value, name) {\r\n  if (typeof value !== 'boolean')\r\n    throw new ERR_INVALID_ARG_TYPE(name, 'boolean', value);\r\n}\r\n\r\n/**\r\n * @param {any} options\r\n * @param {string} key\r\n * @param {boolean} defaultValue\r\n * @returns {boolean}\r\n */\r\nfunction getOwnPropertyValueOrDefault(options, key, defaultValue) {\r\n  return options == null || !ObjectPrototypeHasOwnProperty(options, key) ?\r\n    defaultValue :\r\n    options[key];\r\n}\r\n\r\n/**\r\n * @callback validateObject\r\n * @param {*} value\r\n * @param {string} name\r\n * @param {{\r\n *   allowArray?: boolean,\r\n *   allowFunction?: boolean,\r\n *   nullable?: boolean\r\n * }} [options]\r\n */\r\n\r\n/** @type {validateObject} */\r\nconst validateObject = hideStackFrames(\r\n  (value, name, options = null) => {\r\n    const allowArray = getOwnPropertyValueOrDefault(options, 'allowArray', false);\r\n    const allowFunction = getOwnPropertyValueOrDefault(options, 'allowFunction', false);\r\n    const nullable = getOwnPropertyValueOrDefault(options, 'nullable', false);\r\n    if ((!nullable && value === null) ||\r\n        (!allowArray && ArrayIsArray(value)) ||\r\n        (typeof value !== 'object' && (\r\n          !allowFunction || typeof value !== 'function'\r\n        ))) {\r\n      throw new ERR_INVALID_ARG_TYPE(name, 'Object', value);\r\n    }\r\n  });\r\n\r\n/**\r\n * @callback validateDictionary - We are using the Web IDL Standard definition\r\n *                                of \"dictionary\" here, which means any value\r\n *                                whose Type is either Undefined, Null, or\r\n *                                Object (which includes functions).\r\n * @param {*} value\r\n * @param {string} name\r\n * @see https://webidl.spec.whatwg.org/#es-dictionary\r\n * @see https://tc39.es/ecma262/#table-typeof-operator-results\r\n */\r\n\r\n/** @type {validateDictionary} */\r\nconst validateDictionary = hideStackFrames(\r\n  (value, name) => {\r\n    if (value != null && typeof value !== 'object' && typeof value !== 'function') {\r\n      throw new ERR_INVALID_ARG_TYPE(name, 'a dictionary', value);\r\n    }\r\n  });\r\n\r\n/**\r\n * @callback validateArray\r\n * @param {*} value\r\n * @param {string} name\r\n * @param {number} [minLength]\r\n * @returns {asserts value is any[]}\r\n */\r\n\r\n/** @type {validateArray} */\r\nconst validateArray = hideStackFrames((value, name, minLength = 0) => {\r\n  if (!ArrayIsArray(value)) {\r\n    throw new ERR_INVALID_ARG_TYPE(name, 'Array', value);\r\n  }\r\n  if (value.length < minLength) {\r\n    const reason = `must be longer than ${minLength}`;\r\n    throw new ERR_INVALID_ARG_VALUE(name, value, reason);\r\n  }\r\n});\r\n\r\n/**\r\n * @callback validateStringArray\r\n * @param {*} value\r\n * @param {string} name\r\n * @returns {asserts value is string[]}\r\n */\r\n\r\n/** @type {validateStringArray} */\r\nfunction validateStringArray(value, name) {\r\n  validateArray(value, name);\r\n  for (let i = 0; i < value.length; i++) {\r\n    validateString(value[i], `${name}[${i}]`);\r\n  }\r\n}\r\n\r\n/**\r\n * @callback validateBooleanArray\r\n * @param {*} value\r\n * @param {string} name\r\n * @returns {asserts value is boolean[]}\r\n */\r\n\r\n/** @type {validateBooleanArray} */\r\nfunction validateBooleanArray(value, name) {\r\n  validateArray(value, name);\r\n  for (let i = 0; i < value.length; i++) {\r\n    validateBoolean(value[i], `${name}[${i}]`);\r\n  }\r\n}\r\n\r\n/**\r\n * @param {*} signal\r\n * @param {string} [name='signal']\r\n * @returns {asserts signal is keyof signals}\r\n */\r\nfunction validateSignalName(signal, name = 'signal') {\r\n  validateString(signal, name);\r\n\r\n  if (signals[signal] === undefined) {\r\n    if (signals[StringPrototypeToUpperCase(signal)] !== undefined) {\r\n      throw new ERR_UNKNOWN_SIGNAL(signal +\r\n                                   ' (signals must use all capital letters)');\r\n    }\r\n\r\n    throw new ERR_UNKNOWN_SIGNAL(signal);\r\n  }\r\n}\r\n\r\n/**\r\n * @callback validateBuffer\r\n * @param {*} buffer\r\n * @param {string} [name='buffer']\r\n * @returns {asserts buffer is ArrayBufferView}\r\n */\r\n\r\n/** @type {validateBuffer} */\r\nconst validateBuffer = hideStackFrames((buffer, name = 'buffer') => {\r\n  if (!isArrayBufferView(buffer)) {\r\n    throw new ERR_INVALID_ARG_TYPE(name,\r\n                                   ['Buffer', 'TypedArray', 'DataView'],\r\n                                   buffer);\r\n  }\r\n});\r\n\r\n/**\r\n * @param {string} data\r\n * @param {string} encoding\r\n */\r\nfunction validateEncoding(data, encoding) {\r\n  const normalizedEncoding = normalizeEncoding(encoding);\r\n  const length = data.length;\r\n\r\n  if (normalizedEncoding === 'hex' && length % 2 !== 0) {\r\n    throw new ERR_INVALID_ARG_VALUE('encoding', encoding,\r\n                                    `is invalid for data of length ${length}`);\r\n  }\r\n}\r\n\r\n/**\r\n * Check that the port number is not NaN when coerced to a number,\r\n * is an integer and that it falls within the legal range of port numbers.\r\n * @param {*} port\r\n * @param {string} [name='Port']\r\n * @param {boolean} [allowZero=true]\r\n * @returns {number}\r\n */\r\nfunction validatePort(port, name = 'Port', allowZero = true) {\r\n  if ((typeof port !== 'number' && typeof port !== 'string') ||\r\n      (typeof port === 'string' && StringPrototypeTrim(port).length === 0) ||\r\n      +port !== (+port >>> 0) ||\r\n      port > 0xFFFF ||\r\n      (port === 0 && !allowZero)) {\r\n    throw new ERR_SOCKET_BAD_PORT(name, port, allowZero);\r\n  }\r\n  return port | 0;\r\n}\r\n\r\n/**\r\n * @callback validateAbortSignal\r\n * @param {*} signal\r\n * @param {string} name\r\n */\r\n\r\n/** @type {validateAbortSignal} */\r\nconst validateAbortSignal = hideStackFrames((signal, name) => {\r\n  if (signal !== undefined &&\r\n      (signal === null ||\r\n       typeof signal !== 'object' ||\r\n       !('aborted' in signal))) {\r\n    throw new ERR_INVALID_ARG_TYPE(name, 'AbortSignal', signal);\r\n  }\r\n});\r\n\r\n/**\r\n * @callback validateFunction\r\n * @param {*} value\r\n * @param {string} name\r\n * @returns {asserts value is Function}\r\n */\r\n\r\n/** @type {validateFunction} */\r\nconst validateFunction = hideStackFrames((value, name) => {\r\n  if (typeof value !== 'function')\r\n    throw new ERR_INVALID_ARG_TYPE(name, 'Function', value);\r\n});\r\n\r\n/**\r\n * @callback validatePlainFunction\r\n * @param {*} value\r\n * @param {string} name\r\n * @returns {asserts value is Function}\r\n */\r\n\r\n/** @type {validatePlainFunction} */\r\nconst validatePlainFunction = hideStackFrames((value, name) => {\r\n  if (typeof value !== 'function' || isAsyncFunction(value))\r\n    throw new ERR_INVALID_ARG_TYPE(name, 'Function', value);\r\n});\r\n\r\n/**\r\n * @callback validateUndefined\r\n * @param {*} value\r\n * @param {string} name\r\n * @returns {asserts value is undefined}\r\n */\r\n\r\n/** @type {validateUndefined} */\r\nconst validateUndefined = hideStackFrames((value, name) => {\r\n  if (value !== undefined)\r\n    throw new ERR_INVALID_ARG_TYPE(name, 'undefined', value);\r\n});\r\n\r\n/**\r\n * @template T\r\n * @param {T} value\r\n * @param {string} name\r\n * @param {T[]} union\r\n */\r\nfunction validateUnion(value, name, union) {\r\n  if (!ArrayPrototypeIncludes(union, value)) {\r\n    throw new ERR_INVALID_ARG_TYPE(name, `('${ArrayPrototypeJoin(union, '|')}')`, value);\r\n  }\r\n}\r\n\r\nconst linkValueRegExp = /^(?:<[^>]*>;)\\s*(?:rel=(\")?[^;\"]*\\1;?)\\s*(?:(?:as|anchor|title|crossorigin|disabled|fetchpriority|rel|referrerpolicy)=(\")?[^;\"]*\\2)?$/;\r\n\r\n/**\r\n * @param {any} value\r\n * @param {string} name\r\n */\r\nfunction validateLinkHeaderFormat(value, name) {\r\n  if (\r\n    typeof value === 'undefined' ||\r\n    !RegExpPrototypeExec(linkValueRegExp, value)\r\n  ) {\r\n    throw new ERR_INVALID_ARG_VALUE(\r\n      name,\r\n      value,\r\n      'must be an array or string of format \"</styles.css>; rel=preload; as=style\"'\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * @param {any} hints\r\n * @return {string}\r\n */\r\nfunction validateLinkHeaderValue(hints) {\r\n  if (typeof hints === 'string') {\r\n    validateLinkHeaderFormat(hints, 'hints');\r\n    return hints;\r\n  } else if (ArrayIsArray(hints)) {\r\n    const hintsLength = hints.length;\r\n    let result = '';\r\n\r\n    if (hintsLength === 0) {\r\n      return result;\r\n    }\r\n\r\n    for (let i = 0; i < hintsLength; i++) {\r\n      const link = hints[i];\r\n      validateLinkHeaderFormat(link, 'hints');\r\n      result += link;\r\n\r\n      if (i !== hintsLength - 1) {\r\n        result += ', ';\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  throw new ERR_INVALID_ARG_VALUE(\r\n    'hints',\r\n    hints,\r\n    'must be an array or string of format \"</styles.css>; rel=preload; as=style\"'\r\n  );\r\n}\r\n\r\nmodule.exports = {\r\n  isInt32,\r\n  isUint32,\r\n  parseFileMode,\r\n  validateArray,\r\n  validateStringArray,\r\n  validateBooleanArray,\r\n  validateBoolean,\r\n  validateBuffer,\r\n  validateDictionary,\r\n  validateEncoding,\r\n  validateFunction,\r\n  validateInt32,\r\n  validateInteger,\r\n  validateNumber,\r\n  validateObject,\r\n  validateOneOf,\r\n  validatePlainFunction,\r\n  validatePort,\r\n  validateSignalName,\r\n  validateString,\r\n  validateUint32,\r\n  validateUndefined,\r\n  validateUnion,\r\n  validateAbortSignal,\r\n  validateLinkHeaderValue\r\n};\r\n",
    "name": "validators",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 22,
    "sourcePositions": []
  },
  {
    "url": "node:internal/util/types",
    "source": "'use strict';\r\n\r\nconst {\r\n  ArrayBufferIsView,\r\n  ObjectDefineProperties,\r\n  TypedArrayPrototypeGetSymbolToStringTag,\r\n} = primordials;\r\n\r\nfunction isTypedArray(value) {\r\n  return TypedArrayPrototypeGetSymbolToStringTag(value) !== undefined;\r\n}\r\n\r\nfunction isUint8Array(value) {\r\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8Array';\r\n}\r\n\r\nfunction isUint8ClampedArray(value) {\r\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8ClampedArray';\r\n}\r\n\r\nfunction isUint16Array(value) {\r\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint16Array';\r\n}\r\n\r\nfunction isUint32Array(value) {\r\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint32Array';\r\n}\r\n\r\nfunction isInt8Array(value) {\r\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int8Array';\r\n}\r\n\r\nfunction isInt16Array(value) {\r\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int16Array';\r\n}\r\n\r\nfunction isInt32Array(value) {\r\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int32Array';\r\n}\r\n\r\nfunction isFloat32Array(value) {\r\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float32Array';\r\n}\r\n\r\nfunction isFloat64Array(value) {\r\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float64Array';\r\n}\r\n\r\nfunction isBigInt64Array(value) {\r\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigInt64Array';\r\n}\r\n\r\nfunction isBigUint64Array(value) {\r\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigUint64Array';\r\n}\r\n\r\nmodule.exports = {\r\n  ...internalBinding('types'),\r\n  isArrayBufferView: ArrayBufferIsView,\r\n  isTypedArray,\r\n  isUint8Array,\r\n  isUint8ClampedArray,\r\n  isUint16Array,\r\n  isUint32Array,\r\n  isInt8Array,\r\n  isInt16Array,\r\n  isInt32Array,\r\n  isFloat32Array,\r\n  isFloat64Array,\r\n  isBigInt64Array,\r\n  isBigUint64Array,\r\n};\r\n\r\nlet isCryptoKey;\r\nlet isKeyObject;\r\n\r\nObjectDefineProperties(module.exports, {\r\n  isKeyObject: {\r\n    __proto__: null,\r\n    configurable: false,\r\n    enumerable: true,\r\n    value(obj) {\r\n      if (!process.versions.openssl) {\r\n        return false;\r\n      }\r\n\r\n      if (!isKeyObject) {\r\n        ({ isKeyObject } = require('internal/crypto/keys'));\r\n      }\r\n\r\n      return isKeyObject(obj);\r\n    }\r\n  },\r\n  isCryptoKey: {\r\n    __proto__: null,\r\n    configurable: false,\r\n    enumerable: true,\r\n    value(obj) {\r\n      if (!process.versions.openssl) {\r\n        return false;\r\n      }\r\n\r\n      if (!isCryptoKey) {\r\n        ({ isCryptoKey } = require('internal/crypto/keys'));\r\n      }\r\n\r\n      return isCryptoKey(obj);\r\n    }\r\n  }\r\n});\r\n",
    "name": "types",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 23,
    "sourcePositions": []
  },
  {
    "url": "node:internal/linkedlist",
    "source": "'use strict';\r\n\r\nfunction init(list) {\r\n  list._idleNext = list;\r\n  list._idlePrev = list;\r\n  return list;\r\n}\r\n\r\n// Show the most idle item.\r\nfunction peek(list) {\r\n  if (list._idlePrev === list) return null;\r\n  return list._idlePrev;\r\n}\r\n\r\n// Remove an item from its list.\r\nfunction remove(item) {\r\n  if (item._idleNext) {\r\n    item._idleNext._idlePrev = item._idlePrev;\r\n  }\r\n\r\n  if (item._idlePrev) {\r\n    item._idlePrev._idleNext = item._idleNext;\r\n  }\r\n\r\n  item._idleNext = null;\r\n  item._idlePrev = null;\r\n}\r\n\r\n// Remove an item from its list and place at the end.\r\nfunction append(list, item) {\r\n  if (item._idleNext || item._idlePrev) {\r\n    remove(item);\r\n  }\r\n\r\n  // Items are linked  with _idleNext -> (older) and _idlePrev -> (newer).\r\n  // Note: This linkage (next being older) may seem counter-intuitive at first.\r\n  item._idleNext = list._idleNext;\r\n  item._idlePrev = list;\r\n\r\n  // The list _idleNext points to tail (newest) and _idlePrev to head (oldest).\r\n  list._idleNext._idlePrev = item;\r\n  list._idleNext = item;\r\n}\r\n\r\nfunction isEmpty(list) {\r\n  return list._idleNext === list;\r\n}\r\n\r\nmodule.exports = {\r\n  init,\r\n  peek,\r\n  remove,\r\n  append,\r\n  isEmpty\r\n};\r\n",
    "name": "linkedlist",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 24,
    "sourcePositions": []
  },
  {
    "url": "node:internal/priority_queue",
    "source": "'use strict';\r\n\r\nconst {\r\n  Array,\r\n} = primordials;\r\n\r\n// The PriorityQueue is a basic implementation of a binary heap that accepts\r\n// a custom sorting function via its constructor. This function is passed\r\n// the two nodes to compare, similar to the native Array#sort. Crucially\r\n// this enables priority queues that are based on a comparison of more than\r\n// just a single criteria.\r\n\r\nmodule.exports = class PriorityQueue {\r\n  #compare = (a, b) => a - b;\r\n  #heap = new Array(64);\r\n  #setPosition;\r\n  #size = 0;\r\n\r\n  constructor(comparator, setPosition) {\r\n    if (comparator !== undefined)\r\n      this.#compare = comparator;\r\n    if (setPosition !== undefined)\r\n      this.#setPosition = setPosition;\r\n  }\r\n\r\n  insert(value) {\r\n    const heap = this.#heap;\r\n    const pos = ++this.#size;\r\n    heap[pos] = value;\r\n\r\n    if (heap.length === pos)\r\n      heap.length *= 2;\r\n\r\n    this.percolateUp(pos);\r\n  }\r\n\r\n  peek() {\r\n    return this.#heap[1];\r\n  }\r\n\r\n  percolateDown(pos) {\r\n    const compare = this.#compare;\r\n    const setPosition = this.#setPosition;\r\n    const heap = this.#heap;\r\n    const size = this.#size;\r\n    const item = heap[pos];\r\n\r\n    while (pos * 2 <= size) {\r\n      let childIndex = pos * 2 + 1;\r\n      if (childIndex > size || compare(heap[pos * 2], heap[childIndex]) < 0)\r\n        childIndex = pos * 2;\r\n      const child = heap[childIndex];\r\n      if (compare(item, child) <= 0)\r\n        break;\r\n      if (setPosition !== undefined)\r\n        setPosition(child, pos);\r\n      heap[pos] = child;\r\n      pos = childIndex;\r\n    }\r\n    heap[pos] = item;\r\n    if (setPosition !== undefined)\r\n      setPosition(item, pos);\r\n  }\r\n\r\n  percolateUp(pos) {\r\n    const heap = this.#heap;\r\n    const compare = this.#compare;\r\n    const setPosition = this.#setPosition;\r\n    const item = heap[pos];\r\n\r\n    while (pos > 1) {\r\n      const parent = heap[pos / 2 | 0];\r\n      if (compare(parent, item) <= 0)\r\n        break;\r\n      heap[pos] = parent;\r\n      if (setPosition !== undefined)\r\n        setPosition(parent, pos);\r\n      pos = pos / 2 | 0;\r\n    }\r\n    heap[pos] = item;\r\n    if (setPosition !== undefined)\r\n      setPosition(item, pos);\r\n  }\r\n\r\n  removeAt(pos) {\r\n    const heap = this.#heap;\r\n    const size = --this.#size;\r\n    heap[pos] = heap[size + 1];\r\n    heap[size + 1] = undefined;\r\n\r\n    if (size > 0 && pos <= size) {\r\n      if (pos > 1 && this.#compare(heap[pos / 2 | 0], heap[pos]) > 0)\r\n        this.percolateUp(pos);\r\n      else\r\n        this.percolateDown(pos);\r\n    }\r\n  }\r\n\r\n  shift() {\r\n    const heap = this.#heap;\r\n    const value = heap[1];\r\n    if (value === undefined)\r\n      return;\r\n\r\n    this.removeAt(1);\r\n\r\n    return value;\r\n  }\r\n};\r\n",
    "name": "priority_queue",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 25,
    "sourcePositions": []
  },
  {
    "url": "node:internal/util/inspect",
    "source": "'use strict';\r\n\r\nconst {\r\n  Array,\r\n  ArrayIsArray,\r\n  ArrayPrototypeFilter,\r\n  ArrayPrototypeForEach,\r\n  ArrayPrototypeIncludes,\r\n  ArrayPrototypeIndexOf,\r\n  ArrayPrototypeJoin,\r\n  ArrayPrototypeMap,\r\n  ArrayPrototypePop,\r\n  ArrayPrototypePush,\r\n  ArrayPrototypePushApply,\r\n  ArrayPrototypeSlice,\r\n  ArrayPrototypeSplice,\r\n  ArrayPrototypeSort,\r\n  ArrayPrototypeUnshift,\r\n  BigIntPrototypeValueOf,\r\n  BooleanPrototypeValueOf,\r\n  DatePrototypeGetTime,\r\n  DatePrototypeToISOString,\r\n  DatePrototypeToString,\r\n  ErrorPrototypeToString,\r\n  FunctionPrototypeBind,\r\n  FunctionPrototypeCall,\r\n  FunctionPrototypeToString,\r\n  JSONStringify,\r\n  MapPrototypeGetSize,\r\n  MapPrototypeEntries,\r\n  MathFloor,\r\n  MathMax,\r\n  MathMin,\r\n  MathRound,\r\n  MathSqrt,\r\n  MathTrunc,\r\n  Number,\r\n  NumberIsFinite,\r\n  NumberIsNaN,\r\n  NumberParseFloat,\r\n  NumberParseInt,\r\n  NumberPrototypeToString,\r\n  NumberPrototypeValueOf,\r\n  Object,\r\n  ObjectAssign,\r\n  ObjectCreate,\r\n  ObjectDefineProperty,\r\n  ObjectGetOwnPropertyDescriptor,\r\n  ObjectGetOwnPropertyNames,\r\n  ObjectGetOwnPropertySymbols,\r\n  ObjectGetPrototypeOf,\r\n  ObjectIs,\r\n  ObjectKeys,\r\n  ObjectPrototypeHasOwnProperty,\r\n  ObjectPrototypePropertyIsEnumerable,\r\n  ObjectSeal,\r\n  ObjectSetPrototypeOf,\r\n  ReflectApply,\r\n  ReflectOwnKeys,\r\n  RegExp,\r\n  RegExpPrototypeExec,\r\n  RegExpPrototypeSymbolReplace,\r\n  RegExpPrototypeSymbolSplit,\r\n  RegExpPrototypeToString,\r\n  SafeStringIterator,\r\n  SafeMap,\r\n  SafeSet,\r\n  SetPrototypeGetSize,\r\n  SetPrototypeValues,\r\n  String,\r\n  StringPrototypeCharCodeAt,\r\n  StringPrototypeCodePointAt,\r\n  StringPrototypeIncludes,\r\n  StringPrototypeIndexOf,\r\n  StringPrototypeLastIndexOf,\r\n  StringPrototypeNormalize,\r\n  StringPrototypePadEnd,\r\n  StringPrototypePadStart,\r\n  StringPrototypeRepeat,\r\n  StringPrototypeReplaceAll,\r\n  StringPrototypeSlice,\r\n  StringPrototypeSplit,\r\n  StringPrototypeEndsWith,\r\n  StringPrototypeStartsWith,\r\n  StringPrototypeToLowerCase,\r\n  StringPrototypeTrim,\r\n  StringPrototypeValueOf,\r\n  SymbolPrototypeToString,\r\n  SymbolPrototypeValueOf,\r\n  SymbolIterator,\r\n  SymbolToStringTag,\r\n  TypedArrayPrototypeGetLength,\r\n  TypedArrayPrototypeGetSymbolToStringTag,\r\n  Uint8Array,\r\n  globalThis,\r\n  uncurryThis,\r\n} = primordials;\r\n\r\nconst {\r\n  constants: {\r\n    ALL_PROPERTIES,\r\n    ONLY_ENUMERABLE,\r\n    kPending,\r\n    kRejected,\r\n  },\r\n  getOwnNonIndexProperties,\r\n  getPromiseDetails,\r\n  getProxyDetails,\r\n  previewEntries,\r\n  getConstructorName: internalGetConstructorName,\r\n  getExternalValue,\r\n} = internalBinding('util');\r\n\r\nconst {\r\n  customInspectSymbol,\r\n  isError,\r\n  join,\r\n  removeColors\r\n} = require('internal/util');\r\n\r\nconst {\r\n  isStackOverflowError\r\n} = require('internal/errors');\r\n\r\nconst {\r\n  isAsyncFunction,\r\n  isGeneratorFunction,\r\n  isAnyArrayBuffer,\r\n  isArrayBuffer,\r\n  isArgumentsObject,\r\n  isBoxedPrimitive,\r\n  isDataView,\r\n  isExternal,\r\n  isMap,\r\n  isMapIterator,\r\n  isModuleNamespaceObject,\r\n  isNativeError,\r\n  isPromise,\r\n  isSet,\r\n  isSetIterator,\r\n  isWeakMap,\r\n  isWeakSet,\r\n  isRegExp,\r\n  isDate,\r\n  isTypedArray,\r\n  isStringObject,\r\n  isNumberObject,\r\n  isBooleanObject,\r\n  isBigIntObject,\r\n} = require('internal/util/types');\r\n\r\nconst assert = require('internal/assert');\r\n\r\nconst { BuiltinModule } = require('internal/bootstrap/loaders');\r\nconst {\r\n  validateObject,\r\n  validateString,\r\n} = require('internal/validators');\r\n\r\nlet hexSlice;\r\nlet internalUrl;\r\n\r\nfunction pathToFileUrlHref(filepath) {\r\n  internalUrl ??= require('internal/url');\r\n  return internalUrl.pathToFileURL(filepath).href;\r\n}\r\n\r\nconst builtInObjects = new SafeSet(\r\n  ArrayPrototypeFilter(\r\n    ObjectGetOwnPropertyNames(globalThis),\r\n    (e) => RegExpPrototypeExec(/^[A-Z][a-zA-Z0-9]+$/, e) !== null\r\n  )\r\n);\r\n\r\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot\r\nconst isUndetectableObject = (v) => typeof v === 'undefined' && v !== undefined;\r\n\r\n// These options must stay in sync with `getUserOptions`. So if any option will\r\n// be added or removed, `getUserOptions` must also be updated accordingly.\r\nconst inspectDefaultOptions = ObjectSeal({\r\n  showHidden: false,\r\n  depth: 2,\r\n  colors: false,\r\n  customInspect: true,\r\n  showProxy: false,\r\n  maxArrayLength: 100,\r\n  maxStringLength: 10000,\r\n  breakLength: 80,\r\n  compact: 3,\r\n  sorted: false,\r\n  getters: false,\r\n  numericSeparator: false,\r\n});\r\n\r\nconst kObjectType = 0;\r\nconst kArrayType = 1;\r\nconst kArrayExtrasType = 2;\r\n\r\n/* eslint-disable no-control-regex */\r\nconst strEscapeSequencesRegExp = /[\\x00-\\x1f\\x27\\x5c\\x7f-\\x9f]|[\\ud800-\\udbff](?![\\udc00-\\udfff])|(?<![\\ud800-\\udbff])[\\udc00-\\udfff]/;\r\nconst strEscapeSequencesReplacer = /[\\x00-\\x1f\\x27\\x5c\\x7f-\\x9f]|[\\ud800-\\udbff](?![\\udc00-\\udfff])|(?<![\\ud800-\\udbff])[\\udc00-\\udfff]/g;\r\nconst strEscapeSequencesRegExpSingle = /[\\x00-\\x1f\\x5c\\x7f-\\x9f]|[\\ud800-\\udbff](?![\\udc00-\\udfff])|(?<![\\ud800-\\udbff])[\\udc00-\\udfff]/;\r\nconst strEscapeSequencesReplacerSingle = /[\\x00-\\x1f\\x5c\\x7f-\\x9f]|[\\ud800-\\udbff](?![\\udc00-\\udfff])|(?<![\\ud800-\\udbff])[\\udc00-\\udfff]/g;\r\n/* eslint-enable no-control-regex */\r\n\r\nconst keyStrRegExp = /^[a-zA-Z_][a-zA-Z_0-9]*$/;\r\nconst numberRegExp = /^(0|[1-9][0-9]*)$/;\r\n\r\nconst coreModuleRegExp = /^ {4}at (?:[^/\\\\(]+ \\(|)node:(.+):\\d+:\\d+\\)?$/;\r\nconst nodeModulesRegExp = /[/\\\\]node_modules[/\\\\](.+?)(?=[/\\\\])/g;\r\n\r\nconst classRegExp = /^(\\s+[^(]*?)\\s*{/;\r\n// eslint-disable-next-line node-core/no-unescaped-regexp-dot\r\nconst stripCommentsRegExp = /(\\/\\/.*?\\n)|(\\/\\*(.|\\n)*?\\*\\/)/g;\r\n\r\nconst kMinLineLength = 16;\r\n\r\n// Constants to map the iterator state.\r\nconst kWeak = 0;\r\nconst kIterator = 1;\r\nconst kMapEntries = 2;\r\n\r\n// Escaped control characters (plus the single quote and the backslash). Use\r\n// empty strings to fill up unused entries.\r\nconst meta = [\r\n  '\\\\x00', '\\\\x01', '\\\\x02', '\\\\x03', '\\\\x04', '\\\\x05', '\\\\x06', '\\\\x07', // x07\r\n  '\\\\b', '\\\\t', '\\\\n', '\\\\x0B', '\\\\f', '\\\\r', '\\\\x0E', '\\\\x0F',           // x0F\r\n  '\\\\x10', '\\\\x11', '\\\\x12', '\\\\x13', '\\\\x14', '\\\\x15', '\\\\x16', '\\\\x17', // x17\r\n  '\\\\x18', '\\\\x19', '\\\\x1A', '\\\\x1B', '\\\\x1C', '\\\\x1D', '\\\\x1E', '\\\\x1F', // x1F\r\n  '', '', '', '', '', '', '', \"\\\\'\", '', '', '', '', '', '', '', '',      // x2F\r\n  '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',         // x3F\r\n  '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',         // x4F\r\n  '', '', '', '', '', '', '', '', '', '', '', '', '\\\\\\\\', '', '', '',     // x5F\r\n  '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',         // x6F\r\n  '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '\\\\x7F',    // x7F\r\n  '\\\\x80', '\\\\x81', '\\\\x82', '\\\\x83', '\\\\x84', '\\\\x85', '\\\\x86', '\\\\x87', // x87\r\n  '\\\\x88', '\\\\x89', '\\\\x8A', '\\\\x8B', '\\\\x8C', '\\\\x8D', '\\\\x8E', '\\\\x8F', // x8F\r\n  '\\\\x90', '\\\\x91', '\\\\x92', '\\\\x93', '\\\\x94', '\\\\x95', '\\\\x96', '\\\\x97', // x97\r\n  '\\\\x98', '\\\\x99', '\\\\x9A', '\\\\x9B', '\\\\x9C', '\\\\x9D', '\\\\x9E', '\\\\x9F', // x9F\r\n];\r\n\r\n// Regex used for ansi escape code splitting\r\n// Adopted from https://github.com/chalk/ansi-regex/blob/HEAD/index.js\r\n// License: MIT, authors: @sindresorhus, Qix-, arjunmehta and LitoMore\r\n// Matches all ansi escape code sequences in a string\r\nconst ansiPattern = '[\\\\u001B\\\\u009B][[\\\\]()#;?]*' +\r\n  '(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*' +\r\n  '|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)' +\r\n  '|(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))';\r\nconst ansi = new RegExp(ansiPattern, 'g');\r\n\r\nlet getStringWidth;\r\n\r\nfunction getUserOptions(ctx, isCrossContext) {\r\n  const ret = {\r\n    stylize: ctx.stylize,\r\n    showHidden: ctx.showHidden,\r\n    depth: ctx.depth,\r\n    colors: ctx.colors,\r\n    customInspect: ctx.customInspect,\r\n    showProxy: ctx.showProxy,\r\n    maxArrayLength: ctx.maxArrayLength,\r\n    maxStringLength: ctx.maxStringLength,\r\n    breakLength: ctx.breakLength,\r\n    compact: ctx.compact,\r\n    sorted: ctx.sorted,\r\n    getters: ctx.getters,\r\n    numericSeparator: ctx.numericSeparator,\r\n    ...ctx.userOptions\r\n  };\r\n\r\n  // Typically, the target value will be an instance of `Object`. If that is\r\n  // *not* the case, the object may come from another vm.Context, and we want\r\n  // to avoid passing it objects from this Context in that case, so we remove\r\n  // the prototype from the returned object itself + the `stylize()` function,\r\n  // and remove all other non-primitives, including non-primitive user options.\r\n  if (isCrossContext) {\r\n    ObjectSetPrototypeOf(ret, null);\r\n    for (const key of ObjectKeys(ret)) {\r\n      if ((typeof ret[key] === 'object' || typeof ret[key] === 'function') &&\r\n          ret[key] !== null) {\r\n        delete ret[key];\r\n      }\r\n    }\r\n    ret.stylize = ObjectSetPrototypeOf((value, flavour) => {\r\n      let stylized;\r\n      try {\r\n        stylized = `${ctx.stylize(value, flavour)}`;\r\n      } catch {\r\n        // Continue regardless of error.\r\n      }\r\n\r\n      if (typeof stylized !== 'string') return value;\r\n      // `stylized` is a string as it should be, which is safe to pass along.\r\n      return stylized;\r\n    }, null);\r\n  }\r\n\r\n  return ret;\r\n}\r\n\r\n/**\r\n * Echos the value of any input. Tries to print the value out\r\n * in the best way possible given the different types.\r\n *\r\n * @param {any} value The value to print out.\r\n * @param {object} opts Optional options object that alters the output.\r\n */\r\n/* Legacy: value, showHidden, depth, colors */\r\nfunction inspect(value, opts) {\r\n  // Default options\r\n  const ctx = {\r\n    budget: {},\r\n    indentationLvl: 0,\r\n    seen: [],\r\n    currentDepth: 0,\r\n    stylize: stylizeNoColor,\r\n    showHidden: inspectDefaultOptions.showHidden,\r\n    depth: inspectDefaultOptions.depth,\r\n    colors: inspectDefaultOptions.colors,\r\n    customInspect: inspectDefaultOptions.customInspect,\r\n    showProxy: inspectDefaultOptions.showProxy,\r\n    maxArrayLength: inspectDefaultOptions.maxArrayLength,\r\n    maxStringLength: inspectDefaultOptions.maxStringLength,\r\n    breakLength: inspectDefaultOptions.breakLength,\r\n    compact: inspectDefaultOptions.compact,\r\n    sorted: inspectDefaultOptions.sorted,\r\n    getters: inspectDefaultOptions.getters,\r\n    numericSeparator: inspectDefaultOptions.numericSeparator,\r\n  };\r\n  if (arguments.length > 1) {\r\n    // Legacy...\r\n    if (arguments.length > 2) {\r\n      if (arguments[2] !== undefined) {\r\n        ctx.depth = arguments[2];\r\n      }\r\n      if (arguments.length > 3 && arguments[3] !== undefined) {\r\n        ctx.colors = arguments[3];\r\n      }\r\n    }\r\n    // Set user-specified options\r\n    if (typeof opts === 'boolean') {\r\n      ctx.showHidden = opts;\r\n    } else if (opts) {\r\n      const optKeys = ObjectKeys(opts);\r\n      for (let i = 0; i < optKeys.length; ++i) {\r\n        const key = optKeys[i];\r\n        // TODO(BridgeAR): Find a solution what to do about stylize. Either make\r\n        // this function public or add a new API with a similar or better\r\n        // functionality.\r\n        if (\r\n          ObjectPrototypeHasOwnProperty(inspectDefaultOptions, key) ||\r\n          key === 'stylize') {\r\n          ctx[key] = opts[key];\r\n        } else if (ctx.userOptions === undefined) {\r\n          // This is required to pass through the actual user input.\r\n          ctx.userOptions = opts;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\r\n  if (ctx.maxArrayLength === null) ctx.maxArrayLength = Infinity;\r\n  if (ctx.maxStringLength === null) ctx.maxStringLength = Infinity;\r\n  return formatValue(ctx, value, 0);\r\n}\r\ninspect.custom = customInspectSymbol;\r\n\r\nObjectDefineProperty(inspect, 'defaultOptions', {\r\n  __proto__: null,\r\n  get() {\r\n    return inspectDefaultOptions;\r\n  },\r\n  set(options) {\r\n    validateObject(options, 'options');\r\n    return ObjectAssign(inspectDefaultOptions, options);\r\n  }\r\n});\r\n\r\n// Set Graphics Rendition https://en.wikipedia.org/wiki/ANSI_escape_code#graphics\r\n// Each color consists of an array with the color code as first entry and the\r\n// reset code as second entry.\r\nconst defaultFG = 39;\r\nconst defaultBG = 49;\r\ninspect.colors = {\r\n  __proto__: null,\r\n  reset: [0, 0],\r\n  bold: [1, 22],\r\n  dim: [2, 22], // Alias: faint\r\n  italic: [3, 23],\r\n  underline: [4, 24],\r\n  blink: [5, 25],\r\n  // Swap foreground and background colors\r\n  inverse: [7, 27], // Alias: swapcolors, swapColors\r\n  hidden: [8, 28], // Alias: conceal\r\n  strikethrough: [9, 29], // Alias: strikeThrough, crossedout, crossedOut\r\n  doubleunderline: [21, 24], // Alias: doubleUnderline\r\n  black: [30, defaultFG],\r\n  red: [31, defaultFG],\r\n  green: [32, defaultFG],\r\n  yellow: [33, defaultFG],\r\n  blue: [34, defaultFG],\r\n  magenta: [35, defaultFG],\r\n  cyan: [36, defaultFG],\r\n  white: [37, defaultFG],\r\n  bgBlack: [40, defaultBG],\r\n  bgRed: [41, defaultBG],\r\n  bgGreen: [42, defaultBG],\r\n  bgYellow: [43, defaultBG],\r\n  bgBlue: [44, defaultBG],\r\n  bgMagenta: [45, defaultBG],\r\n  bgCyan: [46, defaultBG],\r\n  bgWhite: [47, defaultBG],\r\n  framed: [51, 54],\r\n  overlined: [53, 55],\r\n  gray: [90, defaultFG], // Alias: grey, blackBright\r\n  redBright: [91, defaultFG],\r\n  greenBright: [92, defaultFG],\r\n  yellowBright: [93, defaultFG],\r\n  blueBright: [94, defaultFG],\r\n  magentaBright: [95, defaultFG],\r\n  cyanBright: [96, defaultFG],\r\n  whiteBright: [97, defaultFG],\r\n  bgGray: [100, defaultBG], // Alias: bgGrey, bgBlackBright\r\n  bgRedBright: [101, defaultBG],\r\n  bgGreenBright: [102, defaultBG],\r\n  bgYellowBright: [103, defaultBG],\r\n  bgBlueBright: [104, defaultBG],\r\n  bgMagentaBright: [105, defaultBG],\r\n  bgCyanBright: [106, defaultBG],\r\n  bgWhiteBright: [107, defaultBG],\r\n};\r\n\r\nfunction defineColorAlias(target, alias) {\r\n  ObjectDefineProperty(inspect.colors, alias, {\r\n    __proto__: null,\r\n    get() {\r\n      return this[target];\r\n    },\r\n    set(value) {\r\n      this[target] = value;\r\n    },\r\n    configurable: true,\r\n    enumerable: false\r\n  });\r\n}\r\n\r\ndefineColorAlias('gray', 'grey');\r\ndefineColorAlias('gray', 'blackBright');\r\ndefineColorAlias('bgGray', 'bgGrey');\r\ndefineColorAlias('bgGray', 'bgBlackBright');\r\ndefineColorAlias('dim', 'faint');\r\ndefineColorAlias('strikethrough', 'crossedout');\r\ndefineColorAlias('strikethrough', 'strikeThrough');\r\ndefineColorAlias('strikethrough', 'crossedOut');\r\ndefineColorAlias('hidden', 'conceal');\r\ndefineColorAlias('inverse', 'swapColors');\r\ndefineColorAlias('inverse', 'swapcolors');\r\ndefineColorAlias('doubleunderline', 'doubleUnderline');\r\n\r\n// TODO(BridgeAR): Add function style support for more complex styles.\r\n// Don't use 'blue' not visible on cmd.exe\r\ninspect.styles = ObjectAssign(ObjectCreate(null), {\r\n  special: 'cyan',\r\n  number: 'yellow',\r\n  bigint: 'yellow',\r\n  boolean: 'yellow',\r\n  undefined: 'grey',\r\n  null: 'bold',\r\n  string: 'green',\r\n  symbol: 'green',\r\n  date: 'magenta',\r\n  // \"name\": intentionally not styling\r\n  // TODO(BridgeAR): Highlight regular expressions properly.\r\n  regexp: 'red',\r\n  module: 'underline'\r\n});\r\n\r\nfunction addQuotes(str, quotes) {\r\n  if (quotes === -1) {\r\n    return `\"${str}\"`;\r\n  }\r\n  if (quotes === -2) {\r\n    return `\\`${str}\\``;\r\n  }\r\n  return `'${str}'`;\r\n}\r\n\r\nfunction escapeFn(str) {\r\n  const charCode = StringPrototypeCharCodeAt(str);\r\n  return meta.length > charCode ? meta[charCode] : `\\\\u${NumberPrototypeToString(charCode, 16)}`;\r\n}\r\n\r\n// Escape control characters, single quotes and the backslash.\r\n// This is similar to JSON stringify escaping.\r\nfunction strEscape(str) {\r\n  let escapeTest = strEscapeSequencesRegExp;\r\n  let escapeReplace = strEscapeSequencesReplacer;\r\n  let singleQuote = 39;\r\n\r\n  // Check for double quotes. If not present, do not escape single quotes and\r\n  // instead wrap the text in double quotes. If double quotes exist, check for\r\n  // backticks. If they do not exist, use those as fallback instead of the\r\n  // double quotes.\r\n  if (StringPrototypeIncludes(str, \"'\")) {\r\n    // This invalidates the charCode and therefore can not be matched for\r\n    // anymore.\r\n    if (!StringPrototypeIncludes(str, '\"')) {\r\n      singleQuote = -1;\r\n    } else if (!StringPrototypeIncludes(str, '`') &&\r\n               !StringPrototypeIncludes(str, '${')) {\r\n      singleQuote = -2;\r\n    }\r\n    if (singleQuote !== 39) {\r\n      escapeTest = strEscapeSequencesRegExpSingle;\r\n      escapeReplace = strEscapeSequencesReplacerSingle;\r\n    }\r\n  }\r\n\r\n  // Some magic numbers that worked out fine while benchmarking with v8 6.0\r\n  if (str.length < 5000 && RegExpPrototypeExec(escapeTest, str) === null)\r\n    return addQuotes(str, singleQuote);\r\n  if (str.length > 100) {\r\n    str = RegExpPrototypeSymbolReplace(escapeReplace, str, escapeFn);\r\n    return addQuotes(str, singleQuote);\r\n  }\r\n\r\n  let result = '';\r\n  let last = 0;\r\n  for (let i = 0; i < str.length; i++) {\r\n    const point = StringPrototypeCharCodeAt(str, i);\r\n    if (point === singleQuote ||\r\n        point === 92 ||\r\n        point < 32 ||\r\n        (point > 126 && point < 160)) {\r\n      if (last === i) {\r\n        result += meta[point];\r\n      } else {\r\n        result += `${StringPrototypeSlice(str, last, i)}${meta[point]}`;\r\n      }\r\n      last = i + 1;\r\n    } else if (point >= 0xd800 && point <= 0xdfff) {\r\n      if (point <= 0xdbff && i + 1 < str.length) {\r\n        const point = StringPrototypeCharCodeAt(str, i + 1);\r\n        if (point >= 0xdc00 && point <= 0xdfff) {\r\n          i++;\r\n          continue;\r\n        }\r\n      }\r\n      result += `${StringPrototypeSlice(str, last, i)}\\\\u${NumberPrototypeToString(point, 16)}`;\r\n      last = i + 1;\r\n    }\r\n  }\r\n\r\n  if (last !== str.length) {\r\n    result += StringPrototypeSlice(str, last);\r\n  }\r\n  return addQuotes(result, singleQuote);\r\n}\r\n\r\nfunction stylizeWithColor(str, styleType) {\r\n  const style = inspect.styles[styleType];\r\n  if (style !== undefined) {\r\n    const color = inspect.colors[style];\r\n    if (color !== undefined)\r\n      return `\\u001b[${color[0]}m${str}\\u001b[${color[1]}m`;\r\n  }\r\n  return str;\r\n}\r\n\r\nfunction stylizeNoColor(str) {\r\n  return str;\r\n}\r\n\r\n// Return a new empty array to push in the results of the default formatter.\r\nfunction getEmptyFormatArray() {\r\n  return [];\r\n}\r\n\r\nfunction isInstanceof(object, proto) {\r\n  try {\r\n    return object instanceof proto;\r\n  } catch {\r\n    return false;\r\n  }\r\n}\r\n\r\nfunction getConstructorName(obj, ctx, recurseTimes, protoProps) {\r\n  let firstProto;\r\n  const tmp = obj;\r\n  while (obj || isUndetectableObject(obj)) {\r\n    const descriptor = ObjectGetOwnPropertyDescriptor(obj, 'constructor');\r\n    if (descriptor !== undefined &&\r\n        typeof descriptor.value === 'function' &&\r\n        descriptor.value.name !== '' &&\r\n        isInstanceof(tmp, descriptor.value)) {\r\n      if (protoProps !== undefined &&\r\n         (firstProto !== obj ||\r\n         !builtInObjects.has(descriptor.value.name))) {\r\n        addPrototypeProperties(\r\n          ctx, tmp, firstProto || tmp, recurseTimes, protoProps);\r\n      }\r\n      return String(descriptor.value.name);\r\n    }\r\n\r\n    obj = ObjectGetPrototypeOf(obj);\r\n    if (firstProto === undefined) {\r\n      firstProto = obj;\r\n    }\r\n  }\r\n\r\n  if (firstProto === null) {\r\n    return null;\r\n  }\r\n\r\n  const res = internalGetConstructorName(tmp);\r\n\r\n  if (recurseTimes > ctx.depth && ctx.depth !== null) {\r\n    return `${res} <Complex prototype>`;\r\n  }\r\n\r\n  const protoConstr = getConstructorName(\r\n    firstProto, ctx, recurseTimes + 1, protoProps);\r\n\r\n  if (protoConstr === null) {\r\n    return `${res} <${inspect(firstProto, {\r\n      ...ctx,\r\n      customInspect: false,\r\n      depth: -1\r\n    })}>`;\r\n  }\r\n\r\n  return `${res} <${protoConstr}>`;\r\n}\r\n\r\n// This function has the side effect of adding prototype properties to the\r\n// `output` argument (which is an array). This is intended to highlight user\r\n// defined prototype properties.\r\nfunction addPrototypeProperties(ctx, main, obj, recurseTimes, output) {\r\n  let depth = 0;\r\n  let keys;\r\n  let keySet;\r\n  do {\r\n    if (depth !== 0 || main === obj) {\r\n      obj = ObjectGetPrototypeOf(obj);\r\n      // Stop as soon as a null prototype is encountered.\r\n      if (obj === null) {\r\n        return;\r\n      }\r\n      // Stop as soon as a built-in object type is detected.\r\n      const descriptor = ObjectGetOwnPropertyDescriptor(obj, 'constructor');\r\n      if (descriptor !== undefined &&\r\n          typeof descriptor.value === 'function' &&\r\n          builtInObjects.has(descriptor.value.name)) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (depth === 0) {\r\n      keySet = new SafeSet();\r\n    } else {\r\n      ArrayPrototypeForEach(keys, (key) => keySet.add(key));\r\n    }\r\n    // Get all own property names and symbols.\r\n    keys = ReflectOwnKeys(obj);\r\n    ArrayPrototypePush(ctx.seen, main);\r\n    for (const key of keys) {\r\n      // Ignore the `constructor` property and keys that exist on layers above.\r\n      if (key === 'constructor' ||\r\n          ObjectPrototypeHasOwnProperty(main, key) ||\r\n          (depth !== 0 && keySet.has(key))) {\r\n        continue;\r\n      }\r\n      const desc = ObjectGetOwnPropertyDescriptor(obj, key);\r\n      if (typeof desc.value === 'function') {\r\n        continue;\r\n      }\r\n      const value = formatProperty(\r\n        ctx, obj, recurseTimes, key, kObjectType, desc, main);\r\n      if (ctx.colors) {\r\n        // Faint!\r\n        ArrayPrototypePush(output, `\\u001b[2m${value}\\u001b[22m`);\r\n      } else {\r\n        ArrayPrototypePush(output, value);\r\n      }\r\n    }\r\n    ArrayPrototypePop(ctx.seen);\r\n  // Limit the inspection to up to three prototype layers. Using `recurseTimes`\r\n  // is not a good choice here, because it's as if the properties are declared\r\n  // on the current object from the users perspective.\r\n  } while (++depth !== 3);\r\n}\r\n\r\nfunction getPrefix(constructor, tag, fallback, size = '') {\r\n  if (constructor === null) {\r\n    if (tag !== '' && fallback !== tag) {\r\n      return `[${fallback}${size}: null prototype] [${tag}] `;\r\n    }\r\n    return `[${fallback}${size}: null prototype] `;\r\n  }\r\n\r\n  if (tag !== '' && constructor !== tag) {\r\n    return `${constructor}${size} [${tag}] `;\r\n  }\r\n  return `${constructor}${size} `;\r\n}\r\n\r\n// Look up the keys of the object.\r\nfunction getKeys(value, showHidden) {\r\n  let keys;\r\n  const symbols = ObjectGetOwnPropertySymbols(value);\r\n  if (showHidden) {\r\n    keys = ObjectGetOwnPropertyNames(value);\r\n    if (symbols.length !== 0)\r\n      ArrayPrototypePushApply(keys, symbols);\r\n  } else {\r\n    // This might throw if `value` is a Module Namespace Object from an\r\n    // unevaluated module, but we don't want to perform the actual type\r\n    // check because it's expensive.\r\n    // TODO(devsnek): track https://github.com/tc39/ecma262/issues/1209\r\n    // and modify this logic as needed.\r\n    try {\r\n      keys = ObjectKeys(value);\r\n    } catch (err) {\r\n      assert(isNativeError(err) && err.name === 'ReferenceError' &&\r\n             isModuleNamespaceObject(value));\r\n      keys = ObjectGetOwnPropertyNames(value);\r\n    }\r\n    if (symbols.length !== 0) {\r\n      const filter = (key) => ObjectPrototypePropertyIsEnumerable(value, key);\r\n      ArrayPrototypePushApply(keys, ArrayPrototypeFilter(symbols, filter));\r\n    }\r\n  }\r\n  return keys;\r\n}\r\n\r\nfunction getCtxStyle(value, constructor, tag) {\r\n  let fallback = '';\r\n  if (constructor === null) {\r\n    fallback = internalGetConstructorName(value);\r\n    if (fallback === tag) {\r\n      fallback = 'Object';\r\n    }\r\n  }\r\n  return getPrefix(constructor, tag, fallback);\r\n}\r\n\r\nfunction formatProxy(ctx, proxy, recurseTimes) {\r\n  if (recurseTimes > ctx.depth && ctx.depth !== null) {\r\n    return ctx.stylize('Proxy [Array]', 'special');\r\n  }\r\n  recurseTimes += 1;\r\n  ctx.indentationLvl += 2;\r\n  const res = [\r\n    formatValue(ctx, proxy[0], recurseTimes),\r\n    formatValue(ctx, proxy[1], recurseTimes),\r\n  ];\r\n  ctx.indentationLvl -= 2;\r\n  return reduceToSingleString(\r\n    ctx, res, '', ['Proxy [', ']'], kArrayExtrasType, recurseTimes);\r\n}\r\n\r\n// Note: using `formatValue` directly requires the indentation level to be\r\n// corrected by setting `ctx.indentationLvL += diff` and then to decrease the\r\n// value afterwards again.\r\nfunction formatValue(ctx, value, recurseTimes, typedArray) {\r\n  // Primitive types cannot have properties.\r\n  if (typeof value !== 'object' &&\r\n      typeof value !== 'function' &&\r\n      !isUndetectableObject(value)) {\r\n    return formatPrimitive(ctx.stylize, value, ctx);\r\n  }\r\n  if (value === null) {\r\n    return ctx.stylize('null', 'null');\r\n  }\r\n\r\n  // Memorize the context for custom inspection on proxies.\r\n  const context = value;\r\n  // Always check for proxies to prevent side effects and to prevent triggering\r\n  // any proxy handlers.\r\n  const proxy = getProxyDetails(value, !!ctx.showProxy);\r\n  if (proxy !== undefined) {\r\n    if (proxy === null || proxy[0] === null) {\r\n      return ctx.stylize('<Revoked Proxy>', 'special');\r\n    }\r\n    if (ctx.showProxy) {\r\n      return formatProxy(ctx, proxy, recurseTimes);\r\n    }\r\n    value = proxy;\r\n  }\r\n\r\n  // Provide a hook for user-specified inspect functions.\r\n  // Check that value is an object with an inspect function on it.\r\n  if (ctx.customInspect) {\r\n    const maybeCustom = value[customInspectSymbol];\r\n    if (typeof maybeCustom === 'function' &&\r\n        // Filter out the util module, its inspect function is special.\r\n        maybeCustom !== inspect &&\r\n        // Also filter out any prototype objects using the circular check.\r\n        !(value.constructor && value.constructor.prototype === value)) {\r\n      // This makes sure the recurseTimes are reported as before while using\r\n      // a counter internally.\r\n      const depth = ctx.depth === null ? null : ctx.depth - recurseTimes;\r\n      const isCrossContext =\r\n        proxy !== undefined || !(context instanceof Object);\r\n      const ret = FunctionPrototypeCall(\r\n        maybeCustom,\r\n        context,\r\n        depth,\r\n        getUserOptions(ctx, isCrossContext),\r\n        inspect\r\n      );\r\n      // If the custom inspection method returned `this`, don't go into\r\n      // infinite recursion.\r\n      if (ret !== context) {\r\n        if (typeof ret !== 'string') {\r\n          return formatValue(ctx, ret, recurseTimes);\r\n        }\r\n        return StringPrototypeReplaceAll(ret, '\\n', `\\n${StringPrototypeRepeat(' ', ctx.indentationLvl)}`);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Using an array here is actually better for the average case than using\r\n  // a Set. `seen` will only check for the depth and will never grow too large.\r\n  if (ctx.seen.includes(value)) {\r\n    let index = 1;\r\n    if (ctx.circular === undefined) {\r\n      ctx.circular = new SafeMap();\r\n      ctx.circular.set(value, index);\r\n    } else {\r\n      index = ctx.circular.get(value);\r\n      if (index === undefined) {\r\n        index = ctx.circular.size + 1;\r\n        ctx.circular.set(value, index);\r\n      }\r\n    }\r\n    return ctx.stylize(`[Circular *${index}]`, 'special');\r\n  }\r\n\r\n  return formatRaw(ctx, value, recurseTimes, typedArray);\r\n}\r\n\r\nfunction formatRaw(ctx, value, recurseTimes, typedArray) {\r\n  let keys;\r\n  let protoProps;\r\n  if (ctx.showHidden && (recurseTimes <= ctx.depth || ctx.depth === null)) {\r\n    protoProps = [];\r\n  }\r\n\r\n  const constructor = getConstructorName(value, ctx, recurseTimes, protoProps);\r\n  // Reset the variable to check for this later on.\r\n  if (protoProps !== undefined && protoProps.length === 0) {\r\n    protoProps = undefined;\r\n  }\r\n\r\n  let tag = value[SymbolToStringTag];\r\n  // Only list the tag in case it's non-enumerable / not an own property.\r\n  // Otherwise we'd print this twice.\r\n  if (typeof tag !== 'string' ||\r\n      (tag !== '' &&\r\n      (ctx.showHidden ?\r\n        ObjectPrototypeHasOwnProperty :\r\n        ObjectPrototypePropertyIsEnumerable)(\r\n        value, SymbolToStringTag\r\n      ))) {\r\n    tag = '';\r\n  }\r\n  let base = '';\r\n  let formatter = getEmptyFormatArray;\r\n  let braces;\r\n  let noIterator = true;\r\n  let i = 0;\r\n  const filter = ctx.showHidden ? ALL_PROPERTIES : ONLY_ENUMERABLE;\r\n\r\n  let extrasType = kObjectType;\r\n\r\n  // Iterators and the rest are split to reduce checks.\r\n  // We have to check all values in case the constructor is set to null.\r\n  // Otherwise it would not possible to identify all types properly.\r\n  if (SymbolIterator in value || constructor === null) {\r\n    noIterator = false;\r\n    if (ArrayIsArray(value)) {\r\n      // Only set the constructor for non ordinary (\"Array [...]\") arrays.\r\n      const prefix = (constructor !== 'Array' || tag !== '') ?\r\n        getPrefix(constructor, tag, 'Array', `(${value.length})`) :\r\n        '';\r\n      keys = getOwnNonIndexProperties(value, filter);\r\n      braces = [`${prefix}[`, ']'];\r\n      if (value.length === 0 && keys.length === 0 && protoProps === undefined)\r\n        return `${braces[0]}]`;\r\n      extrasType = kArrayExtrasType;\r\n      formatter = formatArray;\r\n    } else if (isSet(value)) {\r\n      const size = SetPrototypeGetSize(value);\r\n      const prefix = getPrefix(constructor, tag, 'Set', `(${size})`);\r\n      keys = getKeys(value, ctx.showHidden);\r\n      formatter = constructor !== null ?\r\n        FunctionPrototypeBind(formatSet, null, value) :\r\n        FunctionPrototypeBind(formatSet, null, SetPrototypeValues(value));\r\n      if (size === 0 && keys.length === 0 && protoProps === undefined)\r\n        return `${prefix}{}`;\r\n      braces = [`${prefix}{`, '}'];\r\n    } else if (isMap(value)) {\r\n      const size = MapPrototypeGetSize(value);\r\n      const prefix = getPrefix(constructor, tag, 'Map', `(${size})`);\r\n      keys = getKeys(value, ctx.showHidden);\r\n      formatter = constructor !== null ?\r\n        FunctionPrototypeBind(formatMap, null, value) :\r\n        FunctionPrototypeBind(formatMap, null, MapPrototypeEntries(value));\r\n      if (size === 0 && keys.length === 0 && protoProps === undefined)\r\n        return `${prefix}{}`;\r\n      braces = [`${prefix}{`, '}'];\r\n    } else if (isTypedArray(value)) {\r\n      keys = getOwnNonIndexProperties(value, filter);\r\n      let bound = value;\r\n      let fallback = '';\r\n      if (constructor === null) {\r\n        fallback = TypedArrayPrototypeGetSymbolToStringTag(value);\r\n        // Reconstruct the array information.\r\n        bound = new primordials[fallback](value);\r\n      }\r\n      const size = TypedArrayPrototypeGetLength(value);\r\n      const prefix = getPrefix(constructor, tag, fallback, `(${size})`);\r\n      braces = [`${prefix}[`, ']'];\r\n      if (value.length === 0 && keys.length === 0 && !ctx.showHidden)\r\n        return `${braces[0]}]`;\r\n      // Special handle the value. The original value is required below. The\r\n      // bound function is required to reconstruct missing information.\r\n      formatter = FunctionPrototypeBind(formatTypedArray, null, bound, size);\r\n      extrasType = kArrayExtrasType;\r\n    } else if (isMapIterator(value)) {\r\n      keys = getKeys(value, ctx.showHidden);\r\n      braces = getIteratorBraces('Map', tag);\r\n      // Add braces to the formatter parameters.\r\n      formatter = FunctionPrototypeBind(formatIterator, null, braces);\r\n    } else if (isSetIterator(value)) {\r\n      keys = getKeys(value, ctx.showHidden);\r\n      braces = getIteratorBraces('Set', tag);\r\n      // Add braces to the formatter parameters.\r\n      formatter = FunctionPrototypeBind(formatIterator, null, braces);\r\n    } else {\r\n      noIterator = true;\r\n    }\r\n  }\r\n  if (noIterator) {\r\n    keys = getKeys(value, ctx.showHidden);\r\n    braces = ['{', '}'];\r\n    if (constructor === 'Object') {\r\n      if (isArgumentsObject(value)) {\r\n        braces[0] = '[Arguments] {';\r\n      } else if (tag !== '') {\r\n        braces[0] = `${getPrefix(constructor, tag, 'Object')}{`;\r\n      }\r\n      if (keys.length === 0 && protoProps === undefined) {\r\n        return `${braces[0]}}`;\r\n      }\r\n    } else if (typeof value === 'function') {\r\n      base = getFunctionBase(value, constructor, tag);\r\n      if (keys.length === 0 && protoProps === undefined)\r\n        return ctx.stylize(base, 'special');\r\n    } else if (isRegExp(value)) {\r\n      // Make RegExps say that they are RegExps\r\n      base = RegExpPrototypeToString(\r\n        constructor !== null ? value : new RegExp(value)\r\n      );\r\n      const prefix = getPrefix(constructor, tag, 'RegExp');\r\n      if (prefix !== 'RegExp ')\r\n        base = `${prefix}${base}`;\r\n      if ((keys.length === 0 && protoProps === undefined) ||\r\n          (recurseTimes > ctx.depth && ctx.depth !== null)) {\r\n        return ctx.stylize(base, 'regexp');\r\n      }\r\n    } else if (isDate(value)) {\r\n      // Make dates with properties first say the date\r\n      base = NumberIsNaN(DatePrototypeGetTime(value)) ?\r\n        DatePrototypeToString(value) :\r\n        DatePrototypeToISOString(value);\r\n      const prefix = getPrefix(constructor, tag, 'Date');\r\n      if (prefix !== 'Date ')\r\n        base = `${prefix}${base}`;\r\n      if (keys.length === 0 && protoProps === undefined) {\r\n        return ctx.stylize(base, 'date');\r\n      }\r\n    } else if (isError(value)) {\r\n      base = formatError(value, constructor, tag, ctx, keys);\r\n      if (keys.length === 0 && protoProps === undefined)\r\n        return base;\r\n    } else if (isAnyArrayBuffer(value)) {\r\n      // Fast path for ArrayBuffer and SharedArrayBuffer.\r\n      // Can't do the same for DataView because it has a non-primitive\r\n      // .buffer property that we need to recurse for.\r\n      const arrayType = isArrayBuffer(value) ? 'ArrayBuffer' :\r\n        'SharedArrayBuffer';\r\n      const prefix = getPrefix(constructor, tag, arrayType);\r\n      if (typedArray === undefined) {\r\n        formatter = formatArrayBuffer;\r\n      } else if (keys.length === 0 && protoProps === undefined) {\r\n        return prefix +\r\n              `{ byteLength: ${formatNumber(ctx.stylize, value.byteLength, false)} }`;\r\n      }\r\n      braces[0] = `${prefix}{`;\r\n      ArrayPrototypeUnshift(keys, 'byteLength');\r\n    } else if (isDataView(value)) {\r\n      braces[0] = `${getPrefix(constructor, tag, 'DataView')}{`;\r\n      // .buffer goes last, it's not a primitive like the others.\r\n      ArrayPrototypeUnshift(keys, 'byteLength', 'byteOffset', 'buffer');\r\n    } else if (isPromise(value)) {\r\n      braces[0] = `${getPrefix(constructor, tag, 'Promise')}{`;\r\n      formatter = formatPromise;\r\n    } else if (isWeakSet(value)) {\r\n      braces[0] = `${getPrefix(constructor, tag, 'WeakSet')}{`;\r\n      formatter = ctx.showHidden ? formatWeakSet : formatWeakCollection;\r\n    } else if (isWeakMap(value)) {\r\n      braces[0] = `${getPrefix(constructor, tag, 'WeakMap')}{`;\r\n      formatter = ctx.showHidden ? formatWeakMap : formatWeakCollection;\r\n    } else if (isModuleNamespaceObject(value)) {\r\n      braces[0] = `${getPrefix(constructor, tag, 'Module')}{`;\r\n      // Special handle keys for namespace objects.\r\n      formatter = FunctionPrototypeBind(formatNamespaceObject, null, keys);\r\n    } else if (isBoxedPrimitive(value)) {\r\n      base = getBoxedBase(value, ctx, keys, constructor, tag);\r\n      if (keys.length === 0 && protoProps === undefined) {\r\n        return base;\r\n      }\r\n    } else {\r\n      if (keys.length === 0 && protoProps === undefined) {\r\n        if (isExternal(value)) {\r\n          const address = getExternalValue(value).toString(16);\r\n          return ctx.stylize(`[External: ${address}]`, 'special');\r\n        }\r\n        return `${getCtxStyle(value, constructor, tag)}{}`;\r\n      }\r\n      braces[0] = `${getCtxStyle(value, constructor, tag)}{`;\r\n    }\r\n  }\r\n\r\n  if (recurseTimes > ctx.depth && ctx.depth !== null) {\r\n    let constructorName = StringPrototypeSlice(getCtxStyle(value, constructor, tag), 0, -1);\r\n    if (constructor !== null)\r\n      constructorName = `[${constructorName}]`;\r\n    return ctx.stylize(constructorName, 'special');\r\n  }\r\n  recurseTimes += 1;\r\n\r\n  ArrayPrototypePush(ctx.seen, value);\r\n  ctx.currentDepth = recurseTimes;\r\n  let output;\r\n  const indentationLvl = ctx.indentationLvl;\r\n  try {\r\n    output = formatter(ctx, value, recurseTimes);\r\n    for (i = 0; i < keys.length; i++) {\r\n      ArrayPrototypePush(\r\n        output,\r\n        formatProperty(ctx, value, recurseTimes, keys[i], extrasType),\r\n      );\r\n    }\r\n    if (protoProps !== undefined) {\r\n      ArrayPrototypePushApply(output, protoProps);\r\n    }\r\n  } catch (err) {\r\n    const constructorName = StringPrototypeSlice(getCtxStyle(value, constructor, tag), 0, -1);\r\n    return handleMaxCallStackSize(ctx, err, constructorName, indentationLvl);\r\n  }\r\n  if (ctx.circular !== undefined) {\r\n    const index = ctx.circular.get(value);\r\n    if (index !== undefined) {\r\n      const reference = ctx.stylize(`<ref *${index}>`, 'special');\r\n      // Add reference always to the very beginning of the output.\r\n      if (ctx.compact !== true) {\r\n        base = base === '' ? reference : `${reference} ${base}`;\r\n      } else {\r\n        braces[0] = `${reference} ${braces[0]}`;\r\n      }\r\n    }\r\n  }\r\n  ArrayPrototypePop(ctx.seen);\r\n\r\n  if (ctx.sorted) {\r\n    const comparator = ctx.sorted === true ? undefined : ctx.sorted;\r\n    if (extrasType === kObjectType) {\r\n      ArrayPrototypeSort(output, comparator);\r\n    } else if (keys.length > 1) {\r\n      const sorted = ArrayPrototypeSort(ArrayPrototypeSlice(output, output.length - keys.length), comparator);\r\n      ArrayPrototypeUnshift(sorted, output, output.length - keys.length, keys.length);\r\n      ReflectApply(ArrayPrototypeSplice, null, sorted);\r\n    }\r\n  }\r\n\r\n  const res = reduceToSingleString(\r\n    ctx, output, base, braces, extrasType, recurseTimes, value);\r\n  const budget = ctx.budget[ctx.indentationLvl] || 0;\r\n  const newLength = budget + res.length;\r\n  ctx.budget[ctx.indentationLvl] = newLength;\r\n  // If any indentationLvl exceeds this limit, limit further inspecting to the\r\n  // minimum. Otherwise the recursive algorithm might continue inspecting the\r\n  // object even though the maximum string size (~2 ** 28 on 32 bit systems and\r\n  // ~2 ** 30 on 64 bit systems) exceeded. The actual output is not limited at\r\n  // exactly 2 ** 27 but a bit higher. This depends on the object shape.\r\n  // This limit also makes sure that huge objects don't block the event loop\r\n  // significantly.\r\n  if (newLength > 2 ** 27) {\r\n    ctx.depth = -1;\r\n  }\r\n  return res;\r\n}\r\n\r\nfunction getIteratorBraces(type, tag) {\r\n  if (tag !== `${type} Iterator`) {\r\n    if (tag !== '')\r\n      tag += '] [';\r\n    tag += `${type} Iterator`;\r\n  }\r\n  return [`[${tag}] {`, '}'];\r\n}\r\n\r\nfunction getBoxedBase(value, ctx, keys, constructor, tag) {\r\n  let fn;\r\n  let type;\r\n  if (isNumberObject(value)) {\r\n    fn = NumberPrototypeValueOf;\r\n    type = 'Number';\r\n  } else if (isStringObject(value)) {\r\n    fn = StringPrototypeValueOf;\r\n    type = 'String';\r\n    // For boxed Strings, we have to remove the 0-n indexed entries,\r\n    // since they just noisy up the output and are redundant\r\n    // Make boxed primitive Strings look like such\r\n    keys.splice(0, value.length);\r\n  } else if (isBooleanObject(value)) {\r\n    fn = BooleanPrototypeValueOf;\r\n    type = 'Boolean';\r\n  } else if (isBigIntObject(value)) {\r\n    fn = BigIntPrototypeValueOf;\r\n    type = 'BigInt';\r\n  } else {\r\n    fn = SymbolPrototypeValueOf;\r\n    type = 'Symbol';\r\n  }\r\n  let base = `[${type}`;\r\n  if (type !== constructor) {\r\n    if (constructor === null) {\r\n      base += ' (null prototype)';\r\n    } else {\r\n      base += ` (${constructor})`;\r\n    }\r\n  }\r\n  base += `: ${formatPrimitive(stylizeNoColor, fn(value), ctx)}]`;\r\n  if (tag !== '' && tag !== constructor) {\r\n    base += ` [${tag}]`;\r\n  }\r\n  if (keys.length !== 0 || ctx.stylize === stylizeNoColor)\r\n    return base;\r\n  return ctx.stylize(base, StringPrototypeToLowerCase(type));\r\n}\r\n\r\nfunction getClassBase(value, constructor, tag) {\r\n  const hasName = ObjectPrototypeHasOwnProperty(value, 'name');\r\n  const name = (hasName && value.name) || '(anonymous)';\r\n  let base = `class ${name}`;\r\n  if (constructor !== 'Function' && constructor !== null) {\r\n    base += ` [${constructor}]`;\r\n  }\r\n  if (tag !== '' && constructor !== tag) {\r\n    base += ` [${tag}]`;\r\n  }\r\n  if (constructor !== null) {\r\n    const superName = ObjectGetPrototypeOf(value).name;\r\n    if (superName) {\r\n      base += ` extends ${superName}`;\r\n    }\r\n  } else {\r\n    base += ' extends [null prototype]';\r\n  }\r\n  return `[${base}]`;\r\n}\r\n\r\nfunction getFunctionBase(value, constructor, tag) {\r\n  const stringified = FunctionPrototypeToString(value);\r\n  if (StringPrototypeStartsWith(stringified, 'class') && StringPrototypeEndsWith(stringified, '}')) {\r\n    const slice = StringPrototypeSlice(stringified, 5, -1);\r\n    const bracketIndex = StringPrototypeIndexOf(slice, '{');\r\n    if (bracketIndex !== -1 &&\r\n        (!StringPrototypeIncludes(StringPrototypeSlice(slice, 0, bracketIndex), '(') ||\r\n        // Slow path to guarantee that it's indeed a class.\r\n        RegExpPrototypeExec(classRegExp, RegExpPrototypeSymbolReplace(stripCommentsRegExp, slice)) !== null)\r\n    ) {\r\n      return getClassBase(value, constructor, tag);\r\n    }\r\n  }\r\n  let type = 'Function';\r\n  if (isGeneratorFunction(value)) {\r\n    type = `Generator${type}`;\r\n  }\r\n  if (isAsyncFunction(value)) {\r\n    type = `Async${type}`;\r\n  }\r\n  let base = `[${type}`;\r\n  if (constructor === null) {\r\n    base += ' (null prototype)';\r\n  }\r\n  if (value.name === '') {\r\n    base += ' (anonymous)';\r\n  } else {\r\n    base += `: ${value.name}`;\r\n  }\r\n  base += ']';\r\n  if (constructor !== type && constructor !== null) {\r\n    base += ` ${constructor}`;\r\n  }\r\n  if (tag !== '' && constructor !== tag) {\r\n    base += ` [${tag}]`;\r\n  }\r\n  return base;\r\n}\r\n\r\nfunction identicalSequenceRange(a, b) {\r\n  for (let i = 0; i < a.length - 3; i++) {\r\n    // Find the first entry of b that matches the current entry of a.\r\n    const pos = b.indexOf(a[i]);\r\n    if (pos !== -1) {\r\n      const rest = b.length - pos;\r\n      if (rest > 3) {\r\n        let len = 1;\r\n        const maxLen = MathMin(a.length - i, rest);\r\n        // Count the number of consecutive entries.\r\n        while (maxLen > len && a[i + len] === b[pos + len]) {\r\n          len++;\r\n        }\r\n        if (len > 3) {\r\n          return { len, offset: i };\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return { len: 0, offset: 0 };\r\n}\r\n\r\nfunction getStackString(error) {\r\n  return error.stack ? String(error.stack) : ErrorPrototypeToString(error);\r\n}\r\n\r\nfunction getStackFrames(ctx, err, stack) {\r\n  const frames = StringPrototypeSplit(stack, '\\n');\r\n\r\n  // Remove stack frames identical to frames in cause.\r\n  if (err.cause && isError(err.cause)) {\r\n    const causeStack = getStackString(err.cause);\r\n    const causeStackStart = StringPrototypeIndexOf(causeStack, '\\n    at');\r\n    if (causeStackStart !== -1) {\r\n      const causeFrames = StringPrototypeSplit(StringPrototypeSlice(causeStack, causeStackStart + 1), '\\n');\r\n      const { len, offset } = identicalSequenceRange(frames, causeFrames);\r\n      if (len > 0) {\r\n        const skipped = len - 2;\r\n        const msg = `    ... ${skipped} lines matching cause stack trace ...`;\r\n        frames.splice(offset + 1, skipped, ctx.stylize(msg, 'undefined'));\r\n      }\r\n    }\r\n  }\r\n  return frames;\r\n}\r\n\r\nfunction improveStack(stack, constructor, name, tag) {\r\n  // A stack trace may contain arbitrary data. Only manipulate the output\r\n  // for \"regular errors\" (errors that \"look normal\") for now.\r\n  let len = name.length;\r\n\r\n  if (constructor === null ||\r\n      (StringPrototypeEndsWith(name, 'Error') &&\r\n      StringPrototypeStartsWith(stack, name) &&\r\n      (stack.length === len || stack[len] === ':' || stack[len] === '\\n'))) {\r\n    let fallback = 'Error';\r\n    if (constructor === null) {\r\n      const start = RegExpPrototypeExec(/^([A-Z][a-z_ A-Z0-9[\\]()-]+)(?::|\\n {4}at)/, stack) ||\r\n      RegExpPrototypeExec(/^([a-z_A-Z0-9-]*Error)$/, stack);\r\n      fallback = (start && start[1]) || '';\r\n      len = fallback.length;\r\n      fallback = fallback || 'Error';\r\n    }\r\n    const prefix = StringPrototypeSlice(getPrefix(constructor, tag, fallback), 0, -1);\r\n    if (name !== prefix) {\r\n      if (StringPrototypeIncludes(prefix, name)) {\r\n        if (len === 0) {\r\n          stack = `${prefix}: ${stack}`;\r\n        } else {\r\n          stack = `${prefix}${StringPrototypeSlice(stack, len)}`;\r\n        }\r\n      } else {\r\n        stack = `${prefix} [${name}]${StringPrototypeSlice(stack, len)}`;\r\n      }\r\n    }\r\n  }\r\n  return stack;\r\n}\r\n\r\nfunction removeDuplicateErrorKeys(ctx, keys, err, stack) {\r\n  if (!ctx.showHidden && keys.length !== 0) {\r\n    for (const name of ['name', 'message', 'stack']) {\r\n      const index = ArrayPrototypeIndexOf(keys, name);\r\n      // Only hide the property in case it's part of the original stack\r\n      if (index !== -1 && StringPrototypeIncludes(stack, err[name])) {\r\n        ArrayPrototypeSplice(keys, index, 1);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction markNodeModules(ctx, line) {\r\n  let tempLine = '';\r\n  let nodeModule;\r\n  let pos = 0;\r\n  while ((nodeModule = nodeModulesRegExp.exec(line)) !== null) {\r\n    // '/node_modules/'.length === 14\r\n    tempLine += StringPrototypeSlice(line, pos, nodeModule.index + 14);\r\n    tempLine += ctx.stylize(nodeModule[1], 'module');\r\n    pos = nodeModule.index + nodeModule[0].length;\r\n  }\r\n  if (pos !== 0) {\r\n    line = tempLine + StringPrototypeSlice(line, pos);\r\n  }\r\n  return line;\r\n}\r\n\r\nfunction markCwd(ctx, line, workingDirectory) {\r\n  let cwdStartPos = StringPrototypeIndexOf(line, workingDirectory);\r\n  let tempLine = '';\r\n  let cwdLength = workingDirectory.length;\r\n  if (cwdStartPos !== -1) {\r\n    if (StringPrototypeSlice(line, cwdStartPos - 7, cwdStartPos) === 'file://') {\r\n      cwdLength += 7;\r\n      cwdStartPos -= 7;\r\n    }\r\n    const start = line[cwdStartPos - 1] === '(' ? cwdStartPos - 1 : cwdStartPos;\r\n    const end = start !== cwdStartPos && StringPrototypeEndsWith(line, ')') ? -1 : line.length;\r\n    const workingDirectoryEndPos = cwdStartPos + cwdLength + 1;\r\n    const cwdSlice = StringPrototypeSlice(line, start, workingDirectoryEndPos);\r\n\r\n    tempLine += StringPrototypeSlice(line, 0, start);\r\n    tempLine += ctx.stylize(cwdSlice, 'undefined');\r\n    tempLine += StringPrototypeSlice(line, workingDirectoryEndPos, end);\r\n    if (end === -1) {\r\n      tempLine += ctx.stylize(')', 'undefined');\r\n    }\r\n  } else {\r\n    tempLine += line;\r\n  }\r\n  return tempLine;\r\n}\r\n\r\nfunction safeGetCWD() {\r\n  let workingDirectory;\r\n  try {\r\n    workingDirectory = process.cwd();\r\n  } catch {\r\n    return;\r\n  }\r\n  return workingDirectory;\r\n}\r\n\r\nfunction formatError(err, constructor, tag, ctx, keys) {\r\n  const name = err.name != null ? String(err.name) : 'Error';\r\n  let stack = getStackString(err);\r\n\r\n  removeDuplicateErrorKeys(ctx, keys, err, stack);\r\n\r\n  if ('cause' in err &&\r\n      (keys.length === 0 || !ArrayPrototypeIncludes(keys, 'cause'))) {\r\n    ArrayPrototypePush(keys, 'cause');\r\n  }\r\n\r\n  // Print errors aggregated into AggregateError\r\n  if (ArrayIsArray(err.errors) &&\r\n      (keys.length === 0 || !ArrayPrototypeIncludes(keys, 'errors'))) {\r\n    ArrayPrototypePush(keys, 'errors');\r\n  }\r\n\r\n  stack = improveStack(stack, constructor, name, tag);\r\n\r\n  // Ignore the error message if it's contained in the stack.\r\n  let pos = (err.message && StringPrototypeIndexOf(stack, err.message)) || -1;\r\n  if (pos !== -1)\r\n    pos += err.message.length;\r\n  // Wrap the error in brackets in case it has no stack trace.\r\n  const stackStart = StringPrototypeIndexOf(stack, '\\n    at', pos);\r\n  if (stackStart === -1) {\r\n    stack = `[${stack}]`;\r\n  } else {\r\n    let newStack = StringPrototypeSlice(stack, 0, stackStart);\r\n    const stackFramePart = StringPrototypeSlice(stack, stackStart + 1);\r\n    const lines = getStackFrames(ctx, err, stackFramePart);\r\n    if (ctx.colors) {\r\n      // Highlight userland code and node modules.\r\n      const workingDirectory = safeGetCWD();\r\n      let esmWorkingDirectory;\r\n      for (let line of lines) {\r\n        const core = RegExpPrototypeExec(coreModuleRegExp, line);\r\n        if (core !== null && BuiltinModule.exists(core[1])) {\r\n          newStack += `\\n${ctx.stylize(line, 'undefined')}`;\r\n        } else {\r\n          newStack += '\\n';\r\n\r\n          line = markNodeModules(ctx, line);\r\n          if (workingDirectory !== undefined) {\r\n            let newLine = markCwd(ctx, line, workingDirectory);\r\n            if (newLine === line) {\r\n              esmWorkingDirectory ??= pathToFileUrlHref(workingDirectory);\r\n              newLine = markCwd(ctx, line, esmWorkingDirectory);\r\n            }\r\n            line = newLine;\r\n          }\r\n\r\n          newStack += line;\r\n        }\r\n      }\r\n    } else {\r\n      newStack += `\\n${ArrayPrototypeJoin(lines, '\\n')}`;\r\n    }\r\n    stack = newStack;\r\n  }\r\n  // The message and the stack have to be indented as well!\r\n  if (ctx.indentationLvl !== 0) {\r\n    const indentation = StringPrototypeRepeat(' ', ctx.indentationLvl);\r\n    stack = StringPrototypeReplaceAll(stack, '\\n', `\\n${indentation}`);\r\n  }\r\n  return stack;\r\n}\r\n\r\nfunction groupArrayElements(ctx, output, value) {\r\n  let totalLength = 0;\r\n  let maxLength = 0;\r\n  let i = 0;\r\n  let outputLength = output.length;\r\n  if (ctx.maxArrayLength < output.length) {\r\n    // This makes sure the \"... n more items\" part is not taken into account.\r\n    outputLength--;\r\n  }\r\n  const separatorSpace = 2; // Add 1 for the space and 1 for the separator.\r\n  const dataLen = new Array(outputLength);\r\n  // Calculate the total length of all output entries and the individual max\r\n  // entries length of all output entries. We have to remove colors first,\r\n  // otherwise the length would not be calculated properly.\r\n  for (; i < outputLength; i++) {\r\n    const len = getStringWidth(output[i], ctx.colors);\r\n    dataLen[i] = len;\r\n    totalLength += len + separatorSpace;\r\n    if (maxLength < len)\r\n      maxLength = len;\r\n  }\r\n  // Add two to `maxLength` as we add a single whitespace character plus a comma\r\n  // in-between two entries.\r\n  const actualMax = maxLength + separatorSpace;\r\n  // Check if at least three entries fit next to each other and prevent grouping\r\n  // of arrays that contains entries of very different length (i.e., if a single\r\n  // entry is longer than 1/5 of all other entries combined). Otherwise the\r\n  // space in-between small entries would be enormous.\r\n  if (actualMax * 3 + ctx.indentationLvl < ctx.breakLength &&\r\n      (totalLength / actualMax > 5 || maxLength <= 6)) {\r\n\r\n    const approxCharHeights = 2.5;\r\n    const averageBias = MathSqrt(actualMax - totalLength / output.length);\r\n    const biasedMax = MathMax(actualMax - 3 - averageBias, 1);\r\n    // Dynamically check how many columns seem possible.\r\n    const columns = MathMin(\r\n      // Ideally a square should be drawn. We expect a character to be about 2.5\r\n      // times as high as wide. This is the area formula to calculate a square\r\n      // which contains n rectangles of size `actualMax * approxCharHeights`.\r\n      // Divide that by `actualMax` to receive the correct number of columns.\r\n      // The added bias increases the columns for short entries.\r\n      MathRound(\r\n        MathSqrt(\r\n          approxCharHeights * biasedMax * outputLength\r\n        ) / biasedMax\r\n      ),\r\n      // Do not exceed the breakLength.\r\n      MathFloor((ctx.breakLength - ctx.indentationLvl) / actualMax),\r\n      // Limit array grouping for small `compact` modes as the user requested\r\n      // minimal grouping.\r\n      ctx.compact * 4,\r\n      // Limit the columns to a maximum of fifteen.\r\n      15\r\n    );\r\n    // Return with the original output if no grouping should happen.\r\n    if (columns <= 1) {\r\n      return output;\r\n    }\r\n    const tmp = [];\r\n    const maxLineLength = [];\r\n    for (let i = 0; i < columns; i++) {\r\n      let lineMaxLength = 0;\r\n      for (let j = i; j < output.length; j += columns) {\r\n        if (dataLen[j] > lineMaxLength)\r\n          lineMaxLength = dataLen[j];\r\n      }\r\n      lineMaxLength += separatorSpace;\r\n      maxLineLength[i] = lineMaxLength;\r\n    }\r\n    let order = StringPrototypePadStart;\r\n    if (value !== undefined) {\r\n      for (let i = 0; i < output.length; i++) {\r\n        if (typeof value[i] !== 'number' && typeof value[i] !== 'bigint') {\r\n          order = StringPrototypePadEnd;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    // Each iteration creates a single line of grouped entries.\r\n    for (let i = 0; i < outputLength; i += columns) {\r\n      // The last lines may contain less entries than columns.\r\n      const max = MathMin(i + columns, outputLength);\r\n      let str = '';\r\n      let j = i;\r\n      for (; j < max - 1; j++) {\r\n        // Calculate extra color padding in case it's active. This has to be\r\n        // done line by line as some lines might contain more colors than\r\n        // others.\r\n        const padding = maxLineLength[j - i] + output[j].length - dataLen[j];\r\n        str += order(`${output[j]}, `, padding, ' ');\r\n      }\r\n      if (order === StringPrototypePadStart) {\r\n        const padding = maxLineLength[j - i] +\r\n                        output[j].length -\r\n                        dataLen[j] -\r\n                        separatorSpace;\r\n        str += StringPrototypePadStart(output[j], padding, ' ');\r\n      } else {\r\n        str += output[j];\r\n      }\r\n      ArrayPrototypePush(tmp, str);\r\n    }\r\n    if (ctx.maxArrayLength < output.length) {\r\n      ArrayPrototypePush(tmp, output[outputLength]);\r\n    }\r\n    output = tmp;\r\n  }\r\n  return output;\r\n}\r\n\r\nfunction handleMaxCallStackSize(ctx, err, constructorName, indentationLvl) {\r\n  if (isStackOverflowError(err)) {\r\n    ArrayPrototypePop(ctx.seen);\r\n    ctx.indentationLvl = indentationLvl;\r\n    return ctx.stylize(\r\n      `[${constructorName}: Inspection interrupted ` +\r\n        'prematurely. Maximum call stack size exceeded.]',\r\n      'special'\r\n    );\r\n  }\r\n  /* c8 ignore next */\r\n  assert.fail(err.stack);\r\n}\r\n\r\nfunction addNumericSeparator(integerString) {\r\n  let result = '';\r\n  let i = integerString.length;\r\n  const start = StringPrototypeStartsWith(integerString, '-') ? 1 : 0;\r\n  for (; i >= start + 4; i -= 3) {\r\n    result = `_${StringPrototypeSlice(integerString, i - 3, i)}${result}`;\r\n  }\r\n  return i === integerString.length ?\r\n    integerString :\r\n    `${StringPrototypeSlice(integerString, 0, i)}${result}`;\r\n}\r\n\r\nfunction addNumericSeparatorEnd(integerString) {\r\n  let result = '';\r\n  let i = 0;\r\n  for (; i < integerString.length - 3; i += 3) {\r\n    result += `${StringPrototypeSlice(integerString, i, i + 3)}_`;\r\n  }\r\n  return i === 0 ?\r\n    integerString :\r\n    `${result}${StringPrototypeSlice(integerString, i)}`;\r\n}\r\n\r\nfunction formatNumber(fn, number, numericSeparator) {\r\n  if (!numericSeparator) {\r\n    // Format -0 as '-0'. Checking `number === -0` won't distinguish 0 from -0.\r\n    if (ObjectIs(number, -0)) {\r\n      return fn('-0', 'number');\r\n    }\r\n    return fn(`${number}`, 'number');\r\n  }\r\n  const integer = MathTrunc(number);\r\n  const string = String(integer);\r\n  if (integer === number) {\r\n    if (!NumberIsFinite(number) || StringPrototypeIncludes(string, 'e')) {\r\n      return fn(string, 'number');\r\n    }\r\n    return fn(`${addNumericSeparator(string)}`, 'number');\r\n  }\r\n  if (NumberIsNaN(number)) {\r\n    return fn(string, 'number');\r\n  }\r\n  return fn(`${\r\n    addNumericSeparator(string)\r\n  }.${\r\n    addNumericSeparatorEnd(\r\n      StringPrototypeSlice(String(number), string.length + 1)\r\n    )\r\n  }`, 'number');\r\n}\r\n\r\nfunction formatBigInt(fn, bigint, numericSeparator) {\r\n  const string = String(bigint);\r\n  if (!numericSeparator) {\r\n    return fn(`${string}n`, 'bigint');\r\n  }\r\n  return fn(`${addNumericSeparator(string)}n`, 'bigint');\r\n}\r\n\r\nfunction formatPrimitive(fn, value, ctx) {\r\n  if (typeof value === 'string') {\r\n    let trailer = '';\r\n    if (value.length > ctx.maxStringLength) {\r\n      const remaining = value.length - ctx.maxStringLength;\r\n      value = StringPrototypeSlice(value, 0, ctx.maxStringLength);\r\n      trailer = `... ${remaining} more character${remaining > 1 ? 's' : ''}`;\r\n    }\r\n    if (ctx.compact !== true &&\r\n        // We do not support handling unicode characters width with\r\n        // the readline getStringWidth function as there are\r\n        // performance implications.\r\n        value.length > kMinLineLength &&\r\n        value.length > ctx.breakLength - ctx.indentationLvl - 4) {\r\n      return ArrayPrototypeJoin(\r\n        ArrayPrototypeMap(\r\n          RegExpPrototypeSymbolSplit(/(?<=\\n)/, value),\r\n          (line) => fn(strEscape(line), 'string'),\r\n        ),\r\n        ` +\\n${StringPrototypeRepeat(' ', ctx.indentationLvl + 2)}`,\r\n      ) + trailer;\r\n    }\r\n    return fn(strEscape(value), 'string') + trailer;\r\n  }\r\n  if (typeof value === 'number')\r\n    return formatNumber(fn, value, ctx.numericSeparator);\r\n  if (typeof value === 'bigint')\r\n    return formatBigInt(fn, value, ctx.numericSeparator);\r\n  if (typeof value === 'boolean')\r\n    return fn(`${value}`, 'boolean');\r\n  if (typeof value === 'undefined')\r\n    return fn('undefined', 'undefined');\r\n  // es6 symbol primitive\r\n  return fn(SymbolPrototypeToString(value), 'symbol');\r\n}\r\n\r\nfunction formatNamespaceObject(keys, ctx, value, recurseTimes) {\r\n  const output = new Array(keys.length);\r\n  for (let i = 0; i < keys.length; i++) {\r\n    try {\r\n      output[i] = formatProperty(ctx, value, recurseTimes, keys[i],\r\n                                 kObjectType);\r\n    } catch (err) {\r\n      assert(isNativeError(err) && err.name === 'ReferenceError');\r\n      // Use the existing functionality. This makes sure the indentation and\r\n      // line breaks are always correct. Otherwise it is very difficult to keep\r\n      // this aligned, even though this is a hacky way of dealing with this.\r\n      const tmp = { [keys[i]]: '' };\r\n      output[i] = formatProperty(ctx, tmp, recurseTimes, keys[i], kObjectType);\r\n      const pos = StringPrototypeLastIndexOf(output[i], ' ');\r\n      // We have to find the last whitespace and have to replace that value as\r\n      // it will be visualized as a regular string.\r\n      output[i] = StringPrototypeSlice(output[i], 0, pos + 1) +\r\n                  ctx.stylize('<uninitialized>', 'special');\r\n    }\r\n  }\r\n  // Reset the keys to an empty array. This prevents duplicated inspection.\r\n  keys.length = 0;\r\n  return output;\r\n}\r\n\r\n// The array is sparse and/or has extra keys\r\nfunction formatSpecialArray(ctx, value, recurseTimes, maxLength, output, i) {\r\n  const keys = ObjectKeys(value);\r\n  let index = i;\r\n  for (; i < keys.length && output.length < maxLength; i++) {\r\n    const key = keys[i];\r\n    const tmp = +key;\r\n    // Arrays can only have up to 2^32 - 1 entries\r\n    if (tmp > 2 ** 32 - 2) {\r\n      break;\r\n    }\r\n    if (`${index}` !== key) {\r\n      if (RegExpPrototypeExec(numberRegExp, key) === null) {\r\n        break;\r\n      }\r\n      const emptyItems = tmp - index;\r\n      const ending = emptyItems > 1 ? 's' : '';\r\n      const message = `<${emptyItems} empty item${ending}>`;\r\n      ArrayPrototypePush(output, ctx.stylize(message, 'undefined'));\r\n      index = tmp;\r\n      if (output.length === maxLength) {\r\n        break;\r\n      }\r\n    }\r\n    ArrayPrototypePush(output, formatProperty(ctx, value, recurseTimes, key, kArrayType));\r\n    index++;\r\n  }\r\n  const remaining = value.length - index;\r\n  if (output.length !== maxLength) {\r\n    if (remaining > 0) {\r\n      const ending = remaining > 1 ? 's' : '';\r\n      const message = `<${remaining} empty item${ending}>`;\r\n      ArrayPrototypePush(output, ctx.stylize(message, 'undefined'));\r\n    }\r\n  } else if (remaining > 0) {\r\n    ArrayPrototypePush(output, `... ${remaining} more item${remaining > 1 ? 's' : ''}`);\r\n  }\r\n  return output;\r\n}\r\n\r\nfunction formatArrayBuffer(ctx, value) {\r\n  let buffer;\r\n  try {\r\n    buffer = new Uint8Array(value);\r\n  } catch {\r\n    return [ctx.stylize('(detached)', 'special')];\r\n  }\r\n  if (hexSlice === undefined)\r\n    hexSlice = uncurryThis(require('buffer').Buffer.prototype.hexSlice);\r\n  let str = StringPrototypeTrim(RegExpPrototypeSymbolReplace(\r\n    /(.{2})/g,\r\n    hexSlice(buffer, 0, MathMin(ctx.maxArrayLength, buffer.length)),\r\n    '$1 ',\r\n  ));\r\n  const remaining = buffer.length - ctx.maxArrayLength;\r\n  if (remaining > 0)\r\n    str += ` ... ${remaining} more byte${remaining > 1 ? 's' : ''}`;\r\n  return [`${ctx.stylize('[Uint8Contents]', 'special')}: <${str}>`];\r\n}\r\n\r\nfunction formatArray(ctx, value, recurseTimes) {\r\n  const valLen = value.length;\r\n  const len = MathMin(MathMax(0, ctx.maxArrayLength), valLen);\r\n\r\n  const remaining = valLen - len;\r\n  const output = [];\r\n  for (let i = 0; i < len; i++) {\r\n    // Special handle sparse arrays.\r\n    if (!ObjectPrototypeHasOwnProperty(value, i)) {\r\n      return formatSpecialArray(ctx, value, recurseTimes, len, output, i);\r\n    }\r\n    ArrayPrototypePush(output, formatProperty(ctx, value, recurseTimes, i, kArrayType));\r\n  }\r\n  if (remaining > 0) {\r\n    ArrayPrototypePush(output, `... ${remaining} more item${remaining > 1 ? 's' : ''}`);\r\n  }\r\n  return output;\r\n}\r\n\r\nfunction formatTypedArray(value, length, ctx, ignored, recurseTimes) {\r\n  const maxLength = MathMin(MathMax(0, ctx.maxArrayLength), length);\r\n  const remaining = value.length - maxLength;\r\n  const output = new Array(maxLength);\r\n  const elementFormatter = value.length > 0 && typeof value[0] === 'number' ?\r\n    formatNumber :\r\n    formatBigInt;\r\n  for (let i = 0; i < maxLength; ++i) {\r\n    output[i] = elementFormatter(ctx.stylize, value[i], ctx.numericSeparator);\r\n  }\r\n  if (remaining > 0) {\r\n    output[maxLength] = `... ${remaining} more item${remaining > 1 ? 's' : ''}`;\r\n  }\r\n  if (ctx.showHidden) {\r\n    // .buffer goes last, it's not a primitive like the others.\r\n    // All besides `BYTES_PER_ELEMENT` are actually getters.\r\n    ctx.indentationLvl += 2;\r\n    for (const key of [\r\n      'BYTES_PER_ELEMENT',\r\n      'length',\r\n      'byteLength',\r\n      'byteOffset',\r\n      'buffer',\r\n    ]) {\r\n      const str = formatValue(ctx, value[key], recurseTimes, true);\r\n      ArrayPrototypePush(output, `[${key}]: ${str}`);\r\n    }\r\n    ctx.indentationLvl -= 2;\r\n  }\r\n  return output;\r\n}\r\n\r\nfunction formatSet(value, ctx, ignored, recurseTimes) {\r\n  const output = [];\r\n  ctx.indentationLvl += 2;\r\n  for (const v of value) {\r\n    ArrayPrototypePush(output, formatValue(ctx, v, recurseTimes));\r\n  }\r\n  ctx.indentationLvl -= 2;\r\n  return output;\r\n}\r\n\r\nfunction formatMap(value, ctx, ignored, recurseTimes) {\r\n  const output = [];\r\n  ctx.indentationLvl += 2;\r\n  for (const { 0: k, 1: v } of value) {\r\n    ArrayPrototypePush(\r\n      output,\r\n      `${formatValue(ctx, k, recurseTimes)} => ${formatValue(ctx, v, recurseTimes)}`\r\n    );\r\n  }\r\n  ctx.indentationLvl -= 2;\r\n  return output;\r\n}\r\n\r\nfunction formatSetIterInner(ctx, recurseTimes, entries, state) {\r\n  const maxArrayLength = MathMax(ctx.maxArrayLength, 0);\r\n  const maxLength = MathMin(maxArrayLength, entries.length);\r\n  const output = new Array(maxLength);\r\n  ctx.indentationLvl += 2;\r\n  for (let i = 0; i < maxLength; i++) {\r\n    output[i] = formatValue(ctx, entries[i], recurseTimes);\r\n  }\r\n  ctx.indentationLvl -= 2;\r\n  if (state === kWeak && !ctx.sorted) {\r\n    // Sort all entries to have a halfway reliable output (if more entries than\r\n    // retrieved ones exist, we can not reliably return the same output) if the\r\n    // output is not sorted anyway.\r\n    ArrayPrototypeSort(output);\r\n  }\r\n  const remaining = entries.length - maxLength;\r\n  if (remaining > 0) {\r\n    ArrayPrototypePush(output,\r\n                       `... ${remaining} more item${remaining > 1 ? 's' : ''}`);\r\n  }\r\n  return output;\r\n}\r\n\r\nfunction formatMapIterInner(ctx, recurseTimes, entries, state) {\r\n  const maxArrayLength = MathMax(ctx.maxArrayLength, 0);\r\n  // Entries exist as [key1, val1, key2, val2, ...]\r\n  const len = entries.length / 2;\r\n  const remaining = len - maxArrayLength;\r\n  const maxLength = MathMin(maxArrayLength, len);\r\n  const output = new Array(maxLength);\r\n  let i = 0;\r\n  ctx.indentationLvl += 2;\r\n  if (state === kWeak) {\r\n    for (; i < maxLength; i++) {\r\n      const pos = i * 2;\r\n      output[i] =\r\n        `${formatValue(ctx, entries[pos], recurseTimes)} => ${formatValue(ctx, entries[pos + 1], recurseTimes)}`;\r\n    }\r\n    // Sort all entries to have a halfway reliable output (if more entries than\r\n    // retrieved ones exist, we can not reliably return the same output) if the\r\n    // output is not sorted anyway.\r\n    if (!ctx.sorted)\r\n      ArrayPrototypeSort(output);\r\n  } else {\r\n    for (; i < maxLength; i++) {\r\n      const pos = i * 2;\r\n      const res = [\r\n        formatValue(ctx, entries[pos], recurseTimes),\r\n        formatValue(ctx, entries[pos + 1], recurseTimes),\r\n      ];\r\n      output[i] = reduceToSingleString(\r\n        ctx, res, '', ['[', ']'], kArrayExtrasType, recurseTimes);\r\n    }\r\n  }\r\n  ctx.indentationLvl -= 2;\r\n  if (remaining > 0) {\r\n    ArrayPrototypePush(output, `... ${remaining} more item${remaining > 1 ? 's' : ''}`);\r\n  }\r\n  return output;\r\n}\r\n\r\nfunction formatWeakCollection(ctx) {\r\n  return [ctx.stylize('<items unknown>', 'special')];\r\n}\r\n\r\nfunction formatWeakSet(ctx, value, recurseTimes) {\r\n  const entries = previewEntries(value);\r\n  return formatSetIterInner(ctx, recurseTimes, entries, kWeak);\r\n}\r\n\r\nfunction formatWeakMap(ctx, value, recurseTimes) {\r\n  const entries = previewEntries(value);\r\n  return formatMapIterInner(ctx, recurseTimes, entries, kWeak);\r\n}\r\n\r\nfunction formatIterator(braces, ctx, value, recurseTimes) {\r\n  const { 0: entries, 1: isKeyValue } = previewEntries(value, true);\r\n  if (isKeyValue) {\r\n    // Mark entry iterators as such.\r\n    braces[0] = RegExpPrototypeSymbolReplace(/ Iterator] {$/, braces[0], ' Entries] {');\r\n    return formatMapIterInner(ctx, recurseTimes, entries, kMapEntries);\r\n  }\r\n\r\n  return formatSetIterInner(ctx, recurseTimes, entries, kIterator);\r\n}\r\n\r\nfunction formatPromise(ctx, value, recurseTimes) {\r\n  let output;\r\n  const { 0: state, 1: result } = getPromiseDetails(value);\r\n  if (state === kPending) {\r\n    output = [ctx.stylize('<pending>', 'special')];\r\n  } else {\r\n    ctx.indentationLvl += 2;\r\n    const str = formatValue(ctx, result, recurseTimes);\r\n    ctx.indentationLvl -= 2;\r\n    output = [\r\n      state === kRejected ?\r\n        `${ctx.stylize('<rejected>', 'special')} ${str}` :\r\n        str,\r\n    ];\r\n  }\r\n  return output;\r\n}\r\n\r\nfunction formatProperty(ctx, value, recurseTimes, key, type, desc,\r\n                        original = value) {\r\n  let name, str;\r\n  let extra = ' ';\r\n  desc = desc || ObjectGetOwnPropertyDescriptor(value, key) ||\r\n    { value: value[key], enumerable: true };\r\n  if (desc.value !== undefined) {\r\n    const diff = (ctx.compact !== true || type !== kObjectType) ? 2 : 3;\r\n    ctx.indentationLvl += diff;\r\n    str = formatValue(ctx, desc.value, recurseTimes);\r\n    if (diff === 3 && ctx.breakLength < getStringWidth(str, ctx.colors)) {\r\n      extra = `\\n${StringPrototypeRepeat(' ', ctx.indentationLvl)}`;\r\n    }\r\n    ctx.indentationLvl -= diff;\r\n  } else if (desc.get !== undefined) {\r\n    const label = desc.set !== undefined ? 'Getter/Setter' : 'Getter';\r\n    const s = ctx.stylize;\r\n    const sp = 'special';\r\n    if (ctx.getters && (ctx.getters === true ||\r\n          (ctx.getters === 'get' && desc.set === undefined) ||\r\n          (ctx.getters === 'set' && desc.set !== undefined))) {\r\n      try {\r\n        const tmp = FunctionPrototypeCall(desc.get, original);\r\n        ctx.indentationLvl += 2;\r\n        if (tmp === null) {\r\n          str = `${s(`[${label}:`, sp)} ${s('null', 'null')}${s(']', sp)}`;\r\n        } else if (typeof tmp === 'object') {\r\n          str = `${s(`[${label}]`, sp)} ${formatValue(ctx, tmp, recurseTimes)}`;\r\n        } else {\r\n          const primitive = formatPrimitive(s, tmp, ctx);\r\n          str = `${s(`[${label}:`, sp)} ${primitive}${s(']', sp)}`;\r\n        }\r\n        ctx.indentationLvl -= 2;\r\n      } catch (err) {\r\n        const message = `<Inspection threw (${err.message})>`;\r\n        str = `${s(`[${label}:`, sp)} ${message}${s(']', sp)}`;\r\n      }\r\n    } else {\r\n      str = ctx.stylize(`[${label}]`, sp);\r\n    }\r\n  } else if (desc.set !== undefined) {\r\n    str = ctx.stylize('[Setter]', 'special');\r\n  } else {\r\n    str = ctx.stylize('undefined', 'undefined');\r\n  }\r\n  if (type === kArrayType) {\r\n    return str;\r\n  }\r\n  if (typeof key === 'symbol') {\r\n    const tmp = RegExpPrototypeSymbolReplace(\r\n      strEscapeSequencesReplacer,\r\n      SymbolPrototypeToString(key),\r\n      escapeFn\r\n    );\r\n    name = `[${ctx.stylize(tmp, 'symbol')}]`;\r\n  } else if (key === '__proto__') {\r\n    name = \"['__proto__']\";\r\n  } else if (desc.enumerable === false) {\r\n    const tmp = RegExpPrototypeSymbolReplace(\r\n      strEscapeSequencesReplacer,\r\n      key,\r\n      escapeFn,\r\n    );\r\n    name = `[${tmp}]`;\r\n  } else if (RegExpPrototypeExec(keyStrRegExp, key) !== null) {\r\n    name = ctx.stylize(key, 'name');\r\n  } else {\r\n    name = ctx.stylize(strEscape(key), 'string');\r\n  }\r\n  return `${name}:${extra}${str}`;\r\n}\r\n\r\nfunction isBelowBreakLength(ctx, output, start, base) {\r\n  // Each entry is separated by at least a comma. Thus, we start with a total\r\n  // length of at least `output.length`. In addition, some cases have a\r\n  // whitespace in-between each other that is added to the total as well.\r\n  // TODO(BridgeAR): Add unicode support. Use the readline getStringWidth\r\n  // function. Check the performance overhead and make it an opt-in in case it's\r\n  // significant.\r\n  let totalLength = output.length + start;\r\n  if (totalLength + output.length > ctx.breakLength)\r\n    return false;\r\n  for (let i = 0; i < output.length; i++) {\r\n    if (ctx.colors) {\r\n      totalLength += removeColors(output[i]).length;\r\n    } else {\r\n      totalLength += output[i].length;\r\n    }\r\n    if (totalLength > ctx.breakLength) {\r\n      return false;\r\n    }\r\n  }\r\n  // Do not line up properties on the same line if `base` contains line breaks.\r\n  return base === '' || !StringPrototypeIncludes(base, '\\n');\r\n}\r\n\r\nfunction reduceToSingleString(\r\n  ctx, output, base, braces, extrasType, recurseTimes, value) {\r\n  if (ctx.compact !== true) {\r\n    if (typeof ctx.compact === 'number' && ctx.compact >= 1) {\r\n      // Memorize the original output length. In case the output is grouped,\r\n      // prevent lining up the entries on a single line.\r\n      const entries = output.length;\r\n      // Group array elements together if the array contains at least six\r\n      // separate entries.\r\n      if (extrasType === kArrayExtrasType && entries > 6) {\r\n        output = groupArrayElements(ctx, output, value);\r\n      }\r\n      // `ctx.currentDepth` is set to the most inner depth of the currently\r\n      // inspected object part while `recurseTimes` is the actual current depth\r\n      // that is inspected.\r\n      //\r\n      // Example:\r\n      //\r\n      // const a = { first: [ 1, 2, 3 ], second: { inner: [ 1, 2, 3 ] } }\r\n      //\r\n      // The deepest depth of `a` is 2 (a.second.inner) and `a.first` has a max\r\n      // depth of 1.\r\n      //\r\n      // Consolidate all entries of the local most inner depth up to\r\n      // `ctx.compact`, as long as the properties are smaller than\r\n      // `ctx.breakLength`.\r\n      if (ctx.currentDepth - recurseTimes < ctx.compact &&\r\n          entries === output.length) {\r\n        // Line up all entries on a single line in case the entries do not\r\n        // exceed `breakLength`. Add 10 as constant to start next to all other\r\n        // factors that may reduce `breakLength`.\r\n        const start = output.length + ctx.indentationLvl +\r\n                      braces[0].length + base.length + 10;\r\n        if (isBelowBreakLength(ctx, output, start, base)) {\r\n          const joinedOutput = join(output, ', ');\r\n          if (!StringPrototypeIncludes(joinedOutput, '\\n')) {\r\n            return `${base ? `${base} ` : ''}${braces[0]} ${joinedOutput}` +\r\n              ` ${braces[1]}`;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // Line up each entry on an individual line.\r\n    const indentation = `\\n${StringPrototypeRepeat(' ', ctx.indentationLvl)}`;\r\n    return `${base ? `${base} ` : ''}${braces[0]}${indentation}  ` +\r\n      `${join(output, `,${indentation}  `)}${indentation}${braces[1]}`;\r\n  }\r\n  // Line up all entries on a single line in case the entries do not exceed\r\n  // `breakLength`.\r\n  if (isBelowBreakLength(ctx, output, 0, base)) {\r\n    return `${braces[0]}${base ? ` ${base}` : ''} ${join(output, ', ')} ` +\r\n      braces[1];\r\n  }\r\n  const indentation = StringPrototypeRepeat(' ', ctx.indentationLvl);\r\n  // If the opening \"brace\" is too large, like in the case of \"Set {\",\r\n  // we need to force the first item to be on the next line or the\r\n  // items will not line up correctly.\r\n  const ln = base === '' && braces[0].length === 1 ?\r\n    ' ' : `${base ? ` ${base}` : ''}\\n${indentation}  `;\r\n  // Line up each entry on an individual line.\r\n  return `${braces[0]}${ln}${join(output, `,\\n${indentation}  `)} ${braces[1]}`;\r\n}\r\n\r\nfunction hasBuiltInToString(value) {\r\n  // Prevent triggering proxy traps.\r\n  const getFullProxy = false;\r\n  const proxyTarget = getProxyDetails(value, getFullProxy);\r\n  if (proxyTarget !== undefined) {\r\n    if (proxyTarget === null) {\r\n      return true;\r\n    }\r\n    value = proxyTarget;\r\n  }\r\n\r\n  // Count objects that have no `toString` function as built-in.\r\n  if (typeof value.toString !== 'function') {\r\n    return true;\r\n  }\r\n\r\n  // The object has a own `toString` property. Thus it's not not a built-in one.\r\n  if (ObjectPrototypeHasOwnProperty(value, 'toString')) {\r\n    return false;\r\n  }\r\n\r\n  // Find the object that has the `toString` property as own property in the\r\n  // prototype chain.\r\n  let pointer = value;\r\n  do {\r\n    pointer = ObjectGetPrototypeOf(pointer);\r\n  } while (!ObjectPrototypeHasOwnProperty(pointer, 'toString'));\r\n\r\n  // Check closer if the object is a built-in.\r\n  const descriptor = ObjectGetOwnPropertyDescriptor(pointer, 'constructor');\r\n  return descriptor !== undefined &&\r\n    typeof descriptor.value === 'function' &&\r\n    builtInObjects.has(descriptor.value.name);\r\n}\r\n\r\nconst firstErrorLine = (error) => StringPrototypeSplit(error.message, '\\n', 1)[0];\r\nlet CIRCULAR_ERROR_MESSAGE;\r\nfunction tryStringify(arg) {\r\n  try {\r\n    return JSONStringify(arg);\r\n  } catch (err) {\r\n    // Populate the circular error message lazily\r\n    if (!CIRCULAR_ERROR_MESSAGE) {\r\n      try {\r\n        const a = {};\r\n        a.a = a;\r\n        JSONStringify(a);\r\n      } catch (circularError) {\r\n        CIRCULAR_ERROR_MESSAGE = firstErrorLine(circularError);\r\n      }\r\n    }\r\n    if (err.name === 'TypeError' &&\r\n        firstErrorLine(err) === CIRCULAR_ERROR_MESSAGE) {\r\n      return '[Circular]';\r\n    }\r\n    throw err;\r\n  }\r\n}\r\n\r\nfunction format(...args) {\r\n  return formatWithOptionsInternal(undefined, args);\r\n}\r\n\r\nfunction formatWithOptions(inspectOptions, ...args) {\r\n  validateObject(inspectOptions, 'inspectOptions', { allowArray: true });\r\n  return formatWithOptionsInternal(inspectOptions, args);\r\n}\r\n\r\nfunction formatNumberNoColor(number, options) {\r\n  return formatNumber(\r\n    stylizeNoColor,\r\n    number,\r\n    options?.numericSeparator ?? inspectDefaultOptions.numericSeparator\r\n  );\r\n}\r\n\r\nfunction formatBigIntNoColor(bigint, options) {\r\n  return formatBigInt(\r\n    stylizeNoColor,\r\n    bigint,\r\n    options?.numericSeparator ?? inspectDefaultOptions.numericSeparator\r\n  );\r\n}\r\n\r\nfunction formatWithOptionsInternal(inspectOptions, args) {\r\n  const first = args[0];\r\n  let a = 0;\r\n  let str = '';\r\n  let join = '';\r\n\r\n  if (typeof first === 'string') {\r\n    if (args.length === 1) {\r\n      return first;\r\n    }\r\n    let tempStr;\r\n    let lastPos = 0;\r\n\r\n    for (let i = 0; i < first.length - 1; i++) {\r\n      if (StringPrototypeCharCodeAt(first, i) === 37) { // '%'\r\n        const nextChar = StringPrototypeCharCodeAt(first, ++i);\r\n        if (a + 1 !== args.length) {\r\n          switch (nextChar) {\r\n            case 115: { // 's'\r\n              const tempArg = args[++a];\r\n              if (typeof tempArg === 'number') {\r\n                tempStr = formatNumberNoColor(tempArg, inspectOptions);\r\n              } else if (typeof tempArg === 'bigint') {\r\n                tempStr = formatBigIntNoColor(tempArg, inspectOptions);\r\n              } else if (typeof tempArg !== 'object' ||\r\n                         tempArg === null ||\r\n                         !hasBuiltInToString(tempArg)) {\r\n                tempStr = String(tempArg);\r\n              } else {\r\n                tempStr = inspect(tempArg, {\r\n                  ...inspectOptions,\r\n                  compact: 3,\r\n                  colors: false,\r\n                  depth: 0\r\n                });\r\n              }\r\n              break;\r\n            }\r\n            case 106: // 'j'\r\n              tempStr = tryStringify(args[++a]);\r\n              break;\r\n            case 100: { // 'd'\r\n              const tempNum = args[++a];\r\n              if (typeof tempNum === 'bigint') {\r\n                tempStr = formatBigIntNoColor(tempNum, inspectOptions);\r\n              } else if (typeof tempNum === 'symbol') {\r\n                tempStr = 'NaN';\r\n              } else {\r\n                tempStr = formatNumberNoColor(Number(tempNum), inspectOptions);\r\n              }\r\n              break;\r\n            }\r\n            case 79: // 'O'\r\n              tempStr = inspect(args[++a], inspectOptions);\r\n              break;\r\n            case 111: // 'o'\r\n              tempStr = inspect(args[++a], {\r\n                ...inspectOptions,\r\n                showHidden: true,\r\n                showProxy: true,\r\n                depth: 4\r\n              });\r\n              break;\r\n            case 105: { // 'i'\r\n              const tempInteger = args[++a];\r\n              if (typeof tempInteger === 'bigint') {\r\n                tempStr = formatBigIntNoColor(tempInteger, inspectOptions);\r\n              } else if (typeof tempInteger === 'symbol') {\r\n                tempStr = 'NaN';\r\n              } else {\r\n                tempStr = formatNumberNoColor(\r\n                  NumberParseInt(tempInteger), inspectOptions);\r\n              }\r\n              break;\r\n            }\r\n            case 102: { // 'f'\r\n              const tempFloat = args[++a];\r\n              if (typeof tempFloat === 'symbol') {\r\n                tempStr = 'NaN';\r\n              } else {\r\n                tempStr = formatNumberNoColor(\r\n                  NumberParseFloat(tempFloat), inspectOptions);\r\n              }\r\n              break;\r\n            }\r\n            case 99: // 'c'\r\n              a += 1;\r\n              tempStr = '';\r\n              break;\r\n            case 37: // '%'\r\n              str += StringPrototypeSlice(first, lastPos, i);\r\n              lastPos = i + 1;\r\n              continue;\r\n            default: // Any other character is not a correct placeholder\r\n              continue;\r\n          }\r\n          if (lastPos !== i - 1) {\r\n            str += StringPrototypeSlice(first, lastPos, i - 1);\r\n          }\r\n          str += tempStr;\r\n          lastPos = i + 1;\r\n        } else if (nextChar === 37) {\r\n          str += StringPrototypeSlice(first, lastPos, i);\r\n          lastPos = i + 1;\r\n        }\r\n      }\r\n    }\r\n    if (lastPos !== 0) {\r\n      a++;\r\n      join = ' ';\r\n      if (lastPos < first.length) {\r\n        str += StringPrototypeSlice(first, lastPos);\r\n      }\r\n    }\r\n  }\r\n\r\n  while (a < args.length) {\r\n    const value = args[a];\r\n    str += join;\r\n    str += typeof value !== 'string' ? inspect(value, inspectOptions) : value;\r\n    join = ' ';\r\n    a++;\r\n  }\r\n  return str;\r\n}\r\n\r\nfunction isZeroWidthCodePoint(code) {\r\n  return code <= 0x1F || // C0 control codes\r\n    (code >= 0x7F && code <= 0x9F) || // C1 control codes\r\n    (code >= 0x300 && code <= 0x36F) || // Combining Diacritical Marks\r\n    (code >= 0x200B && code <= 0x200F) || // Modifying Invisible Characters\r\n    // Combining Diacritical Marks for Symbols\r\n    (code >= 0x20D0 && code <= 0x20FF) ||\r\n    (code >= 0xFE00 && code <= 0xFE0F) || // Variation Selectors\r\n    (code >= 0xFE20 && code <= 0xFE2F) || // Combining Half Marks\r\n    (code >= 0xE0100 && code <= 0xE01EF); // Variation Selectors\r\n}\r\n\r\nif (internalBinding('config').hasIntl) {\r\n  const icu = internalBinding('icu');\r\n  // icu.getStringWidth(string, ambiguousAsFullWidth, expandEmojiSequence)\r\n  // Defaults: ambiguousAsFullWidth = false; expandEmojiSequence = true;\r\n  // TODO(BridgeAR): Expose the options to the user. That is probably the\r\n  // best thing possible at the moment, since it's difficult to know what\r\n  // the receiving end supports.\r\n  getStringWidth = function getStringWidth(str, removeControlChars = true) {\r\n    let width = 0;\r\n\r\n    if (removeControlChars) {\r\n      str = stripVTControlCharacters(str);\r\n    }\r\n    for (let i = 0; i < str.length; i++) {\r\n      // Try to avoid calling into C++ by first handling the ASCII portion of\r\n      // the string. If it is fully ASCII, we skip the C++ part.\r\n      const code = StringPrototypeCharCodeAt(str, i);\r\n      if (code >= 127) {\r\n        width += icu.getStringWidth(StringPrototypeNormalize(StringPrototypeSlice(str, i), 'NFC'));\r\n        break;\r\n      }\r\n      width += code >= 32 ? 1 : 0;\r\n    }\r\n    return width;\r\n  };\r\n} else {\r\n  /**\r\n   * Returns the number of columns required to display the given string.\r\n   */\r\n  getStringWidth = function getStringWidth(str, removeControlChars = true) {\r\n    let width = 0;\r\n\r\n    if (removeControlChars)\r\n      str = stripVTControlCharacters(str);\r\n    str = StringPrototypeNormalize(str, 'NFC');\r\n    for (const char of new SafeStringIterator(str)) {\r\n      const code = StringPrototypeCodePointAt(char, 0);\r\n      if (isFullWidthCodePoint(code)) {\r\n        width += 2;\r\n      } else if (!isZeroWidthCodePoint(code)) {\r\n        width++;\r\n      }\r\n    }\r\n\r\n    return width;\r\n  };\r\n\r\n  /**\r\n   * Returns true if the character represented by a given\r\n   * Unicode code point is full-width. Otherwise returns false.\r\n   */\r\n  const isFullWidthCodePoint = (code) => {\r\n    // Code points are partially derived from:\r\n    // https://www.unicode.org/Public/UNIDATA/EastAsianWidth.txt\r\n    return code >= 0x1100 && (\r\n      code <= 0x115f ||  // Hangul Jamo\r\n      code === 0x2329 || // LEFT-POINTING ANGLE BRACKET\r\n      code === 0x232a || // RIGHT-POINTING ANGLE BRACKET\r\n      // CJK Radicals Supplement .. Enclosed CJK Letters and Months\r\n      (code >= 0x2e80 && code <= 0x3247 && code !== 0x303f) ||\r\n      // Enclosed CJK Letters and Months .. CJK Unified Ideographs Extension A\r\n      (code >= 0x3250 && code <= 0x4dbf) ||\r\n      // CJK Unified Ideographs .. Yi Radicals\r\n      (code >= 0x4e00 && code <= 0xa4c6) ||\r\n      // Hangul Jamo Extended-A\r\n      (code >= 0xa960 && code <= 0xa97c) ||\r\n      // Hangul Syllables\r\n      (code >= 0xac00 && code <= 0xd7a3) ||\r\n      // CJK Compatibility Ideographs\r\n      (code >= 0xf900 && code <= 0xfaff) ||\r\n      // Vertical Forms\r\n      (code >= 0xfe10 && code <= 0xfe19) ||\r\n      // CJK Compatibility Forms .. Small Form Variants\r\n      (code >= 0xfe30 && code <= 0xfe6b) ||\r\n      // Halfwidth and Fullwidth Forms\r\n      (code >= 0xff01 && code <= 0xff60) ||\r\n      (code >= 0xffe0 && code <= 0xffe6) ||\r\n      // Kana Supplement\r\n      (code >= 0x1b000 && code <= 0x1b001) ||\r\n      // Enclosed Ideographic Supplement\r\n      (code >= 0x1f200 && code <= 0x1f251) ||\r\n      // Miscellaneous Symbols and Pictographs 0x1f300 - 0x1f5ff\r\n      // Emoticons 0x1f600 - 0x1f64f\r\n      (code >= 0x1f300 && code <= 0x1f64f) ||\r\n      // CJK Unified Ideographs Extension B .. Tertiary Ideographic Plane\r\n      (code >= 0x20000 && code <= 0x3fffd)\r\n    );\r\n  };\r\n\r\n}\r\n\r\n/**\r\n * Remove all VT control characters. Use to estimate displayed string width.\r\n */\r\nfunction stripVTControlCharacters(str) {\r\n  validateString(str, 'str');\r\n\r\n  return RegExpPrototypeSymbolReplace(ansi, str, '');\r\n}\r\n\r\nmodule.exports = {\r\n  identicalSequenceRange,\r\n  inspect,\r\n  inspectDefaultOptions,\r\n  format,\r\n  formatWithOptions,\r\n  getStringWidth,\r\n  stripVTControlCharacters,\r\n  isZeroWidthCodePoint,\r\n};\r\n",
    "name": "inspect",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 26,
    "sourcePositions": []
  },
  {
    "url": "node:internal/assert",
    "source": "'use strict';\r\n\r\nlet error;\r\nfunction lazyError() {\r\n  if (!error) {\r\n    error = require('internal/errors').codes.ERR_INTERNAL_ASSERTION;\r\n  }\r\n  return error;\r\n}\r\n\r\nfunction assert(value, message) {\r\n  if (!value) {\r\n    const ERR_INTERNAL_ASSERTION = lazyError();\r\n    throw new ERR_INTERNAL_ASSERTION(message);\r\n  }\r\n}\r\n\r\nfunction fail(message) {\r\n  const ERR_INTERNAL_ASSERTION = lazyError();\r\n  throw new ERR_INTERNAL_ASSERTION(message);\r\n}\r\n\r\nassert.fail = fail;\r\n\r\nmodule.exports = assert;\r\n",
    "name": "node:internal/modules/esm/assert",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 27,
    "sourcePositions": []
  },
  {
    "url": "node:internal/util/debuglog",
    "source": "'use strict';\r\n\r\nconst {\r\n  ObjectCreate,\r\n  ObjectDefineProperty,\r\n  RegExp,\r\n  RegExpPrototypeExec,\r\n  SafeArrayIterator,\r\n  StringPrototypeToLowerCase,\r\n  StringPrototypeToUpperCase,\r\n} = primordials;\r\n\r\nconst { inspect, format, formatWithOptions } = require('internal/util/inspect');\r\n\r\n// `debugImpls` and `testEnabled` are deliberately not initialized so any call\r\n// to `debuglog()` before `initializeDebugEnv()` is called will throw.\r\nlet debugImpls;\r\nlet testEnabled;\r\n\r\n\r\n// `debugEnv` is initial value of process.env.NODE_DEBUG\r\nfunction initializeDebugEnv(debugEnv) {\r\n  debugImpls = ObjectCreate(null);\r\n  if (debugEnv) {\r\n    // This is run before any user code, it's OK not to use primordials.\r\n    debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g, '\\\\$&')\r\n      .replaceAll('*', '.*')\r\n      .replaceAll(',', '$|^');\r\n    const debugEnvRegex = new RegExp(`^${debugEnv}$`, 'i');\r\n    testEnabled = (str) => RegExpPrototypeExec(debugEnvRegex, str) !== null;\r\n  } else {\r\n    testEnabled = () => false;\r\n  }\r\n}\r\n\r\n// Emits warning when user sets\r\n// NODE_DEBUG=http or NODE_DEBUG=http2.\r\nfunction emitWarningIfNeeded(set) {\r\n  if ('HTTP' === set || 'HTTP2' === set) {\r\n    process.emitWarning('Setting the NODE_DEBUG environment variable ' +\r\n      'to \\'' + StringPrototypeToLowerCase(set) + '\\' can expose sensitive ' +\r\n      'data (such as passwords, tokens and authentication headers) ' +\r\n      'in the resulting log.');\r\n  }\r\n}\r\n\r\nconst noop = () => {};\r\n\r\nfunction debuglogImpl(enabled, set) {\r\n  if (debugImpls[set] === undefined) {\r\n    if (enabled) {\r\n      const pid = process.pid;\r\n      emitWarningIfNeeded(set);\r\n      debugImpls[set] = function debug(...args) {\r\n        const colors = process.stderr.hasColors && process.stderr.hasColors();\r\n        const msg = formatWithOptions({ colors }, ...args);\r\n        const coloredPID = inspect(pid, { colors });\r\n        process.stderr.write(format('%s %s: %s\\n', set, coloredPID, msg));\r\n      };\r\n    } else {\r\n      debugImpls[set] = noop;\r\n    }\r\n  }\r\n  return debugImpls[set];\r\n}\r\n\r\n// debuglogImpl depends on process.pid and process.env.NODE_DEBUG,\r\n// so it needs to be called lazily in top scopes of internal modules\r\n// that may be loaded before these run time states are allowed to\r\n// be accessed.\r\nfunction debuglog(set, cb) {\r\n  function init() {\r\n    set = StringPrototypeToUpperCase(set);\r\n    enabled = testEnabled(set);\r\n  }\r\n  let debug = (...args) => {\r\n    init();\r\n    // Only invokes debuglogImpl() when the debug function is\r\n    // called for the first time.\r\n    debug = debuglogImpl(enabled, set);\r\n    if (typeof cb === 'function')\r\n      cb(debug);\r\n    switch (args.length) {\r\n      case 1: return debug(args[0]);\r\n      case 2: return debug(args[0], args[1]);\r\n      default: return debug(...new SafeArrayIterator(args));\r\n    }\r\n  };\r\n  let enabled;\r\n  let test = () => {\r\n    init();\r\n    test = () => enabled;\r\n    return enabled;\r\n  };\r\n  const logger = (...args) => {\r\n    switch (args.length) {\r\n      case 1: return debug(args[0]);\r\n      case 2: return debug(args[0], args[1]);\r\n      default: return debug(...new SafeArrayIterator(args));\r\n    }\r\n  };\r\n  ObjectDefineProperty(logger, 'enabled', {\r\n    __proto__: null,\r\n    get() {\r\n      return test();\r\n    },\r\n    configurable: true,\r\n    enumerable: true\r\n  });\r\n  return logger;\r\n}\r\n\r\nmodule.exports = {\r\n  debuglog,\r\n  initializeDebugEnv\r\n};\r\n",
    "name": "debuglog",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 28,
    "sourcePositions": []
  },
  {
    "url": "node:events",
    "source": "// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n'use strict';\r\n\r\nconst {\r\n  ArrayPrototypeJoin,\r\n  ArrayPrototypeShift,\r\n  ArrayPrototypeSlice,\r\n  ArrayPrototypeSplice,\r\n  ArrayPrototypeUnshift,\r\n  Boolean,\r\n  Error,\r\n  ErrorCaptureStackTrace,\r\n  FunctionPrototypeBind,\r\n  FunctionPrototypeCall,\r\n  NumberIsNaN,\r\n  ObjectCreate,\r\n  ObjectDefineProperty,\r\n  ObjectDefineProperties,\r\n  ObjectGetPrototypeOf,\r\n  ObjectSetPrototypeOf,\r\n  Promise,\r\n  PromiseReject,\r\n  PromiseResolve,\r\n  ReflectApply,\r\n  ReflectOwnKeys,\r\n  String,\r\n  StringPrototypeSplit,\r\n  Symbol,\r\n  SymbolFor,\r\n  SymbolAsyncIterator,\r\n} = primordials;\r\nconst kRejection = SymbolFor('nodejs.rejection');\r\n\r\nconst { kEmptyObject } = require('internal/util');\r\n\r\nconst {\r\n  inspect,\r\n  identicalSequenceRange,\r\n} = require('internal/util/inspect');\r\n\r\nlet spliceOne;\r\n\r\nconst {\r\n  AbortError,\r\n  kEnhanceStackBeforeInspector,\r\n  codes: {\r\n    ERR_INVALID_ARG_TYPE,\r\n    ERR_INVALID_THIS,\r\n    ERR_OUT_OF_RANGE,\r\n    ERR_UNHANDLED_ERROR\r\n  },\r\n  genericNodeError,\r\n} = require('internal/errors');\r\n\r\nconst {\r\n  validateAbortSignal,\r\n  validateBoolean,\r\n  validateFunction,\r\n  validateString,\r\n} = require('internal/validators');\r\n\r\nconst kCapture = Symbol('kCapture');\r\nconst kErrorMonitor = Symbol('events.errorMonitor');\r\nconst kMaxEventTargetListeners = Symbol('events.maxEventTargetListeners');\r\nconst kMaxEventTargetListenersWarned =\r\n  Symbol('events.maxEventTargetListenersWarned');\r\n\r\nlet EventEmitterAsyncResource;\r\n// The EventEmitterAsyncResource has to be initialized lazily because event.js\r\n// is loaded so early in the bootstrap process, before async_hooks is available.\r\n//\r\n// This implementation was adapted straight from addaleax's\r\n// eventemitter-asyncresource MIT-licensed userland module.\r\n// https://github.com/addaleax/eventemitter-asyncresource\r\nfunction lazyEventEmitterAsyncResource() {\r\n  if (EventEmitterAsyncResource === undefined) {\r\n    const {\r\n      AsyncResource\r\n    } = require('async_hooks');\r\n\r\n    const kEventEmitter = Symbol('kEventEmitter');\r\n    const kAsyncResource = Symbol('kAsyncResource');\r\n    class EventEmitterReferencingAsyncResource extends AsyncResource {\r\n      /**\r\n       * @param {EventEmitter} ee\r\n       * @param {string} [type]\r\n       * @param {{\r\n       *   triggerAsyncId?: number,\r\n       *   requireManualDestroy?: boolean,\r\n       * }} [options]\r\n       */\r\n      constructor(ee, type, options) {\r\n        super(type, options);\r\n        this[kEventEmitter] = ee;\r\n      }\r\n\r\n      /**\r\n       * @type {EventEmitter}\r\n       */\r\n      get eventEmitter() {\r\n        if (this[kEventEmitter] === undefined)\r\n          throw new ERR_INVALID_THIS('EventEmitterReferencingAsyncResource');\r\n        return this[kEventEmitter];\r\n      }\r\n    }\r\n\r\n    EventEmitterAsyncResource =\r\n      class EventEmitterAsyncResource extends EventEmitter {\r\n        /**\r\n         * @param {{\r\n         *   name?: string,\r\n         *   triggerAsyncId?: number,\r\n         *   requireManualDestroy?: boolean,\r\n         * }} [options]\r\n         */\r\n        constructor(options = undefined) {\r\n          let name;\r\n          if (typeof options === 'string') {\r\n            name = options;\r\n            options = undefined;\r\n          } else {\r\n            if (new.target === EventEmitterAsyncResource) {\r\n              validateString(options?.name, 'options.name');\r\n            }\r\n            name = options?.name || new.target.name;\r\n          }\r\n          super(options);\r\n\r\n          this[kAsyncResource] =\r\n            new EventEmitterReferencingAsyncResource(this, name, options);\r\n        }\r\n\r\n        /**\r\n         * @param {symbol,string} event\r\n         * @param  {...any} args\r\n         * @returns {boolean}\r\n         */\r\n        emit(event, ...args) {\r\n          if (this[kAsyncResource] === undefined)\r\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\r\n          const { asyncResource } = this;\r\n          ArrayPrototypeUnshift(args, super.emit, this, event);\r\n          return ReflectApply(asyncResource.runInAsyncScope, asyncResource,\r\n                              args);\r\n        }\r\n\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        emitDestroy() {\r\n          if (this[kAsyncResource] === undefined)\r\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\r\n          this.asyncResource.emitDestroy();\r\n        }\r\n\r\n        /**\r\n         * @type {number}\r\n         */\r\n        get asyncId() {\r\n          if (this[kAsyncResource] === undefined)\r\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\r\n          return this.asyncResource.asyncId();\r\n        }\r\n\r\n        /**\r\n         * @type {number}\r\n         */\r\n        get triggerAsyncId() {\r\n          if (this[kAsyncResource] === undefined)\r\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\r\n          return this.asyncResource.triggerAsyncId();\r\n        }\r\n\r\n        /**\r\n         * @type {EventEmitterReferencingAsyncResource}\r\n         */\r\n        get asyncResource() {\r\n          if (this[kAsyncResource] === undefined)\r\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\r\n          return this[kAsyncResource];\r\n        }\r\n      };\r\n  }\r\n  return EventEmitterAsyncResource;\r\n}\r\n\r\n/**\r\n * Creates a new `EventEmitter` instance.\r\n * @param {{ captureRejections?: boolean; }} [opts]\r\n * @constructs {EventEmitter}\r\n */\r\nfunction EventEmitter(opts) {\r\n  EventEmitter.init.call(this, opts);\r\n}\r\nmodule.exports = EventEmitter;\r\nmodule.exports.once = once;\r\nmodule.exports.on = on;\r\nmodule.exports.getEventListeners = getEventListeners;\r\n// Backwards-compat with node 0.10.x\r\nEventEmitter.EventEmitter = EventEmitter;\r\n\r\nEventEmitter.usingDomains = false;\r\n\r\nEventEmitter.captureRejectionSymbol = kRejection;\r\nObjectDefineProperty(EventEmitter, 'captureRejections', {\r\n  __proto__: null,\r\n  get() {\r\n    return EventEmitter.prototype[kCapture];\r\n  },\r\n  set(value) {\r\n    validateBoolean(value, 'EventEmitter.captureRejections');\r\n\r\n    EventEmitter.prototype[kCapture] = value;\r\n  },\r\n  enumerable: true\r\n});\r\n\r\nObjectDefineProperty(EventEmitter, 'EventEmitterAsyncResource', {\r\n  __proto__: null,\r\n  enumerable: true,\r\n  get: lazyEventEmitterAsyncResource,\r\n  set: undefined,\r\n  configurable: true,\r\n});\r\n\r\nEventEmitter.errorMonitor = kErrorMonitor;\r\n\r\n// The default for captureRejections is false\r\nObjectDefineProperty(EventEmitter.prototype, kCapture, {\r\n  __proto__: null,\r\n  value: false,\r\n  writable: true,\r\n  enumerable: false\r\n});\r\n\r\nEventEmitter.prototype._events = undefined;\r\nEventEmitter.prototype._eventsCount = 0;\r\nEventEmitter.prototype._maxListeners = undefined;\r\n\r\n// By default EventEmitters will print a warning if more than 10 listeners are\r\n// added to it. This is a useful default which helps finding memory leaks.\r\nlet defaultMaxListeners = 10;\r\nlet isEventTarget;\r\n\r\nfunction checkListener(listener) {\r\n  validateFunction(listener, 'listener');\r\n}\r\n\r\nObjectDefineProperty(EventEmitter, 'defaultMaxListeners', {\r\n  __proto__: null,\r\n  enumerable: true,\r\n  get: function() {\r\n    return defaultMaxListeners;\r\n  },\r\n  set: function(arg) {\r\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\r\n      throw new ERR_OUT_OF_RANGE('defaultMaxListeners',\r\n                                 'a non-negative number',\r\n                                 arg);\r\n    }\r\n    defaultMaxListeners = arg;\r\n  }\r\n});\r\n\r\nObjectDefineProperties(EventEmitter, {\r\n  kMaxEventTargetListeners: {\r\n    __proto__: null,\r\n    value: kMaxEventTargetListeners,\r\n    enumerable: false,\r\n    configurable: false,\r\n    writable: false,\r\n  },\r\n  kMaxEventTargetListenersWarned: {\r\n    __proto__: null,\r\n    value: kMaxEventTargetListenersWarned,\r\n    enumerable: false,\r\n    configurable: false,\r\n    writable: false,\r\n  }\r\n});\r\n\r\n/**\r\n * Sets the max listeners.\r\n * @param {number} n\r\n * @param {EventTarget[] | EventEmitter[]} [eventTargets]\r\n * @returns {void}\r\n */\r\nEventEmitter.setMaxListeners =\r\n  function(n = defaultMaxListeners, ...eventTargets) {\r\n    if (typeof n !== 'number' || n < 0 || NumberIsNaN(n))\r\n      throw new ERR_OUT_OF_RANGE('n', 'a non-negative number', n);\r\n    if (eventTargets.length === 0) {\r\n      defaultMaxListeners = n;\r\n    } else {\r\n      if (isEventTarget === undefined)\r\n        isEventTarget = require('internal/event_target').isEventTarget;\r\n\r\n      for (let i = 0; i < eventTargets.length; i++) {\r\n        const target = eventTargets[i];\r\n        if (isEventTarget(target)) {\r\n          target[kMaxEventTargetListeners] = n;\r\n          target[kMaxEventTargetListenersWarned] = false;\r\n        } else if (typeof target.setMaxListeners === 'function') {\r\n          target.setMaxListeners(n);\r\n        } else {\r\n          throw new ERR_INVALID_ARG_TYPE(\r\n            'eventTargets',\r\n            ['EventEmitter', 'EventTarget'],\r\n            target);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n// If you're updating this function definition, please also update any\r\n// re-definitions, such as the one in the Domain module (lib/domain.js).\r\nEventEmitter.init = function(opts) {\r\n\r\n  if (this._events === undefined ||\r\n      this._events === ObjectGetPrototypeOf(this)._events) {\r\n    this._events = ObjectCreate(null);\r\n    this._eventsCount = 0;\r\n  }\r\n\r\n  this._maxListeners = this._maxListeners || undefined;\r\n\r\n\r\n  if (opts?.captureRejections) {\r\n    validateBoolean(opts.captureRejections, 'options.captureRejections');\r\n    this[kCapture] = Boolean(opts.captureRejections);\r\n  } else {\r\n    // Assigning the kCapture property directly saves an expensive\r\n    // prototype lookup in a very sensitive hot path.\r\n    this[kCapture] = EventEmitter.prototype[kCapture];\r\n  }\r\n};\r\n\r\nfunction addCatch(that, promise, type, args) {\r\n  if (!that[kCapture]) {\r\n    return;\r\n  }\r\n\r\n  // Handle Promises/A+ spec, then could be a getter\r\n  // that throws on second use.\r\n  try {\r\n    const then = promise.then;\r\n\r\n    if (typeof then === 'function') {\r\n      then.call(promise, undefined, function(err) {\r\n        // The callback is called with nextTick to avoid a follow-up\r\n        // rejection from this promise.\r\n        process.nextTick(emitUnhandledRejectionOrErr, that, err, type, args);\r\n      });\r\n    }\r\n  } catch (err) {\r\n    that.emit('error', err);\r\n  }\r\n}\r\n\r\nfunction emitUnhandledRejectionOrErr(ee, err, type, args) {\r\n  if (typeof ee[kRejection] === 'function') {\r\n    ee[kRejection](err, type, ...args);\r\n  } else {\r\n    // We have to disable the capture rejections mechanism, otherwise\r\n    // we might end up in an infinite loop.\r\n    const prev = ee[kCapture];\r\n\r\n    // If the error handler throws, it is not catchable and it\r\n    // will end up in 'uncaughtException'. We restore the previous\r\n    // value of kCapture in case the uncaughtException is present\r\n    // and the exception is handled.\r\n    try {\r\n      ee[kCapture] = false;\r\n      ee.emit('error', err);\r\n    } finally {\r\n      ee[kCapture] = prev;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Increases the max listeners of the event emitter.\r\n * @param {number} n\r\n * @returns {EventEmitter}\r\n */\r\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\r\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\r\n    throw new ERR_OUT_OF_RANGE('n', 'a non-negative number', n);\r\n  }\r\n  this._maxListeners = n;\r\n  return this;\r\n};\r\n\r\nfunction _getMaxListeners(that) {\r\n  if (that._maxListeners === undefined)\r\n    return EventEmitter.defaultMaxListeners;\r\n  return that._maxListeners;\r\n}\r\n\r\n/**\r\n * Returns the current max listener value for the event emitter.\r\n * @returns {number}\r\n */\r\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\r\n  return _getMaxListeners(this);\r\n};\r\n\r\nfunction enhanceStackTrace(err, own) {\r\n  let ctorInfo = '';\r\n  try {\r\n    const { name } = this.constructor;\r\n    if (name !== 'EventEmitter')\r\n      ctorInfo = ` on ${name} instance`;\r\n  } catch {\r\n    // Continue regardless of error.\r\n  }\r\n  const sep = `\\nEmitted 'error' event${ctorInfo} at:\\n`;\r\n\r\n  const errStack = ArrayPrototypeSlice(\r\n    StringPrototypeSplit(err.stack, '\\n'), 1);\r\n  const ownStack = ArrayPrototypeSlice(\r\n    StringPrototypeSplit(own.stack, '\\n'), 1);\r\n\r\n  const { len, offset } = identicalSequenceRange(ownStack, errStack);\r\n  if (len > 0) {\r\n    ArrayPrototypeSplice(ownStack, offset + 1, len - 2,\r\n                         '    [... lines matching original stack trace ...]');\r\n  }\r\n\r\n  return err.stack + sep + ArrayPrototypeJoin(ownStack, '\\n');\r\n}\r\n\r\n/**\r\n * Synchronously calls each of the listeners registered\r\n * for the event.\r\n * @param {string | symbol} type\r\n * @param {...any} [args]\r\n * @returns {boolean}\r\n */\r\nEventEmitter.prototype.emit = function emit(type, ...args) {\r\n  let doError = (type === 'error');\r\n\r\n  const events = this._events;\r\n  if (events !== undefined) {\r\n    if (doError && events[kErrorMonitor] !== undefined)\r\n      this.emit(kErrorMonitor, ...args);\r\n    doError = (doError && events.error === undefined);\r\n  } else if (!doError)\r\n    return false;\r\n\r\n  // If there is no 'error' event listener then throw.\r\n  if (doError) {\r\n    let er;\r\n    if (args.length > 0)\r\n      er = args[0];\r\n    if (er instanceof Error) {\r\n      try {\r\n        const capture = {};\r\n        ErrorCaptureStackTrace(capture, EventEmitter.prototype.emit);\r\n        ObjectDefineProperty(er, kEnhanceStackBeforeInspector, {\r\n          __proto__: null,\r\n          value: FunctionPrototypeBind(enhanceStackTrace, this, er, capture),\r\n          configurable: true\r\n        });\r\n      } catch {\r\n        // Continue regardless of error.\r\n      }\r\n\r\n      // Note: The comments on the `throw` lines are intentional, they show\r\n      // up in Node's output if this results in an unhandled exception.\r\n      throw er; // Unhandled 'error' event\r\n    }\r\n\r\n    let stringifiedEr;\r\n    try {\r\n      stringifiedEr = inspect(er);\r\n    } catch {\r\n      stringifiedEr = er;\r\n    }\r\n\r\n    // At least give some kind of context to the user\r\n    const err = new ERR_UNHANDLED_ERROR(stringifiedEr);\r\n    err.context = er;\r\n    throw err; // Unhandled 'error' event\r\n  }\r\n\r\n  const handler = events[type];\r\n\r\n  if (handler === undefined)\r\n    return false;\r\n\r\n  if (typeof handler === 'function') {\r\n    const result = handler.apply(this, args);\r\n\r\n    // We check if result is undefined first because that\r\n    // is the most common case so we do not pay any perf\r\n    // penalty\r\n    if (result !== undefined && result !== null) {\r\n      addCatch(this, result, type, args);\r\n    }\r\n  } else {\r\n    const len = handler.length;\r\n    const listeners = arrayClone(handler);\r\n    for (let i = 0; i < len; ++i) {\r\n      const result = listeners[i].apply(this, args);\r\n\r\n      // We check if result is undefined first because that\r\n      // is the most common case so we do not pay any perf\r\n      // penalty.\r\n      // This code is duplicated because extracting it away\r\n      // would make it non-inlineable.\r\n      if (result !== undefined && result !== null) {\r\n        addCatch(this, result, type, args);\r\n      }\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nfunction _addListener(target, type, listener, prepend) {\r\n  let m;\r\n  let events;\r\n  let existing;\r\n\r\n  checkListener(listener);\r\n\r\n  events = target._events;\r\n  if (events === undefined) {\r\n    events = target._events = ObjectCreate(null);\r\n    target._eventsCount = 0;\r\n  } else {\r\n    // To avoid recursion in the case that type === \"newListener\"! Before\r\n    // adding it to the listeners, first emit \"newListener\".\r\n    if (events.newListener !== undefined) {\r\n      target.emit('newListener', type,\r\n                  listener.listener ?? listener);\r\n\r\n      // Re-assign `events` because a newListener handler could have caused the\r\n      // this._events to be assigned to a new object\r\n      events = target._events;\r\n    }\r\n    existing = events[type];\r\n  }\r\n\r\n  if (existing === undefined) {\r\n    // Optimize the case of one listener. Don't need the extra array object.\r\n    events[type] = listener;\r\n    ++target._eventsCount;\r\n  } else {\r\n    if (typeof existing === 'function') {\r\n      // Adding the second element, need to change to array.\r\n      existing = events[type] =\r\n        prepend ? [listener, existing] : [existing, listener];\r\n      // If we've already got an array, just append.\r\n    } else if (prepend) {\r\n      existing.unshift(listener);\r\n    } else {\r\n      existing.push(listener);\r\n    }\r\n\r\n    // Check for listener leak\r\n    m = _getMaxListeners(target);\r\n    if (m > 0 && existing.length > m && !existing.warned) {\r\n      existing.warned = true;\r\n      // No error code for this since it is a Warning\r\n      const w = genericNodeError(\r\n        `Possible EventEmitter memory leak detected. ${existing.length} ${String(type)} listeners ` +\r\n        `added to ${inspect(target, { depth: -1 })}. Use emitter.setMaxListeners() to increase limit`,\r\n        { name: 'MaxListenersExceededWarning', emitter: target, type: type, count: existing.length });\r\n      process.emitWarning(w);\r\n    }\r\n  }\r\n\r\n  return target;\r\n}\r\n\r\n/**\r\n * Adds a listener to the event emitter.\r\n * @param {string | symbol} type\r\n * @param {Function} listener\r\n * @returns {EventEmitter}\r\n */\r\nEventEmitter.prototype.addListener = function addListener(type, listener) {\r\n  return _addListener(this, type, listener, false);\r\n};\r\n\r\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\r\n\r\n/**\r\n * Adds the `listener` function to the beginning of\r\n * the listeners array.\r\n * @param {string | symbol} type\r\n * @param {Function} listener\r\n * @returns {EventEmitter}\r\n */\r\nEventEmitter.prototype.prependListener =\r\n    function prependListener(type, listener) {\r\n      return _addListener(this, type, listener, true);\r\n    };\r\n\r\nfunction onceWrapper() {\r\n  if (!this.fired) {\r\n    this.target.removeListener(this.type, this.wrapFn);\r\n    this.fired = true;\r\n    if (arguments.length === 0)\r\n      return this.listener.call(this.target);\r\n    return this.listener.apply(this.target, arguments);\r\n  }\r\n}\r\n\r\nfunction _onceWrap(target, type, listener) {\r\n  const state = { fired: false, wrapFn: undefined, target, type, listener };\r\n  const wrapped = onceWrapper.bind(state);\r\n  wrapped.listener = listener;\r\n  state.wrapFn = wrapped;\r\n  return wrapped;\r\n}\r\n\r\n/**\r\n * Adds a one-time `listener` function to the event emitter.\r\n * @param {string | symbol} type\r\n * @param {Function} listener\r\n * @returns {EventEmitter}\r\n */\r\nEventEmitter.prototype.once = function once(type, listener) {\r\n  checkListener(listener);\r\n\r\n  this.on(type, _onceWrap(this, type, listener));\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds a one-time `listener` function to the beginning of\r\n * the listeners array.\r\n * @param {string | symbol} type\r\n * @param {Function} listener\r\n * @returns {EventEmitter}\r\n */\r\nEventEmitter.prototype.prependOnceListener =\r\n    function prependOnceListener(type, listener) {\r\n      checkListener(listener);\r\n\r\n      this.prependListener(type, _onceWrap(this, type, listener));\r\n      return this;\r\n    };\r\n\r\n/**\r\n * Removes the specified `listener` from the listeners array.\r\n * @param {string | symbol} type\r\n * @param {Function} listener\r\n * @returns {EventEmitter}\r\n */\r\nEventEmitter.prototype.removeListener =\r\n    function removeListener(type, listener) {\r\n      checkListener(listener);\r\n\r\n      const events = this._events;\r\n      if (events === undefined)\r\n        return this;\r\n\r\n      const list = events[type];\r\n      if (list === undefined)\r\n        return this;\r\n\r\n      if (list === listener || list.listener === listener) {\r\n        if (--this._eventsCount === 0)\r\n          this._events = ObjectCreate(null);\r\n        else {\r\n          delete events[type];\r\n          if (events.removeListener)\r\n            this.emit('removeListener', type, list.listener || listener);\r\n        }\r\n      } else if (typeof list !== 'function') {\r\n        let position = -1;\r\n\r\n        for (let i = list.length - 1; i >= 0; i--) {\r\n          if (list[i] === listener || list[i].listener === listener) {\r\n            position = i;\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (position < 0)\r\n          return this;\r\n\r\n        if (position === 0)\r\n          list.shift();\r\n        else {\r\n          if (spliceOne === undefined)\r\n            spliceOne = require('internal/util').spliceOne;\r\n          spliceOne(list, position);\r\n        }\r\n\r\n        if (list.length === 1)\r\n          events[type] = list[0];\r\n\r\n        if (events.removeListener !== undefined)\r\n          this.emit('removeListener', type, listener);\r\n      }\r\n\r\n      return this;\r\n    };\r\n\r\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\r\n\r\n/**\r\n * Removes all listeners from the event emitter. (Only\r\n * removes listeners for a specific event name if specified\r\n * as `type`).\r\n * @param {string | symbol} [type]\r\n * @returns {EventEmitter}\r\n */\r\nEventEmitter.prototype.removeAllListeners =\r\n    function removeAllListeners(type) {\r\n      const events = this._events;\r\n      if (events === undefined)\r\n        return this;\r\n\r\n      // Not listening for removeListener, no need to emit\r\n      if (events.removeListener === undefined) {\r\n        if (arguments.length === 0) {\r\n          this._events = ObjectCreate(null);\r\n          this._eventsCount = 0;\r\n        } else if (events[type] !== undefined) {\r\n          if (--this._eventsCount === 0)\r\n            this._events = ObjectCreate(null);\r\n          else\r\n            delete events[type];\r\n        }\r\n        return this;\r\n      }\r\n\r\n      // Emit removeListener for all listeners on all events\r\n      if (arguments.length === 0) {\r\n        for (const key of ReflectOwnKeys(events)) {\r\n          if (key === 'removeListener') continue;\r\n          this.removeAllListeners(key);\r\n        }\r\n        this.removeAllListeners('removeListener');\r\n        this._events = ObjectCreate(null);\r\n        this._eventsCount = 0;\r\n        return this;\r\n      }\r\n\r\n      const listeners = events[type];\r\n\r\n      if (typeof listeners === 'function') {\r\n        this.removeListener(type, listeners);\r\n      } else if (listeners !== undefined) {\r\n        // LIFO order\r\n        for (let i = listeners.length - 1; i >= 0; i--) {\r\n          this.removeListener(type, listeners[i]);\r\n        }\r\n      }\r\n\r\n      return this;\r\n    };\r\n\r\nfunction _listeners(target, type, unwrap) {\r\n  const events = target._events;\r\n\r\n  if (events === undefined)\r\n    return [];\r\n\r\n  const evlistener = events[type];\r\n  if (evlistener === undefined)\r\n    return [];\r\n\r\n  if (typeof evlistener === 'function')\r\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\r\n\r\n  return unwrap ?\r\n    unwrapListeners(evlistener) : arrayClone(evlistener);\r\n}\r\n\r\n/**\r\n * Returns a copy of the array of listeners for the event name\r\n * specified as `type`.\r\n * @param {string | symbol} type\r\n * @returns {Function[]}\r\n */\r\nEventEmitter.prototype.listeners = function listeners(type) {\r\n  return _listeners(this, type, true);\r\n};\r\n\r\n/**\r\n * Returns a copy of the array of listeners and wrappers for\r\n * the event name specified as `type`.\r\n * @param {string | symbol} type\r\n * @returns {Function[]}\r\n */\r\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\r\n  return _listeners(this, type, false);\r\n};\r\n\r\n/**\r\n * Returns the number of listeners listening to the event name\r\n * specified as `type`.\r\n * @deprecated since v3.2.0\r\n * @param {EventEmitter} emitter\r\n * @param {string | symbol} type\r\n * @returns {number}\r\n */\r\nEventEmitter.listenerCount = function(emitter, type) {\r\n  if (typeof emitter.listenerCount === 'function') {\r\n    return emitter.listenerCount(type);\r\n  }\r\n  return FunctionPrototypeCall(listenerCount, emitter, type);\r\n};\r\n\r\nEventEmitter.prototype.listenerCount = listenerCount;\r\n\r\n/**\r\n * Returns the number of listeners listening to event name\r\n * specified as `type`.\r\n * @param {string | symbol} type\r\n * @returns {number}\r\n */\r\nfunction listenerCount(type) {\r\n  const events = this._events;\r\n\r\n  if (events !== undefined) {\r\n    const evlistener = events[type];\r\n\r\n    if (typeof evlistener === 'function') {\r\n      return 1;\r\n    } else if (evlistener !== undefined) {\r\n      return evlistener.length;\r\n    }\r\n  }\r\n\r\n  return 0;\r\n}\r\n\r\n/**\r\n * Returns an array listing the events for which\r\n * the emitter has registered listeners.\r\n * @returns {any[]}\r\n */\r\nEventEmitter.prototype.eventNames = function eventNames() {\r\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\r\n};\r\n\r\nfunction arrayClone(arr) {\r\n  // At least since V8 8.3, this implementation is faster than the previous\r\n  // which always used a simple for-loop\r\n  switch (arr.length) {\r\n    case 2: return [arr[0], arr[1]];\r\n    case 3: return [arr[0], arr[1], arr[2]];\r\n    case 4: return [arr[0], arr[1], arr[2], arr[3]];\r\n    case 5: return [arr[0], arr[1], arr[2], arr[3], arr[4]];\r\n    case 6: return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]];\r\n  }\r\n  return ArrayPrototypeSlice(arr);\r\n}\r\n\r\nfunction unwrapListeners(arr) {\r\n  const ret = arrayClone(arr);\r\n  for (let i = 0; i < ret.length; ++i) {\r\n    const orig = ret[i].listener;\r\n    if (typeof orig === 'function')\r\n      ret[i] = orig;\r\n  }\r\n  return ret;\r\n}\r\n\r\n/**\r\n * Returns a copy of the array of listeners for the event name\r\n * specified as `type`.\r\n * @param {EventEmitter | EventTarget} emitterOrTarget\r\n * @param {string | symbol} type\r\n * @returns {Function[]}\r\n */\r\nfunction getEventListeners(emitterOrTarget, type) {\r\n  // First check if EventEmitter\r\n  if (typeof emitterOrTarget.listeners === 'function') {\r\n    return emitterOrTarget.listeners(type);\r\n  }\r\n  // Require event target lazily to avoid always loading it\r\n  const { isEventTarget, kEvents } = require('internal/event_target');\r\n  if (isEventTarget(emitterOrTarget)) {\r\n    const root = emitterOrTarget[kEvents].get(type);\r\n    const listeners = [];\r\n    let handler = root?.next;\r\n    while (handler?.listener !== undefined) {\r\n      const listener = handler.listener?.deref ?\r\n        handler.listener.deref() : handler.listener;\r\n      listeners.push(listener);\r\n      handler = handler.next;\r\n    }\r\n    return listeners;\r\n  }\r\n  throw new ERR_INVALID_ARG_TYPE('emitter',\r\n                                 ['EventEmitter', 'EventTarget'],\r\n                                 emitterOrTarget);\r\n}\r\n\r\n/**\r\n * Creates a `Promise` that is fulfilled when the emitter\r\n * emits the given event.\r\n * @param {EventEmitter} emitter\r\n * @param {string} name\r\n * @param {{ signal: AbortSignal; }} [options]\r\n * @returns {Promise}\r\n */\r\nasync function once(emitter, name, options = kEmptyObject) {\r\n  const signal = options?.signal;\r\n  validateAbortSignal(signal, 'options.signal');\r\n  if (signal?.aborted)\r\n    throw new AbortError(undefined, { cause: signal?.reason });\r\n  return new Promise((resolve, reject) => {\r\n    const errorListener = (err) => {\r\n      emitter.removeListener(name, resolver);\r\n      if (signal != null) {\r\n        eventTargetAgnosticRemoveListener(signal, 'abort', abortListener);\r\n      }\r\n      reject(err);\r\n    };\r\n    const resolver = (...args) => {\r\n      if (typeof emitter.removeListener === 'function') {\r\n        emitter.removeListener('error', errorListener);\r\n      }\r\n      if (signal != null) {\r\n        eventTargetAgnosticRemoveListener(signal, 'abort', abortListener);\r\n      }\r\n      resolve(args);\r\n    };\r\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\r\n    if (name !== 'error' && typeof emitter.once === 'function') {\r\n      // EventTarget does not have `error` event semantics like Node\r\n      // EventEmitters, we listen to `error` events only on EventEmitters.\r\n      emitter.once('error', errorListener);\r\n    }\r\n    function abortListener() {\r\n      eventTargetAgnosticRemoveListener(emitter, name, resolver);\r\n      eventTargetAgnosticRemoveListener(emitter, 'error', errorListener);\r\n      reject(new AbortError(undefined, { cause: signal?.reason }));\r\n    }\r\n    if (signal != null) {\r\n      eventTargetAgnosticAddListener(\r\n        signal, 'abort', abortListener, { once: true });\r\n    }\r\n  });\r\n}\r\n\r\nconst AsyncIteratorPrototype = ObjectGetPrototypeOf(\r\n  ObjectGetPrototypeOf(async function* () {}).prototype);\r\n\r\nfunction createIterResult(value, done) {\r\n  return { value, done };\r\n}\r\n\r\nfunction eventTargetAgnosticRemoveListener(emitter, name, listener, flags) {\r\n  if (typeof emitter.removeListener === 'function') {\r\n    emitter.removeListener(name, listener);\r\n  } else if (typeof emitter.removeEventListener === 'function') {\r\n    emitter.removeEventListener(name, listener, flags);\r\n  } else {\r\n    throw new ERR_INVALID_ARG_TYPE('emitter', 'EventEmitter', emitter);\r\n  }\r\n}\r\n\r\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\r\n  if (typeof emitter.on === 'function') {\r\n    if (flags?.once) {\r\n      emitter.once(name, listener);\r\n    } else {\r\n      emitter.on(name, listener);\r\n    }\r\n  } else if (typeof emitter.addEventListener === 'function') {\r\n    emitter.addEventListener(name, listener, flags);\r\n  } else {\r\n    throw new ERR_INVALID_ARG_TYPE('emitter', 'EventEmitter', emitter);\r\n  }\r\n}\r\n\r\n/**\r\n * Returns an `AsyncIterator` that iterates `event` events.\r\n * @param {EventEmitter} emitter\r\n * @param {string | symbol} event\r\n * @param {{ signal: AbortSignal; }} [options]\r\n * @returns {AsyncIterator}\r\n */\r\nfunction on(emitter, event, options = kEmptyObject) {\r\n  const signal = options?.signal;\r\n  validateAbortSignal(signal, 'options.signal');\r\n  if (signal?.aborted)\r\n    throw new AbortError(undefined, { cause: signal?.reason });\r\n\r\n  const unconsumedEvents = [];\r\n  const unconsumedPromises = [];\r\n  let error = null;\r\n  let finished = false;\r\n\r\n  const iterator = ObjectSetPrototypeOf({\r\n    next() {\r\n      // First, we consume all unread events\r\n      const value = unconsumedEvents.shift();\r\n      if (value) {\r\n        return PromiseResolve(createIterResult(value, false));\r\n      }\r\n\r\n      // Then we error, if an error happened\r\n      // This happens one time if at all, because after 'error'\r\n      // we stop listening\r\n      if (error) {\r\n        const p = PromiseReject(error);\r\n        // Only the first element errors\r\n        error = null;\r\n        return p;\r\n      }\r\n\r\n      // If the iterator is finished, resolve to done\r\n      if (finished) {\r\n        return PromiseResolve(createIterResult(undefined, true));\r\n      }\r\n\r\n      // Wait until an event happens\r\n      return new Promise(function(resolve, reject) {\r\n        unconsumedPromises.push({ resolve, reject });\r\n      });\r\n    },\r\n\r\n    return() {\r\n      eventTargetAgnosticRemoveListener(emitter, event, eventHandler);\r\n      eventTargetAgnosticRemoveListener(emitter, 'error', errorHandler);\r\n\r\n      if (signal) {\r\n        eventTargetAgnosticRemoveListener(\r\n          signal,\r\n          'abort',\r\n          abortListener,\r\n          { once: true });\r\n      }\r\n\r\n      finished = true;\r\n\r\n      for (const promise of unconsumedPromises) {\r\n        promise.resolve(createIterResult(undefined, true));\r\n      }\r\n\r\n      return PromiseResolve(createIterResult(undefined, true));\r\n    },\r\n\r\n    throw(err) {\r\n      if (!err || !(err instanceof Error)) {\r\n        throw new ERR_INVALID_ARG_TYPE('EventEmitter.AsyncIterator',\r\n                                       'Error', err);\r\n      }\r\n      error = err;\r\n      eventTargetAgnosticRemoveListener(emitter, event, eventHandler);\r\n      eventTargetAgnosticRemoveListener(emitter, 'error', errorHandler);\r\n    },\r\n\r\n    [SymbolAsyncIterator]() {\r\n      return this;\r\n    }\r\n  }, AsyncIteratorPrototype);\r\n\r\n  eventTargetAgnosticAddListener(emitter, event, eventHandler);\r\n  if (event !== 'error' && typeof emitter.on === 'function') {\r\n    emitter.on('error', errorHandler);\r\n  }\r\n\r\n  if (signal) {\r\n    eventTargetAgnosticAddListener(\r\n      signal,\r\n      'abort',\r\n      abortListener,\r\n      { once: true });\r\n  }\r\n\r\n  function abortListener() {\r\n    errorHandler(new AbortError(undefined, { cause: signal?.reason }));\r\n  }\r\n\r\n  function eventHandler(...args) {\r\n    const promise = ArrayPrototypeShift(unconsumedPromises);\r\n    if (promise) {\r\n      promise.resolve(createIterResult(args, false));\r\n    } else {\r\n      unconsumedEvents.push(args);\r\n    }\r\n  }\r\n\r\n  function errorHandler(err) {\r\n    finished = true;\r\n\r\n    const toError = ArrayPrototypeShift(unconsumedPromises);\r\n\r\n    if (toError) {\r\n      toError.reject(err);\r\n    } else {\r\n      // The next time we call next()\r\n      error = err;\r\n    }\r\n\r\n    iterator.return();\r\n  }\r\n  return iterator;\r\n}\r\n",
    "name": "node:events",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 29,
    "sourcePositions": []
  },
  {
    "url": "node:buffer",
    "source": "// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n'use strict';\r\n\r\nconst {\r\n  Array,\r\n  ArrayFrom,\r\n  ArrayIsArray,\r\n  ArrayPrototypeForEach,\r\n  ArrayPrototypeIndexOf,\r\n  MathFloor,\r\n  MathMin,\r\n  MathTrunc,\r\n  NumberIsNaN,\r\n  NumberMAX_SAFE_INTEGER,\r\n  NumberMIN_SAFE_INTEGER,\r\n  ObjectCreate,\r\n  ObjectDefineProperties,\r\n  ObjectDefineProperty,\r\n  ObjectSetPrototypeOf,\r\n  RegExpPrototypeSymbolReplace,\r\n  StringPrototypeCharCodeAt,\r\n  StringPrototypeSlice,\r\n  StringPrototypeToLowerCase,\r\n  StringPrototypeTrim,\r\n  SymbolSpecies,\r\n  SymbolToPrimitive,\r\n  TypedArrayPrototypeGetByteLength,\r\n  TypedArrayPrototypeFill,\r\n  TypedArrayPrototypeSet,\r\n  Uint8Array,\r\n  Uint8ArrayPrototype,\r\n} = primordials;\r\n\r\nconst {\r\n  byteLengthUtf8,\r\n  compare: _compare,\r\n  compareOffset,\r\n  createFromString,\r\n  fill: bindingFill,\r\n  isAscii: bindingIsAscii,\r\n  isUtf8: bindingIsUtf8,\r\n  indexOfBuffer,\r\n  indexOfNumber,\r\n  indexOfString,\r\n  swap16: _swap16,\r\n  swap32: _swap32,\r\n  swap64: _swap64,\r\n  kMaxLength,\r\n  kStringMaxLength\r\n} = internalBinding('buffer');\r\nconst {\r\n  constants: {\r\n    ALL_PROPERTIES,\r\n    ONLY_ENUMERABLE,\r\n  },\r\n  getOwnNonIndexProperties,\r\n} = internalBinding('util');\r\nconst {\r\n  customInspectSymbol,\r\n  isInsideNodeModules,\r\n  lazyDOMException,\r\n  normalizeEncoding,\r\n  kIsEncodingSymbol\r\n} = require('internal/util');\r\nconst {\r\n  isAnyArrayBuffer,\r\n  isArrayBufferView,\r\n  isUint8Array,\r\n  isTypedArray,\r\n} = require('internal/util/types');\r\nconst {\r\n  inspect: utilInspect\r\n} = require('internal/util/inspect');\r\nconst { encodings } = internalBinding('string_decoder');\r\n\r\nconst {\r\n  codes: {\r\n    ERR_BUFFER_OUT_OF_BOUNDS,\r\n    ERR_INVALID_ARG_TYPE,\r\n    ERR_INVALID_ARG_VALUE,\r\n    ERR_INVALID_BUFFER_SIZE,\r\n    ERR_OUT_OF_RANGE,\r\n    ERR_MISSING_ARGS,\r\n    ERR_UNKNOWN_ENCODING\r\n  },\r\n  genericNodeError,\r\n  hideStackFrames,\r\n} = require('internal/errors');\r\nconst {\r\n  validateArray,\r\n  validateBuffer,\r\n  validateNumber,\r\n  validateInteger,\r\n  validateString\r\n} = require('internal/validators');\r\n// Provide validateInteger() but with kMaxLength as the default maximum value.\r\nconst validateOffset = (value, name, min = 0, max = kMaxLength) =>\r\n  validateInteger(value, name, min, max);\r\n\r\nconst {\r\n  FastBuffer,\r\n  markAsUntransferable,\r\n  addBufferPrototypeMethods,\r\n  createUnsafeBuffer\r\n} = require('internal/buffer');\r\n\r\nconst {\r\n  Blob,\r\n  resolveObjectURL,\r\n} = require('internal/blob');\r\n\r\nconst {\r\n  File,\r\n} = require('internal/file');\r\n\r\nFastBuffer.prototype.constructor = Buffer;\r\nBuffer.prototype = FastBuffer.prototype;\r\naddBufferPrototypeMethods(Buffer.prototype);\r\n\r\nconst constants = ObjectDefineProperties({}, {\r\n  MAX_LENGTH: {\r\n    __proto__: null,\r\n    value: kMaxLength,\r\n    writable: false,\r\n    enumerable: true\r\n  },\r\n  MAX_STRING_LENGTH: {\r\n    __proto__: null,\r\n    value: kStringMaxLength,\r\n    writable: false,\r\n    enumerable: true\r\n  }\r\n});\r\n\r\nBuffer.poolSize = 8 * 1024;\r\nlet poolSize, poolOffset, allocPool;\r\n\r\nconst encodingsMap = ObjectCreate(null);\r\nfor (let i = 0; i < encodings.length; ++i)\r\n  encodingsMap[encodings[i]] = i;\r\n\r\nfunction createPool() {\r\n  poolSize = Buffer.poolSize;\r\n  allocPool = createUnsafeBuffer(poolSize).buffer;\r\n  markAsUntransferable(allocPool);\r\n  poolOffset = 0;\r\n}\r\ncreatePool();\r\n\r\nfunction alignPool() {\r\n  // Ensure aligned slices\r\n  if (poolOffset & 0x7) {\r\n    poolOffset |= 0x7;\r\n    poolOffset++;\r\n  }\r\n}\r\n\r\nlet bufferWarningAlreadyEmitted = false;\r\nlet nodeModulesCheckCounter = 0;\r\nconst bufferWarning = 'Buffer() is deprecated due to security and usability ' +\r\n                      'issues. Please use the Buffer.alloc(), ' +\r\n                      'Buffer.allocUnsafe(), or Buffer.from() methods instead.';\r\n\r\nfunction showFlaggedDeprecation() {\r\n  if (bufferWarningAlreadyEmitted ||\r\n      ++nodeModulesCheckCounter > 10000 ||\r\n      (!require('internal/options').getOptionValue('--pending-deprecation') &&\r\n       isInsideNodeModules())) {\r\n    // We don't emit a warning, because we either:\r\n    // - Already did so, or\r\n    // - Already checked too many times whether a call is coming\r\n    //   from node_modules and want to stop slowing down things, or\r\n    // - We aren't running with `--pending-deprecation` enabled,\r\n    //   and the code is inside `node_modules`.\r\n    return;\r\n  }\r\n\r\n  process.emitWarning(bufferWarning, 'DeprecationWarning', 'DEP0005');\r\n  bufferWarningAlreadyEmitted = true;\r\n}\r\n\r\nfunction toInteger(n, defaultVal) {\r\n  n = +n;\r\n  if (!NumberIsNaN(n) &&\r\n      n >= NumberMIN_SAFE_INTEGER &&\r\n      n <= NumberMAX_SAFE_INTEGER) {\r\n    return ((n % 1) === 0 ? n : MathFloor(n));\r\n  }\r\n  return defaultVal;\r\n}\r\n\r\nfunction _copy(source, target, targetStart, sourceStart, sourceEnd) {\r\n  if (!isUint8Array(source))\r\n    throw new ERR_INVALID_ARG_TYPE('source', ['Buffer', 'Uint8Array'], source);\r\n  if (!isUint8Array(target))\r\n    throw new ERR_INVALID_ARG_TYPE('target', ['Buffer', 'Uint8Array'], target);\r\n\r\n  if (targetStart === undefined) {\r\n    targetStart = 0;\r\n  } else {\r\n    targetStart = toInteger(targetStart, 0);\r\n    if (targetStart < 0)\r\n      throw new ERR_OUT_OF_RANGE('targetStart', '>= 0', targetStart);\r\n  }\r\n\r\n  if (sourceStart === undefined) {\r\n    sourceStart = 0;\r\n  } else {\r\n    sourceStart = toInteger(sourceStart, 0);\r\n    if (sourceStart < 0)\r\n      throw new ERR_OUT_OF_RANGE('sourceStart', '>= 0', sourceStart);\r\n  }\r\n\r\n  if (sourceEnd === undefined) {\r\n    sourceEnd = source.length;\r\n  } else {\r\n    sourceEnd = toInteger(sourceEnd, 0);\r\n    if (sourceEnd < 0)\r\n      throw new ERR_OUT_OF_RANGE('sourceEnd', '>= 0', sourceEnd);\r\n  }\r\n\r\n  if (targetStart >= target.length || sourceStart >= sourceEnd)\r\n    return 0;\r\n\r\n  if (sourceStart > source.length) {\r\n    throw new ERR_OUT_OF_RANGE('sourceStart',\r\n                               `<= ${source.length}`,\r\n                               sourceStart);\r\n  }\r\n\r\n  return _copyActual(source, target, targetStart, sourceStart, sourceEnd);\r\n}\r\n\r\nfunction _copyActual(source, target, targetStart, sourceStart, sourceEnd) {\r\n  if (sourceEnd - sourceStart > target.length - targetStart)\r\n    sourceEnd = sourceStart + target.length - targetStart;\r\n\r\n  let nb = sourceEnd - sourceStart;\r\n  const sourceLen = source.length - sourceStart;\r\n  if (nb > sourceLen)\r\n    nb = sourceLen;\r\n\r\n  if (sourceStart !== 0 || sourceEnd < source.length)\r\n    source = new Uint8Array(source.buffer, source.byteOffset + sourceStart, nb);\r\n\r\n  TypedArrayPrototypeSet(target, source, targetStart);\r\n\r\n  return nb;\r\n}\r\n\r\n/**\r\n * The Buffer() constructor is deprecated in documentation and should not be\r\n * used moving forward. Rather, developers should use one of the three new\r\n * factory APIs: Buffer.from(), Buffer.allocUnsafe() or Buffer.alloc() based on\r\n * their specific needs. There is no runtime deprecation because of the extent\r\n * to which the Buffer constructor is used in the ecosystem currently -- a\r\n * runtime deprecation would introduce too much breakage at this time. It's not\r\n * likely that the Buffer constructors would ever actually be removed.\r\n * Deprecation Code: DEP0005\r\n */\r\nfunction Buffer(arg, encodingOrOffset, length) {\r\n  showFlaggedDeprecation();\r\n  // Common case.\r\n  if (typeof arg === 'number') {\r\n    if (typeof encodingOrOffset === 'string') {\r\n      throw new ERR_INVALID_ARG_TYPE('string', 'string', arg);\r\n    }\r\n    return Buffer.alloc(arg);\r\n  }\r\n  return Buffer.from(arg, encodingOrOffset, length);\r\n}\r\n\r\nObjectDefineProperty(Buffer, SymbolSpecies, {\r\n  __proto__: null,\r\n  enumerable: false,\r\n  configurable: true,\r\n  get() { return FastBuffer; }\r\n});\r\n\r\n/**\r\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\r\n * if value is a number.\r\n * Buffer.from(str[, encoding])\r\n * Buffer.from(array)\r\n * Buffer.from(buffer)\r\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\r\n */\r\nBuffer.from = function from(value, encodingOrOffset, length) {\r\n  if (typeof value === 'string')\r\n    return fromString(value, encodingOrOffset);\r\n\r\n  if (typeof value === 'object' && value !== null) {\r\n    if (isAnyArrayBuffer(value))\r\n      return fromArrayBuffer(value, encodingOrOffset, length);\r\n\r\n    const valueOf = value.valueOf && value.valueOf();\r\n    if (valueOf != null &&\r\n        valueOf !== value &&\r\n        (typeof valueOf === 'string' || typeof valueOf === 'object')) {\r\n      return from(valueOf, encodingOrOffset, length);\r\n    }\r\n\r\n    const b = fromObject(value);\r\n    if (b)\r\n      return b;\r\n\r\n    if (typeof value[SymbolToPrimitive] === 'function') {\r\n      const primitive = value[SymbolToPrimitive]('string');\r\n      if (typeof primitive === 'string') {\r\n        return fromString(primitive, encodingOrOffset);\r\n      }\r\n    }\r\n  }\r\n\r\n  throw new ERR_INVALID_ARG_TYPE(\r\n    'first argument',\r\n    ['string', 'Buffer', 'ArrayBuffer', 'Array', 'Array-like Object'],\r\n    value\r\n  );\r\n};\r\n\r\n// Identical to the built-in %TypedArray%.of(), but avoids using the deprecated\r\n// Buffer() constructor. Must use arrow function syntax to avoid automatically\r\n// adding a `prototype` property and making the function a constructor.\r\n//\r\n// Refs: https://tc39.github.io/ecma262/#sec-%typedarray%.of\r\n// Refs: https://esdiscuss.org/topic/isconstructor#content-11\r\nconst of = (...items) => {\r\n  const newObj = createUnsafeBuffer(items.length);\r\n  for (let k = 0; k < items.length; k++)\r\n    newObj[k] = items[k];\r\n  return newObj;\r\n};\r\nBuffer.of = of;\r\n\r\nObjectSetPrototypeOf(Buffer, Uint8Array);\r\n\r\n// The 'assertSize' method will remove itself from the callstack when an error\r\n// occurs. This is done simply to keep the internal details of the\r\n// implementation from bleeding out to users.\r\nconst assertSize = hideStackFrames((size) => {\r\n  validateNumber(size, 'size');\r\n  if (!(size >= 0 && size <= kMaxLength)) {\r\n    throw new ERR_INVALID_ARG_VALUE.RangeError('size', size);\r\n  }\r\n});\r\n\r\n/**\r\n * Creates a new filled Buffer instance.\r\n * alloc(size[, fill[, encoding]])\r\n */\r\nBuffer.alloc = function alloc(size, fill, encoding) {\r\n  assertSize(size);\r\n  if (fill !== undefined && fill !== 0 && size > 0) {\r\n    const buf = createUnsafeBuffer(size);\r\n    return _fill(buf, fill, 0, buf.length, encoding);\r\n  }\r\n  return new FastBuffer(size);\r\n};\r\n\r\n/**\r\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer\r\n * instance. If `--zero-fill-buffers` is set, will zero-fill the buffer.\r\n */\r\nBuffer.allocUnsafe = function allocUnsafe(size) {\r\n  assertSize(size);\r\n  return allocate(size);\r\n};\r\n\r\n/**\r\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled\r\n * Buffer instance that is not allocated off the pre-initialized pool.\r\n * If `--zero-fill-buffers` is set, will zero-fill the buffer.\r\n */\r\nBuffer.allocUnsafeSlow = function allocUnsafeSlow(size) {\r\n  assertSize(size);\r\n  return createUnsafeBuffer(size);\r\n};\r\n\r\n// If --zero-fill-buffers command line argument is set, a zero-filled\r\n// buffer is returned.\r\nfunction SlowBuffer(length) {\r\n  assertSize(length);\r\n  return createUnsafeBuffer(length);\r\n}\r\n\r\nObjectSetPrototypeOf(SlowBuffer.prototype, Uint8ArrayPrototype);\r\nObjectSetPrototypeOf(SlowBuffer, Uint8Array);\r\n\r\nfunction allocate(size) {\r\n  if (size <= 0) {\r\n    return new FastBuffer();\r\n  }\r\n  if (size < (Buffer.poolSize >>> 1)) {\r\n    if (size > (poolSize - poolOffset))\r\n      createPool();\r\n    const b = new FastBuffer(allocPool, poolOffset, size);\r\n    poolOffset += size;\r\n    alignPool();\r\n    return b;\r\n  }\r\n  return createUnsafeBuffer(size);\r\n}\r\n\r\nfunction fromStringFast(string, ops) {\r\n  const length = ops.byteLength(string);\r\n\r\n  if (length >= (Buffer.poolSize >>> 1))\r\n    return createFromString(string, ops.encodingVal);\r\n\r\n  if (length > (poolSize - poolOffset))\r\n    createPool();\r\n  let b = new FastBuffer(allocPool, poolOffset, length);\r\n  const actual = ops.write(b, string, 0, length);\r\n  if (actual !== length) {\r\n    // byteLength() may overestimate. That's a rare case, though.\r\n    b = new FastBuffer(allocPool, poolOffset, actual);\r\n  }\r\n  poolOffset += actual;\r\n  alignPool();\r\n  return b;\r\n}\r\n\r\nfunction fromString(string, encoding) {\r\n  let ops;\r\n  if (typeof encoding !== 'string' || encoding.length === 0) {\r\n    if (string.length === 0)\r\n      return new FastBuffer();\r\n    ops = encodingOps.utf8;\r\n    encoding = undefined;\r\n  } else {\r\n    ops = getEncodingOps(encoding);\r\n    if (ops === undefined)\r\n      throw new ERR_UNKNOWN_ENCODING(encoding);\r\n    if (string.length === 0)\r\n      return new FastBuffer();\r\n  }\r\n  return fromStringFast(string, ops);\r\n}\r\n\r\nfunction fromArrayBuffer(obj, byteOffset, length) {\r\n  // Convert byteOffset to integer\r\n  if (byteOffset === undefined) {\r\n    byteOffset = 0;\r\n  } else {\r\n    byteOffset = +byteOffset;\r\n    if (NumberIsNaN(byteOffset))\r\n      byteOffset = 0;\r\n  }\r\n\r\n  const maxLength = obj.byteLength - byteOffset;\r\n\r\n  if (maxLength < 0)\r\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\r\n\r\n  if (length === undefined) {\r\n    length = maxLength;\r\n  } else {\r\n    // Convert length to non-negative integer.\r\n    length = +length;\r\n    if (length > 0) {\r\n      if (length > maxLength)\r\n        throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\r\n    } else {\r\n      length = 0;\r\n    }\r\n  }\r\n\r\n  return new FastBuffer(obj, byteOffset, length);\r\n}\r\n\r\nfunction fromArrayLike(obj) {\r\n  if (obj.length <= 0)\r\n    return new FastBuffer();\r\n  if (obj.length < (Buffer.poolSize >>> 1)) {\r\n    if (obj.length > (poolSize - poolOffset))\r\n      createPool();\r\n    const b = new FastBuffer(allocPool, poolOffset, obj.length);\r\n    TypedArrayPrototypeSet(b, obj, 0);\r\n    poolOffset += obj.length;\r\n    alignPool();\r\n    return b;\r\n  }\r\n  return new FastBuffer(obj);\r\n}\r\n\r\nfunction fromObject(obj) {\r\n  if (obj.length !== undefined || isAnyArrayBuffer(obj.buffer)) {\r\n    if (typeof obj.length !== 'number') {\r\n      return new FastBuffer();\r\n    }\r\n    return fromArrayLike(obj);\r\n  }\r\n\r\n  if (obj.type === 'Buffer' && ArrayIsArray(obj.data)) {\r\n    return fromArrayLike(obj.data);\r\n  }\r\n}\r\n\r\n// Static methods\r\n\r\nBuffer.isBuffer = function isBuffer(b) {\r\n  return b instanceof Buffer;\r\n};\r\n\r\nBuffer.compare = function compare(buf1, buf2) {\r\n  if (!isUint8Array(buf1)) {\r\n    throw new ERR_INVALID_ARG_TYPE('buf1', ['Buffer', 'Uint8Array'], buf1);\r\n  }\r\n\r\n  if (!isUint8Array(buf2)) {\r\n    throw new ERR_INVALID_ARG_TYPE('buf2', ['Buffer', 'Uint8Array'], buf2);\r\n  }\r\n\r\n  if (buf1 === buf2) {\r\n    return 0;\r\n  }\r\n\r\n  return _compare(buf1, buf2);\r\n};\r\n\r\nBuffer.isEncoding = function isEncoding(encoding) {\r\n  return typeof encoding === 'string' && encoding.length !== 0 &&\r\n         normalizeEncoding(encoding) !== undefined;\r\n};\r\nBuffer[kIsEncodingSymbol] = Buffer.isEncoding;\r\n\r\nBuffer.concat = function concat(list, length) {\r\n  validateArray(list, 'list');\r\n\r\n  if (list.length === 0)\r\n    return new FastBuffer();\r\n\r\n  if (length === undefined) {\r\n    length = 0;\r\n    for (let i = 0; i < list.length; i++) {\r\n      if (list[i].length) {\r\n        length += list[i].length;\r\n      }\r\n    }\r\n  } else {\r\n    validateOffset(length, 'length');\r\n  }\r\n\r\n  const buffer = Buffer.allocUnsafe(length);\r\n  let pos = 0;\r\n  for (let i = 0; i < list.length; i++) {\r\n    const buf = list[i];\r\n    if (!isUint8Array(buf)) {\r\n      // TODO(BridgeAR): This should not be of type ERR_INVALID_ARG_TYPE.\r\n      // Instead, find the proper error code for this.\r\n      throw new ERR_INVALID_ARG_TYPE(\r\n        `list[${i}]`, ['Buffer', 'Uint8Array'], list[i]);\r\n    }\r\n    pos += _copyActual(buf, buffer, pos, 0, buf.length);\r\n  }\r\n\r\n  // Note: `length` is always equal to `buffer.length` at this point\r\n  if (pos < length) {\r\n    // Zero-fill the remaining bytes if the specified `length` was more than\r\n    // the actual total length, i.e. if we have some remaining allocated bytes\r\n    // there were not initialized.\r\n    TypedArrayPrototypeFill(buffer, 0, pos, length);\r\n  }\r\n\r\n  return buffer;\r\n};\r\n\r\nfunction base64ByteLength(str, bytes) {\r\n  // Handle padding\r\n  if (StringPrototypeCharCodeAt(str, bytes - 1) === 0x3D)\r\n    bytes--;\r\n  if (bytes > 1 && StringPrototypeCharCodeAt(str, bytes - 1) === 0x3D)\r\n    bytes--;\r\n\r\n  // Base64 ratio: 3/4\r\n  return (bytes * 3) >>> 2;\r\n}\r\n\r\nconst encodingOps = {\r\n  utf8: {\r\n    encoding: 'utf8',\r\n    encodingVal: encodingsMap.utf8,\r\n    byteLength: byteLengthUtf8,\r\n    write: (buf, string, offset, len) => buf.utf8Write(string, offset, len),\r\n    slice: (buf, start, end) => buf.utf8Slice(start, end),\r\n    indexOf: (buf, val, byteOffset, dir) =>\r\n      indexOfString(buf, val, byteOffset, encodingsMap.utf8, dir)\r\n  },\r\n  ucs2: {\r\n    encoding: 'ucs2',\r\n    encodingVal: encodingsMap.utf16le,\r\n    byteLength: (string) => string.length * 2,\r\n    write: (buf, string, offset, len) => buf.ucs2Write(string, offset, len),\r\n    slice: (buf, start, end) => buf.ucs2Slice(start, end),\r\n    indexOf: (buf, val, byteOffset, dir) =>\r\n      indexOfString(buf, val, byteOffset, encodingsMap.utf16le, dir)\r\n  },\r\n  utf16le: {\r\n    encoding: 'utf16le',\r\n    encodingVal: encodingsMap.utf16le,\r\n    byteLength: (string) => string.length * 2,\r\n    write: (buf, string, offset, len) => buf.ucs2Write(string, offset, len),\r\n    slice: (buf, start, end) => buf.ucs2Slice(start, end),\r\n    indexOf: (buf, val, byteOffset, dir) =>\r\n      indexOfString(buf, val, byteOffset, encodingsMap.utf16le, dir)\r\n  },\r\n  latin1: {\r\n    encoding: 'latin1',\r\n    encodingVal: encodingsMap.latin1,\r\n    byteLength: (string) => string.length,\r\n    write: (buf, string, offset, len) => buf.latin1Write(string, offset, len),\r\n    slice: (buf, start, end) => buf.latin1Slice(start, end),\r\n    indexOf: (buf, val, byteOffset, dir) =>\r\n      indexOfString(buf, val, byteOffset, encodingsMap.latin1, dir)\r\n  },\r\n  ascii: {\r\n    encoding: 'ascii',\r\n    encodingVal: encodingsMap.ascii,\r\n    byteLength: (string) => string.length,\r\n    write: (buf, string, offset, len) => buf.asciiWrite(string, offset, len),\r\n    slice: (buf, start, end) => buf.asciiSlice(start, end),\r\n    indexOf: (buf, val, byteOffset, dir) =>\r\n      indexOfBuffer(buf,\r\n                    fromStringFast(val, encodingOps.ascii),\r\n                    byteOffset,\r\n                    encodingsMap.ascii,\r\n                    dir)\r\n  },\r\n  base64: {\r\n    encoding: 'base64',\r\n    encodingVal: encodingsMap.base64,\r\n    byteLength: (string) => base64ByteLength(string, string.length),\r\n    write: (buf, string, offset, len) => buf.base64Write(string, offset, len),\r\n    slice: (buf, start, end) => buf.base64Slice(start, end),\r\n    indexOf: (buf, val, byteOffset, dir) =>\r\n      indexOfBuffer(buf,\r\n                    fromStringFast(val, encodingOps.base64),\r\n                    byteOffset,\r\n                    encodingsMap.base64,\r\n                    dir)\r\n  },\r\n  base64url: {\r\n    encoding: 'base64url',\r\n    encodingVal: encodingsMap.base64url,\r\n    byteLength: (string) => base64ByteLength(string, string.length),\r\n    write: (buf, string, offset, len) =>\r\n      buf.base64urlWrite(string, offset, len),\r\n    slice: (buf, start, end) => buf.base64urlSlice(start, end),\r\n    indexOf: (buf, val, byteOffset, dir) =>\r\n      indexOfBuffer(buf,\r\n                    fromStringFast(val, encodingOps.base64url),\r\n                    byteOffset,\r\n                    encodingsMap.base64url,\r\n                    dir)\r\n  },\r\n  hex: {\r\n    encoding: 'hex',\r\n    encodingVal: encodingsMap.hex,\r\n    byteLength: (string) => string.length >>> 1,\r\n    write: (buf, string, offset, len) => buf.hexWrite(string, offset, len),\r\n    slice: (buf, start, end) => buf.hexSlice(start, end),\r\n    indexOf: (buf, val, byteOffset, dir) =>\r\n      indexOfBuffer(buf,\r\n                    fromStringFast(val, encodingOps.hex),\r\n                    byteOffset,\r\n                    encodingsMap.hex,\r\n                    dir)\r\n  }\r\n};\r\nfunction getEncodingOps(encoding) {\r\n  encoding += '';\r\n  switch (encoding.length) {\r\n    case 4:\r\n      if (encoding === 'utf8') return encodingOps.utf8;\r\n      if (encoding === 'ucs2') return encodingOps.ucs2;\r\n      encoding = StringPrototypeToLowerCase(encoding);\r\n      if (encoding === 'utf8') return encodingOps.utf8;\r\n      if (encoding === 'ucs2') return encodingOps.ucs2;\r\n      break;\r\n    case 5:\r\n      if (encoding === 'utf-8') return encodingOps.utf8;\r\n      if (encoding === 'ascii') return encodingOps.ascii;\r\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\r\n      encoding = StringPrototypeToLowerCase(encoding);\r\n      if (encoding === 'utf-8') return encodingOps.utf8;\r\n      if (encoding === 'ascii') return encodingOps.ascii;\r\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\r\n      break;\r\n    case 7:\r\n      if (encoding === 'utf16le' ||\r\n          StringPrototypeToLowerCase(encoding) === 'utf16le')\r\n        return encodingOps.utf16le;\r\n      break;\r\n    case 8:\r\n      if (encoding === 'utf-16le' ||\r\n          StringPrototypeToLowerCase(encoding) === 'utf-16le')\r\n        return encodingOps.utf16le;\r\n      break;\r\n    case 6:\r\n      if (encoding === 'latin1' || encoding === 'binary')\r\n        return encodingOps.latin1;\r\n      if (encoding === 'base64') return encodingOps.base64;\r\n      encoding = StringPrototypeToLowerCase(encoding);\r\n      if (encoding === 'latin1' || encoding === 'binary')\r\n        return encodingOps.latin1;\r\n      if (encoding === 'base64') return encodingOps.base64;\r\n      break;\r\n    case 3:\r\n      if (encoding === 'hex' || StringPrototypeToLowerCase(encoding) === 'hex')\r\n        return encodingOps.hex;\r\n      break;\r\n    case 9:\r\n      if (encoding === 'base64url' ||\r\n          StringPrototypeToLowerCase(encoding) === 'base64url')\r\n        return encodingOps.base64url;\r\n      break;\r\n  }\r\n}\r\n\r\nfunction byteLength(string, encoding) {\r\n  if (typeof string !== 'string') {\r\n    if (isArrayBufferView(string) || isAnyArrayBuffer(string)) {\r\n      return string.byteLength;\r\n    }\r\n\r\n    throw new ERR_INVALID_ARG_TYPE(\r\n      'string', ['string', 'Buffer', 'ArrayBuffer'], string\r\n    );\r\n  }\r\n\r\n  const len = string.length;\r\n  if (len === 0)\r\n    return 0;\r\n\r\n  if (encoding) {\r\n    const ops = getEncodingOps(encoding);\r\n    if (ops) {\r\n      return ops.byteLength(string);\r\n    }\r\n  }\r\n  return byteLengthUtf8(string);\r\n}\r\n\r\nBuffer.byteLength = byteLength;\r\n\r\n// For backwards compatibility.\r\nObjectDefineProperty(Buffer.prototype, 'parent', {\r\n  __proto__: null,\r\n  enumerable: true,\r\n  get() {\r\n    if (!(this instanceof Buffer))\r\n      return undefined;\r\n    return this.buffer;\r\n  }\r\n});\r\nObjectDefineProperty(Buffer.prototype, 'offset', {\r\n  __proto__: null,\r\n  enumerable: true,\r\n  get() {\r\n    if (!(this instanceof Buffer))\r\n      return undefined;\r\n    return this.byteOffset;\r\n  }\r\n});\r\n\r\nBuffer.prototype.copy =\r\n  function copy(target, targetStart, sourceStart, sourceEnd) {\r\n    return _copy(this, target, targetStart, sourceStart, sourceEnd);\r\n  };\r\n\r\n// No need to verify that \"buf.length <= MAX_UINT32\" since it's a read-only\r\n// property of a typed array.\r\n// This behaves neither like String nor Uint8Array in that we set start/end\r\n// to their upper/lower bounds if the value passed is out of range.\r\nBuffer.prototype.toString = function toString(encoding, start, end) {\r\n  if (arguments.length === 0) {\r\n    return this.utf8Slice(0, this.length);\r\n  }\r\n\r\n  const len = this.length;\r\n\r\n  if (start <= 0)\r\n    start = 0;\r\n  else if (start >= len)\r\n    return '';\r\n  else\r\n    start |= 0;\r\n\r\n  if (end === undefined || end > len)\r\n    end = len;\r\n  else\r\n    end |= 0;\r\n\r\n  if (end <= start)\r\n    return '';\r\n\r\n  if (encoding === undefined)\r\n    return this.utf8Slice(start, end);\r\n\r\n  const ops = getEncodingOps(encoding);\r\n  if (ops === undefined)\r\n    throw new ERR_UNKNOWN_ENCODING(encoding);\r\n\r\n  return ops.slice(this, start, end);\r\n};\r\n\r\nBuffer.prototype.equals = function equals(otherBuffer) {\r\n  if (!isUint8Array(otherBuffer)) {\r\n    throw new ERR_INVALID_ARG_TYPE(\r\n      'otherBuffer', ['Buffer', 'Uint8Array'], otherBuffer);\r\n  }\r\n\r\n  if (this === otherBuffer)\r\n    return true;\r\n\r\n  if (this.byteLength !== otherBuffer.byteLength)\r\n    return false;\r\n\r\n  return this.byteLength === 0 || _compare(this, otherBuffer) === 0;\r\n};\r\n\r\nlet INSPECT_MAX_BYTES = 50;\r\n// Override how buffers are presented by util.inspect().\r\nBuffer.prototype[customInspectSymbol] = function inspect(recurseTimes, ctx) {\r\n  const max = INSPECT_MAX_BYTES;\r\n  const actualMax = MathMin(max, this.length);\r\n  const remaining = this.length - max;\r\n  let str = StringPrototypeTrim(RegExpPrototypeSymbolReplace(\r\n    /(.{2})/g, this.hexSlice(0, actualMax), '$1 '));\r\n  if (remaining > 0)\r\n    str += ` ... ${remaining} more byte${remaining > 1 ? 's' : ''}`;\r\n  // Inspect special properties as well, if possible.\r\n  if (ctx) {\r\n    let extras = false;\r\n    const filter = ctx.showHidden ? ALL_PROPERTIES : ONLY_ENUMERABLE;\r\n    const obj = ObjectCreate(null);\r\n    ArrayPrototypeForEach(getOwnNonIndexProperties(this, filter),\r\n                          (key) => {\r\n                            extras = true;\r\n                            obj[key] = this[key];\r\n                          });\r\n    if (extras) {\r\n      if (this.length !== 0)\r\n        str += ', ';\r\n      // '[Object: null prototype] {'.length === 26\r\n      // This is guarded with a test.\r\n      str += StringPrototypeSlice(utilInspect(obj, {\r\n        ...ctx,\r\n        breakLength: Infinity,\r\n        compact: true\r\n      }), 27, -2);\r\n    }\r\n  }\r\n  return `<${this.constructor.name} ${str}>`;\r\n};\r\nBuffer.prototype.inspect = Buffer.prototype[customInspectSymbol];\r\n\r\nBuffer.prototype.compare = function compare(target,\r\n                                            targetStart,\r\n                                            targetEnd,\r\n                                            sourceStart,\r\n                                            sourceEnd) {\r\n  if (!isUint8Array(target)) {\r\n    throw new ERR_INVALID_ARG_TYPE('target', ['Buffer', 'Uint8Array'], target);\r\n  }\r\n  if (arguments.length === 1)\r\n    return _compare(this, target);\r\n\r\n  if (targetStart === undefined)\r\n    targetStart = 0;\r\n  else\r\n    validateOffset(targetStart, 'targetStart');\r\n\r\n  if (targetEnd === undefined)\r\n    targetEnd = target.length;\r\n  else\r\n    validateOffset(targetEnd, 'targetEnd', 0, target.length);\r\n\r\n  if (sourceStart === undefined)\r\n    sourceStart = 0;\r\n  else\r\n    validateOffset(sourceStart, 'sourceStart');\r\n\r\n  if (sourceEnd === undefined)\r\n    sourceEnd = this.length;\r\n  else\r\n    validateOffset(sourceEnd, 'sourceEnd', 0, this.length);\r\n\r\n  if (sourceStart >= sourceEnd)\r\n    return (targetStart >= targetEnd ? 0 : -1);\r\n  if (targetStart >= targetEnd)\r\n    return 1;\r\n\r\n  return compareOffset(this, target, targetStart, sourceStart, targetEnd,\r\n                       sourceEnd);\r\n};\r\n\r\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\r\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\r\n//\r\n// Arguments:\r\n// - buffer - a Buffer to search\r\n// - val - a string, Buffer, or number\r\n// - byteOffset - an index into `buffer`; will be clamped to an int32\r\n// - encoding - an optional encoding, relevant if val is a string\r\n// - dir - true for indexOf, false for lastIndexOf\r\nfunction bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\r\n  validateBuffer(buffer);\r\n\r\n  if (typeof byteOffset === 'string') {\r\n    encoding = byteOffset;\r\n    byteOffset = undefined;\r\n  } else if (byteOffset > 0x7fffffff) {\r\n    byteOffset = 0x7fffffff;\r\n  } else if (byteOffset < -0x80000000) {\r\n    byteOffset = -0x80000000;\r\n  }\r\n  // Coerce to Number. Values like null and [] become 0.\r\n  byteOffset = +byteOffset;\r\n  // If the offset is undefined, \"foo\", {}, coerces to NaN, search whole buffer.\r\n  if (NumberIsNaN(byteOffset)) {\r\n    byteOffset = dir ? 0 : (buffer.length || buffer.byteLength);\r\n  }\r\n  dir = !!dir;  // Cast to bool.\r\n\r\n  if (typeof val === 'number')\r\n    return indexOfNumber(buffer, val >>> 0, byteOffset, dir);\r\n\r\n  let ops;\r\n  if (encoding === undefined)\r\n    ops = encodingOps.utf8;\r\n  else\r\n    ops = getEncodingOps(encoding);\r\n\r\n  if (typeof val === 'string') {\r\n    if (ops === undefined)\r\n      throw new ERR_UNKNOWN_ENCODING(encoding);\r\n    return ops.indexOf(buffer, val, byteOffset, dir);\r\n  }\r\n\r\n  if (isUint8Array(val)) {\r\n    const encodingVal =\r\n      (ops === undefined ? encodingsMap.utf8 : ops.encodingVal);\r\n    return indexOfBuffer(buffer, val, byteOffset, encodingVal, dir);\r\n  }\r\n\r\n  throw new ERR_INVALID_ARG_TYPE(\r\n    'value', ['number', 'string', 'Buffer', 'Uint8Array'], val\r\n  );\r\n}\r\n\r\nBuffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\r\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\r\n};\r\n\r\nBuffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\r\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\r\n};\r\n\r\nBuffer.prototype.includes = function includes(val, byteOffset, encoding) {\r\n  return this.indexOf(val, byteOffset, encoding) !== -1;\r\n};\r\n\r\n// Usage:\r\n//    buffer.fill(number[, offset[, end]])\r\n//    buffer.fill(buffer[, offset[, end]])\r\n//    buffer.fill(string[, offset[, end]][, encoding])\r\nBuffer.prototype.fill = function fill(value, offset, end, encoding) {\r\n  return _fill(this, value, offset, end, encoding);\r\n};\r\n\r\nfunction _fill(buf, value, offset, end, encoding) {\r\n  if (typeof value === 'string') {\r\n    if (offset === undefined || typeof offset === 'string') {\r\n      encoding = offset;\r\n      offset = 0;\r\n      end = buf.length;\r\n    } else if (typeof end === 'string') {\r\n      encoding = end;\r\n      end = buf.length;\r\n    }\r\n\r\n    const normalizedEncoding = normalizeEncoding(encoding);\r\n    if (normalizedEncoding === undefined) {\r\n      validateString(encoding, 'encoding');\r\n      throw new ERR_UNKNOWN_ENCODING(encoding);\r\n    }\r\n\r\n    if (value.length === 0) {\r\n      // If value === '' default to zero.\r\n      value = 0;\r\n    } else if (value.length === 1) {\r\n      // Fast path: If `value` fits into a single byte, use that numeric value.\r\n      if (normalizedEncoding === 'utf8') {\r\n        const code = StringPrototypeCharCodeAt(value, 0);\r\n        if (code < 128) {\r\n          value = code;\r\n        }\r\n      } else if (normalizedEncoding === 'latin1') {\r\n        value = StringPrototypeCharCodeAt(value, 0);\r\n      }\r\n    }\r\n  } else {\r\n    encoding = undefined;\r\n  }\r\n\r\n  if (offset === undefined) {\r\n    offset = 0;\r\n    end = buf.length;\r\n  } else {\r\n    validateOffset(offset, 'offset');\r\n    // Invalid ranges are not set to a default, so can range check early.\r\n    if (end === undefined) {\r\n      end = buf.length;\r\n    } else {\r\n      validateOffset(end, 'end', 0, buf.length);\r\n    }\r\n    if (offset >= end)\r\n      return buf;\r\n  }\r\n\r\n\r\n  if (typeof value === 'number') {\r\n    // OOB check\r\n    const byteLen = TypedArrayPrototypeGetByteLength(buf);\r\n    const fillLength = end - offset;\r\n    if (offset > end || fillLength + offset > byteLen)\r\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\r\n\r\n    TypedArrayPrototypeFill(buf, value, offset, end);\r\n  } else {\r\n    const res = bindingFill(buf, value, offset, end, encoding);\r\n    if (res < 0) {\r\n      if (res === -1)\r\n        throw new ERR_INVALID_ARG_VALUE('value', value);\r\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\r\n    }\r\n  }\r\n\r\n  return buf;\r\n}\r\n\r\nBuffer.prototype.write = function write(string, offset, length, encoding) {\r\n  // Buffer#write(string);\r\n  if (offset === undefined) {\r\n    return this.utf8Write(string, 0, this.length);\r\n  }\r\n  // Buffer#write(string, encoding)\r\n  if (length === undefined && typeof offset === 'string') {\r\n    encoding = offset;\r\n    length = this.length;\r\n    offset = 0;\r\n\r\n  // Buffer#write(string, offset[, length][, encoding])\r\n  } else {\r\n    validateOffset(offset, 'offset', 0, this.length);\r\n\r\n    const remaining = this.length - offset;\r\n\r\n    if (length === undefined) {\r\n      length = remaining;\r\n    } else if (typeof length === 'string') {\r\n      encoding = length;\r\n      length = remaining;\r\n    } else {\r\n      validateOffset(length, 'length', 0, this.length);\r\n      if (length > remaining)\r\n        length = remaining;\r\n    }\r\n  }\r\n\r\n  if (!encoding)\r\n    return this.utf8Write(string, offset, length);\r\n\r\n  const ops = getEncodingOps(encoding);\r\n  if (ops === undefined)\r\n    throw new ERR_UNKNOWN_ENCODING(encoding);\r\n  return ops.write(this, string, offset, length);\r\n};\r\n\r\nBuffer.prototype.toJSON = function toJSON() {\r\n  if (this.length > 0) {\r\n    const data = new Array(this.length);\r\n    for (let i = 0; i < this.length; ++i)\r\n      data[i] = this[i];\r\n    return { type: 'Buffer', data };\r\n  }\r\n  return { type: 'Buffer', data: [] };\r\n};\r\n\r\nfunction adjustOffset(offset, length) {\r\n  // Use Math.trunc() to convert offset to an integer value that can be larger\r\n  // than an Int32. Hence, don't use offset | 0 or similar techniques.\r\n  offset = MathTrunc(offset);\r\n  if (offset === 0) {\r\n    return 0;\r\n  }\r\n  if (offset < 0) {\r\n    offset += length;\r\n    return offset > 0 ? offset : 0;\r\n  }\r\n  if (offset < length) {\r\n    return offset;\r\n  }\r\n  return NumberIsNaN(offset) ? 0 : length;\r\n}\r\n\r\nBuffer.prototype.subarray = function subarray(start, end) {\r\n  const srcLength = this.length;\r\n  start = adjustOffset(start, srcLength);\r\n  end = end !== undefined ? adjustOffset(end, srcLength) : srcLength;\r\n  const newLength = end > start ? end - start : 0;\r\n  return new FastBuffer(this.buffer, this.byteOffset + start, newLength);\r\n};\r\n\r\nBuffer.prototype.slice = function slice(start, end) {\r\n  return this.subarray(start, end);\r\n};\r\n\r\nfunction swap(b, n, m) {\r\n  const i = b[n];\r\n  b[n] = b[m];\r\n  b[m] = i;\r\n}\r\n\r\nBuffer.prototype.swap16 = function swap16() {\r\n  // For Buffer.length < 128, it's generally faster to\r\n  // do the swap in javascript. For larger buffers,\r\n  // dropping down to the native code is faster.\r\n  const len = this.length;\r\n  if (len % 2 !== 0)\r\n    throw new ERR_INVALID_BUFFER_SIZE('16-bits');\r\n  if (len < 128) {\r\n    for (let i = 0; i < len; i += 2)\r\n      swap(this, i, i + 1);\r\n    return this;\r\n  }\r\n  return _swap16(this);\r\n};\r\n\r\nBuffer.prototype.swap32 = function swap32() {\r\n  // For Buffer.length < 192, it's generally faster to\r\n  // do the swap in javascript. For larger buffers,\r\n  // dropping down to the native code is faster.\r\n  const len = this.length;\r\n  if (len % 4 !== 0)\r\n    throw new ERR_INVALID_BUFFER_SIZE('32-bits');\r\n  if (len < 192) {\r\n    for (let i = 0; i < len; i += 4) {\r\n      swap(this, i, i + 3);\r\n      swap(this, i + 1, i + 2);\r\n    }\r\n    return this;\r\n  }\r\n  return _swap32(this);\r\n};\r\n\r\nBuffer.prototype.swap64 = function swap64() {\r\n  // For Buffer.length < 192, it's generally faster to\r\n  // do the swap in javascript. For larger buffers,\r\n  // dropping down to the native code is faster.\r\n  const len = this.length;\r\n  if (len % 8 !== 0)\r\n    throw new ERR_INVALID_BUFFER_SIZE('64-bits');\r\n  if (len < 192) {\r\n    for (let i = 0; i < len; i += 8) {\r\n      swap(this, i, i + 7);\r\n      swap(this, i + 1, i + 6);\r\n      swap(this, i + 2, i + 5);\r\n      swap(this, i + 3, i + 4);\r\n    }\r\n    return this;\r\n  }\r\n  return _swap64(this);\r\n};\r\n\r\nBuffer.prototype.toLocaleString = Buffer.prototype.toString;\r\n\r\nlet transcode;\r\nif (internalBinding('config').hasIntl) {\r\n  const {\r\n    icuErrName,\r\n    transcode: _transcode\r\n  } = internalBinding('icu');\r\n\r\n  // Transcodes the Buffer from one encoding to another, returning a new\r\n  // Buffer instance.\r\n  transcode = function transcode(source, fromEncoding, toEncoding) {\r\n    if (!isUint8Array(source)) {\r\n      throw new ERR_INVALID_ARG_TYPE('source',\r\n                                     ['Buffer', 'Uint8Array'], source);\r\n    }\r\n    if (source.length === 0) return Buffer.alloc(0);\r\n\r\n    fromEncoding = normalizeEncoding(fromEncoding) || fromEncoding;\r\n    toEncoding = normalizeEncoding(toEncoding) || toEncoding;\r\n    const result = _transcode(source, fromEncoding, toEncoding);\r\n    if (typeof result !== 'number')\r\n      return result;\r\n\r\n    const code = icuErrName(result);\r\n    const err = genericNodeError(\r\n      `Unable to transcode Buffer [${code}]`,\r\n      { code: code, errno: result }\r\n    );\r\n    throw err;\r\n  };\r\n}\r\n\r\nfunction btoa(input) {\r\n  // The implementation here has not been performance optimized in any way and\r\n  // should not be.\r\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\r\n  if (arguments.length === 0) {\r\n    throw new ERR_MISSING_ARGS('input');\r\n  }\r\n  input = `${input}`;\r\n  for (let n = 0; n < input.length; n++) {\r\n    if (input[n].charCodeAt(0) > 0xff)\r\n      throw lazyDOMException('Invalid character', 'InvalidCharacterError');\r\n  }\r\n  const buf = Buffer.from(input, 'latin1');\r\n  return buf.toString('base64');\r\n}\r\n\r\n// Refs: https://infra.spec.whatwg.org/#forgiving-base64-decode\r\nconst kForgivingBase64AllowedChars = [\r\n  // ASCII whitespace\r\n  // Refs: https://infra.spec.whatwg.org/#ascii-whitespace\r\n  0x09, 0x0A, 0x0C, 0x0D, 0x20,\r\n\r\n  // Uppercase letters\r\n  ...ArrayFrom({ length: 26 }, (_, i) => StringPrototypeCharCodeAt('A') + i),\r\n\r\n  // Lowercase letters\r\n  ...ArrayFrom({ length: 26 }, (_, i) => StringPrototypeCharCodeAt('a') + i),\r\n\r\n  // Decimal digits\r\n  ...ArrayFrom({ length: 10 }, (_, i) => StringPrototypeCharCodeAt('0') + i),\r\n\r\n  0x2B, // +\r\n  0x2F, // /\r\n  0x3D, // =\r\n];\r\nconst kEqualSignIndex = ArrayPrototypeIndexOf(kForgivingBase64AllowedChars,\r\n                                              0x3D);\r\n\r\nfunction atob(input) {\r\n  // The implementation here has not been performance optimized in any way and\r\n  // should not be.\r\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\r\n  if (arguments.length === 0) {\r\n    throw new ERR_MISSING_ARGS('input');\r\n  }\r\n\r\n  input = `${input}`;\r\n  let nonAsciiWhitespaceCharCount = 0;\r\n  let equalCharCount = 0;\r\n\r\n  for (let n = 0; n < input.length; n++) {\r\n    const index = ArrayPrototypeIndexOf(\r\n      kForgivingBase64AllowedChars,\r\n      StringPrototypeCharCodeAt(input, n));\r\n\r\n    if (index > 4) {\r\n      // The first 5 elements of `kForgivingBase64AllowedChars` are\r\n      // ASCII whitespace char codes.\r\n      nonAsciiWhitespaceCharCount++;\r\n\r\n      if (index === kEqualSignIndex) {\r\n        equalCharCount++;\r\n      } else if (equalCharCount) {\r\n        // The `=` char is only allowed at the end.\r\n        throw lazyDOMException('Invalid character', 'InvalidCharacterError');\r\n      }\r\n\r\n      if (equalCharCount > 2) {\r\n        // Only one more `=` is permitted after the first equal sign.\r\n        throw lazyDOMException('Invalid character', 'InvalidCharacterError');\r\n      }\r\n    } else if (index === -1) {\r\n      throw lazyDOMException('Invalid character', 'InvalidCharacterError');\r\n    }\r\n  }\r\n\r\n  let reminder = nonAsciiWhitespaceCharCount % 4;\r\n\r\n  // See #2, #3, #4 - https://infra.spec.whatwg.org/#forgiving-base64\r\n  if (!reminder) {\r\n    // Remove all trailing `=` characters and get the new reminder.\r\n    reminder = (nonAsciiWhitespaceCharCount - equalCharCount) % 4;\r\n  } else if (equalCharCount) {\r\n    // `=` should not in the input if there's a reminder.\r\n    throw lazyDOMException('Invalid character', 'InvalidCharacterError');\r\n  }\r\n\r\n  // See #3 - https://infra.spec.whatwg.org/#forgiving-base64\r\n  if (reminder === 1) {\r\n    throw lazyDOMException(\r\n      'The string to be decoded is not correctly encoded.',\r\n      'InvalidCharacterError');\r\n  }\r\n\r\n  return Buffer.from(input, 'base64').toString('latin1');\r\n}\r\n\r\nfunction isUtf8(input) {\r\n  if (isTypedArray(input) || isAnyArrayBuffer(input)) {\r\n    return bindingIsUtf8(input);\r\n  }\r\n\r\n  throw new ERR_INVALID_ARG_TYPE('input', ['TypedArray', 'Buffer'], input);\r\n}\r\n\r\nfunction isAscii(input) {\r\n  if (isTypedArray(input) || isAnyArrayBuffer(input)) {\r\n    return bindingIsAscii(input);\r\n  }\r\n\r\n  throw new ERR_INVALID_ARG_TYPE('input', ['ArrayBuffer', 'Buffer', 'TypedArray'], input);\r\n}\r\n\r\nmodule.exports = {\r\n  Blob,\r\n  File,\r\n  resolveObjectURL,\r\n  Buffer,\r\n  SlowBuffer,\r\n  transcode,\r\n  isUtf8,\r\n  isAscii,\r\n\r\n  // Legacy\r\n  kMaxLength,\r\n  kStringMaxLength,\r\n  btoa,\r\n  atob,\r\n};\r\n\r\nObjectDefineProperties(module.exports, {\r\n  constants: {\r\n    __proto__: null,\r\n    configurable: false,\r\n    enumerable: true,\r\n    value: constants\r\n  },\r\n  INSPECT_MAX_BYTES: {\r\n    __proto__: null,\r\n    configurable: true,\r\n    enumerable: true,\r\n    get() { return INSPECT_MAX_BYTES; },\r\n    set(val) { INSPECT_MAX_BYTES = val; }\r\n  }\r\n});\r\n",
    "name": "node:buffer",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 30,
    "sourcePositions": []
  },
  {
    "url": "node:internal/buffer",
    "source": "'use strict';\r\n\r\nconst {\r\n  BigInt,\r\n  Float32Array,\r\n  Float64Array,\r\n  MathFloor,\r\n  Number,\r\n  Uint8Array,\r\n} = primordials;\r\n\r\nconst {\r\n  ERR_BUFFER_OUT_OF_BOUNDS,\r\n  ERR_INVALID_ARG_TYPE,\r\n  ERR_OUT_OF_RANGE\r\n} = require('internal/errors').codes;\r\nconst { validateNumber } = require('internal/validators');\r\nconst {\r\n  asciiSlice,\r\n  base64Slice,\r\n  base64urlSlice,\r\n  latin1Slice,\r\n  hexSlice,\r\n  ucs2Slice,\r\n  utf8Slice,\r\n  asciiWrite,\r\n  base64Write,\r\n  base64urlWrite,\r\n  latin1Write,\r\n  hexWrite,\r\n  ucs2Write,\r\n  utf8Write,\r\n  getZeroFillToggle\r\n} = internalBinding('buffer');\r\n\r\nconst {\r\n  privateSymbols: {\r\n    untransferable_object_private_symbol,\r\n  },\r\n} = internalBinding('util');\r\n\r\n// Temporary buffers to convert numbers.\r\nconst float32Array = new Float32Array(1);\r\nconst uInt8Float32Array = new Uint8Array(float32Array.buffer);\r\nconst float64Array = new Float64Array(1);\r\nconst uInt8Float64Array = new Uint8Array(float64Array.buffer);\r\n\r\n// Check endianness.\r\nfloat32Array[0] = -1; // 0xBF800000\r\n// Either it is [0, 0, 128, 191] or [191, 128, 0, 0]. It is not possible to\r\n// check this with `os.endianness()` because that is determined at compile time.\r\nconst bigEndian = uInt8Float32Array[3] === 0;\r\n\r\nfunction checkBounds(buf, offset, byteLength) {\r\n  validateNumber(offset, 'offset');\r\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined)\r\n    boundsError(offset, buf.length - (byteLength + 1));\r\n}\r\n\r\nfunction checkInt(value, min, max, buf, offset, byteLength) {\r\n  if (value > max || value < min) {\r\n    const n = typeof min === 'bigint' ? 'n' : '';\r\n    let range;\r\n    if (byteLength > 3) {\r\n      if (min === 0 || min === 0n) {\r\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;\r\n      } else {\r\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and ` +\r\n                `< 2${n} ** ${(byteLength + 1) * 8 - 1}${n}`;\r\n      }\r\n    } else {\r\n      range = `>= ${min}${n} and <= ${max}${n}`;\r\n    }\r\n    throw new ERR_OUT_OF_RANGE('value', range, value);\r\n  }\r\n  checkBounds(buf, offset, byteLength);\r\n}\r\n\r\nfunction boundsError(value, length, type) {\r\n  if (MathFloor(value) !== value) {\r\n    validateNumber(value, type);\r\n    throw new ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value);\r\n  }\r\n\r\n  if (length < 0)\r\n    throw new ERR_BUFFER_OUT_OF_BOUNDS();\r\n\r\n  throw new ERR_OUT_OF_RANGE(type || 'offset',\r\n                             `>= ${type ? 1 : 0} and <= ${length}`,\r\n                             value);\r\n}\r\n\r\n// Read integers.\r\nfunction readBigUInt64LE(offset = 0) {\r\n  validateNumber(offset, 'offset');\r\n  const first = this[offset];\r\n  const last = this[offset + 7];\r\n  if (first === undefined || last === undefined)\r\n    boundsError(offset, this.length - 8);\r\n\r\n  const lo = first +\r\n    this[++offset] * 2 ** 8 +\r\n    this[++offset] * 2 ** 16 +\r\n    this[++offset] * 2 ** 24;\r\n\r\n  const hi = this[++offset] +\r\n    this[++offset] * 2 ** 8 +\r\n    this[++offset] * 2 ** 16 +\r\n    last * 2 ** 24;\r\n\r\n  return BigInt(lo) + (BigInt(hi) << 32n);\r\n}\r\n\r\nfunction readBigUInt64BE(offset = 0) {\r\n  validateNumber(offset, 'offset');\r\n  const first = this[offset];\r\n  const last = this[offset + 7];\r\n  if (first === undefined || last === undefined)\r\n    boundsError(offset, this.length - 8);\r\n\r\n  const hi = first * 2 ** 24 +\r\n    this[++offset] * 2 ** 16 +\r\n    this[++offset] * 2 ** 8 +\r\n    this[++offset];\r\n\r\n  const lo = this[++offset] * 2 ** 24 +\r\n    this[++offset] * 2 ** 16 +\r\n    this[++offset] * 2 ** 8 +\r\n    last;\r\n\r\n  return (BigInt(hi) << 32n) + BigInt(lo);\r\n}\r\n\r\nfunction readBigInt64LE(offset = 0) {\r\n  validateNumber(offset, 'offset');\r\n  const first = this[offset];\r\n  const last = this[offset + 7];\r\n  if (first === undefined || last === undefined)\r\n    boundsError(offset, this.length - 8);\r\n\r\n  const val = this[offset + 4] +\r\n    this[offset + 5] * 2 ** 8 +\r\n    this[offset + 6] * 2 ** 16 +\r\n    (last << 24); // Overflow\r\n  return (BigInt(val) << 32n) +\r\n    BigInt(first +\r\n    this[++offset] * 2 ** 8 +\r\n    this[++offset] * 2 ** 16 +\r\n    this[++offset] * 2 ** 24);\r\n}\r\n\r\nfunction readBigInt64BE(offset = 0) {\r\n  validateNumber(offset, 'offset');\r\n  const first = this[offset];\r\n  const last = this[offset + 7];\r\n  if (first === undefined || last === undefined)\r\n    boundsError(offset, this.length - 8);\r\n\r\n  const val = (first << 24) + // Overflow\r\n    this[++offset] * 2 ** 16 +\r\n    this[++offset] * 2 ** 8 +\r\n    this[++offset];\r\n  return (BigInt(val) << 32n) +\r\n    BigInt(this[++offset] * 2 ** 24 +\r\n    this[++offset] * 2 ** 16 +\r\n    this[++offset] * 2 ** 8 +\r\n    last);\r\n}\r\n\r\nfunction readUIntLE(offset, byteLength) {\r\n  if (offset === undefined)\r\n    throw new ERR_INVALID_ARG_TYPE('offset', 'number', offset);\r\n  if (byteLength === 6)\r\n    return readUInt48LE(this, offset);\r\n  if (byteLength === 5)\r\n    return readUInt40LE(this, offset);\r\n  if (byteLength === 3)\r\n    return readUInt24LE(this, offset);\r\n  if (byteLength === 4)\r\n    return this.readUInt32LE(offset);\r\n  if (byteLength === 2)\r\n    return this.readUInt16LE(offset);\r\n  if (byteLength === 1)\r\n    return this.readUInt8(offset);\r\n\r\n  boundsError(byteLength, 6, 'byteLength');\r\n}\r\n\r\nfunction readUInt48LE(buf, offset = 0) {\r\n  validateNumber(offset, 'offset');\r\n  const first = buf[offset];\r\n  const last = buf[offset + 5];\r\n  if (first === undefined || last === undefined)\r\n    boundsError(offset, buf.length - 6);\r\n\r\n  return first +\r\n    buf[++offset] * 2 ** 8 +\r\n    buf[++offset] * 2 ** 16 +\r\n    buf[++offset] * 2 ** 24 +\r\n    (buf[++offset] + last * 2 ** 8) * 2 ** 32;\r\n}\r\n\r\nfunction readUInt40LE(buf, offset = 0) {\r\n  validateNumber(offset, 'offset');\r\n  const first = buf[offset];\r\n  const last = buf[offset + 4];\r\n  if (first === undefined || last === undefined)\r\n    boundsError(offset, buf.length - 5);\r\n\r\n  return first +\r\n    buf[++offset] * 2 ** 8 +\r\n    buf[++offset] * 2 ** 16 +\r\n    buf[++offset] * 2 ** 24 +\r\n    last * 2 ** 32;\r\n}\r\n\r\nfunction readUInt32LE(offset = 0) {\r\n  validateNumber(offset, 'offset');\r\n  const first = this[offset];\r\n  const last = this[offset + 3];\r\n  if (first === undefined || last === undefined)\r\n    boundsError(offset, this.length - 4);\r\n\r\n  return first +\r\n    this[++offset] * 2 ** 8 +\r\n    this[++offset] * 2 ** 16 +\r\n    last * 2 ** 24;\r\n}\r\n\r\nfunction readUInt24LE(buf, offset = 0) {\r\n  validateNumber(offset, 'offset');\r\n  const first = buf[offset];\r\n  const last = buf[offset + 2];\r\n  if (first === undefined || last === undefined)\r\n    boundsError(offset, buf.length - 3);\r\n\r\n  return first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\r\n}\r\n\r\nfunction readUInt16LE(offset = 0) {\r\n  validateNumber(offset, 'offset');\r\n  const first = this[offset];\r\n  const last = this[offset + 1];\r\n  if (first === undefined || last === undefined)\r\n    boundsError(offset, this.length - 2);\r\n\r\n  return first + last * 2 ** 8;\r\n}\r\n\r\nfunction readUInt8(offset = 0) {\r\n  validateNumber(offset, 'offset');\r\n  const val = this[offset];\r\n  if (val === undefined)\r\n    boundsError(offset, this.length - 1);\r\n\r\n  return val;\r\n}\r\n\r\nfunction readUIntBE(offset, byteLength) {\r\n  if (offset === undefined)\r\n    throw new ERR_INVALID_ARG_TYPE('offset', 'number', offset);\r\n  if (byteLength === 6)\r\n    return readUInt48BE(this, offset);\r\n  if (byteLength === 5)\r\n    return readUInt40BE(this, offset);\r\n  if (byteLength === 3)\r\n    return readUInt24BE(this, offset);\r\n  if (byteLength === 4)\r\n    return this.readUInt32BE(offset);\r\n  if (byteLength === 2)\r\n    return this.readUInt16BE(offset);\r\n  if (byteLength === 1)\r\n    return this.readUInt8(offset);\r\n\r\n  boundsError(byteLength, 6, 'byteLength');\r\n}\r\n\r\nfunction readUInt48BE(buf, offset = 0) {\r\n  validateNumber(offset, 'offset');\r\n  const first = buf[offset];\r\n  const last = buf[offset + 5];\r\n  if (first === undefined || last === undefined)\r\n    boundsError(offset, buf.length - 6);\r\n\r\n  return (first * 2 ** 8 + buf[++offset]) * 2 ** 32 +\r\n    buf[++offset] * 2 ** 24 +\r\n    buf[++offset] * 2 ** 16 +\r\n    buf[++offset] * 2 ** 8 +\r\n    last;\r\n}\r\n\r\nfunction readUInt40BE(buf, offset = 0) {\r\n  validateNumber(offset, 'offset');\r\n  const first = buf[offset];\r\n  const last = buf[offset + 4];\r\n  if (first === undefined || last === undefined)\r\n    boundsError(offset, buf.length - 5);\r\n\r\n  return first * 2 ** 32 +\r\n    buf[++offset] * 2 ** 24 +\r\n    buf[++offset] * 2 ** 16 +\r\n    buf[++offset] * 2 ** 8 +\r\n    last;\r\n}\r\n\r\nfunction readUInt32BE(offset = 0) {\r\n  validateNumber(offset, 'offset');\r\n  const first = this[offset];\r\n  const last = this[offset + 3];\r\n  if (first === undefined || last === undefined)\r\n    boundsError(offset, this.length - 4);\r\n\r\n  return first * 2 ** 24 +\r\n    this[++offset] * 2 ** 16 +\r\n    this[++offset] * 2 ** 8 +\r\n    last;\r\n}\r\n\r\nfunction readUInt24BE(buf, offset = 0) {\r\n  validateNumber(offset, 'offset');\r\n  const first = buf[offset];\r\n  const last = buf[offset + 2];\r\n  if (first === undefined || last === undefined)\r\n    boundsError(offset, buf.length - 3);\r\n\r\n  return first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\r\n}\r\n\r\nfunction readUInt16BE(offset = 0) {\r\n  validateNumber(offset, 'offset');\r\n  const first = this[offset];\r\n  const last = this[offset + 1];\r\n  if (first === undefined || last === undefined)\r\n    boundsError(offset, this.length - 2);\r\n\r\n  return first * 2 ** 8 + last;\r\n}\r\n\r\nfunction readIntLE(offset, byteLength) {\r\n  if (offset === undefined)\r\n    throw new ERR_INVALID_ARG_TYPE('offset', 'number', offset);\r\n  if (byteLength === 6)\r\n    return readInt48LE(this, offset);\r\n  if (byteLength === 5)\r\n    return readInt40LE(this, offset);\r\n  if (byteLength === 3)\r\n    return readInt24LE(this, offset);\r\n  if (byteLength === 4)\r\n    return this.readInt32LE(offset);\r\n  if (byteLength === 2)\r\n    return this.readInt16LE(offset);\r\n  if (byteLength === 1)\r\n    return this.readInt8(offset);\r\n\r\n  boundsError(byteLength, 6, 'byteLength');\r\n}\r\n\r\nfunction readInt48LE(buf, offset = 0) {\r\n  validateNumber(offset, 'offset');\r\n  const first = buf[offset];\r\n  const last = buf[offset + 5];\r\n  if (first === undefined || last === undefined)\r\n    boundsError(offset, buf.length - 6);\r\n\r\n  const val = buf[offset + 4] + last * 2 ** 8;\r\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\r\n    first +\r\n    buf[++offset] * 2 ** 8 +\r\n    buf[++offset] * 2 ** 16 +\r\n    buf[++offset] * 2 ** 24;\r\n}\r\n\r\nfunction readInt40LE(buf, offset = 0) {\r\n  validateNumber(offset, 'offset');\r\n  const first = buf[offset];\r\n  const last = buf[offset + 4];\r\n  if (first === undefined || last === undefined)\r\n    boundsError(offset, buf.length - 5);\r\n\r\n  return (last | (last & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\r\n    first +\r\n    buf[++offset] * 2 ** 8 +\r\n    buf[++offset] * 2 ** 16 +\r\n    buf[++offset] * 2 ** 24;\r\n}\r\n\r\nfunction readInt32LE(offset = 0) {\r\n  validateNumber(offset, 'offset');\r\n  const first = this[offset];\r\n  const last = this[offset + 3];\r\n  if (first === undefined || last === undefined)\r\n    boundsError(offset, this.length - 4);\r\n\r\n  return first +\r\n    this[++offset] * 2 ** 8 +\r\n    this[++offset] * 2 ** 16 +\r\n    (last << 24); // Overflow\r\n}\r\n\r\nfunction readInt24LE(buf, offset = 0) {\r\n  validateNumber(offset, 'offset');\r\n  const first = buf[offset];\r\n  const last = buf[offset + 2];\r\n  if (first === undefined || last === undefined)\r\n    boundsError(offset, buf.length - 3);\r\n\r\n  const val = first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\r\n  return val | (val & 2 ** 23) * 0x1fe;\r\n}\r\n\r\nfunction readInt16LE(offset = 0) {\r\n  validateNumber(offset, 'offset');\r\n  const first = this[offset];\r\n  const last = this[offset + 1];\r\n  if (first === undefined || last === undefined)\r\n    boundsError(offset, this.length - 2);\r\n\r\n  const val = first + last * 2 ** 8;\r\n  return val | (val & 2 ** 15) * 0x1fffe;\r\n}\r\n\r\nfunction readInt8(offset = 0) {\r\n  validateNumber(offset, 'offset');\r\n  const val = this[offset];\r\n  if (val === undefined)\r\n    boundsError(offset, this.length - 1);\r\n\r\n  return val | (val & 2 ** 7) * 0x1fffffe;\r\n}\r\n\r\nfunction readIntBE(offset, byteLength) {\r\n  if (offset === undefined)\r\n    throw new ERR_INVALID_ARG_TYPE('offset', 'number', offset);\r\n  if (byteLength === 6)\r\n    return readInt48BE(this, offset);\r\n  if (byteLength === 5)\r\n    return readInt40BE(this, offset);\r\n  if (byteLength === 3)\r\n    return readInt24BE(this, offset);\r\n  if (byteLength === 4)\r\n    return this.readInt32BE(offset);\r\n  if (byteLength === 2)\r\n    return this.readInt16BE(offset);\r\n  if (byteLength === 1)\r\n    return this.readInt8(offset);\r\n\r\n  boundsError(byteLength, 6, 'byteLength');\r\n}\r\n\r\nfunction readInt48BE(buf, offset = 0) {\r\n  validateNumber(offset, 'offset');\r\n  const first = buf[offset];\r\n  const last = buf[offset + 5];\r\n  if (first === undefined || last === undefined)\r\n    boundsError(offset, buf.length - 6);\r\n\r\n  const val = buf[++offset] + first * 2 ** 8;\r\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\r\n    buf[++offset] * 2 ** 24 +\r\n    buf[++offset] * 2 ** 16 +\r\n    buf[++offset] * 2 ** 8 +\r\n    last;\r\n}\r\n\r\nfunction readInt40BE(buf, offset = 0) {\r\n  validateNumber(offset, 'offset');\r\n  const first = buf[offset];\r\n  const last = buf[offset + 4];\r\n  if (first === undefined || last === undefined)\r\n    boundsError(offset, buf.length - 5);\r\n\r\n  return (first | (first & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\r\n    buf[++offset] * 2 ** 24 +\r\n    buf[++offset] * 2 ** 16 +\r\n    buf[++offset] * 2 ** 8 +\r\n    last;\r\n}\r\n\r\nfunction readInt32BE(offset = 0) {\r\n  validateNumber(offset, 'offset');\r\n  const first = this[offset];\r\n  const last = this[offset + 3];\r\n  if (first === undefined || last === undefined)\r\n    boundsError(offset, this.length - 4);\r\n\r\n  return (first << 24) + // Overflow\r\n    this[++offset] * 2 ** 16 +\r\n    this[++offset] * 2 ** 8 +\r\n    last;\r\n}\r\n\r\nfunction readInt24BE(buf, offset = 0) {\r\n  validateNumber(offset, 'offset');\r\n  const first = buf[offset];\r\n  const last = buf[offset + 2];\r\n  if (first === undefined || last === undefined)\r\n    boundsError(offset, buf.length - 3);\r\n\r\n  const val = first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\r\n  return val | (val & 2 ** 23) * 0x1fe;\r\n}\r\n\r\nfunction readInt16BE(offset = 0) {\r\n  validateNumber(offset, 'offset');\r\n  const first = this[offset];\r\n  const last = this[offset + 1];\r\n  if (first === undefined || last === undefined)\r\n    boundsError(offset, this.length - 2);\r\n\r\n  const val = first * 2 ** 8 + last;\r\n  return val | (val & 2 ** 15) * 0x1fffe;\r\n}\r\n\r\n// Read floats\r\nfunction readFloatBackwards(offset = 0) {\r\n  validateNumber(offset, 'offset');\r\n  const first = this[offset];\r\n  const last = this[offset + 3];\r\n  if (first === undefined || last === undefined)\r\n    boundsError(offset, this.length - 4);\r\n\r\n  uInt8Float32Array[3] = first;\r\n  uInt8Float32Array[2] = this[++offset];\r\n  uInt8Float32Array[1] = this[++offset];\r\n  uInt8Float32Array[0] = last;\r\n  return float32Array[0];\r\n}\r\n\r\nfunction readFloatForwards(offset = 0) {\r\n  validateNumber(offset, 'offset');\r\n  const first = this[offset];\r\n  const last = this[offset + 3];\r\n  if (first === undefined || last === undefined)\r\n    boundsError(offset, this.length - 4);\r\n\r\n  uInt8Float32Array[0] = first;\r\n  uInt8Float32Array[1] = this[++offset];\r\n  uInt8Float32Array[2] = this[++offset];\r\n  uInt8Float32Array[3] = last;\r\n  return float32Array[0];\r\n}\r\n\r\nfunction readDoubleBackwards(offset = 0) {\r\n  validateNumber(offset, 'offset');\r\n  const first = this[offset];\r\n  const last = this[offset + 7];\r\n  if (first === undefined || last === undefined)\r\n    boundsError(offset, this.length - 8);\r\n\r\n  uInt8Float64Array[7] = first;\r\n  uInt8Float64Array[6] = this[++offset];\r\n  uInt8Float64Array[5] = this[++offset];\r\n  uInt8Float64Array[4] = this[++offset];\r\n  uInt8Float64Array[3] = this[++offset];\r\n  uInt8Float64Array[2] = this[++offset];\r\n  uInt8Float64Array[1] = this[++offset];\r\n  uInt8Float64Array[0] = last;\r\n  return float64Array[0];\r\n}\r\n\r\nfunction readDoubleForwards(offset = 0) {\r\n  validateNumber(offset, 'offset');\r\n  const first = this[offset];\r\n  const last = this[offset + 7];\r\n  if (first === undefined || last === undefined)\r\n    boundsError(offset, this.length - 8);\r\n\r\n  uInt8Float64Array[0] = first;\r\n  uInt8Float64Array[1] = this[++offset];\r\n  uInt8Float64Array[2] = this[++offset];\r\n  uInt8Float64Array[3] = this[++offset];\r\n  uInt8Float64Array[4] = this[++offset];\r\n  uInt8Float64Array[5] = this[++offset];\r\n  uInt8Float64Array[6] = this[++offset];\r\n  uInt8Float64Array[7] = last;\r\n  return float64Array[0];\r\n}\r\n\r\n// Write integers.\r\nfunction writeBigU_Int64LE(buf, value, offset, min, max) {\r\n  checkInt(value, min, max, buf, offset, 7);\r\n\r\n  let lo = Number(value & 0xffffffffn);\r\n  buf[offset++] = lo;\r\n  lo = lo >> 8;\r\n  buf[offset++] = lo;\r\n  lo = lo >> 8;\r\n  buf[offset++] = lo;\r\n  lo = lo >> 8;\r\n  buf[offset++] = lo;\r\n  let hi = Number(value >> 32n & 0xffffffffn);\r\n  buf[offset++] = hi;\r\n  hi = hi >> 8;\r\n  buf[offset++] = hi;\r\n  hi = hi >> 8;\r\n  buf[offset++] = hi;\r\n  hi = hi >> 8;\r\n  buf[offset++] = hi;\r\n  return offset;\r\n}\r\n\r\nfunction writeBigUInt64LE(value, offset = 0) {\r\n  return writeBigU_Int64LE(this, value, offset, 0n, 0xffffffffffffffffn);\r\n}\r\n\r\nfunction writeBigU_Int64BE(buf, value, offset, min, max) {\r\n  checkInt(value, min, max, buf, offset, 7);\r\n\r\n  let lo = Number(value & 0xffffffffn);\r\n  buf[offset + 7] = lo;\r\n  lo = lo >> 8;\r\n  buf[offset + 6] = lo;\r\n  lo = lo >> 8;\r\n  buf[offset + 5] = lo;\r\n  lo = lo >> 8;\r\n  buf[offset + 4] = lo;\r\n  let hi = Number(value >> 32n & 0xffffffffn);\r\n  buf[offset + 3] = hi;\r\n  hi = hi >> 8;\r\n  buf[offset + 2] = hi;\r\n  hi = hi >> 8;\r\n  buf[offset + 1] = hi;\r\n  hi = hi >> 8;\r\n  buf[offset] = hi;\r\n  return offset + 8;\r\n}\r\n\r\nfunction writeBigUInt64BE(value, offset = 0) {\r\n  return writeBigU_Int64BE(this, value, offset, 0n, 0xffffffffffffffffn);\r\n}\r\n\r\nfunction writeBigInt64LE(value, offset = 0) {\r\n  return writeBigU_Int64LE(\r\n    this, value, offset, -0x8000000000000000n, 0x7fffffffffffffffn);\r\n}\r\n\r\nfunction writeBigInt64BE(value, offset = 0) {\r\n  return writeBigU_Int64BE(\r\n    this, value, offset, -0x8000000000000000n, 0x7fffffffffffffffn);\r\n}\r\n\r\nfunction writeUIntLE(value, offset, byteLength) {\r\n  if (byteLength === 6)\r\n    return writeU_Int48LE(this, value, offset, 0, 0xffffffffffff);\r\n  if (byteLength === 5)\r\n    return writeU_Int40LE(this, value, offset, 0, 0xffffffffff);\r\n  if (byteLength === 3)\r\n    return writeU_Int24LE(this, value, offset, 0, 0xffffff);\r\n  if (byteLength === 4)\r\n    return writeU_Int32LE(this, value, offset, 0, 0xffffffff);\r\n  if (byteLength === 2)\r\n    return writeU_Int16LE(this, value, offset, 0, 0xffff);\r\n  if (byteLength === 1)\r\n    return writeU_Int8(this, value, offset, 0, 0xff);\r\n\r\n  boundsError(byteLength, 6, 'byteLength');\r\n}\r\n\r\nfunction writeU_Int48LE(buf, value, offset, min, max) {\r\n  value = +value;\r\n  checkInt(value, min, max, buf, offset, 5);\r\n\r\n  const newVal = MathFloor(value * 2 ** -32);\r\n  buf[offset++] = value;\r\n  value = value >>> 8;\r\n  buf[offset++] = value;\r\n  value = value >>> 8;\r\n  buf[offset++] = value;\r\n  value = value >>> 8;\r\n  buf[offset++] = value;\r\n  buf[offset++] = newVal;\r\n  buf[offset++] = (newVal >>> 8);\r\n  return offset;\r\n}\r\n\r\nfunction writeU_Int40LE(buf, value, offset, min, max) {\r\n  value = +value;\r\n  checkInt(value, min, max, buf, offset, 4);\r\n\r\n  const newVal = value;\r\n  buf[offset++] = value;\r\n  value = value >>> 8;\r\n  buf[offset++] = value;\r\n  value = value >>> 8;\r\n  buf[offset++] = value;\r\n  value = value >>> 8;\r\n  buf[offset++] = value;\r\n  buf[offset++] = MathFloor(newVal * 2 ** -32);\r\n  return offset;\r\n}\r\n\r\nfunction writeU_Int32LE(buf, value, offset, min, max) {\r\n  value = +value;\r\n  checkInt(value, min, max, buf, offset, 3);\r\n\r\n  buf[offset++] = value;\r\n  value = value >>> 8;\r\n  buf[offset++] = value;\r\n  value = value >>> 8;\r\n  buf[offset++] = value;\r\n  value = value >>> 8;\r\n  buf[offset++] = value;\r\n  return offset;\r\n}\r\n\r\nfunction writeUInt32LE(value, offset = 0) {\r\n  return writeU_Int32LE(this, value, offset, 0, 0xffffffff);\r\n}\r\n\r\nfunction writeU_Int24LE(buf, value, offset, min, max) {\r\n  value = +value;\r\n  checkInt(value, min, max, buf, offset, 2);\r\n\r\n  buf[offset++] = value;\r\n  value = value >>> 8;\r\n  buf[offset++] = value;\r\n  value = value >>> 8;\r\n  buf[offset++] = value;\r\n  return offset;\r\n}\r\n\r\nfunction writeU_Int16LE(buf, value, offset, min, max) {\r\n  value = +value;\r\n  checkInt(value, min, max, buf, offset, 1);\r\n\r\n  buf[offset++] = value;\r\n  buf[offset++] = (value >>> 8);\r\n  return offset;\r\n}\r\n\r\nfunction writeUInt16LE(value, offset = 0) {\r\n  return writeU_Int16LE(this, value, offset, 0, 0xffff);\r\n}\r\n\r\nfunction writeU_Int8(buf, value, offset, min, max) {\r\n  value = +value;\r\n  // `checkInt()` can not be used here because it checks two entries.\r\n  validateNumber(offset, 'offset');\r\n  if (value > max || value < min) {\r\n    throw new ERR_OUT_OF_RANGE('value', `>= ${min} and <= ${max}`, value);\r\n  }\r\n  if (buf[offset] === undefined)\r\n    boundsError(offset, buf.length - 1);\r\n\r\n  buf[offset] = value;\r\n  return offset + 1;\r\n}\r\n\r\nfunction writeUInt8(value, offset = 0) {\r\n  return writeU_Int8(this, value, offset, 0, 0xff);\r\n}\r\n\r\nfunction writeUIntBE(value, offset, byteLength) {\r\n  if (byteLength === 6)\r\n    return writeU_Int48BE(this, value, offset, 0, 0xffffffffffff);\r\n  if (byteLength === 5)\r\n    return writeU_Int40BE(this, value, offset, 0, 0xffffffffff);\r\n  if (byteLength === 3)\r\n    return writeU_Int24BE(this, value, offset, 0, 0xffffff);\r\n  if (byteLength === 4)\r\n    return writeU_Int32BE(this, value, offset, 0, 0xffffffff);\r\n  if (byteLength === 2)\r\n    return writeU_Int16BE(this, value, offset, 0, 0xffff);\r\n  if (byteLength === 1)\r\n    return writeU_Int8(this, value, offset, 0, 0xff);\r\n\r\n  boundsError(byteLength, 6, 'byteLength');\r\n}\r\n\r\nfunction writeU_Int48BE(buf, value, offset, min, max) {\r\n  value = +value;\r\n  checkInt(value, min, max, buf, offset, 5);\r\n\r\n  const newVal = MathFloor(value * 2 ** -32);\r\n  buf[offset++] = (newVal >>> 8);\r\n  buf[offset++] = newVal;\r\n  buf[offset + 3] = value;\r\n  value = value >>> 8;\r\n  buf[offset + 2] = value;\r\n  value = value >>> 8;\r\n  buf[offset + 1] = value;\r\n  value = value >>> 8;\r\n  buf[offset] = value;\r\n  return offset + 4;\r\n}\r\n\r\nfunction writeU_Int40BE(buf, value, offset, min, max) {\r\n  value = +value;\r\n  checkInt(value, min, max, buf, offset, 4);\r\n\r\n  buf[offset++] = MathFloor(value * 2 ** -32);\r\n  buf[offset + 3] = value;\r\n  value = value >>> 8;\r\n  buf[offset + 2] = value;\r\n  value = value >>> 8;\r\n  buf[offset + 1] = value;\r\n  value = value >>> 8;\r\n  buf[offset] = value;\r\n  return offset + 4;\r\n}\r\n\r\nfunction writeU_Int32BE(buf, value, offset, min, max) {\r\n  value = +value;\r\n  checkInt(value, min, max, buf, offset, 3);\r\n\r\n  buf[offset + 3] = value;\r\n  value = value >>> 8;\r\n  buf[offset + 2] = value;\r\n  value = value >>> 8;\r\n  buf[offset + 1] = value;\r\n  value = value >>> 8;\r\n  buf[offset] = value;\r\n  return offset + 4;\r\n}\r\n\r\nfunction writeUInt32BE(value, offset = 0) {\r\n  return writeU_Int32BE(this, value, offset, 0, 0xffffffff);\r\n}\r\n\r\nfunction writeU_Int24BE(buf, value, offset, min, max) {\r\n  value = +value;\r\n  checkInt(value, min, max, buf, offset, 2);\r\n\r\n  buf[offset + 2] = value;\r\n  value = value >>> 8;\r\n  buf[offset + 1] = value;\r\n  value = value >>> 8;\r\n  buf[offset] = value;\r\n  return offset + 3;\r\n}\r\n\r\nfunction writeU_Int16BE(buf, value, offset, min, max) {\r\n  value = +value;\r\n  checkInt(value, min, max, buf, offset, 1);\r\n\r\n  buf[offset++] = (value >>> 8);\r\n  buf[offset++] = value;\r\n  return offset;\r\n}\r\n\r\nfunction writeUInt16BE(value, offset = 0) {\r\n  return writeU_Int16BE(this, value, offset, 0, 0xffff);\r\n}\r\n\r\nfunction writeIntLE(value, offset, byteLength) {\r\n  if (byteLength === 6)\r\n    return writeU_Int48LE(this, value, offset, -0x800000000000, 0x7fffffffffff);\r\n  if (byteLength === 5)\r\n    return writeU_Int40LE(this, value, offset, -0x8000000000, 0x7fffffffff);\r\n  if (byteLength === 3)\r\n    return writeU_Int24LE(this, value, offset, -0x800000, 0x7fffff);\r\n  if (byteLength === 4)\r\n    return writeU_Int32LE(this, value, offset, -0x80000000, 0x7fffffff);\r\n  if (byteLength === 2)\r\n    return writeU_Int16LE(this, value, offset, -0x8000, 0x7fff);\r\n  if (byteLength === 1)\r\n    return writeU_Int8(this, value, offset, -0x80, 0x7f);\r\n\r\n  boundsError(byteLength, 6, 'byteLength');\r\n}\r\n\r\nfunction writeInt32LE(value, offset = 0) {\r\n  return writeU_Int32LE(this, value, offset, -0x80000000, 0x7fffffff);\r\n}\r\n\r\nfunction writeInt16LE(value, offset = 0) {\r\n  return writeU_Int16LE(this, value, offset, -0x8000, 0x7fff);\r\n}\r\n\r\nfunction writeInt8(value, offset = 0) {\r\n  return writeU_Int8(this, value, offset, -0x80, 0x7f);\r\n}\r\n\r\nfunction writeIntBE(value, offset, byteLength) {\r\n  if (byteLength === 6)\r\n    return writeU_Int48BE(this, value, offset, -0x800000000000, 0x7fffffffffff);\r\n  if (byteLength === 5)\r\n    return writeU_Int40BE(this, value, offset, -0x8000000000, 0x7fffffffff);\r\n  if (byteLength === 3)\r\n    return writeU_Int24BE(this, value, offset, -0x800000, 0x7fffff);\r\n  if (byteLength === 4)\r\n    return writeU_Int32BE(this, value, offset, -0x80000000, 0x7fffffff);\r\n  if (byteLength === 2)\r\n    return writeU_Int16BE(this, value, offset, -0x8000, 0x7fff);\r\n  if (byteLength === 1)\r\n    return writeU_Int8(this, value, offset, -0x80, 0x7f);\r\n\r\n  boundsError(byteLength, 6, 'byteLength');\r\n}\r\n\r\nfunction writeInt32BE(value, offset = 0) {\r\n  return writeU_Int32BE(this, value, offset, -0x80000000, 0x7fffffff);\r\n}\r\n\r\nfunction writeInt16BE(value, offset = 0) {\r\n  return writeU_Int16BE(this, value, offset, -0x8000, 0x7fff);\r\n}\r\n\r\n// Write floats.\r\nfunction writeDoubleForwards(val, offset = 0) {\r\n  val = +val;\r\n  checkBounds(this, offset, 7);\r\n\r\n  float64Array[0] = val;\r\n  this[offset++] = uInt8Float64Array[0];\r\n  this[offset++] = uInt8Float64Array[1];\r\n  this[offset++] = uInt8Float64Array[2];\r\n  this[offset++] = uInt8Float64Array[3];\r\n  this[offset++] = uInt8Float64Array[4];\r\n  this[offset++] = uInt8Float64Array[5];\r\n  this[offset++] = uInt8Float64Array[6];\r\n  this[offset++] = uInt8Float64Array[7];\r\n  return offset;\r\n}\r\n\r\nfunction writeDoubleBackwards(val, offset = 0) {\r\n  val = +val;\r\n  checkBounds(this, offset, 7);\r\n\r\n  float64Array[0] = val;\r\n  this[offset++] = uInt8Float64Array[7];\r\n  this[offset++] = uInt8Float64Array[6];\r\n  this[offset++] = uInt8Float64Array[5];\r\n  this[offset++] = uInt8Float64Array[4];\r\n  this[offset++] = uInt8Float64Array[3];\r\n  this[offset++] = uInt8Float64Array[2];\r\n  this[offset++] = uInt8Float64Array[1];\r\n  this[offset++] = uInt8Float64Array[0];\r\n  return offset;\r\n}\r\n\r\nfunction writeFloatForwards(val, offset = 0) {\r\n  val = +val;\r\n  checkBounds(this, offset, 3);\r\n\r\n  float32Array[0] = val;\r\n  this[offset++] = uInt8Float32Array[0];\r\n  this[offset++] = uInt8Float32Array[1];\r\n  this[offset++] = uInt8Float32Array[2];\r\n  this[offset++] = uInt8Float32Array[3];\r\n  return offset;\r\n}\r\n\r\nfunction writeFloatBackwards(val, offset = 0) {\r\n  val = +val;\r\n  checkBounds(this, offset, 3);\r\n\r\n  float32Array[0] = val;\r\n  this[offset++] = uInt8Float32Array[3];\r\n  this[offset++] = uInt8Float32Array[2];\r\n  this[offset++] = uInt8Float32Array[1];\r\n  this[offset++] = uInt8Float32Array[0];\r\n  return offset;\r\n}\r\n\r\nclass FastBuffer extends Uint8Array {\r\n  // Using an explicit constructor here is necessary to avoid relying on\r\n  // `Array.prototype[Symbol.iterator]`, which can be mutated by users.\r\n  // eslint-disable-next-line no-useless-constructor\r\n  constructor(bufferOrLength, byteOffset, length) {\r\n    super(bufferOrLength, byteOffset, length);\r\n  }\r\n}\r\n\r\nfunction addBufferPrototypeMethods(proto) {\r\n  proto.readBigUInt64LE = readBigUInt64LE;\r\n  proto.readBigUInt64BE = readBigUInt64BE;\r\n  proto.readBigUint64LE = readBigUInt64LE;\r\n  proto.readBigUint64BE = readBigUInt64BE;\r\n  proto.readBigInt64LE = readBigInt64LE;\r\n  proto.readBigInt64BE = readBigInt64BE;\r\n  proto.writeBigUInt64LE = writeBigUInt64LE;\r\n  proto.writeBigUInt64BE = writeBigUInt64BE;\r\n  proto.writeBigUint64LE = writeBigUInt64LE;\r\n  proto.writeBigUint64BE = writeBigUInt64BE;\r\n  proto.writeBigInt64LE = writeBigInt64LE;\r\n  proto.writeBigInt64BE = writeBigInt64BE;\r\n\r\n  proto.readUIntLE = readUIntLE;\r\n  proto.readUInt32LE = readUInt32LE;\r\n  proto.readUInt16LE = readUInt16LE;\r\n  proto.readUInt8 = readUInt8;\r\n  proto.readUIntBE = readUIntBE;\r\n  proto.readUInt32BE = readUInt32BE;\r\n  proto.readUInt16BE = readUInt16BE;\r\n  proto.readUintLE = readUIntLE;\r\n  proto.readUint32LE = readUInt32LE;\r\n  proto.readUint16LE = readUInt16LE;\r\n  proto.readUint8 = readUInt8;\r\n  proto.readUintBE = readUIntBE;\r\n  proto.readUint32BE = readUInt32BE;\r\n  proto.readUint16BE = readUInt16BE;\r\n  proto.readIntLE = readIntLE;\r\n  proto.readInt32LE = readInt32LE;\r\n  proto.readInt16LE = readInt16LE;\r\n  proto.readInt8 = readInt8;\r\n  proto.readIntBE = readIntBE;\r\n  proto.readInt32BE = readInt32BE;\r\n  proto.readInt16BE = readInt16BE;\r\n\r\n  proto.writeUIntLE = writeUIntLE;\r\n  proto.writeUInt32LE = writeUInt32LE;\r\n  proto.writeUInt16LE = writeUInt16LE;\r\n  proto.writeUInt8 = writeUInt8;\r\n  proto.writeUIntBE = writeUIntBE;\r\n  proto.writeUInt32BE = writeUInt32BE;\r\n  proto.writeUInt16BE = writeUInt16BE;\r\n  proto.writeUintLE = writeUIntLE;\r\n  proto.writeUint32LE = writeUInt32LE;\r\n  proto.writeUint16LE = writeUInt16LE;\r\n  proto.writeUint8 = writeUInt8;\r\n  proto.writeUintBE = writeUIntBE;\r\n  proto.writeUint32BE = writeUInt32BE;\r\n  proto.writeUint16BE = writeUInt16BE;\r\n  proto.writeIntLE = writeIntLE;\r\n  proto.writeInt32LE = writeInt32LE;\r\n  proto.writeInt16LE = writeInt16LE;\r\n  proto.writeInt8 = writeInt8;\r\n  proto.writeIntBE = writeIntBE;\r\n  proto.writeInt32BE = writeInt32BE;\r\n  proto.writeInt16BE = writeInt16BE;\r\n\r\n  proto.readFloatLE = bigEndian ? readFloatBackwards : readFloatForwards;\r\n  proto.readFloatBE = bigEndian ? readFloatForwards : readFloatBackwards;\r\n  proto.readDoubleLE = bigEndian ? readDoubleBackwards : readDoubleForwards;\r\n  proto.readDoubleBE = bigEndian ? readDoubleForwards : readDoubleBackwards;\r\n  proto.writeFloatLE = bigEndian ? writeFloatBackwards : writeFloatForwards;\r\n  proto.writeFloatBE = bigEndian ? writeFloatForwards : writeFloatBackwards;\r\n  proto.writeDoubleLE = bigEndian ? writeDoubleBackwards : writeDoubleForwards;\r\n  proto.writeDoubleBE = bigEndian ? writeDoubleForwards : writeDoubleBackwards;\r\n\r\n  proto.asciiSlice = asciiSlice;\r\n  proto.base64Slice = base64Slice;\r\n  proto.base64urlSlice = base64urlSlice;\r\n  proto.latin1Slice = latin1Slice;\r\n  proto.hexSlice = hexSlice;\r\n  proto.ucs2Slice = ucs2Slice;\r\n  proto.utf8Slice = utf8Slice;\r\n  proto.asciiWrite = asciiWrite;\r\n  proto.base64Write = base64Write;\r\n  proto.base64urlWrite = base64urlWrite;\r\n  proto.latin1Write = latin1Write;\r\n  proto.hexWrite = hexWrite;\r\n  proto.ucs2Write = ucs2Write;\r\n  proto.utf8Write = utf8Write;\r\n}\r\n\r\n// This would better be placed in internal/worker/io.js, but that doesn't work\r\n// because Buffer needs this and that would introduce a cyclic dependency.\r\nfunction markAsUntransferable(obj) {\r\n  if ((typeof obj !== 'object' && typeof obj !== 'function') || obj === null)\r\n    return;  // This object is a primitive and therefore already untransferable.\r\n  obj[untransferable_object_private_symbol] = true;\r\n}\r\n\r\n// A toggle used to access the zero fill setting of the array buffer allocator\r\n// in C++.\r\n// |zeroFill| can be undefined when running inside an isolate where we\r\n// do not own the ArrayBuffer allocator.  Zero fill is always on in that case.\r\nlet zeroFill = getZeroFillToggle();\r\nfunction createUnsafeBuffer(size) {\r\n  zeroFill[0] = 0;\r\n  try {\r\n    return new FastBuffer(size);\r\n  } finally {\r\n    zeroFill[0] = 1;\r\n  }\r\n}\r\n\r\n// The connection between the JS land zero fill toggle and the\r\n// C++ one in the NodeArrayBufferAllocator gets lost if the toggle\r\n// is deserialized from the snapshot, because V8 owns the underlying\r\n// memory of this toggle. This resets the connection.\r\nfunction reconnectZeroFillToggle() {\r\n  zeroFill = getZeroFillToggle();\r\n}\r\n\r\nmodule.exports = {\r\n  FastBuffer,\r\n  addBufferPrototypeMethods,\r\n  markAsUntransferable,\r\n  createUnsafeBuffer,\r\n  readUInt16BE,\r\n  readUInt32BE,\r\n  reconnectZeroFillToggle\r\n};\r\n",
    "name": "buffer",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 31,
    "sourcePositions": []
  },
  null,
  null,
  null,
  null,
  null,
  {
    "url": "node:internal/process/per_thread",
    "source": "'use strict';\r\n\r\n// This files contains process bootstrappers that can be\r\n// run when setting up each thread, including the main\r\n// thread and the worker threads.\r\n\r\nconst {\r\n  ArrayPrototypeEvery,\r\n  ArrayPrototypeForEach,\r\n  ArrayPrototypeIncludes,\r\n  ArrayPrototypeMap,\r\n  ArrayPrototypePush,\r\n  ArrayPrototypeSplice,\r\n  BigUint64Array,\r\n  Float64Array,\r\n  NumberMAX_SAFE_INTEGER,\r\n  ObjectFreeze,\r\n  ObjectDefineProperty,\r\n  ReflectApply,\r\n  RegExpPrototypeExec,\r\n  SafeArrayIterator,\r\n  Set,\r\n  SetPrototypeEntries,\r\n  SetPrototypeValues,\r\n  StringPrototypeEndsWith,\r\n  StringPrototypeReplace,\r\n  StringPrototypeSlice,\r\n  StringPrototypeStartsWith,\r\n  Symbol,\r\n  SymbolIterator,\r\n  Uint32Array,\r\n} = primordials;\r\n\r\nconst {\r\n  errnoException,\r\n  codes: {\r\n    ERR_ASSERTION,\r\n    ERR_INVALID_ARG_TYPE,\r\n    ERR_INVALID_ARG_VALUE,\r\n    ERR_OUT_OF_RANGE,\r\n    ERR_UNKNOWN_SIGNAL\r\n  }\r\n} = require('internal/errors');\r\nconst format = require('internal/util/inspect').format;\r\nconst {\r\n  validateArray,\r\n  validateNumber,\r\n  validateObject,\r\n} = require('internal/validators');\r\nconst constants = internalBinding('constants').os.signals;\r\n\r\nconst {\r\n  handleProcessExit,\r\n} = require('internal/modules/esm/handle_process_exit');\r\n\r\nconst kInternal = Symbol('internal properties');\r\n\r\nfunction assert(x, msg) {\r\n  if (!x) throw new ERR_ASSERTION(msg || 'assertion error');\r\n}\r\n\r\nconst binding = internalBinding('process_methods');\r\n\r\nlet hrValues;\r\nlet hrBigintValues;\r\n\r\nfunction refreshHrtimeBuffer() {\r\n  // The 3 entries filled in by the original process.hrtime contains\r\n  // the upper/lower 32 bits of the second part of the value,\r\n  // and the remaining nanoseconds of the value.\r\n  hrValues = new Uint32Array(binding.hrtimeBuffer);\r\n  // Use a BigUint64Array in the closure because this is actually a bit\r\n  // faster than simply returning a BigInt from C++ in V8 7.1.\r\n  hrBigintValues = new BigUint64Array(binding.hrtimeBuffer, 0, 1);\r\n}\r\n\r\n// Create the buffers.\r\nrefreshHrtimeBuffer();\r\n\r\nfunction hrtime(time) {\r\n  binding.hrtime();\r\n\r\n  if (time !== undefined) {\r\n    validateArray(time, 'time');\r\n    if (time.length !== 2) {\r\n      throw new ERR_OUT_OF_RANGE('time', 2, time.length);\r\n    }\r\n\r\n    const sec = (hrValues[0] * 0x100000000 + hrValues[1]) - time[0];\r\n    const nsec = hrValues[2] - time[1];\r\n    const needsBorrow = nsec < 0;\r\n    return [needsBorrow ? sec - 1 : sec, needsBorrow ? nsec + 1e9 : nsec];\r\n  }\r\n\r\n  return [\r\n    hrValues[0] * 0x100000000 + hrValues[1],\r\n    hrValues[2],\r\n  ];\r\n}\r\n\r\nfunction hrtimeBigInt() {\r\n  binding.hrtimeBigInt();\r\n  return hrBigintValues[0];\r\n}\r\n\r\nfunction nop() {}\r\n\r\n// The execution of this function itself should not cause any side effects.\r\nfunction wrapProcessMethods(binding) {\r\n  const {\r\n    cpuUsage: _cpuUsage,\r\n    memoryUsage: _memoryUsage,\r\n    rss,\r\n    resourceUsage: _resourceUsage\r\n  } = binding;\r\n\r\n  function _rawDebug(...args) {\r\n    binding._rawDebug(ReflectApply(format, null, args));\r\n  }\r\n\r\n  // Create the argument array that will be passed to the native function.\r\n  const cpuValues = new Float64Array(2);\r\n\r\n  // Replace the native function with the JS version that calls the native\r\n  // function.\r\n  function cpuUsage(prevValue) {\r\n    // If a previous value was passed in, ensure it has the correct shape.\r\n    if (prevValue) {\r\n      if (!previousValueIsValid(prevValue.user)) {\r\n        validateObject(prevValue, 'prevValue');\r\n\r\n        validateNumber(prevValue.user, 'prevValue.user');\r\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.user',\r\n                                                   prevValue.user);\r\n      }\r\n\r\n      if (!previousValueIsValid(prevValue.system)) {\r\n        validateNumber(prevValue.system, 'prevValue.system');\r\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.system',\r\n                                                   prevValue.system);\r\n      }\r\n    }\r\n\r\n    // Call the native function to get the current values.\r\n    _cpuUsage(cpuValues);\r\n\r\n    // If a previous value was passed in, return diff of current from previous.\r\n    if (prevValue) {\r\n      return {\r\n        user: cpuValues[0] - prevValue.user,\r\n        system: cpuValues[1] - prevValue.system\r\n      };\r\n    }\r\n\r\n    // If no previous value passed in, return current value.\r\n    return {\r\n      user: cpuValues[0],\r\n      system: cpuValues[1]\r\n    };\r\n  }\r\n\r\n  // Ensure that a previously passed in value is valid. Currently, the native\r\n  // implementation always returns numbers <= Number.MAX_SAFE_INTEGER.\r\n  function previousValueIsValid(num) {\r\n    return typeof num === 'number' &&\r\n        num <= NumberMAX_SAFE_INTEGER &&\r\n        num >= 0;\r\n  }\r\n\r\n  const memValues = new Float64Array(5);\r\n  function memoryUsage() {\r\n    _memoryUsage(memValues);\r\n    return {\r\n      rss: memValues[0],\r\n      heapTotal: memValues[1],\r\n      heapUsed: memValues[2],\r\n      external: memValues[3],\r\n      arrayBuffers: memValues[4]\r\n    };\r\n  }\r\n\r\n  memoryUsage.rss = rss;\r\n\r\n  function exit(code) {\r\n    process.off('exit', handleProcessExit);\r\n\r\n    if (code || code === 0)\r\n      process.exitCode = code;\r\n\r\n    if (!process._exiting) {\r\n      process._exiting = true;\r\n      process.emit('exit', process.exitCode || 0);\r\n    }\r\n    // FIXME(joyeecheung): This is an undocumented API that gets monkey-patched\r\n    // in the user land. Either document it, or deprecate it in favor of a\r\n    // better public alternative.\r\n    process.reallyExit(process.exitCode || 0);\r\n\r\n    // If this is a worker, v8::Isolate::TerminateExecution() is called above.\r\n    // That function spoofs the stack pointer to cause the stack guard\r\n    // check to throw the termination exception. Because v8 performs\r\n    // stack guard check upon every function call, we give it a chance.\r\n    //\r\n    // Without this, user code after `process.exit()` would take effect.\r\n    // test/parallel/test-worker-voluntarily-exit-followed-by-addition.js\r\n    // test/parallel/test-worker-voluntarily-exit-followed-by-throw.js\r\n    nop();\r\n  }\r\n\r\n  function kill(pid, sig) {\r\n    let err;\r\n\r\n    // eslint-disable-next-line eqeqeq\r\n    if (pid != (pid | 0)) {\r\n      throw new ERR_INVALID_ARG_TYPE('pid', 'number', pid);\r\n    }\r\n\r\n    // Preserve null signal\r\n    if (sig === (sig | 0)) {\r\n      // XXX(joyeecheung): we have to use process._kill here because\r\n      // it's monkey-patched by tests.\r\n      err = process._kill(pid, sig);\r\n    } else {\r\n      sig = sig || 'SIGTERM';\r\n      if (constants[sig]) {\r\n        err = process._kill(pid, constants[sig]);\r\n      } else {\r\n        throw new ERR_UNKNOWN_SIGNAL(sig);\r\n      }\r\n    }\r\n\r\n    if (err)\r\n      throw errnoException(err, 'kill');\r\n\r\n    return true;\r\n  }\r\n\r\n  const resourceValues = new Float64Array(16);\r\n  function resourceUsage() {\r\n    _resourceUsage(resourceValues);\r\n    return {\r\n      userCPUTime: resourceValues[0],\r\n      systemCPUTime: resourceValues[1],\r\n      maxRSS: resourceValues[2],\r\n      sharedMemorySize: resourceValues[3],\r\n      unsharedDataSize: resourceValues[4],\r\n      unsharedStackSize: resourceValues[5],\r\n      minorPageFault: resourceValues[6],\r\n      majorPageFault: resourceValues[7],\r\n      swappedOut: resourceValues[8],\r\n      fsRead: resourceValues[9],\r\n      fsWrite: resourceValues[10],\r\n      ipcSent: resourceValues[11],\r\n      ipcReceived: resourceValues[12],\r\n      signalsCount: resourceValues[13],\r\n      voluntaryContextSwitches: resourceValues[14],\r\n      involuntaryContextSwitches: resourceValues[15]\r\n    };\r\n  }\r\n\r\n\r\n  return {\r\n    _rawDebug,\r\n    cpuUsage,\r\n    resourceUsage,\r\n    memoryUsage,\r\n    kill,\r\n    exit\r\n  };\r\n}\r\n\r\nconst replaceUnderscoresRegex = /_/g;\r\nconst leadingDashesRegex = /^--?/;\r\nconst trailingValuesRegex = /=.*$/;\r\n\r\n// This builds the initial process.allowedNodeEnvironmentFlags\r\n// from data in the config binding.\r\nfunction buildAllowedFlags() {\r\n  const {\r\n    envSettings: { kAllowedInEnvironment },\r\n    types: { kBoolean },\r\n  } = internalBinding('options');\r\n  const { options, aliases } = require('internal/options');\r\n\r\n  const allowedNodeEnvironmentFlags = [];\r\n  for (const { 0: name, 1: info } of options) {\r\n    if (info.envVarSettings === kAllowedInEnvironment) {\r\n      ArrayPrototypePush(allowedNodeEnvironmentFlags, name);\r\n      if (info.type === kBoolean) {\r\n        const negatedName = `--no-${name.slice(2)}`;\r\n        ArrayPrototypePush(allowedNodeEnvironmentFlags, negatedName);\r\n      }\r\n    }\r\n  }\r\n\r\n  function isAccepted(to) {\r\n    if (!StringPrototypeStartsWith(to, '-') || to === '--') return true;\r\n    const recursiveExpansion = aliases.get(to);\r\n    if (recursiveExpansion) {\r\n      if (recursiveExpansion[0] === to)\r\n        ArrayPrototypeSplice(recursiveExpansion, 0, 1);\r\n      return ArrayPrototypeEvery(recursiveExpansion, isAccepted);\r\n    }\r\n    return options.get(to).envVarSettings === kAllowedInEnvironment;\r\n  }\r\n  for (const { 0: from, 1: expansion } of aliases) {\r\n    if (ArrayPrototypeEvery(expansion, isAccepted)) {\r\n      let canonical = from;\r\n      if (StringPrototypeEndsWith(canonical, '='))\r\n        canonical = StringPrototypeSlice(canonical, 0, canonical.length - 1);\r\n      if (StringPrototypeEndsWith(canonical, ' <arg>'))\r\n        canonical = StringPrototypeSlice(canonical, 0, canonical.length - 4);\r\n      ArrayPrototypePush(allowedNodeEnvironmentFlags, canonical);\r\n    }\r\n  }\r\n\r\n  const trimLeadingDashes =\r\n    (flag) => StringPrototypeReplace(flag, leadingDashesRegex, '');\r\n\r\n  // Save these for comparison against flags provided to\r\n  // process.allowedNodeEnvironmentFlags.has() which lack leading dashes.\r\n  const nodeFlags = ArrayPrototypeMap(allowedNodeEnvironmentFlags,\r\n                                      trimLeadingDashes);\r\n\r\n  class NodeEnvironmentFlagsSet extends Set {\r\n    constructor(array) {\r\n      super();\r\n      this[kInternal] = { array };\r\n    }\r\n\r\n    add() {\r\n      // No-op, `Set` API compatible\r\n      return this;\r\n    }\r\n\r\n    delete() {\r\n      // No-op, `Set` API compatible\r\n      return false;\r\n    }\r\n\r\n    clear() {\r\n      // No-op, `Set` API compatible\r\n    }\r\n\r\n    has(key) {\r\n      // This will return `true` based on various possible\r\n      // permutations of a flag, including present/missing leading\r\n      // dash(es) and/or underscores-for-dashes.\r\n      // Strips any values after `=`, inclusive.\r\n      // TODO(addaleax): It might be more flexible to run the option parser\r\n      // on a dummy option set and see whether it rejects the argument or\r\n      // not.\r\n      if (typeof key === 'string') {\r\n        key = StringPrototypeReplace(key, replaceUnderscoresRegex, '-');\r\n        if (RegExpPrototypeExec(leadingDashesRegex, key) !== null) {\r\n          key = StringPrototypeReplace(key, trailingValuesRegex, '');\r\n          return ArrayPrototypeIncludes(this[kInternal].array, key);\r\n        }\r\n        return ArrayPrototypeIncludes(nodeFlags, key);\r\n      }\r\n      return false;\r\n    }\r\n\r\n    entries() {\r\n      this[kInternal].set ??=\r\n        new Set(new SafeArrayIterator(this[kInternal].array));\r\n      return SetPrototypeEntries(this[kInternal].set);\r\n    }\r\n\r\n    forEach(callback, thisArg = undefined) {\r\n      ArrayPrototypeForEach(\r\n        this[kInternal].array,\r\n        (v) => ReflectApply(callback, thisArg, [v, v, this])\r\n      );\r\n    }\r\n\r\n    get size() {\r\n      return this[kInternal].array.length;\r\n    }\r\n\r\n    values() {\r\n      this[kInternal].set ??=\r\n        new Set(new SafeArrayIterator(this[kInternal].array));\r\n      return SetPrototypeValues(this[kInternal].set);\r\n    }\r\n  }\r\n  const flagSetValues = NodeEnvironmentFlagsSet.prototype.values;\r\n  ObjectDefineProperty(NodeEnvironmentFlagsSet.prototype, SymbolIterator, {\r\n    __proto__: null,\r\n    value: flagSetValues,\r\n  });\r\n  ObjectDefineProperty(NodeEnvironmentFlagsSet.prototype, 'keys', {\r\n    __proto__: null,\r\n    value: flagSetValues,\r\n  });\r\n\r\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype.constructor);\r\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype);\r\n\r\n  return ObjectFreeze(new NodeEnvironmentFlagsSet(\r\n    allowedNodeEnvironmentFlags\r\n  ));\r\n}\r\n\r\n// Lazy load internal/trace_events_async_hooks only if the async_hooks\r\n// trace event category is enabled.\r\nlet traceEventsAsyncHook;\r\n// Dynamically enable/disable the traceEventsAsyncHook\r\nfunction toggleTraceCategoryState(asyncHooksEnabled) {\r\n  if (asyncHooksEnabled) {\r\n    if (!traceEventsAsyncHook) {\r\n      traceEventsAsyncHook =\r\n        require('internal/trace_events_async_hooks').createHook();\r\n    }\r\n    traceEventsAsyncHook.enable();\r\n  } else if (traceEventsAsyncHook) {\r\n    traceEventsAsyncHook.disable();\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  toggleTraceCategoryState,\r\n  assert,\r\n  buildAllowedFlags,\r\n  wrapProcessMethods,\r\n  hrtime,\r\n  hrtimeBigInt,\r\n  refreshHrtimeBuffer,\r\n};\r\n",
    "name": "per_thread",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 37,
    "sourcePositions": []
  },
  null,
  {
    "url": "node:internal/process/task_queues",
    "source": "'use strict';\r\n\r\nconst {\r\n  Array,\r\n  FunctionPrototypeBind,\r\n} = primordials;\r\n\r\nconst {\r\n  // For easy access to the nextTick state in the C++ land,\r\n  // and to avoid unnecessary calls into JS land.\r\n  tickInfo,\r\n  // Used to run V8's micro task queue.\r\n  runMicrotasks,\r\n  setTickCallback,\r\n  enqueueMicrotask\r\n} = internalBinding('task_queue');\r\n\r\nconst {\r\n  setHasRejectionToWarn,\r\n  hasRejectionToWarn,\r\n  listenForRejections,\r\n  processPromiseRejections\r\n} = require('internal/process/promises');\r\n\r\nconst {\r\n  getDefaultTriggerAsyncId,\r\n  newAsyncId,\r\n  initHooksExist,\r\n  destroyHooksExist,\r\n  emitInit,\r\n  emitBefore,\r\n  emitAfter,\r\n  emitDestroy,\r\n  symbols: { async_id_symbol, trigger_async_id_symbol }\r\n} = require('internal/async_hooks');\r\nconst FixedQueue = require('internal/fixed_queue');\r\n\r\nconst {\r\n  validateFunction,\r\n} = require('internal/validators');\r\n\r\nconst { AsyncResource } = require('async_hooks');\r\n\r\n// *Must* match Environment::TickInfo::Fields in src/env.h.\r\nconst kHasTickScheduled = 0;\r\n\r\nfunction hasTickScheduled() {\r\n  return tickInfo[kHasTickScheduled] === 1;\r\n}\r\n\r\nfunction setHasTickScheduled(value) {\r\n  tickInfo[kHasTickScheduled] = value ? 1 : 0;\r\n}\r\n\r\nconst queue = new FixedQueue();\r\n\r\n// Should be in sync with RunNextTicksNative in node_task_queue.cc\r\nfunction runNextTicks() {\r\n  if (!hasTickScheduled() && !hasRejectionToWarn())\r\n    runMicrotasks();\r\n  if (!hasTickScheduled() && !hasRejectionToWarn())\r\n    return;\r\n\r\n  processTicksAndRejections();\r\n}\r\n\r\nfunction processTicksAndRejections() {\r\n  let tock;\r\n  do {\r\n    while ((tock = queue.shift()) !== null) {\r\n      const asyncId = tock[async_id_symbol];\r\n      emitBefore(asyncId, tock[trigger_async_id_symbol], tock);\r\n\r\n      try {\r\n        const callback = tock.callback;\r\n        if (tock.args === undefined) {\r\n          callback();\r\n        } else {\r\n          const args = tock.args;\r\n          switch (args.length) {\r\n            case 1: callback(args[0]); break;\r\n            case 2: callback(args[0], args[1]); break;\r\n            case 3: callback(args[0], args[1], args[2]); break;\r\n            case 4: callback(args[0], args[1], args[2], args[3]); break;\r\n            default: callback(...args);\r\n          }\r\n        }\r\n      } finally {\r\n        if (destroyHooksExist())\r\n          emitDestroy(asyncId);\r\n      }\r\n\r\n      emitAfter(asyncId);\r\n    }\r\n    runMicrotasks();\r\n  } while (!queue.isEmpty() || processPromiseRejections());\r\n  setHasTickScheduled(false);\r\n  setHasRejectionToWarn(false);\r\n}\r\n\r\n// `nextTick()` will not enqueue any callback when the process is about to\r\n// exit since the callback would not have a chance to be executed.\r\nfunction nextTick(callback) {\r\n  validateFunction(callback, 'callback');\r\n\r\n  if (process._exiting)\r\n    return;\r\n\r\n  let args;\r\n  switch (arguments.length) {\r\n    case 1: break;\r\n    case 2: args = [arguments[1]]; break;\r\n    case 3: args = [arguments[1], arguments[2]]; break;\r\n    case 4: args = [arguments[1], arguments[2], arguments[3]]; break;\r\n    default:\r\n      args = new Array(arguments.length - 1);\r\n      for (let i = 1; i < arguments.length; i++)\r\n        args[i - 1] = arguments[i];\r\n  }\r\n\r\n  if (queue.isEmpty())\r\n    setHasTickScheduled(true);\r\n  const asyncId = newAsyncId();\r\n  const triggerAsyncId = getDefaultTriggerAsyncId();\r\n  const tickObject = {\r\n    [async_id_symbol]: asyncId,\r\n    [trigger_async_id_symbol]: triggerAsyncId,\r\n    callback,\r\n    args\r\n  };\r\n  if (initHooksExist())\r\n    emitInit(asyncId, 'TickObject', triggerAsyncId, tickObject);\r\n  queue.push(tickObject);\r\n}\r\n\r\nfunction runMicrotask() {\r\n  this.runInAsyncScope(() => {\r\n    const callback = this.callback;\r\n    try {\r\n      callback();\r\n    } finally {\r\n      this.emitDestroy();\r\n    }\r\n  });\r\n}\r\n\r\nconst defaultMicrotaskResourceOpts = { requireManualDestroy: true };\r\n\r\nfunction queueMicrotask(callback) {\r\n  validateFunction(callback, 'callback');\r\n\r\n  const asyncResource = new AsyncResource(\r\n    'Microtask',\r\n    defaultMicrotaskResourceOpts\r\n  );\r\n  asyncResource.callback = callback;\r\n\r\n  enqueueMicrotask(FunctionPrototypeBind(runMicrotask, asyncResource));\r\n}\r\n\r\nmodule.exports = {\r\n  setupTaskQueue() {\r\n    // Sets the per-isolate promise rejection callback\r\n    listenForRejections();\r\n    // Sets the callback to be run in every tick.\r\n    setTickCallback(processTicksAndRejections);\r\n    return {\r\n      nextTick,\r\n      runNextTicks\r\n    };\r\n  },\r\n  queueMicrotask\r\n};\r\n",
    "name": "task_queues",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 39,
    "sourcePositions": []
  },
  {
    "url": "node:internal/process/promises",
    "source": "'use strict';\r\n\r\nconst {\r\n  ArrayPrototypePush,\r\n  ArrayPrototypeShift,\r\n  Error,\r\n  ObjectDefineProperty,\r\n  ObjectPrototypeHasOwnProperty,\r\n  SafeWeakMap,\r\n} = primordials;\r\n\r\nconst {\r\n  tickInfo,\r\n  promiseRejectEvents: {\r\n    kPromiseRejectWithNoHandler,\r\n    kPromiseHandlerAddedAfterReject,\r\n    kPromiseResolveAfterResolved,\r\n    kPromiseRejectAfterResolved\r\n  },\r\n  setPromiseRejectCallback\r\n} = internalBinding('task_queue');\r\n\r\nconst { deprecate } = require('internal/util');\r\n\r\nconst {\r\n  noSideEffectsToString,\r\n  triggerUncaughtException\r\n} = internalBinding('errors');\r\n\r\nconst {\r\n  pushAsyncContext,\r\n  popAsyncContext,\r\n  symbols: {\r\n    async_id_symbol: kAsyncIdSymbol,\r\n    trigger_async_id_symbol: kTriggerAsyncIdSymbol\r\n  }\r\n} = require('internal/async_hooks');\r\nconst { isErrorStackTraceLimitWritable } = require('internal/errors');\r\n\r\n// *Must* match Environment::TickInfo::Fields in src/env.h.\r\nconst kHasRejectionToWarn = 1;\r\n\r\nconst maybeUnhandledPromises = new SafeWeakMap();\r\nconst pendingUnhandledRejections = [];\r\nconst asyncHandledRejections = [];\r\nlet lastPromiseId = 0;\r\n\r\n// --unhandled-rejections=none:\r\n// Emit 'unhandledRejection', but do not emit any warning.\r\nconst kIgnoreUnhandledRejections = 0;\r\n\r\n// --unhandled-rejections=warn:\r\n// Emit 'unhandledRejection', then emit 'UnhandledPromiseRejectionWarning'.\r\nconst kAlwaysWarnUnhandledRejections = 1;\r\n\r\n// --unhandled-rejections=strict:\r\n// Emit 'uncaughtException'. If it's not handled, print the error to stderr\r\n// and exit the process.\r\n// Otherwise, emit 'unhandledRejection'. If 'unhandledRejection' is not\r\n// handled, emit 'UnhandledPromiseRejectionWarning'.\r\nconst kStrictUnhandledRejections = 2;\r\n\r\n// --unhandled-rejections=throw:\r\n// Emit 'unhandledRejection', if it's unhandled, emit\r\n// 'uncaughtException'. If it's not handled, print the error to stderr\r\n// and exit the process.\r\nconst kThrowUnhandledRejections = 3;\r\n\r\n// --unhandled-rejections=warn-with-error-code:\r\n// Emit 'unhandledRejection', if it's unhandled, emit\r\n// 'UnhandledPromiseRejectionWarning', then set process exit code to 1.\r\n\r\nconst kWarnWithErrorCodeUnhandledRejections = 4;\r\n\r\nlet unhandledRejectionsMode;\r\n\r\nfunction setHasRejectionToWarn(value) {\r\n  tickInfo[kHasRejectionToWarn] = value ? 1 : 0;\r\n}\r\n\r\nfunction hasRejectionToWarn() {\r\n  return tickInfo[kHasRejectionToWarn] === 1;\r\n}\r\n\r\nfunction isErrorLike(o) {\r\n  return typeof o === 'object' &&\r\n         o !== null &&\r\n         ObjectPrototypeHasOwnProperty(o, 'stack');\r\n}\r\n\r\nfunction getUnhandledRejectionsMode() {\r\n  const { getOptionValue } = require('internal/options');\r\n  switch (getOptionValue('--unhandled-rejections')) {\r\n    case 'none':\r\n      return kIgnoreUnhandledRejections;\r\n    case 'warn':\r\n      return kAlwaysWarnUnhandledRejections;\r\n    case 'strict':\r\n      return kStrictUnhandledRejections;\r\n    case 'throw':\r\n      return kThrowUnhandledRejections;\r\n    case 'warn-with-error-code':\r\n      return kWarnWithErrorCodeUnhandledRejections;\r\n    default:\r\n      return kThrowUnhandledRejections;\r\n  }\r\n}\r\n\r\nfunction promiseRejectHandler(type, promise, reason) {\r\n  if (unhandledRejectionsMode === undefined) {\r\n    unhandledRejectionsMode = getUnhandledRejectionsMode();\r\n  }\r\n  switch (type) {\r\n    case kPromiseRejectWithNoHandler:\r\n      unhandledRejection(promise, reason);\r\n      break;\r\n    case kPromiseHandlerAddedAfterReject:\r\n      handledRejection(promise);\r\n      break;\r\n    case kPromiseResolveAfterResolved:\r\n      resolveError('resolve', promise, reason);\r\n      break;\r\n    case kPromiseRejectAfterResolved:\r\n      resolveError('reject', promise, reason);\r\n      break;\r\n  }\r\n}\r\n\r\nconst multipleResolvesDeprecate = deprecate(\r\n  () => {},\r\n  'The multipleResolves event has been deprecated.',\r\n  'DEP0160'\r\n);\r\nfunction resolveError(type, promise, reason) {\r\n  // We have to wrap this in a next tick. Otherwise the error could be caught by\r\n  // the executed promise.\r\n  process.nextTick(() => {\r\n    if (process.emit('multipleResolves', type, promise, reason)) {\r\n      multipleResolvesDeprecate();\r\n    }\r\n  });\r\n}\r\n\r\nfunction unhandledRejection(promise, reason) {\r\n  const emit = (reason, promise, promiseInfo) => {\r\n    if (promiseInfo.domain) {\r\n      return promiseInfo.domain.emit('error', reason);\r\n    }\r\n    return process.emit('unhandledRejection', reason, promise);\r\n  };\r\n\r\n  maybeUnhandledPromises.set(promise, {\r\n    reason,\r\n    uid: ++lastPromiseId,\r\n    warned: false,\r\n    domain: process.domain,\r\n    emit\r\n  });\r\n  // This causes the promise to be referenced at least for one tick.\r\n  ArrayPrototypePush(pendingUnhandledRejections, promise);\r\n  setHasRejectionToWarn(true);\r\n}\r\n\r\nfunction handledRejection(promise) {\r\n  const promiseInfo = maybeUnhandledPromises.get(promise);\r\n  if (promiseInfo !== undefined) {\r\n    maybeUnhandledPromises.delete(promise);\r\n    if (promiseInfo.warned) {\r\n      const { uid } = promiseInfo;\r\n      // Generate the warning object early to get a good stack trace.\r\n      // eslint-disable-next-line no-restricted-syntax\r\n      const warning = new Error('Promise rejection was handled ' +\r\n                                `asynchronously (rejection id: ${uid})`);\r\n      warning.name = 'PromiseRejectionHandledWarning';\r\n      warning.id = uid;\r\n      ArrayPrototypePush(asyncHandledRejections, { promise, warning });\r\n      setHasRejectionToWarn(true);\r\n      return;\r\n    }\r\n  }\r\n  if (maybeUnhandledPromises.size === 0 && asyncHandledRejections.length === 0)\r\n    setHasRejectionToWarn(false);\r\n}\r\n\r\nconst unhandledRejectionErrName = 'UnhandledPromiseRejectionWarning';\r\nfunction emitUnhandledRejectionWarning(uid, reason) {\r\n  const warning = getErrorWithoutStack(\r\n    unhandledRejectionErrName,\r\n    'Unhandled promise rejection. This error originated either by ' +\r\n      'throwing inside of an async function without a catch block, ' +\r\n      'or by rejecting a promise which was not handled with .catch(). ' +\r\n      'To terminate the node process on unhandled promise ' +\r\n      'rejection, use the CLI flag `--unhandled-rejections=strict` (see ' +\r\n      'https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). ' +\r\n      `(rejection id: ${uid})`\r\n  );\r\n  try {\r\n    if (isErrorLike(reason)) {\r\n      warning.stack = reason.stack;\r\n      process.emitWarning(reason.stack, unhandledRejectionErrName);\r\n    } else {\r\n      process.emitWarning(\r\n        noSideEffectsToString(reason), unhandledRejectionErrName);\r\n    }\r\n  } catch {\r\n    try {\r\n      process.emitWarning(\r\n        noSideEffectsToString(reason), unhandledRejectionErrName);\r\n    } catch {\r\n      // Ignore.\r\n    }\r\n  }\r\n\r\n  process.emitWarning(warning);\r\n}\r\n\r\n// If this method returns true, we've executed user code or triggered\r\n// a warning to be emitted which requires the microtask and next tick\r\n// queues to be drained again.\r\nfunction processPromiseRejections() {\r\n  let maybeScheduledTicksOrMicrotasks = asyncHandledRejections.length > 0;\r\n\r\n  while (asyncHandledRejections.length > 0) {\r\n    const { promise, warning } = ArrayPrototypeShift(asyncHandledRejections);\r\n    if (!process.emit('rejectionHandled', promise)) {\r\n      process.emitWarning(warning);\r\n    }\r\n  }\r\n\r\n  let len = pendingUnhandledRejections.length;\r\n  while (len--) {\r\n    const promise = ArrayPrototypeShift(pendingUnhandledRejections);\r\n    const promiseInfo = maybeUnhandledPromises.get(promise);\r\n    if (promiseInfo === undefined) {\r\n      continue;\r\n    }\r\n    promiseInfo.warned = true;\r\n    const { reason, uid, emit } = promiseInfo;\r\n\r\n    let needPop = true;\r\n    const {\r\n      [kAsyncIdSymbol]: promiseAsyncId,\r\n      [kTriggerAsyncIdSymbol]: promiseTriggerAsyncId,\r\n    } = promise;\r\n    // We need to check if async_hooks are enabled\r\n    // don't use enabledHooksExist as a Promise could\r\n    // come from a vm.* context and not have an async id\r\n    if (typeof promiseAsyncId !== 'undefined') {\r\n      pushAsyncContext(\r\n        promiseAsyncId,\r\n        promiseTriggerAsyncId,\r\n        promise\r\n      );\r\n    }\r\n    try {\r\n      switch (unhandledRejectionsMode) {\r\n        case kStrictUnhandledRejections: {\r\n          const err = isErrorLike(reason) ?\r\n            reason : generateUnhandledRejectionError(reason);\r\n          // This destroys the async stack, don't clear it after\r\n          triggerUncaughtException(err, true /* fromPromise */);\r\n          if (typeof promiseAsyncId !== 'undefined') {\r\n            pushAsyncContext(\r\n              promise[kAsyncIdSymbol],\r\n              promise[kTriggerAsyncIdSymbol],\r\n              promise\r\n            );\r\n          }\r\n          const handled = emit(reason, promise, promiseInfo);\r\n          if (!handled) emitUnhandledRejectionWarning(uid, reason);\r\n          break;\r\n        }\r\n        case kIgnoreUnhandledRejections: {\r\n          emit(reason, promise, promiseInfo);\r\n          break;\r\n        }\r\n        case kAlwaysWarnUnhandledRejections: {\r\n          emit(reason, promise, promiseInfo);\r\n          emitUnhandledRejectionWarning(uid, reason);\r\n          break;\r\n        }\r\n        case kThrowUnhandledRejections: {\r\n          const handled = emit(reason, promise, promiseInfo);\r\n          if (!handled) {\r\n            const err = isErrorLike(reason) ?\r\n              reason : generateUnhandledRejectionError(reason);\r\n              // This destroys the async stack, don't clear it after\r\n            triggerUncaughtException(err, true /* fromPromise */);\r\n            needPop = false;\r\n          }\r\n          break;\r\n        }\r\n        case kWarnWithErrorCodeUnhandledRejections: {\r\n          const handled = emit(reason, promise, promiseInfo);\r\n          if (!handled) {\r\n            emitUnhandledRejectionWarning(uid, reason);\r\n            process.exitCode = 1;\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    } finally {\r\n      if (needPop) {\r\n        if (typeof promiseAsyncId !== 'undefined') {\r\n          popAsyncContext(promiseAsyncId);\r\n        }\r\n      }\r\n    }\r\n    maybeScheduledTicksOrMicrotasks = true;\r\n  }\r\n  return maybeScheduledTicksOrMicrotasks ||\r\n         pendingUnhandledRejections.length !== 0;\r\n}\r\n\r\nfunction getErrorWithoutStack(name, message) {\r\n  // Reset the stack to prevent any overhead.\r\n  const tmp = Error.stackTraceLimit;\r\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\r\n  // eslint-disable-next-line no-restricted-syntax\r\n  const err = new Error(message);\r\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmp;\r\n  ObjectDefineProperty(err, 'name', {\r\n    __proto__: null,\r\n    value: name,\r\n    enumerable: false,\r\n    writable: true,\r\n    configurable: true,\r\n  });\r\n  return err;\r\n}\r\n\r\nfunction generateUnhandledRejectionError(reason) {\r\n  const message =\r\n    'This error originated either by ' +\r\n    'throwing inside of an async function without a catch block, ' +\r\n    'or by rejecting a promise which was not handled with .catch().' +\r\n    ' The promise rejected with the reason ' +\r\n    `\"${noSideEffectsToString(reason)}\".`;\r\n\r\n  const err = getErrorWithoutStack('UnhandledPromiseRejection', message);\r\n  err.code = 'ERR_UNHANDLED_REJECTION';\r\n  return err;\r\n}\r\n\r\nfunction listenForRejections() {\r\n  setPromiseRejectCallback(promiseRejectHandler);\r\n}\r\nmodule.exports = {\r\n  hasRejectionToWarn,\r\n  setHasRejectionToWarn,\r\n  listenForRejections,\r\n  processPromiseRejections,\r\n};\r\n",
    "name": "node:internal/process/promises",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 40,
    "sourcePositions": []
  },
  {
    "url": "node:internal/fixed_queue",
    "source": "'use strict';\r\n\r\nconst {\r\n  Array,\r\n} = primordials;\r\n\r\n// Currently optimal queue size, tested on V8 6.0 - 6.6. Must be power of two.\r\nconst kSize = 2048;\r\nconst kMask = kSize - 1;\r\n\r\n// The FixedQueue is implemented as a singly-linked list of fixed-size\r\n// circular buffers. It looks something like this:\r\n//\r\n//  head                                                       tail\r\n//    |                                                          |\r\n//    v                                                          v\r\n// +-----------+ <-----\\       +-----------+ <------\\         +-----------+\r\n// |  [null]   |        \\----- |   next    |         \\------- |   next    |\r\n// +-----------+               +-----------+                  +-----------+\r\n// |   item    | <-- bottom    |   item    | <-- bottom       |  [empty]  |\r\n// |   item    |               |   item    |                  |  [empty]  |\r\n// |   item    |               |   item    |                  |  [empty]  |\r\n// |   item    |               |   item    |                  |  [empty]  |\r\n// |   item    |               |   item    |       bottom --> |   item    |\r\n// |   item    |               |   item    |                  |   item    |\r\n// |    ...    |               |    ...    |                  |    ...    |\r\n// |   item    |               |   item    |                  |   item    |\r\n// |   item    |               |   item    |                  |   item    |\r\n// |  [empty]  | <-- top       |   item    |                  |   item    |\r\n// |  [empty]  |               |   item    |                  |   item    |\r\n// |  [empty]  |               |  [empty]  | <-- top  top --> |  [empty]  |\r\n// +-----------+               +-----------+                  +-----------+\r\n//\r\n// Or, if there is only one circular buffer, it looks something\r\n// like either of these:\r\n//\r\n//  head   tail                                 head   tail\r\n//    |     |                                     |     |\r\n//    v     v                                     v     v\r\n// +-----------+                               +-----------+\r\n// |  [null]   |                               |  [null]   |\r\n// +-----------+                               +-----------+\r\n// |  [empty]  |                               |   item    |\r\n// |  [empty]  |                               |   item    |\r\n// |   item    | <-- bottom            top --> |  [empty]  |\r\n// |   item    |                               |  [empty]  |\r\n// |  [empty]  | <-- top            bottom --> |   item    |\r\n// |  [empty]  |                               |   item    |\r\n// +-----------+                               +-----------+\r\n//\r\n// Adding a value means moving `top` forward by one, removing means\r\n// moving `bottom` forward by one. After reaching the end, the queue\r\n// wraps around.\r\n//\r\n// When `top === bottom` the current queue is empty and when\r\n// `top + 1 === bottom` it's full. This wastes a single space of storage\r\n// but allows much quicker checks.\r\n\r\nclass FixedCircularBuffer {\r\n  constructor() {\r\n    this.bottom = 0;\r\n    this.top = 0;\r\n    this.list = new Array(kSize);\r\n    this.next = null;\r\n  }\r\n\r\n  isEmpty() {\r\n    return this.top === this.bottom;\r\n  }\r\n\r\n  isFull() {\r\n    return ((this.top + 1) & kMask) === this.bottom;\r\n  }\r\n\r\n  push(data) {\r\n    this.list[this.top] = data;\r\n    this.top = (this.top + 1) & kMask;\r\n  }\r\n\r\n  shift() {\r\n    const nextItem = this.list[this.bottom];\r\n    if (nextItem === undefined)\r\n      return null;\r\n    this.list[this.bottom] = undefined;\r\n    this.bottom = (this.bottom + 1) & kMask;\r\n    return nextItem;\r\n  }\r\n}\r\n\r\nmodule.exports = class FixedQueue {\r\n  constructor() {\r\n    this.head = this.tail = new FixedCircularBuffer();\r\n  }\r\n\r\n  isEmpty() {\r\n    return this.head.isEmpty();\r\n  }\r\n\r\n  push(data) {\r\n    if (this.head.isFull()) {\r\n      // Head is full: Creates a new queue, sets the old queue's `.next` to it,\r\n      // and sets it as the new main queue.\r\n      this.head = this.head.next = new FixedCircularBuffer();\r\n    }\r\n    this.head.push(data);\r\n  }\r\n\r\n  shift() {\r\n    const tail = this.tail;\r\n    const next = tail.shift();\r\n    if (tail.isEmpty() && tail.next !== null) {\r\n      // If there is another queue, it forms the new tail.\r\n      this.tail = tail.next;\r\n      tail.next = null;\r\n    }\r\n    return next;\r\n  }\r\n};\r\n",
    "name": "fixed_queue",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 41,
    "sourcePositions": []
  },
  null,
  null,
  {
    "url": "node:stream",
    "source": "// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n'use strict';\r\n\r\nconst {\r\n  ObjectDefineProperty,\r\n  ObjectKeys,\r\n  ReflectApply,\r\n} = primordials;\r\n\r\nconst {\r\n  promisify: { custom: customPromisify },\r\n} = require('internal/util');\r\n\r\nconst {\r\n  streamReturningOperators,\r\n  promiseReturningOperators,\r\n} = require('internal/streams/operators');\r\n\r\nconst {\r\n  codes: {\r\n    ERR_ILLEGAL_CONSTRUCTOR,\r\n  },\r\n} = require('internal/errors');\r\nconst compose = require('internal/streams/compose');\r\nconst { pipeline } = require('internal/streams/pipeline');\r\nconst { destroyer } = require('internal/streams/destroy');\r\nconst eos = require('internal/streams/end-of-stream');\r\nconst internalBuffer = require('internal/buffer');\r\n\r\nconst promises = require('stream/promises');\r\nconst utils = require('internal/streams/utils');\r\n\r\nconst Stream = module.exports = require('internal/streams/legacy').Stream;\r\nStream.isDisturbed = utils.isDisturbed;\r\nStream.isErrored = utils.isErrored;\r\nStream.isReadable = utils.isReadable;\r\nStream.Readable = require('internal/streams/readable');\r\nfor (const key of ObjectKeys(streamReturningOperators)) {\r\n  const op = streamReturningOperators[key];\r\n  function fn(...args) {\r\n    if (new.target) {\r\n      throw ERR_ILLEGAL_CONSTRUCTOR();\r\n    }\r\n    return Stream.Readable.from(ReflectApply(op, this, args));\r\n  }\r\n  ObjectDefineProperty(fn, 'name', { __proto__: null, value: op.name });\r\n  ObjectDefineProperty(fn, 'length', { __proto__: null, value: op.length });\r\n  ObjectDefineProperty(Stream.Readable.prototype, key, {\r\n    __proto__: null,\r\n    value: fn,\r\n    enumerable: false,\r\n    configurable: true,\r\n    writable: true,\r\n  });\r\n}\r\nfor (const key of ObjectKeys(promiseReturningOperators)) {\r\n  const op = promiseReturningOperators[key];\r\n  function fn(...args) {\r\n    if (new.target) {\r\n      throw ERR_ILLEGAL_CONSTRUCTOR();\r\n    }\r\n    return ReflectApply(op, this, args);\r\n  }\r\n  ObjectDefineProperty(fn, 'name', { __proto__: null, value: op.name });\r\n  ObjectDefineProperty(fn, 'length', { __proto__: null, value: op.length });\r\n  ObjectDefineProperty(Stream.Readable.prototype, key, {\r\n    __proto__: null,\r\n    value: fn,\r\n    enumerable: false,\r\n    configurable: true,\r\n    writable: true,\r\n  });\r\n}\r\nStream.Writable = require('internal/streams/writable');\r\nStream.Duplex = require('internal/streams/duplex');\r\nStream.Transform = require('internal/streams/transform');\r\nStream.PassThrough = require('internal/streams/passthrough');\r\nStream.pipeline = pipeline;\r\nconst { addAbortSignal } = require('internal/streams/add-abort-signal');\r\nStream.addAbortSignal = addAbortSignal;\r\nStream.finished = eos;\r\nStream.destroy = destroyer;\r\nStream.compose = compose;\r\n\r\nObjectDefineProperty(Stream, 'promises', {\r\n  __proto__: null,\r\n  configurable: true,\r\n  enumerable: true,\r\n  get() {\r\n    return promises;\r\n  }\r\n});\r\n\r\nObjectDefineProperty(pipeline, customPromisify, {\r\n  __proto__: null,\r\n  enumerable: true,\r\n  get() {\r\n    return promises.pipeline;\r\n  }\r\n});\r\n\r\nObjectDefineProperty(eos, customPromisify, {\r\n  __proto__: null,\r\n  enumerable: true,\r\n  get() {\r\n    return promises.finished;\r\n  }\r\n});\r\n\r\n// Backwards-compat with node 0.4.x\r\nStream.Stream = Stream;\r\n\r\nStream._isUint8Array = require('internal/util/types').isUint8Array;\r\nStream._uint8ArrayToBuffer = function _uint8ArrayToBuffer(chunk) {\r\n  return new internalBuffer.FastBuffer(chunk.buffer,\r\n                                       chunk.byteOffset,\r\n                                       chunk.byteLength);\r\n};\r\n",
    "name": "node:stream",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 44,
    "sourcePositions": []
  },
  null,
  null,
  {
    "url": "node:internal/event_target",
    "source": "'use strict';\r\n\r\nconst {\r\n  ArrayFrom,\r\n  Boolean,\r\n  Error,\r\n  FunctionPrototypeCall,\r\n  NumberIsInteger,\r\n  ObjectAssign,\r\n  ObjectDefineProperties,\r\n  ObjectDefineProperty,\r\n  ObjectGetOwnPropertyDescriptor,\r\n  ObjectGetOwnPropertyDescriptors,\r\n  ObjectSetPrototypeOf,\r\n  ObjectValues,\r\n  ReflectApply,\r\n  SafeArrayIterator,\r\n  SafeFinalizationRegistry,\r\n  SafeMap,\r\n  SafeWeakMap,\r\n  SafeWeakRef,\r\n  SafeWeakSet,\r\n  String,\r\n  Symbol,\r\n  SymbolFor,\r\n  SymbolToStringTag,\r\n} = primordials;\r\n\r\nconst {\r\n  codes: {\r\n    ERR_INVALID_ARG_TYPE,\r\n    ERR_EVENT_RECURSION,\r\n    ERR_MISSING_ARGS,\r\n    ERR_INVALID_THIS,\r\n  }\r\n} = require('internal/errors');\r\nconst { validateObject, validateString } = require('internal/validators');\r\n\r\nconst {\r\n  customInspectSymbol,\r\n  kEmptyObject,\r\n  kEnumerableProperty,\r\n} = require('internal/util');\r\nconst { inspect } = require('util');\r\n\r\nconst kIsEventTarget = SymbolFor('nodejs.event_target');\r\nconst kIsNodeEventTarget = Symbol('kIsNodeEventTarget');\r\n\r\nconst EventEmitter = require('events');\r\nconst {\r\n  kMaxEventTargetListeners,\r\n  kMaxEventTargetListenersWarned,\r\n} = EventEmitter;\r\n\r\nconst kEvents = Symbol('kEvents');\r\nconst kIsBeingDispatched = Symbol('kIsBeingDispatched');\r\nconst kStop = Symbol('kStop');\r\nconst kTarget = Symbol('kTarget');\r\nconst kHandlers = Symbol('kHandlers');\r\nconst kWeakHandler = Symbol('kWeak');\r\n\r\nconst kHybridDispatch = SymbolFor('nodejs.internal.kHybridDispatch');\r\nconst kCreateEvent = Symbol('kCreateEvent');\r\nconst kNewListener = Symbol('kNewListener');\r\nconst kRemoveListener = Symbol('kRemoveListener');\r\nconst kIsNodeStyleListener = Symbol('kIsNodeStyleListener');\r\nconst kTrustEvent = Symbol('kTrustEvent');\r\n\r\nconst { now } = require('internal/perf/utils');\r\n\r\nconst kType = Symbol('type');\r\nconst kDetail = Symbol('detail');\r\n\r\nconst isTrustedSet = new SafeWeakSet();\r\nconst isTrusted = ObjectGetOwnPropertyDescriptor({\r\n  get isTrusted() {\r\n    return isTrustedSet.has(this);\r\n  }\r\n}, 'isTrusted').get;\r\n\r\nfunction isEvent(value) {\r\n  return typeof value?.[kType] === 'string';\r\n}\r\n\r\nclass Event {\r\n  #cancelable = false;\r\n  #bubbles = false;\r\n  #composed = false;\r\n  #defaultPrevented = false;\r\n  #timestamp = now();\r\n  #propagationStopped = false;\r\n\r\n  /**\r\n   * @param {string} type\r\n   * @param {{\r\n   *   bubbles?: boolean,\r\n   *   cancelable?: boolean,\r\n   *   composed?: boolean,\r\n   * }} [options]\r\n   */\r\n  constructor(type, options = kEmptyObject) {\r\n    if (arguments.length === 0)\r\n      throw new ERR_MISSING_ARGS('type');\r\n    validateObject(options, 'options');\r\n    const { bubbles, cancelable, composed } = options;\r\n    this.#cancelable = !!cancelable;\r\n    this.#bubbles = !!bubbles;\r\n    this.#composed = !!composed;\r\n\r\n    this[kType] = `${type}`;\r\n    if (options?.[kTrustEvent]) {\r\n      isTrustedSet.add(this);\r\n    }\r\n\r\n    // isTrusted is special (LegacyUnforgeable)\r\n    ObjectDefineProperty(this, 'isTrusted', {\r\n      __proto__: null,\r\n      get: isTrusted,\r\n      enumerable: true,\r\n      configurable: false\r\n    });\r\n    this[kTarget] = null;\r\n    this[kIsBeingDispatched] = false;\r\n  }\r\n\r\n  [customInspectSymbol](depth, options) {\r\n    if (!isEvent(this))\r\n      throw new ERR_INVALID_THIS('Event');\r\n    const name = this.constructor.name;\r\n    if (depth < 0)\r\n      return name;\r\n\r\n    const opts = ObjectAssign({}, options, {\r\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\r\n    });\r\n\r\n    return `${name} ${inspect({\r\n      type: this[kType],\r\n      defaultPrevented: this.#defaultPrevented,\r\n      cancelable: this.#cancelable,\r\n      timeStamp: this.#timestamp,\r\n    }, opts)}`;\r\n  }\r\n\r\n  stopImmediatePropagation() {\r\n    if (!isEvent(this))\r\n      throw new ERR_INVALID_THIS('Event');\r\n    this[kStop] = true;\r\n  }\r\n\r\n  preventDefault() {\r\n    if (!isEvent(this))\r\n      throw new ERR_INVALID_THIS('Event');\r\n    this.#defaultPrevented = true;\r\n  }\r\n\r\n  /**\r\n   * @type {EventTarget}\r\n   */\r\n  get target() {\r\n    if (!isEvent(this))\r\n      throw new ERR_INVALID_THIS('Event');\r\n    return this[kTarget];\r\n  }\r\n\r\n  /**\r\n   * @type {EventTarget}\r\n   */\r\n  get currentTarget() {\r\n    if (!isEvent(this))\r\n      throw new ERR_INVALID_THIS('Event');\r\n    return this[kTarget];\r\n  }\r\n\r\n  /**\r\n   * @type {EventTarget}\r\n   */\r\n  get srcElement() {\r\n    if (!isEvent(this))\r\n      throw new ERR_INVALID_THIS('Event');\r\n    return this[kTarget];\r\n  }\r\n\r\n  /**\r\n   * @type {string}\r\n   */\r\n  get type() {\r\n    if (!isEvent(this))\r\n      throw new ERR_INVALID_THIS('Event');\r\n    return this[kType];\r\n  }\r\n\r\n  /**\r\n   * @type {boolean}\r\n   */\r\n  get cancelable() {\r\n    if (!isEvent(this))\r\n      throw new ERR_INVALID_THIS('Event');\r\n    return this.#cancelable;\r\n  }\r\n\r\n  /**\r\n   * @type {boolean}\r\n   */\r\n  get defaultPrevented() {\r\n    if (!isEvent(this))\r\n      throw new ERR_INVALID_THIS('Event');\r\n    return this.#cancelable && this.#defaultPrevented;\r\n  }\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  get timeStamp() {\r\n    if (!isEvent(this))\r\n      throw new ERR_INVALID_THIS('Event');\r\n    return this.#timestamp;\r\n  }\r\n\r\n\r\n  // The following are non-op and unused properties/methods from Web API Event.\r\n  // These are not supported in Node.js and are provided purely for\r\n  // API completeness.\r\n  /**\r\n   * @returns {EventTarget[]}\r\n   */\r\n  composedPath() {\r\n    if (!isEvent(this))\r\n      throw new ERR_INVALID_THIS('Event');\r\n    return this[kIsBeingDispatched] ? [this[kTarget]] : [];\r\n  }\r\n\r\n  /**\r\n   * @type {boolean}\r\n   */\r\n  get returnValue() {\r\n    if (!isEvent(this))\r\n      throw new ERR_INVALID_THIS('Event');\r\n    return !this.#cancelable || !this.#defaultPrevented;\r\n  }\r\n\r\n  /**\r\n   * @type {boolean}\r\n   */\r\n  get bubbles() {\r\n    if (!isEvent(this))\r\n      throw new ERR_INVALID_THIS('Event');\r\n    return this.#bubbles;\r\n  }\r\n\r\n  /**\r\n   * @type {boolean}\r\n   */\r\n  get composed() {\r\n    if (!isEvent(this))\r\n      throw new ERR_INVALID_THIS('Event');\r\n    return this.#composed;\r\n  }\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  get eventPhase() {\r\n    if (!isEvent(this))\r\n      throw new ERR_INVALID_THIS('Event');\r\n    return this[kIsBeingDispatched] ? Event.AT_TARGET : Event.NONE;\r\n  }\r\n\r\n  /**\r\n   * @type {boolean}\r\n   */\r\n  get cancelBubble() {\r\n    if (!isEvent(this))\r\n      throw new ERR_INVALID_THIS('Event');\r\n    return this.#propagationStopped;\r\n  }\r\n\r\n  /**\r\n   * @type {boolean}\r\n   */\r\n  set cancelBubble(value) {\r\n    if (!isEvent(this))\r\n      throw new ERR_INVALID_THIS('Event');\r\n    if (value) {\r\n      this.stopPropagation();\r\n    }\r\n  }\r\n\r\n  stopPropagation() {\r\n    if (!isEvent(this))\r\n      throw new ERR_INVALID_THIS('Event');\r\n    this.#propagationStopped = true;\r\n  }\r\n\r\n  static NONE = 0;\r\n  static CAPTURING_PHASE = 1;\r\n  static AT_TARGET = 2;\r\n  static BUBBLING_PHASE = 3;\r\n}\r\n\r\nObjectDefineProperties(\r\n  Event.prototype, {\r\n    [SymbolToStringTag]: {\r\n      __proto__: null,\r\n      writable: false,\r\n      enumerable: false,\r\n      configurable: true,\r\n      value: 'Event',\r\n    },\r\n    stopImmediatePropagation: kEnumerableProperty,\r\n    preventDefault: kEnumerableProperty,\r\n    target: kEnumerableProperty,\r\n    currentTarget: kEnumerableProperty,\r\n    srcElement: kEnumerableProperty,\r\n    type: kEnumerableProperty,\r\n    cancelable: kEnumerableProperty,\r\n    defaultPrevented: kEnumerableProperty,\r\n    timeStamp: kEnumerableProperty,\r\n    composedPath: kEnumerableProperty,\r\n    returnValue: kEnumerableProperty,\r\n    bubbles: kEnumerableProperty,\r\n    composed: kEnumerableProperty,\r\n    eventPhase: kEnumerableProperty,\r\n    cancelBubble: kEnumerableProperty,\r\n    stopPropagation: kEnumerableProperty,\r\n  });\r\n\r\nfunction isCustomEvent(value) {\r\n  return isEvent(value) && (value?.[kDetail] !== undefined);\r\n}\r\n\r\nclass CustomEvent extends Event {\r\n  /**\r\n   * @constructor\r\n   * @param {string} type\r\n   * @param {{\r\n   *   bubbles?: boolean,\r\n   *   cancelable?: boolean,\r\n   *   composed?: boolean,\r\n   *   detail?: any,\r\n   * }} [options]\r\n   */\r\n  constructor(type, options = kEmptyObject) {\r\n    if (arguments.length === 0)\r\n      throw new ERR_MISSING_ARGS('type');\r\n    super(type, options);\r\n    this[kDetail] = options?.detail ?? null;\r\n  }\r\n\r\n  /**\r\n   * @type {any}\r\n   */\r\n  get detail() {\r\n    if (!isCustomEvent(this))\r\n      throw new ERR_INVALID_THIS('CustomEvent');\r\n    return this[kDetail];\r\n  }\r\n}\r\n\r\nObjectDefineProperties(CustomEvent.prototype, {\r\n  [SymbolToStringTag]: {\r\n    __proto__: null,\r\n    writable: false,\r\n    enumerable: false,\r\n    configurable: true,\r\n    value: 'CustomEvent',\r\n  },\r\n  detail: kEnumerableProperty,\r\n});\r\n\r\nclass NodeCustomEvent extends Event {\r\n  constructor(type, options) {\r\n    super(type, options);\r\n    if (options?.detail) {\r\n      this.detail = options.detail;\r\n    }\r\n  }\r\n}\r\n\r\n// Weak listener cleanup\r\n// This has to be lazy for snapshots to work\r\nlet weakListenersState = null;\r\n// The resource needs to retain the callback so that it doesn't\r\n// get garbage collected now that it's weak.\r\nlet objectToWeakListenerMap = null;\r\nfunction weakListeners() {\r\n  weakListenersState ??= new SafeFinalizationRegistry(\r\n    (listener) => listener.remove()\r\n  );\r\n  objectToWeakListenerMap ??= new SafeWeakMap();\r\n  return { registry: weakListenersState, map: objectToWeakListenerMap };\r\n}\r\n\r\nconst kFlagOnce = 1 << 0;\r\nconst kFlagCapture = 1 << 1;\r\nconst kFlagPassive = 1 << 2;\r\nconst kFlagNodeStyle = 1 << 3;\r\nconst kFlagWeak = 1 << 4;\r\nconst kFlagRemoved = 1 << 5;\r\n\r\n// The listeners for an EventTarget are maintained as a linked list.\r\n// Unfortunately, the way EventTarget is defined, listeners are accounted\r\n// using the tuple [handler,capture], and even if we don't actually make\r\n// use of capture or bubbling, in order to be spec compliant we have to\r\n// take on the additional complexity of supporting it. Fortunately, using\r\n// the linked list makes dispatching faster, even if adding/removing is\r\n// slower.\r\nclass Listener {\r\n  constructor(previous, listener, once, capture, passive,\r\n              isNodeStyleListener, weak) {\r\n    this.next = undefined;\r\n    if (previous !== undefined)\r\n      previous.next = this;\r\n    this.previous = previous;\r\n    this.listener = listener;\r\n\r\n    let flags = 0b0;\r\n    if (once)\r\n      flags |= kFlagOnce;\r\n    if (capture)\r\n      flags |= kFlagCapture;\r\n    if (passive)\r\n      flags |= kFlagPassive;\r\n    if (isNodeStyleListener)\r\n      flags |= kFlagNodeStyle;\r\n    if (weak)\r\n      flags |= kFlagWeak;\r\n    this.flags = flags;\r\n\r\n    this.removed = false;\r\n\r\n    if (this.weak) {\r\n      this.callback = new SafeWeakRef(listener);\r\n      weakListeners().registry.register(listener, this, this);\r\n      // Make the retainer retain the listener in a WeakMap\r\n      weakListeners().map.set(weak, listener);\r\n      this.listener = this.callback;\r\n    } else if (typeof listener === 'function') {\r\n      this.callback = listener;\r\n      this.listener = listener;\r\n    } else {\r\n      this.callback = async (...args) => {\r\n        if (listener.handleEvent)\r\n          await ReflectApply(listener.handleEvent, listener, args);\r\n      };\r\n      this.listener = listener;\r\n    }\r\n  }\r\n\r\n  get once() {\r\n    return Boolean(this.flags & kFlagOnce);\r\n  }\r\n  get capture() {\r\n    return Boolean(this.flags & kFlagCapture);\r\n  }\r\n  get passive() {\r\n    return Boolean(this.flags & kFlagPassive);\r\n  }\r\n  get isNodeStyleListener() {\r\n    return Boolean(this.flags & kFlagNodeStyle);\r\n  }\r\n  get weak() {\r\n    return Boolean(this.flags & kFlagWeak);\r\n  }\r\n  get removed() {\r\n    return Boolean(this.flags & kFlagRemoved);\r\n  }\r\n  set removed(value) {\r\n    if (value)\r\n      this.flags |= kFlagRemoved;\r\n    else\r\n      this.flags &= ~kFlagRemoved;\r\n  }\r\n\r\n  same(listener, capture) {\r\n    const myListener = this.weak ? this.listener.deref() : this.listener;\r\n    return myListener === listener && this.capture === capture;\r\n  }\r\n\r\n  remove() {\r\n    if (this.previous !== undefined)\r\n      this.previous.next = this.next;\r\n    if (this.next !== undefined)\r\n      this.next.previous = this.previous;\r\n    this.removed = true;\r\n    if (this.weak)\r\n      weakListeners().registry.unregister(this);\r\n  }\r\n}\r\n\r\nfunction initEventTarget(self) {\r\n  self[kEvents] = new SafeMap();\r\n  self[kMaxEventTargetListeners] = EventEmitter.defaultMaxListeners;\r\n  self[kMaxEventTargetListenersWarned] = false;\r\n}\r\n\r\nclass EventTarget {\r\n  // Used in checking whether an object is an EventTarget. This is a well-known\r\n  // symbol as EventTarget may be used cross-realm.\r\n  // Ref: https://github.com/nodejs/node/pull/33661\r\n  static [kIsEventTarget] = true;\r\n\r\n  constructor() {\r\n    initEventTarget(this);\r\n  }\r\n\r\n  [kNewListener](size, type, listener, once, capture, passive, weak) {\r\n    if (this[kMaxEventTargetListeners] > 0 &&\r\n        size > this[kMaxEventTargetListeners] &&\r\n        !this[kMaxEventTargetListenersWarned]) {\r\n      this[kMaxEventTargetListenersWarned] = true;\r\n      // No error code for this since it is a Warning\r\n      // eslint-disable-next-line no-restricted-syntax\r\n      const w = new Error('Possible EventTarget memory leak detected. ' +\r\n                          `${size} ${type} listeners ` +\r\n                          `added to ${inspect(this, { depth: -1 })}. Use ` +\r\n                          'events.setMaxListeners() to increase limit');\r\n      w.name = 'MaxListenersExceededWarning';\r\n      w.target = this;\r\n      w.type = type;\r\n      w.count = size;\r\n      process.emitWarning(w);\r\n    }\r\n  }\r\n  [kRemoveListener](size, type, listener, capture) {}\r\n\r\n  /**\r\n   * @callback EventTargetCallback\r\n   * @param {Event} event\r\n   */\r\n\r\n  /**\r\n   * @typedef {{ handleEvent: EventTargetCallback }} EventListener\r\n   */\r\n\r\n  /**\r\n   * @param {string} type\r\n   * @param {EventTargetCallback|EventListener} listener\r\n   * @param {{\r\n   *   capture?: boolean,\r\n   *   once?: boolean,\r\n   *   passive?: boolean,\r\n   *   signal?: AbortSignal\r\n   * }} [options]\r\n   */\r\n  addEventListener(type, listener, options = kEmptyObject) {\r\n    if (!isEventTarget(this))\r\n      throw new ERR_INVALID_THIS('EventTarget');\r\n    if (arguments.length < 2)\r\n      throw new ERR_MISSING_ARGS('type', 'listener');\r\n\r\n    // We validateOptions before the validateListener check because the spec\r\n    // requires us to hit getters.\r\n    const {\r\n      once,\r\n      capture,\r\n      passive,\r\n      signal,\r\n      isNodeStyleListener,\r\n      weak,\r\n    } = validateEventListenerOptions(options);\r\n\r\n    if (!validateEventListener(listener)) {\r\n      // The DOM silently allows passing undefined as a second argument\r\n      // No error code for this since it is a Warning\r\n      // eslint-disable-next-line no-restricted-syntax\r\n      const w = new Error(`addEventListener called with ${listener}` +\r\n                          ' which has no effect.');\r\n      w.name = 'AddEventListenerArgumentTypeWarning';\r\n      w.target = this;\r\n      w.type = type;\r\n      process.emitWarning(w);\r\n      return;\r\n    }\r\n    type = String(type);\r\n\r\n    if (signal) {\r\n      if (signal.aborted) {\r\n        return;\r\n      }\r\n      // TODO(benjamingr) make this weak somehow? ideally the signal would\r\n      // not prevent the event target from GC.\r\n      signal.addEventListener('abort', () => {\r\n        this.removeEventListener(type, listener, options);\r\n      }, { once: true, [kWeakHandler]: this });\r\n    }\r\n\r\n    let root = this[kEvents].get(type);\r\n\r\n    if (root === undefined) {\r\n      root = { size: 1, next: undefined };\r\n      // This is the first handler in our linked list.\r\n      new Listener(root, listener, once, capture, passive,\r\n                   isNodeStyleListener, weak);\r\n      this[kNewListener](\r\n        root.size,\r\n        type,\r\n        listener,\r\n        once,\r\n        capture,\r\n        passive,\r\n        weak);\r\n      this[kEvents].set(type, root);\r\n      return;\r\n    }\r\n\r\n    let handler = root.next;\r\n    let previous = root;\r\n\r\n    // We have to walk the linked list to see if we have a match\r\n    while (handler !== undefined && !handler.same(listener, capture)) {\r\n      previous = handler;\r\n      handler = handler.next;\r\n    }\r\n\r\n    if (handler !== undefined) { // Duplicate! Ignore\r\n      return;\r\n    }\r\n\r\n    new Listener(previous, listener, once, capture, passive,\r\n                 isNodeStyleListener, weak);\r\n    root.size++;\r\n    this[kNewListener](root.size, type, listener, once, capture, passive, weak);\r\n  }\r\n\r\n  /**\r\n   * @param {string} type\r\n   * @param {EventTargetCallback|EventListener} listener\r\n   * @param {{\r\n   *   capture?: boolean,\r\n   * }} [options]\r\n   */\r\n  removeEventListener(type, listener, options = kEmptyObject) {\r\n    if (!isEventTarget(this))\r\n      throw new ERR_INVALID_THIS('EventTarget');\r\n    if (arguments.length < 2)\r\n      throw new ERR_MISSING_ARGS('type', 'listener');\r\n    if (!validateEventListener(listener))\r\n      return;\r\n\r\n    type = String(type);\r\n    const capture = options?.capture === true;\r\n\r\n    const root = this[kEvents].get(type);\r\n    if (root === undefined || root.next === undefined)\r\n      return;\r\n\r\n    let handler = root.next;\r\n    while (handler !== undefined) {\r\n      if (handler.same(listener, capture)) {\r\n        handler.remove();\r\n        root.size--;\r\n        if (root.size === 0)\r\n          this[kEvents].delete(type);\r\n        this[kRemoveListener](root.size, type, listener, capture);\r\n        break;\r\n      }\r\n      handler = handler.next;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Event} event\r\n   */\r\n  dispatchEvent(event) {\r\n    if (!isEventTarget(this))\r\n      throw new ERR_INVALID_THIS('EventTarget');\r\n    if (arguments.length < 1)\r\n      throw new ERR_MISSING_ARGS('event');\r\n\r\n    if (!(event instanceof Event))\r\n      throw new ERR_INVALID_ARG_TYPE('event', 'Event', event);\r\n\r\n    if (event[kIsBeingDispatched])\r\n      throw new ERR_EVENT_RECURSION(event.type);\r\n\r\n    this[kHybridDispatch](event, event.type, event);\r\n\r\n    return event.defaultPrevented !== true;\r\n  }\r\n\r\n  [kHybridDispatch](nodeValue, type, event) {\r\n    const createEvent = () => {\r\n      if (event === undefined) {\r\n        event = this[kCreateEvent](nodeValue, type);\r\n        event[kTarget] = this;\r\n        event[kIsBeingDispatched] = true;\r\n      }\r\n      return event;\r\n    };\r\n    if (event !== undefined) {\r\n      event[kTarget] = this;\r\n      event[kIsBeingDispatched] = true;\r\n    }\r\n\r\n    const root = this[kEvents].get(type);\r\n    if (root === undefined || root.next === undefined) {\r\n      if (event !== undefined)\r\n        event[kIsBeingDispatched] = false;\r\n      return true;\r\n    }\r\n\r\n    let handler = root.next;\r\n    let next;\r\n\r\n    while (handler !== undefined &&\r\n           (handler.passive || event?.[kStop] !== true)) {\r\n      // Cache the next item in case this iteration removes the current one\r\n      next = handler.next;\r\n\r\n      if (handler.removed) {\r\n        // Deal with the case an event is removed while event handlers are\r\n        // Being processed (removeEventListener called from a listener)\r\n        handler = next;\r\n        continue;\r\n      }\r\n      if (handler.once) {\r\n        handler.remove();\r\n        root.size--;\r\n        const { listener, capture } = handler;\r\n        this[kRemoveListener](root.size, type, listener, capture);\r\n      }\r\n\r\n      try {\r\n        let arg;\r\n        if (handler.isNodeStyleListener) {\r\n          arg = nodeValue;\r\n        } else {\r\n          arg = createEvent();\r\n        }\r\n        const callback = handler.weak ?\r\n          handler.callback.deref() : handler.callback;\r\n        let result;\r\n        if (callback) {\r\n          result = FunctionPrototypeCall(callback, this, arg);\r\n          if (!handler.isNodeStyleListener) {\r\n            arg[kIsBeingDispatched] = false;\r\n          }\r\n        }\r\n        if (result !== undefined && result !== null)\r\n          addCatch(result);\r\n      } catch (err) {\r\n        emitUncaughtException(err);\r\n      }\r\n\r\n      handler = next;\r\n    }\r\n\r\n    if (event !== undefined)\r\n      event[kIsBeingDispatched] = false;\r\n  }\r\n\r\n  [kCreateEvent](nodeValue, type) {\r\n    return new NodeCustomEvent(type, { detail: nodeValue });\r\n  }\r\n  [customInspectSymbol](depth, options) {\r\n    if (!isEventTarget(this))\r\n      throw new ERR_INVALID_THIS('EventTarget');\r\n    const name = this.constructor.name;\r\n    if (depth < 0)\r\n      return name;\r\n\r\n    const opts = ObjectAssign({}, options, {\r\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\r\n    });\r\n\r\n    return `${name} ${inspect({}, opts)}`;\r\n  }\r\n}\r\n\r\nObjectDefineProperties(EventTarget.prototype, {\r\n  addEventListener: kEnumerableProperty,\r\n  removeEventListener: kEnumerableProperty,\r\n  dispatchEvent: kEnumerableProperty,\r\n  [SymbolToStringTag]: {\r\n    __proto__: null,\r\n    writable: false,\r\n    enumerable: false,\r\n    configurable: true,\r\n    value: 'EventTarget',\r\n  }\r\n});\r\n\r\nfunction initNodeEventTarget(self) {\r\n  initEventTarget(self);\r\n}\r\n\r\nclass NodeEventTarget extends EventTarget {\r\n  static [kIsNodeEventTarget] = true;\r\n  static defaultMaxListeners = 10;\r\n\r\n  constructor() {\r\n    super();\r\n    initNodeEventTarget(this);\r\n  }\r\n\r\n  /**\r\n   * @param {number} n\r\n   */\r\n  setMaxListeners(n) {\r\n    if (!isNodeEventTarget(this))\r\n      throw new ERR_INVALID_THIS('NodeEventTarget');\r\n    EventEmitter.setMaxListeners(n, this);\r\n  }\r\n\r\n  /**\r\n   * @returns {number}\r\n   */\r\n  getMaxListeners() {\r\n    if (!isNodeEventTarget(this))\r\n      throw new ERR_INVALID_THIS('NodeEventTarget');\r\n    return this[kMaxEventTargetListeners];\r\n  }\r\n\r\n  /**\r\n   * @returns {string[]}\r\n   */\r\n  eventNames() {\r\n    if (!isNodeEventTarget(this))\r\n      throw new ERR_INVALID_THIS('NodeEventTarget');\r\n    return ArrayFrom(this[kEvents].keys());\r\n  }\r\n\r\n  /**\r\n   * @param {string} type\r\n   * @returns {number}\r\n   */\r\n  listenerCount(type) {\r\n    if (!isNodeEventTarget(this))\r\n      throw new ERR_INVALID_THIS('NodeEventTarget');\r\n    const root = this[kEvents].get(String(type));\r\n    return root !== undefined ? root.size : 0;\r\n  }\r\n\r\n  /**\r\n   * @param {string} type\r\n   * @param {EventTargetCallback|EventListener} listener\r\n   * @param {{\r\n   *   capture?: boolean,\r\n   * }} [options]\r\n   * @returns {NodeEventTarget}\r\n   */\r\n  off(type, listener, options) {\r\n    if (!isNodeEventTarget(this))\r\n      throw new ERR_INVALID_THIS('NodeEventTarget');\r\n    this.removeEventListener(type, listener, options);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @param {string} type\r\n   * @param {EventTargetCallback|EventListener} listener\r\n   * @param {{\r\n   *   capture?: boolean,\r\n   * }} [options]\r\n   * @returns {NodeEventTarget}\r\n   */\r\n  removeListener(type, listener, options) {\r\n    if (!isNodeEventTarget(this))\r\n      throw new ERR_INVALID_THIS('NodeEventTarget');\r\n    this.removeEventListener(type, listener, options);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @param {string} type\r\n   * @param {EventTargetCallback|EventListener} listener\r\n   * @returns {NodeEventTarget}\r\n   */\r\n  on(type, listener) {\r\n    if (!isNodeEventTarget(this))\r\n      throw new ERR_INVALID_THIS('NodeEventTarget');\r\n    this.addEventListener(type, listener, { [kIsNodeStyleListener]: true });\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @param {string} type\r\n   * @param {EventTargetCallback|EventListener} listener\r\n   * @returns {NodeEventTarget}\r\n   */\r\n  addListener(type, listener) {\r\n    if (!isNodeEventTarget(this))\r\n      throw new ERR_INVALID_THIS('NodeEventTarget');\r\n    this.addEventListener(type, listener, { [kIsNodeStyleListener]: true });\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @param {string} type\r\n   * @param {any} arg\r\n   * @returns {boolean}\r\n   */\r\n  emit(type, arg) {\r\n    if (!isNodeEventTarget(this))\r\n      throw new ERR_INVALID_THIS('NodeEventTarget');\r\n    validateString(type, 'type');\r\n    const hadListeners = this.listenerCount(type) > 0;\r\n    this[kHybridDispatch](arg, type);\r\n    return hadListeners;\r\n  }\r\n\r\n  /**\r\n   * @param {string} type\r\n   * @param {EventTargetCallback|EventListener} listener\r\n   * @returns {NodeEventTarget}\r\n   */\r\n  once(type, listener) {\r\n    if (!isNodeEventTarget(this))\r\n      throw new ERR_INVALID_THIS('NodeEventTarget');\r\n    this.addEventListener(type, listener,\r\n                          { once: true, [kIsNodeStyleListener]: true });\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @param {string} type\r\n   * @returns {NodeEventTarget}\r\n   */\r\n  removeAllListeners(type) {\r\n    if (!isNodeEventTarget(this))\r\n      throw new ERR_INVALID_THIS('NodeEventTarget');\r\n    if (type !== undefined) {\r\n      this[kEvents].delete(String(type));\r\n    } else {\r\n      this[kEvents].clear();\r\n    }\r\n\r\n    return this;\r\n  }\r\n}\r\n\r\nObjectDefineProperties(NodeEventTarget.prototype, {\r\n  setMaxListeners: kEnumerableProperty,\r\n  getMaxListeners: kEnumerableProperty,\r\n  eventNames: kEnumerableProperty,\r\n  listenerCount: kEnumerableProperty,\r\n  off: kEnumerableProperty,\r\n  removeListener: kEnumerableProperty,\r\n  on: kEnumerableProperty,\r\n  addListener: kEnumerableProperty,\r\n  once: kEnumerableProperty,\r\n  emit: kEnumerableProperty,\r\n  removeAllListeners: kEnumerableProperty,\r\n});\r\n\r\n// EventTarget API\r\n\r\nfunction validateEventListener(listener) {\r\n  if (typeof listener === 'function' ||\r\n      typeof listener?.handleEvent === 'function') {\r\n    return true;\r\n  }\r\n\r\n  if (listener == null)\r\n    return false;\r\n\r\n  if (typeof listener === 'object') {\r\n    // Require `handleEvent` lazily.\r\n    return true;\r\n  }\r\n\r\n  throw new ERR_INVALID_ARG_TYPE('listener', 'EventListener', listener);\r\n}\r\n\r\nfunction validateEventListenerOptions(options) {\r\n  if (typeof options === 'boolean')\r\n    return { capture: options };\r\n\r\n  if (options === null)\r\n    return kEmptyObject;\r\n  validateObject(options, 'options', {\r\n    allowArray: true, allowFunction: true,\r\n  });\r\n  return {\r\n    once: Boolean(options.once),\r\n    capture: Boolean(options.capture),\r\n    passive: Boolean(options.passive),\r\n    signal: options.signal,\r\n    weak: options[kWeakHandler],\r\n    isNodeStyleListener: Boolean(options[kIsNodeStyleListener])\r\n  };\r\n}\r\n\r\n// Test whether the argument is an event object. This is far from a fool-proof\r\n// test, for example this input will result in a false positive:\r\n// > isEventTarget({ constructor: EventTarget })\r\n// It stands in its current implementation as a compromise.\r\n// Ref: https://github.com/nodejs/node/pull/33661\r\nfunction isEventTarget(obj) {\r\n  return obj?.constructor?.[kIsEventTarget];\r\n}\r\n\r\nfunction isNodeEventTarget(obj) {\r\n  return obj?.constructor?.[kIsNodeEventTarget];\r\n}\r\n\r\nfunction addCatch(promise) {\r\n  const then = promise.then;\r\n  if (typeof then === 'function') {\r\n    FunctionPrototypeCall(then, promise, undefined, function(err) {\r\n      // The callback is called with nextTick to avoid a follow-up\r\n      // rejection from this promise.\r\n      emitUncaughtException(err);\r\n    });\r\n  }\r\n}\r\n\r\nfunction emitUncaughtException(err) {\r\n  process.nextTick(() => { throw err; });\r\n}\r\n\r\nfunction makeEventHandler(handler) {\r\n  // Event handlers are dispatched in the order they were first set\r\n  // See https://github.com/nodejs/node/pull/35949#issuecomment-722496598\r\n  function eventHandler(...args) {\r\n    if (typeof eventHandler.handler !== 'function') {\r\n      return;\r\n    }\r\n    return ReflectApply(eventHandler.handler, this, args);\r\n  }\r\n  eventHandler.handler = handler;\r\n  return eventHandler;\r\n}\r\n\r\nfunction defineEventHandler(emitter, name) {\r\n  // 8.1.5.1 Event handlers - basically `on[eventName]` attributes\r\n  ObjectDefineProperty(emitter, `on${name}`, {\r\n    __proto__: null,\r\n    get() {\r\n      return this[kHandlers]?.get(name)?.handler ?? null;\r\n    },\r\n    set(value) {\r\n      if (!this[kHandlers]) {\r\n        this[kHandlers] = new SafeMap();\r\n      }\r\n      let wrappedHandler = this[kHandlers]?.get(name);\r\n      if (wrappedHandler) {\r\n        if (typeof wrappedHandler.handler === 'function') {\r\n          this[kEvents].get(name).size--;\r\n          const size = this[kEvents].get(name).size;\r\n          this[kRemoveListener](size, name, wrappedHandler.handler, false);\r\n        }\r\n        wrappedHandler.handler = value;\r\n        if (typeof wrappedHandler.handler === 'function') {\r\n          this[kEvents].get(name).size++;\r\n          const size = this[kEvents].get(name).size;\r\n          this[kNewListener](size, name, value, false, false, false, false);\r\n        }\r\n      } else {\r\n        wrappedHandler = makeEventHandler(value);\r\n        this.addEventListener(name, wrappedHandler);\r\n      }\r\n      this[kHandlers].set(name, wrappedHandler);\r\n    },\r\n    configurable: true,\r\n    enumerable: true\r\n  });\r\n}\r\n\r\nconst EventEmitterMixin = (Superclass) => {\r\n  class MixedEventEmitter extends Superclass {\r\n    constructor(...args) {\r\n      args = new SafeArrayIterator(args);\r\n      super(...args);\r\n      FunctionPrototypeCall(EventEmitter, this);\r\n    }\r\n  }\r\n  const protoProps = ObjectGetOwnPropertyDescriptors(EventEmitter.prototype);\r\n  delete protoProps.constructor;\r\n  const propertiesValues = ObjectValues(protoProps);\r\n  for (let i = 0; i < propertiesValues.length; i++) {\r\n    // We want to use null-prototype objects to not rely on globally mutable\r\n    // %Object.prototype%.\r\n    ObjectSetPrototypeOf(propertiesValues[i], null);\r\n  }\r\n  ObjectDefineProperties(MixedEventEmitter.prototype, protoProps);\r\n  return MixedEventEmitter;\r\n};\r\n\r\nmodule.exports = {\r\n  Event,\r\n  CustomEvent,\r\n  EventEmitterMixin,\r\n  EventTarget,\r\n  NodeEventTarget,\r\n  defineEventHandler,\r\n  initEventTarget,\r\n  initNodeEventTarget,\r\n  kCreateEvent,\r\n  kNewListener,\r\n  kTrustEvent,\r\n  kRemoveListener,\r\n  kEvents,\r\n  kWeakHandler,\r\n  isEventTarget,\r\n};\r\n",
    "name": "event_target",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 47,
    "sourcePositions": []
  },
  {
    "url": "node:util",
    "source": "// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n'use strict';\r\n\r\nconst {\r\n  ArrayIsArray,\r\n  ArrayPrototypeJoin,\r\n  ArrayPrototypePop,\r\n  Date,\r\n  DatePrototypeGetDate,\r\n  DatePrototypeGetHours,\r\n  DatePrototypeGetMinutes,\r\n  DatePrototypeGetMonth,\r\n  DatePrototypeGetSeconds,\r\n  Error,\r\n  FunctionPrototypeBind,\r\n  NumberIsSafeInteger,\r\n  ObjectDefineProperties,\r\n  ObjectDefineProperty,\r\n  ObjectGetOwnPropertyDescriptors,\r\n  ObjectKeys,\r\n  ObjectPrototypeToString,\r\n  ObjectSetPrototypeOf,\r\n  ObjectValues,\r\n  ReflectApply,\r\n  StringPrototypePadStart,\r\n} = primordials;\r\n\r\nconst {\r\n  codes: {\r\n    ERR_FALSY_VALUE_REJECTION,\r\n    ERR_INVALID_ARG_TYPE,\r\n    ERR_OUT_OF_RANGE\r\n  },\r\n  errnoException,\r\n  exceptionWithHostPort,\r\n  hideStackFrames\r\n} = require('internal/errors');\r\nconst {\r\n  format,\r\n  formatWithOptions,\r\n  inspect,\r\n  stripVTControlCharacters,\r\n} = require('internal/util/inspect');\r\nconst { debuglog } = require('internal/util/debuglog');\r\nconst { parseArgs } = require('internal/util/parse_args/parse_args');\r\nconst {\r\n  validateFunction,\r\n  validateNumber,\r\n} = require('internal/validators');\r\nconst { TextDecoder, TextEncoder } = require('internal/encoding');\r\nconst { MIMEType, MIMEParams } = require('internal/mime');\r\nconst { isBuffer } = require('buffer').Buffer;\r\nconst types = require('internal/util/types');\r\n\r\nconst {\r\n  deprecate,\r\n  getSystemErrorMap,\r\n  getSystemErrorName: internalErrorName,\r\n  promisify,\r\n  toUSVString,\r\n} = require('internal/util');\r\n\r\nlet abortController;\r\n\r\nfunction lazyAbortController() {\r\n  abortController ??= require('internal/abort_controller');\r\n  return abortController;\r\n}\r\n\r\nlet internalDeepEqual;\r\n\r\n/**\r\n * @deprecated since v4.0.0\r\n * @param {any} arg\r\n * @returns {arg is boolean}\r\n */\r\nfunction isBoolean(arg) {\r\n  return typeof arg === 'boolean';\r\n}\r\n\r\n/**\r\n * @deprecated since v4.0.0\r\n * @param {any} arg\r\n * @returns {arg is null}\r\n */\r\nfunction isNull(arg) {\r\n  return arg === null;\r\n}\r\n\r\n/**\r\n * @deprecated since v4.0.0\r\n * @param {any} arg\r\n * @returns {arg is (null | undefined)}\r\n */\r\nfunction isNullOrUndefined(arg) {\r\n  return arg === null || arg === undefined;\r\n}\r\n\r\n/**\r\n * @deprecated since v4.0.0\r\n * @param {any} arg\r\n * @returns {arg is number}\r\n */\r\nfunction isNumber(arg) {\r\n  return typeof arg === 'number';\r\n}\r\n\r\n/**\r\n * @param {any} arg\r\n * @returns {arg is string}\r\n */\r\nfunction isString(arg) {\r\n  return typeof arg === 'string';\r\n}\r\n\r\n/**\r\n * @deprecated since v4.0.0\r\n * @param {any} arg\r\n * @returns {arg is symbol}\r\n */\r\nfunction isSymbol(arg) {\r\n  return typeof arg === 'symbol';\r\n}\r\n\r\n/**\r\n * @deprecated since v4.0.0\r\n * @param {any} arg\r\n * @returns {arg is undefined}\r\n */\r\nfunction isUndefined(arg) {\r\n  return arg === undefined;\r\n}\r\n\r\n/**\r\n * @deprecated since v4.0.0\r\n * @param {any} arg\r\n * @returns {a is NonNullable<object>}\r\n */\r\nfunction isObject(arg) {\r\n  return arg !== null && typeof arg === 'object';\r\n}\r\n\r\n/**\r\n * @deprecated since v4.0.0\r\n * @param {any} e\r\n * @returns {arg is Error}\r\n */\r\nfunction isError(e) {\r\n  return ObjectPrototypeToString(e) === '[object Error]' || e instanceof Error;\r\n}\r\n\r\n/**\r\n * @deprecated since v4.0.0\r\n * @param {any} arg\r\n * @returns {arg is Function}\r\n */\r\nfunction isFunction(arg) {\r\n  return typeof arg === 'function';\r\n}\r\n\r\n/**\r\n * @deprecated since v4.0.0\r\n * @param {any} arg\r\n * @returns {arg is (boolean | null | number | string | symbol | undefined)}\r\n */\r\nfunction isPrimitive(arg) {\r\n  return arg === null ||\r\n         (typeof arg !== 'object' && typeof arg !== 'function');\r\n}\r\n\r\n/**\r\n * @param {number} n\r\n * @returns {string}\r\n */\r\nfunction pad(n) {\r\n  return StringPrototypePadStart(n.toString(), 2, '0');\r\n}\r\n\r\nconst months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\r\n                'Oct', 'Nov', 'Dec'];\r\n\r\n/**\r\n * @returns {string}  26 Feb 16:19:34\r\n */\r\nfunction timestamp() {\r\n  const d = new Date();\r\n  const t = ArrayPrototypeJoin([\r\n    pad(DatePrototypeGetHours(d)),\r\n    pad(DatePrototypeGetMinutes(d)),\r\n    pad(DatePrototypeGetSeconds(d)),\r\n  ], ':');\r\n  return `${DatePrototypeGetDate(d)} ${months[DatePrototypeGetMonth(d)]} ${t}`;\r\n}\r\n\r\nlet console;\r\n/**\r\n * Log is just a thin wrapper to console.log that prepends a timestamp\r\n * @deprecated since v6.0.0\r\n * @type {(...args: any[]) => void}\r\n */\r\nfunction log(...args) {\r\n  if (!console) {\r\n    console = require('internal/console/global');\r\n  }\r\n  console.log('%s - %s', timestamp(), format(...args));\r\n}\r\n\r\n/**\r\n * Inherit the prototype methods from one constructor into another.\r\n *\r\n * The Function.prototype.inherits from lang.js rewritten as a standalone\r\n * function (not on Function.prototype). NOTE: If this file is to be loaded\r\n * during bootstrapping this function needs to be rewritten using some native\r\n * functions as prototype setup using normal JavaScript does not work as\r\n * expected during bootstrapping (see mirror.js in r114903).\r\n *\r\n * @param {Function} ctor Constructor function which needs to inherit the\r\n *     prototype.\r\n * @param {Function} superCtor Constructor function to inherit prototype from.\r\n * @throws {TypeError} Will error if either constructor is null, or if\r\n *     the super constructor lacks a prototype.\r\n */\r\nfunction inherits(ctor, superCtor) {\r\n\r\n  if (ctor === undefined || ctor === null)\r\n    throw new ERR_INVALID_ARG_TYPE('ctor', 'Function', ctor);\r\n\r\n  if (superCtor === undefined || superCtor === null)\r\n    throw new ERR_INVALID_ARG_TYPE('superCtor', 'Function', superCtor);\r\n\r\n  if (superCtor.prototype === undefined) {\r\n    throw new ERR_INVALID_ARG_TYPE('superCtor.prototype',\r\n                                   'Object', superCtor.prototype);\r\n  }\r\n  ObjectDefineProperty(ctor, 'super_', {\r\n    __proto__: null,\r\n    value: superCtor,\r\n    writable: true,\r\n    configurable: true\r\n  });\r\n  ObjectSetPrototypeOf(ctor.prototype, superCtor.prototype);\r\n}\r\n\r\n/**\r\n * @deprecated since v6.0.0\r\n * @template T\r\n * @template S\r\n * @param {T} target\r\n * @param {S} source\r\n * @returns {S extends null ? T : (T & S)}\r\n */\r\nfunction _extend(target, source) {\r\n  // Don't do anything if source isn't an object\r\n  if (source === null || typeof source !== 'object') return target;\r\n\r\n  const keys = ObjectKeys(source);\r\n  let i = keys.length;\r\n  while (i--) {\r\n    target[keys[i]] = source[keys[i]];\r\n  }\r\n  return target;\r\n}\r\n\r\nconst callbackifyOnRejected = hideStackFrames((reason, cb) => {\r\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\r\n  // Because `null` is a special error value in callbacks which means \"no error\r\n  // occurred\", we error-wrap so the callback consumer can distinguish between\r\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\r\n  if (!reason) {\r\n    reason = new ERR_FALSY_VALUE_REJECTION(reason);\r\n  }\r\n  return cb(reason);\r\n});\r\n\r\n/**\r\n * @template {(...args: any[]) => Promise<any>} T\r\n * @param {T} original\r\n * @returns {T extends (...args: infer TArgs) => Promise<infer TReturn> ?\r\n *   ((...params: [...TArgs, ((err: Error, ret: TReturn) => any)]) => void) :\r\n *   never\r\n * }\r\n */\r\nfunction callbackify(original) {\r\n  validateFunction(original, 'original');\r\n\r\n  // We DO NOT return the promise as it gives the user a false sense that\r\n  // the promise is actually somehow related to the callback's execution\r\n  // and that the callback throwing will reject the promise.\r\n  function callbackified(...args) {\r\n    const maybeCb = ArrayPrototypePop(args);\r\n    validateFunction(maybeCb, 'last argument');\r\n    const cb = FunctionPrototypeBind(maybeCb, this);\r\n    // In true node style we process the callback on `nextTick` with all the\r\n    // implications (stack, `uncaughtException`, `async_hooks`)\r\n    ReflectApply(original, this, args)\r\n      .then((ret) => process.nextTick(cb, null, ret),\r\n            (rej) => process.nextTick(callbackifyOnRejected, rej, cb));\r\n  }\r\n\r\n  const descriptors = ObjectGetOwnPropertyDescriptors(original);\r\n  // It is possible to manipulate a functions `length` or `name` property. This\r\n  // guards against the manipulation.\r\n  if (typeof descriptors.length.value === 'number') {\r\n    descriptors.length.value++;\r\n  }\r\n  if (typeof descriptors.name.value === 'string') {\r\n    descriptors.name.value += 'Callbackified';\r\n  }\r\n  const propertiesValues = ObjectValues(descriptors);\r\n  for (let i = 0; i < propertiesValues.length; i++) {\r\n  // We want to use null-prototype objects to not rely on globally mutable\r\n  // %Object.prototype%.\r\n    ObjectSetPrototypeOf(propertiesValues[i], null);\r\n  }\r\n  ObjectDefineProperties(callbackified, descriptors);\r\n  return callbackified;\r\n}\r\n\r\n/**\r\n * @param {number} err\r\n * @returns {string}\r\n */\r\nfunction getSystemErrorName(err) {\r\n  validateNumber(err, 'err');\r\n  if (err >= 0 || !NumberIsSafeInteger(err)) {\r\n    throw new ERR_OUT_OF_RANGE('err', 'a negative integer', err);\r\n  }\r\n  return internalErrorName(err);\r\n}\r\n\r\n// Keep the `exports =` so that various functions can still be monkeypatched\r\nmodule.exports = {\r\n  _errnoException: errnoException,\r\n  _exceptionWithHostPort: exceptionWithHostPort,\r\n  _extend,\r\n  callbackify,\r\n  debug: debuglog,\r\n  debuglog,\r\n  deprecate,\r\n  format,\r\n  formatWithOptions,\r\n  getSystemErrorMap,\r\n  getSystemErrorName,\r\n  inherits,\r\n  inspect,\r\n  isArray: ArrayIsArray,\r\n  isBoolean,\r\n  isBuffer,\r\n  isDeepStrictEqual(a, b) {\r\n    if (internalDeepEqual === undefined) {\r\n      internalDeepEqual = require('internal/util/comparisons')\r\n        .isDeepStrictEqual;\r\n    }\r\n    return internalDeepEqual(a, b);\r\n  },\r\n  isNull,\r\n  isNullOrUndefined,\r\n  isNumber,\r\n  isString,\r\n  isSymbol,\r\n  isUndefined,\r\n  isRegExp: types.isRegExp,\r\n  isObject,\r\n  isDate: types.isDate,\r\n  isError,\r\n  isFunction,\r\n  isPrimitive,\r\n  log,\r\n  MIMEType,\r\n  MIMEParams,\r\n  parseArgs,\r\n  promisify,\r\n  stripVTControlCharacters,\r\n  toUSVString,\r\n  TextDecoder,\r\n  TextEncoder,\r\n  get transferableAbortSignal() {\r\n    return lazyAbortController().transferableAbortSignal;\r\n  },\r\n  get transferableAbortController() {\r\n    return lazyAbortController().transferableAbortController;\r\n  },\r\n  types\r\n};\r\n",
    "name": "node:util",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 48,
    "sourcePositions": []
  },
  null,
  null,
  null,
  {
    "url": "node:internal/perf/utils",
    "source": "'use strict';\r\n\r\nconst binding = internalBinding('performance');\r\nconst {\r\n  milestones,\r\n  getTimeOrigin,\r\n} = binding;\r\n\r\n// TODO(joyeecheung): we may want to warn about access to\r\n// this during snapshot building.\r\nlet timeOrigin = getTimeOrigin();\r\n\r\nfunction now() {\r\n  const hr = process.hrtime();\r\n  return (hr[0] * 1000 + hr[1] / 1e6) - timeOrigin;\r\n}\r\n\r\nfunction getMilestoneTimestamp(milestoneIdx) {\r\n  const ns = milestones[milestoneIdx];\r\n  if (ns === -1)\r\n    return ns;\r\n  return ns / 1e6 - timeOrigin;\r\n}\r\n\r\nfunction refreshTimeOrigin() {\r\n  timeOrigin = getTimeOrigin();\r\n}\r\n\r\nmodule.exports = {\r\n  now,\r\n  getMilestoneTimestamp,\r\n  refreshTimeOrigin\r\n};\r\n",
    "name": "node:internal/cluster/utils",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 52,
    "sourcePositions": []
  },
  {
    "url": "node:timers",
    "source": "// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n'use strict';\r\n\r\nconst {\r\n  MathTrunc,\r\n  ObjectCreate,\r\n  ObjectDefineProperty,\r\n  SymbolToPrimitive\r\n} = primordials;\r\n\r\nconst {\r\n  immediateInfo,\r\n  toggleImmediateRef\r\n} = internalBinding('timers');\r\nconst L = require('internal/linkedlist');\r\nconst {\r\n  async_id_symbol,\r\n  Timeout,\r\n  Immediate,\r\n  decRefCount,\r\n  immediateInfoFields: {\r\n    kCount,\r\n    kRefCount\r\n  },\r\n  kRefed,\r\n  kHasPrimitive,\r\n  getTimerDuration,\r\n  timerListMap,\r\n  timerListQueue,\r\n  immediateQueue,\r\n  active,\r\n  unrefActive,\r\n  insert\r\n} = require('internal/timers');\r\nconst {\r\n  promisify: { custom: customPromisify },\r\n  deprecate\r\n} = require('internal/util');\r\nlet debug = require('internal/util/debuglog').debuglog('timer', (fn) => {\r\n  debug = fn;\r\n});\r\nconst { validateFunction } = require('internal/validators');\r\n\r\nlet timersPromises;\r\n\r\nconst {\r\n  destroyHooksExist,\r\n  // The needed emit*() functions.\r\n  emitDestroy\r\n} = require('internal/async_hooks');\r\n\r\n// This stores all the known timer async ids to allow users to clearTimeout and\r\n// clearInterval using those ids, to match the spec and the rest of the web\r\n// platform.\r\nconst knownTimersById = ObjectCreate(null);\r\n\r\n// Remove a timer. Cancels the timeout and resets the relevant timer properties.\r\nfunction unenroll(item) {\r\n  if (item._destroyed)\r\n    return;\r\n\r\n  item._destroyed = true;\r\n\r\n  if (item[kHasPrimitive])\r\n    delete knownTimersById[item[async_id_symbol]];\r\n\r\n  // Fewer checks may be possible, but these cover everything.\r\n  if (destroyHooksExist() && item[async_id_symbol] !== undefined)\r\n    emitDestroy(item[async_id_symbol]);\r\n\r\n  L.remove(item);\r\n\r\n  // We only delete refed lists because unrefed ones are incredibly likely\r\n  // to come from http and be recreated shortly after.\r\n  // TODO: Long-term this could instead be handled by creating an internal\r\n  // clearTimeout that makes it clear that the list should not be deleted.\r\n  // That function could then be used by http and other similar modules.\r\n  if (item[kRefed]) {\r\n    // Compliment truncation during insert().\r\n    const msecs = MathTrunc(item._idleTimeout);\r\n    const list = timerListMap[msecs];\r\n    if (list !== undefined && L.isEmpty(list)) {\r\n      debug('unenroll: list empty');\r\n      timerListQueue.removeAt(list.priorityQueuePosition);\r\n      delete timerListMap[list.msecs];\r\n    }\r\n\r\n    decRefCount();\r\n  }\r\n\r\n  // If active is called later, then we want to make sure not to insert again\r\n  item._idleTimeout = -1;\r\n}\r\n\r\n// Make a regular object able to act as a timer by setting some properties.\r\n// This function does not start the timer, see `active()`.\r\n// Using existing objects as timers slightly reduces object overhead.\r\nfunction enroll(item, msecs) {\r\n  msecs = getTimerDuration(msecs, 'msecs');\r\n\r\n  // If this item was already in a list somewhere\r\n  // then we should unenroll it from that\r\n  if (item._idleNext) unenroll(item);\r\n\r\n  L.init(item);\r\n  item._idleTimeout = msecs;\r\n}\r\n\r\n\r\n/**\r\n * Schedules the execution of a one-time `callback`\r\n * after `after` milliseconds.\r\n * @param {Function} callback\r\n * @param {number} [after]\r\n * @param {any} [arg1]\r\n * @param {any} [arg2]\r\n * @param {any} [arg3]\r\n * @returns {Timeout}\r\n */\r\nfunction setTimeout(callback, after, arg1, arg2, arg3) {\r\n  validateFunction(callback, 'callback');\r\n\r\n  let i, args;\r\n  switch (arguments.length) {\r\n    // fast cases\r\n    case 1:\r\n    case 2:\r\n      break;\r\n    case 3:\r\n      args = [arg1];\r\n      break;\r\n    case 4:\r\n      args = [arg1, arg2];\r\n      break;\r\n    default:\r\n      args = [arg1, arg2, arg3];\r\n      for (i = 5; i < arguments.length; i++) {\r\n        // Extend array dynamically, makes .apply run much faster in v6.0.0\r\n        args[i - 2] = arguments[i];\r\n      }\r\n      break;\r\n  }\r\n\r\n  const timeout = new Timeout(callback, after, args, false, true);\r\n  insert(timeout, timeout._idleTimeout);\r\n\r\n  return timeout;\r\n}\r\n\r\nObjectDefineProperty(setTimeout, customPromisify, {\r\n  __proto__: null,\r\n  enumerable: true,\r\n  get() {\r\n    if (!timersPromises)\r\n      timersPromises = require('timers/promises');\r\n    return timersPromises.setTimeout;\r\n  }\r\n});\r\n\r\n/**\r\n * Cancels a timeout.\r\n * @param {Timeout | string | number} timer\r\n * @returns {void}\r\n */\r\nfunction clearTimeout(timer) {\r\n  if (timer && timer._onTimeout) {\r\n    timer._onTimeout = null;\r\n    unenroll(timer);\r\n    return;\r\n  }\r\n  if (typeof timer === 'number' || typeof timer === 'string') {\r\n    const timerInstance = knownTimersById[timer];\r\n    if (timerInstance !== undefined) {\r\n      timerInstance._onTimeout = null;\r\n      unenroll(timerInstance);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Schedules repeated execution of `callback`\r\n * every `repeat` milliseconds.\r\n * @param {Function} callback\r\n * @param {number} [repeat]\r\n * @param {any} [arg1]\r\n * @param {any} [arg2]\r\n * @param {any} [arg3]\r\n * @returns {Timeout}\r\n */\r\nfunction setInterval(callback, repeat, arg1, arg2, arg3) {\r\n  validateFunction(callback, 'callback');\r\n\r\n  let i, args;\r\n  switch (arguments.length) {\r\n    // fast cases\r\n    case 1:\r\n    case 2:\r\n      break;\r\n    case 3:\r\n      args = [arg1];\r\n      break;\r\n    case 4:\r\n      args = [arg1, arg2];\r\n      break;\r\n    default:\r\n      args = [arg1, arg2, arg3];\r\n      for (i = 5; i < arguments.length; i++) {\r\n        // Extend array dynamically, makes .apply run much faster in v6.0.0\r\n        args[i - 2] = arguments[i];\r\n      }\r\n      break;\r\n  }\r\n\r\n  const timeout = new Timeout(callback, repeat, args, true, true);\r\n  insert(timeout, timeout._idleTimeout);\r\n\r\n  return timeout;\r\n}\r\n\r\n/**\r\n * Cancels an interval.\r\n * @param {Timeout | string | number} timer\r\n * @returns {void}\r\n */\r\nfunction clearInterval(timer) {\r\n  // clearTimeout and clearInterval can be used to clear timers created from\r\n  // both setTimeout and setInterval, as specified by HTML Living Standard:\r\n  // https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-setinterval\r\n  clearTimeout(timer);\r\n}\r\n\r\nTimeout.prototype.close = function() {\r\n  clearTimeout(this);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Coerces a `Timeout` to a primitive.\r\n * @returns {number}\r\n */\r\nTimeout.prototype[SymbolToPrimitive] = function() {\r\n  const id = this[async_id_symbol];\r\n  if (!this[kHasPrimitive]) {\r\n    this[kHasPrimitive] = true;\r\n    knownTimersById[id] = this;\r\n  }\r\n  return id;\r\n};\r\n\r\n/**\r\n * Schedules the immediate execution of `callback`\r\n * after I/O events' callbacks.\r\n * @param {Function} callback\r\n * @param {any} [arg1]\r\n * @param {any} [arg2]\r\n * @param {any} [arg3]\r\n * @returns {Immediate}\r\n */\r\nfunction setImmediate(callback, arg1, arg2, arg3) {\r\n  validateFunction(callback, 'callback');\r\n\r\n  let i, args;\r\n  switch (arguments.length) {\r\n    // fast cases\r\n    case 1:\r\n      break;\r\n    case 2:\r\n      args = [arg1];\r\n      break;\r\n    case 3:\r\n      args = [arg1, arg2];\r\n      break;\r\n    default:\r\n      args = [arg1, arg2, arg3];\r\n      for (i = 4; i < arguments.length; i++) {\r\n        // Extend array dynamically, makes .apply run much faster in v6.0.0\r\n        args[i - 1] = arguments[i];\r\n      }\r\n      break;\r\n  }\r\n\r\n  return new Immediate(callback, args);\r\n}\r\n\r\nObjectDefineProperty(setImmediate, customPromisify, {\r\n  __proto__: null,\r\n  enumerable: true,\r\n  get() {\r\n    if (!timersPromises)\r\n      timersPromises = require('timers/promises');\r\n    return timersPromises.setImmediate;\r\n  }\r\n});\r\n\r\n/**\r\n * Cancels an immediate.\r\n * @param {Immediate} immediate\r\n * @returns {void}\r\n */\r\nfunction clearImmediate(immediate) {\r\n  if (!immediate || immediate._destroyed)\r\n    return;\r\n\r\n  immediateInfo[kCount]--;\r\n  immediate._destroyed = true;\r\n\r\n  if (immediate[kRefed] && --immediateInfo[kRefCount] === 0)\r\n    toggleImmediateRef(false);\r\n  immediate[kRefed] = null;\r\n\r\n  if (destroyHooksExist() && immediate[async_id_symbol] !== undefined) {\r\n    emitDestroy(immediate[async_id_symbol]);\r\n  }\r\n\r\n  immediate._onImmediate = null;\r\n\r\n  immediateQueue.remove(immediate);\r\n}\r\n\r\nmodule.exports = {\r\n  setTimeout,\r\n  clearTimeout,\r\n  setImmediate,\r\n  clearImmediate,\r\n  setInterval,\r\n  clearInterval,\r\n  _unrefActive: deprecate(\r\n    unrefActive,\r\n    'timers._unrefActive() is deprecated.' +\r\n    ' Please use timeout.refresh() instead.',\r\n    'DEP0127'),\r\n  active: deprecate(\r\n    active,\r\n    'timers.active() is deprecated. Please use timeout.refresh() instead.',\r\n    'DEP0126'),\r\n  unenroll: deprecate(\r\n    unenroll,\r\n    'timers.unenroll() is deprecated. Please use clearTimeout instead.',\r\n    'DEP0096'),\r\n  enroll: deprecate(\r\n    enroll,\r\n    'timers.enroll() is deprecated. Please use setTimeout instead.',\r\n    'DEP0095')\r\n};\r\n",
    "name": "node:timers",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 53,
    "sourcePositions": []
  },
  null,
  null,
  null,
  null,
  {
    "url": "node:internal/streams/destroy",
    "source": "'use strict';\r\n\r\nconst {\r\n  aggregateTwoErrors,\r\n  codes: {\r\n    ERR_MULTIPLE_CALLBACK,\r\n  },\r\n  AbortError,\r\n} = require('internal/errors');\r\nconst {\r\n  Symbol,\r\n} = primordials;\r\nconst {\r\n  kDestroyed,\r\n  isDestroyed,\r\n  isFinished,\r\n  isServerRequest\r\n} = require('internal/streams/utils');\r\n\r\nconst kDestroy = Symbol('kDestroy');\r\nconst kConstruct = Symbol('kConstruct');\r\n\r\nfunction checkError(err, w, r) {\r\n  if (err) {\r\n    // Avoid V8 leak, https://github.com/nodejs/node/pull/34103#issuecomment-652002364\r\n    err.stack; // eslint-disable-line no-unused-expressions\r\n\r\n    if (w && !w.errored) {\r\n      w.errored = err;\r\n    }\r\n    if (r && !r.errored) {\r\n      r.errored = err;\r\n    }\r\n  }\r\n}\r\n\r\n// Backwards compat. cb() is undocumented and unused in core but\r\n// unfortunately might be used by modules.\r\nfunction destroy(err, cb) {\r\n  const r = this._readableState;\r\n  const w = this._writableState;\r\n  // With duplex streams we use the writable side for state.\r\n  const s = w || r;\r\n\r\n  if (w?.destroyed || r?.destroyed) {\r\n    if (typeof cb === 'function') {\r\n      cb();\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n\r\n  // We set destroyed to true before firing error callbacks in order\r\n  // to make it re-entrance safe in case destroy() is called within callbacks\r\n  checkError(err, w, r);\r\n\r\n  if (w) {\r\n    w.destroyed = true;\r\n  }\r\n  if (r) {\r\n    r.destroyed = true;\r\n  }\r\n\r\n  // If still constructing then defer calling _destroy.\r\n  if (!s.constructed) {\r\n    this.once(kDestroy, function(er) {\r\n      _destroy(this, aggregateTwoErrors(er, err), cb);\r\n    });\r\n  } else {\r\n    _destroy(this, err, cb);\r\n  }\r\n\r\n  return this;\r\n}\r\n\r\nfunction _destroy(self, err, cb) {\r\n  let called = false;\r\n\r\n  function onDestroy(err) {\r\n    if (called) {\r\n      return;\r\n    }\r\n    called = true;\r\n\r\n    const r = self._readableState;\r\n    const w = self._writableState;\r\n\r\n    checkError(err, w, r);\r\n\r\n    if (w) {\r\n      w.closed = true;\r\n    }\r\n    if (r) {\r\n      r.closed = true;\r\n    }\r\n\r\n    if (typeof cb === 'function') {\r\n      cb(err);\r\n    }\r\n\r\n    if (err) {\r\n      process.nextTick(emitErrorCloseNT, self, err);\r\n    } else {\r\n      process.nextTick(emitCloseNT, self);\r\n    }\r\n  }\r\n  try {\r\n    self._destroy(err || null, onDestroy);\r\n  } catch (err) {\r\n    onDestroy(err);\r\n  }\r\n}\r\n\r\nfunction emitErrorCloseNT(self, err) {\r\n  emitErrorNT(self, err);\r\n  emitCloseNT(self);\r\n}\r\n\r\nfunction emitCloseNT(self) {\r\n  const r = self._readableState;\r\n  const w = self._writableState;\r\n\r\n  if (w) {\r\n    w.closeEmitted = true;\r\n  }\r\n  if (r) {\r\n    r.closeEmitted = true;\r\n  }\r\n\r\n  if (w?.emitClose || r?.emitClose) {\r\n    self.emit('close');\r\n  }\r\n}\r\n\r\nfunction emitErrorNT(self, err) {\r\n  const r = self._readableState;\r\n  const w = self._writableState;\r\n\r\n  if (w?.errorEmitted || r?.errorEmitted) {\r\n    return;\r\n  }\r\n\r\n  if (w) {\r\n    w.errorEmitted = true;\r\n  }\r\n  if (r) {\r\n    r.errorEmitted = true;\r\n  }\r\n\r\n  self.emit('error', err);\r\n}\r\n\r\nfunction undestroy() {\r\n  const r = this._readableState;\r\n  const w = this._writableState;\r\n\r\n  if (r) {\r\n    r.constructed = true;\r\n    r.closed = false;\r\n    r.closeEmitted = false;\r\n    r.destroyed = false;\r\n    r.errored = null;\r\n    r.errorEmitted = false;\r\n    r.reading = false;\r\n    r.ended = r.readable === false;\r\n    r.endEmitted = r.readable === false;\r\n  }\r\n\r\n  if (w) {\r\n    w.constructed = true;\r\n    w.destroyed = false;\r\n    w.closed = false;\r\n    w.closeEmitted = false;\r\n    w.errored = null;\r\n    w.errorEmitted = false;\r\n    w.finalCalled = false;\r\n    w.prefinished = false;\r\n    w.ended = w.writable === false;\r\n    w.ending = w.writable === false;\r\n    w.finished = w.writable === false;\r\n  }\r\n}\r\n\r\nfunction errorOrDestroy(stream, err, sync) {\r\n  // We have tests that rely on errors being emitted\r\n  // in the same tick, so changing this is semver major.\r\n  // For now when you opt-in to autoDestroy we allow\r\n  // the error to be emitted nextTick. In a future\r\n  // semver major update we should change the default to this.\r\n\r\n  const r = stream._readableState;\r\n  const w = stream._writableState;\r\n\r\n  if (w?.destroyed || r?.destroyed) {\r\n    return this;\r\n  }\r\n\r\n  if (r?.autoDestroy || w?.autoDestroy)\r\n    stream.destroy(err);\r\n  else if (err) {\r\n    // Avoid V8 leak, https://github.com/nodejs/node/pull/34103#issuecomment-652002364\r\n    err.stack; // eslint-disable-line no-unused-expressions\r\n\r\n    if (w && !w.errored) {\r\n      w.errored = err;\r\n    }\r\n    if (r && !r.errored) {\r\n      r.errored = err;\r\n    }\r\n    if (sync) {\r\n      process.nextTick(emitErrorNT, stream, err);\r\n    } else {\r\n      emitErrorNT(stream, err);\r\n    }\r\n  }\r\n}\r\n\r\nfunction construct(stream, cb) {\r\n  if (typeof stream._construct !== 'function') {\r\n    return;\r\n  }\r\n\r\n  const r = stream._readableState;\r\n  const w = stream._writableState;\r\n\r\n  if (r) {\r\n    r.constructed = false;\r\n  }\r\n  if (w) {\r\n    w.constructed = false;\r\n  }\r\n\r\n  stream.once(kConstruct, cb);\r\n\r\n  if (stream.listenerCount(kConstruct) > 1) {\r\n    // Duplex\r\n    return;\r\n  }\r\n\r\n  process.nextTick(constructNT, stream);\r\n}\r\n\r\nfunction constructNT(stream) {\r\n  let called = false;\r\n\r\n  function onConstruct(err) {\r\n    if (called) {\r\n      errorOrDestroy(stream, err ?? new ERR_MULTIPLE_CALLBACK());\r\n      return;\r\n    }\r\n    called = true;\r\n\r\n    const r = stream._readableState;\r\n    const w = stream._writableState;\r\n    const s = w || r;\r\n\r\n    if (r) {\r\n      r.constructed = true;\r\n    }\r\n    if (w) {\r\n      w.constructed = true;\r\n    }\r\n\r\n    if (s.destroyed) {\r\n      stream.emit(kDestroy, err);\r\n    } else if (err) {\r\n      errorOrDestroy(stream, err, true);\r\n    } else {\r\n      process.nextTick(emitConstructNT, stream);\r\n    }\r\n  }\r\n\r\n  try {\r\n    stream._construct(onConstruct);\r\n  } catch (err) {\r\n    onConstruct(err);\r\n  }\r\n}\r\n\r\nfunction emitConstructNT(stream) {\r\n  stream.emit(kConstruct);\r\n}\r\n\r\nfunction isRequest(stream) {\r\n  return stream?.setHeader && typeof stream.abort === 'function';\r\n}\r\n\r\nfunction emitCloseLegacy(stream) {\r\n  stream.emit('close');\r\n}\r\n\r\nfunction emitErrorCloseLegacy(stream, err) {\r\n  stream.emit('error', err);\r\n  process.nextTick(emitCloseLegacy, stream);\r\n}\r\n\r\n// Normalize destroy for legacy.\r\nfunction destroyer(stream, err) {\r\n  if (!stream || isDestroyed(stream)) {\r\n    return;\r\n  }\r\n\r\n  if (!err && !isFinished(stream)) {\r\n    err = new AbortError();\r\n  }\r\n\r\n  // TODO: Remove isRequest branches.\r\n  if (isServerRequest(stream)) {\r\n    stream.socket = null;\r\n    stream.destroy(err);\r\n  } else if (isRequest(stream)) {\r\n    stream.abort();\r\n  } else if (isRequest(stream.req)) {\r\n    stream.req.abort();\r\n  } else if (typeof stream.destroy === 'function') {\r\n    stream.destroy(err);\r\n  } else if (typeof stream.close === 'function') {\r\n    // TODO: Don't lose err?\r\n    stream.close();\r\n  } else if (err) {\r\n    process.nextTick(emitErrorCloseLegacy, stream, err);\r\n  } else {\r\n    process.nextTick(emitCloseLegacy, stream);\r\n  }\r\n\r\n  if (!stream.destroyed) {\r\n    stream[kDestroyed] = true;\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  construct,\r\n  destroyer,\r\n  destroy,\r\n  undestroy,\r\n  errorOrDestroy\r\n};\r\n",
    "name": "destroy",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 58,
    "sourcePositions": []
  },
  {
    "url": "node:internal/streams/duplex",
    "source": "// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n// a duplex stream is just a stream that is both readable and writable.\r\n// Since JS doesn't have multiple prototype inheritance, this class\r\n// prototypically inherits from Readable, and then parasitically from\r\n// Writable.\r\n\r\n'use strict';\r\n\r\nconst {\r\n  ObjectDefineProperties,\r\n  ObjectGetOwnPropertyDescriptor,\r\n  ObjectKeys,\r\n  ObjectSetPrototypeOf,\r\n} = primordials;\r\n\r\nmodule.exports = Duplex;\r\n\r\nconst Readable = require('internal/streams/readable');\r\nconst Writable = require('internal/streams/writable');\r\n\r\nObjectSetPrototypeOf(Duplex.prototype, Readable.prototype);\r\nObjectSetPrototypeOf(Duplex, Readable);\r\n\r\n{\r\n  const keys = ObjectKeys(Writable.prototype);\r\n  // Allow the keys array to be GC'ed.\r\n  for (let i = 0; i < keys.length; i++) {\r\n    const method = keys[i];\r\n    if (!Duplex.prototype[method])\r\n      Duplex.prototype[method] = Writable.prototype[method];\r\n  }\r\n}\r\n\r\nfunction Duplex(options) {\r\n  if (!(this instanceof Duplex))\r\n    return new Duplex(options);\r\n\r\n  Readable.call(this, options);\r\n  Writable.call(this, options);\r\n\r\n  if (options) {\r\n    this.allowHalfOpen = options.allowHalfOpen !== false;\r\n\r\n    if (options.readable === false) {\r\n      this._readableState.readable = false;\r\n      this._readableState.ended = true;\r\n      this._readableState.endEmitted = true;\r\n    }\r\n\r\n    if (options.writable === false) {\r\n      this._writableState.writable = false;\r\n      this._writableState.ending = true;\r\n      this._writableState.ended = true;\r\n      this._writableState.finished = true;\r\n    }\r\n  } else {\r\n    this.allowHalfOpen = true;\r\n  }\r\n}\r\n\r\nObjectDefineProperties(Duplex.prototype, {\r\n  writable:\r\n    { __proto__: null, ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writable') },\r\n  writableHighWaterMark:\r\n    { __proto__: null, ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableHighWaterMark') },\r\n  writableObjectMode:\r\n    { __proto__: null, ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableObjectMode') },\r\n  writableBuffer:\r\n    { __proto__: null, ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableBuffer') },\r\n  writableLength:\r\n    { __proto__: null, ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableLength') },\r\n  writableFinished:\r\n    { __proto__: null, ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableFinished') },\r\n  writableCorked:\r\n    { __proto__: null, ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableCorked') },\r\n  writableEnded:\r\n    { __proto__: null, ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableEnded') },\r\n  writableNeedDrain:\r\n    { __proto__: null, ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableNeedDrain') },\r\n\r\n  destroyed: {\r\n    __proto__: null,\r\n    get() {\r\n      if (this._readableState === undefined ||\r\n        this._writableState === undefined) {\r\n        return false;\r\n      }\r\n      return this._readableState.destroyed && this._writableState.destroyed;\r\n    },\r\n    set(value) {\r\n      // Backward compatibility, the user is explicitly\r\n      // managing destroyed.\r\n      if (this._readableState && this._writableState) {\r\n        this._readableState.destroyed = value;\r\n        this._writableState.destroyed = value;\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nlet webStreamsAdapters;\r\n\r\n// Lazy to avoid circular references\r\nfunction lazyWebStreams() {\r\n  if (webStreamsAdapters === undefined)\r\n    webStreamsAdapters = require('internal/webstreams/adapters');\r\n  return webStreamsAdapters;\r\n}\r\n\r\nDuplex.fromWeb = function(pair, options) {\r\n  return lazyWebStreams().newStreamDuplexFromReadableWritablePair(\r\n    pair,\r\n    options);\r\n};\r\n\r\nDuplex.toWeb = function(duplex) {\r\n  return lazyWebStreams().newReadableWritablePairFromDuplex(duplex);\r\n};\r\n\r\nlet duplexify;\r\n\r\nDuplex.from = function(body) {\r\n  if (!duplexify) {\r\n    duplexify = require('internal/streams/duplexify');\r\n  }\r\n  return duplexify(body, 'body');\r\n};\r\n",
    "name": "duplex",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 59,
    "sourcePositions": []
  },
  {
    "url": "node:internal/streams/readable",
    "source": "// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n'use strict';\r\n\r\nconst {\r\n  ArrayPrototypeIndexOf,\r\n  NumberIsInteger,\r\n  NumberIsNaN,\r\n  NumberParseInt,\r\n  ObjectDefineProperties,\r\n  ObjectKeys,\r\n  ObjectSetPrototypeOf,\r\n  Promise,\r\n  SafeSet,\r\n  SymbolAsyncIterator,\r\n  Symbol\r\n} = primordials;\r\n\r\nmodule.exports = Readable;\r\nReadable.ReadableState = ReadableState;\r\n\r\nconst EE = require('events');\r\nconst { Stream, prependListener } = require('internal/streams/legacy');\r\nconst { Buffer } = require('buffer');\r\n\r\nconst {\r\n  addAbortSignal,\r\n} = require('internal/streams/add-abort-signal');\r\nconst eos = require('internal/streams/end-of-stream');\r\n\r\nlet debug = require('internal/util/debuglog').debuglog('stream', (fn) => {\r\n  debug = fn;\r\n});\r\nconst BufferList = require('internal/streams/buffer_list');\r\nconst destroyImpl = require('internal/streams/destroy');\r\nconst {\r\n  getHighWaterMark,\r\n  getDefaultHighWaterMark\r\n} = require('internal/streams/state');\r\n\r\nconst {\r\n  aggregateTwoErrors,\r\n  codes: {\r\n    ERR_INVALID_ARG_TYPE,\r\n    ERR_METHOD_NOT_IMPLEMENTED,\r\n    ERR_OUT_OF_RANGE,\r\n    ERR_STREAM_PUSH_AFTER_EOF,\r\n    ERR_STREAM_UNSHIFT_AFTER_END_EVENT,\r\n  }\r\n} = require('internal/errors');\r\nconst { validateObject } = require('internal/validators');\r\n\r\nconst kPaused = Symbol('kPaused');\r\n\r\nconst { StringDecoder } = require('string_decoder');\r\nconst from = require('internal/streams/from');\r\n\r\nObjectSetPrototypeOf(Readable.prototype, Stream.prototype);\r\nObjectSetPrototypeOf(Readable, Stream);\r\nconst nop = () => {};\r\n\r\nconst { errorOrDestroy } = destroyImpl;\r\n\r\nfunction ReadableState(options, stream, isDuplex) {\r\n  // Duplex streams are both readable and writable, but share\r\n  // the same options object.\r\n  // However, some cases require setting options to different\r\n  // values for the readable and the writable sides of the duplex stream.\r\n  // These options can be provided separately as readableXXX and writableXXX.\r\n  if (typeof isDuplex !== 'boolean')\r\n    isDuplex = stream instanceof Stream.Duplex;\r\n\r\n  // Object stream flag. Used to make read(n) ignore n and to\r\n  // make all the buffer merging and length checks go away.\r\n  this.objectMode = !!(options && options.objectMode);\r\n\r\n  if (isDuplex)\r\n    this.objectMode = this.objectMode ||\r\n      !!(options && options.readableObjectMode);\r\n\r\n  // The point at which it stops calling _read() to fill the buffer\r\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\r\n  this.highWaterMark = options ?\r\n    getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex) :\r\n    getDefaultHighWaterMark(false);\r\n\r\n  // A linked list is used to store data chunks instead of an array because the\r\n  // linked list can remove elements from the beginning faster than\r\n  // array.shift().\r\n  this.buffer = new BufferList();\r\n  this.length = 0;\r\n  this.pipes = [];\r\n  this.flowing = null;\r\n  this.ended = false;\r\n  this.endEmitted = false;\r\n  this.reading = false;\r\n\r\n  // Stream is still being constructed and cannot be\r\n  // destroyed until construction finished or failed.\r\n  // Async construction is opt in, therefore we start as\r\n  // constructed.\r\n  this.constructed = true;\r\n\r\n  // A flag to be able to tell if the event 'readable'/'data' is emitted\r\n  // immediately, or on a later tick.  We set this to true at first, because\r\n  // any actions that shouldn't happen until \"later\" should generally also\r\n  // not happen before the first read call.\r\n  this.sync = true;\r\n\r\n  // Whenever we return null, then we set a flag to say\r\n  // that we're awaiting a 'readable' event emission.\r\n  this.needReadable = false;\r\n  this.emittedReadable = false;\r\n  this.readableListening = false;\r\n  this.resumeScheduled = false;\r\n  this[kPaused] = null;\r\n\r\n  // True if the error was already emitted and should not be thrown again.\r\n  this.errorEmitted = false;\r\n\r\n  // Should close be emitted on destroy. Defaults to true.\r\n  this.emitClose = !options || options.emitClose !== false;\r\n\r\n  // Should .destroy() be called after 'end' (and potentially 'finish').\r\n  this.autoDestroy = !options || options.autoDestroy !== false;\r\n\r\n  // Has it been destroyed.\r\n  this.destroyed = false;\r\n\r\n  // Indicates whether the stream has errored. When true no further\r\n  // _read calls, 'data' or 'readable' events should occur. This is needed\r\n  // since when autoDestroy is disabled we need a way to tell whether the\r\n  // stream has failed.\r\n  this.errored = null;\r\n\r\n  // Indicates whether the stream has finished destroying.\r\n  this.closed = false;\r\n\r\n  // True if close has been emitted or would have been emitted\r\n  // depending on emitClose.\r\n  this.closeEmitted = false;\r\n\r\n  // Crypto is kind of old and crusty.  Historically, its default string\r\n  // encoding is 'binary' so we have to make this configurable.\r\n  // Everything else in the universe uses 'utf8', though.\r\n  this.defaultEncoding = (options && options.defaultEncoding) || 'utf8';\r\n\r\n  // Ref the piped dest which we need a drain event on it\r\n  // type: null | Writable | Set<Writable>.\r\n  this.awaitDrainWriters = null;\r\n  this.multiAwaitDrain = false;\r\n\r\n  // If true, a maybeReadMore has been scheduled.\r\n  this.readingMore = false;\r\n\r\n  this.dataEmitted = false;\r\n\r\n  this.decoder = null;\r\n  this.encoding = null;\r\n  if (options && options.encoding) {\r\n    this.decoder = new StringDecoder(options.encoding);\r\n    this.encoding = options.encoding;\r\n  }\r\n}\r\n\r\n\r\nfunction Readable(options) {\r\n  if (!(this instanceof Readable))\r\n    return new Readable(options);\r\n\r\n  // Checking for a Stream.Duplex instance is faster here instead of inside\r\n  // the ReadableState constructor, at least with V8 6.5.\r\n  const isDuplex = this instanceof Stream.Duplex;\r\n\r\n  this._readableState = new ReadableState(options, this, isDuplex);\r\n\r\n  if (options) {\r\n    if (typeof options.read === 'function')\r\n      this._read = options.read;\r\n\r\n    if (typeof options.destroy === 'function')\r\n      this._destroy = options.destroy;\r\n\r\n    if (typeof options.construct === 'function')\r\n      this._construct = options.construct;\r\n\r\n    if (options.signal && !isDuplex)\r\n      addAbortSignal(options.signal, this);\r\n  }\r\n\r\n  Stream.call(this, options);\r\n\r\n  destroyImpl.construct(this, () => {\r\n    if (this._readableState.needReadable) {\r\n      maybeReadMore(this, this._readableState);\r\n    }\r\n  });\r\n}\r\n\r\nReadable.prototype.destroy = destroyImpl.destroy;\r\nReadable.prototype._undestroy = destroyImpl.undestroy;\r\nReadable.prototype._destroy = function(err, cb) {\r\n  cb(err);\r\n};\r\n\r\nReadable.prototype[EE.captureRejectionSymbol] = function(err) {\r\n  this.destroy(err);\r\n};\r\n\r\n// Manually shove something into the read() buffer.\r\n// This returns true if the highWaterMark has not been hit yet,\r\n// similar to how Writable.write() returns true if you should\r\n// write() some more.\r\nReadable.prototype.push = function(chunk, encoding) {\r\n  return readableAddChunk(this, chunk, encoding, false);\r\n};\r\n\r\n// Unshift should *always* be something directly out of read().\r\nReadable.prototype.unshift = function(chunk, encoding) {\r\n  return readableAddChunk(this, chunk, encoding, true);\r\n};\r\n\r\nfunction readableAddChunk(stream, chunk, encoding, addToFront) {\r\n  debug('readableAddChunk', chunk);\r\n  const state = stream._readableState;\r\n\r\n  let err;\r\n  if (!state.objectMode) {\r\n    if (typeof chunk === 'string') {\r\n      encoding = encoding || state.defaultEncoding;\r\n      if (state.encoding !== encoding) {\r\n        if (addToFront && state.encoding) {\r\n          // When unshifting, if state.encoding is set, we have to save\r\n          // the string in the BufferList with the state encoding.\r\n          chunk = Buffer.from(chunk, encoding).toString(state.encoding);\r\n        } else {\r\n          chunk = Buffer.from(chunk, encoding);\r\n          encoding = '';\r\n        }\r\n      }\r\n    } else if (chunk instanceof Buffer) {\r\n      encoding = '';\r\n    } else if (Stream._isUint8Array(chunk)) {\r\n      chunk = Stream._uint8ArrayToBuffer(chunk);\r\n      encoding = '';\r\n    } else if (chunk != null) {\r\n      err = new ERR_INVALID_ARG_TYPE(\r\n        'chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\r\n    }\r\n  }\r\n\r\n  if (err) {\r\n    errorOrDestroy(stream, err);\r\n  } else if (chunk === null) {\r\n    state.reading = false;\r\n    onEofChunk(stream, state);\r\n  } else if (state.objectMode || (chunk && chunk.length > 0)) {\r\n    if (addToFront) {\r\n      if (state.endEmitted)\r\n        errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());\r\n      else if (state.destroyed || state.errored)\r\n        return false;\r\n      else\r\n        addChunk(stream, state, chunk, true);\r\n    } else if (state.ended) {\r\n      errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\r\n    } else if (state.destroyed || state.errored) {\r\n      return false;\r\n    } else {\r\n      state.reading = false;\r\n      if (state.decoder && !encoding) {\r\n        chunk = state.decoder.write(chunk);\r\n        if (state.objectMode || chunk.length !== 0)\r\n          addChunk(stream, state, chunk, false);\r\n        else\r\n          maybeReadMore(stream, state);\r\n      } else {\r\n        addChunk(stream, state, chunk, false);\r\n      }\r\n    }\r\n  } else if (!addToFront) {\r\n    state.reading = false;\r\n    maybeReadMore(stream, state);\r\n  }\r\n\r\n  // We can push more data if we are below the highWaterMark.\r\n  // Also, if we have no data yet, we can stand some more bytes.\r\n  // This is to work around cases where hwm=0, such as the repl.\r\n  return !state.ended &&\r\n    (state.length < state.highWaterMark || state.length === 0);\r\n}\r\n\r\nfunction addChunk(stream, state, chunk, addToFront) {\r\n  if (state.flowing && state.length === 0 && !state.sync &&\r\n      stream.listenerCount('data') > 0) {\r\n    // Use the guard to avoid creating `Set()` repeatedly\r\n    // when we have multiple pipes.\r\n    if (state.multiAwaitDrain) {\r\n      state.awaitDrainWriters.clear();\r\n    } else {\r\n      state.awaitDrainWriters = null;\r\n    }\r\n\r\n    state.dataEmitted = true;\r\n    stream.emit('data', chunk);\r\n  } else {\r\n    // Update the buffer info.\r\n    state.length += state.objectMode ? 1 : chunk.length;\r\n    if (addToFront)\r\n      state.buffer.unshift(chunk);\r\n    else\r\n      state.buffer.push(chunk);\r\n\r\n    if (state.needReadable)\r\n      emitReadable(stream);\r\n  }\r\n  maybeReadMore(stream, state);\r\n}\r\n\r\nReadable.prototype.isPaused = function() {\r\n  const state = this._readableState;\r\n  return state[kPaused] === true || state.flowing === false;\r\n};\r\n\r\n// Backwards compatibility.\r\nReadable.prototype.setEncoding = function(enc) {\r\n  const decoder = new StringDecoder(enc);\r\n  this._readableState.decoder = decoder;\r\n  // If setEncoding(null), decoder.encoding equals utf8.\r\n  this._readableState.encoding = this._readableState.decoder.encoding;\r\n\r\n  const buffer = this._readableState.buffer;\r\n  // Iterate over current buffer to convert already stored Buffers:\r\n  let content = '';\r\n  for (const data of buffer) {\r\n    content += decoder.write(data);\r\n  }\r\n  buffer.clear();\r\n  if (content !== '')\r\n    buffer.push(content);\r\n  this._readableState.length = content.length;\r\n  return this;\r\n};\r\n\r\n// Don't raise the hwm > 1GB.\r\nconst MAX_HWM = 0x40000000;\r\nfunction computeNewHighWaterMark(n) {\r\n  if (n > MAX_HWM) {\r\n    throw new ERR_OUT_OF_RANGE('size', '<= 1GiB', n);\r\n  } else {\r\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\r\n    // tiny amounts.\r\n    n--;\r\n    n |= n >>> 1;\r\n    n |= n >>> 2;\r\n    n |= n >>> 4;\r\n    n |= n >>> 8;\r\n    n |= n >>> 16;\r\n    n++;\r\n  }\r\n  return n;\r\n}\r\n\r\n// This function is designed to be inlinable, so please take care when making\r\n// changes to the function body.\r\nfunction howMuchToRead(n, state) {\r\n  if (n <= 0 || (state.length === 0 && state.ended))\r\n    return 0;\r\n  if (state.objectMode)\r\n    return 1;\r\n  if (NumberIsNaN(n)) {\r\n    // Only flow one buffer at a time.\r\n    if (state.flowing && state.length)\r\n      return state.buffer.first().length;\r\n    return state.length;\r\n  }\r\n  if (n <= state.length)\r\n    return n;\r\n  return state.ended ? state.length : 0;\r\n}\r\n\r\n// You can override either this method, or the async _read(n) below.\r\nReadable.prototype.read = function(n) {\r\n  debug('read', n);\r\n  // Same as parseInt(undefined, 10), however V8 7.3 performance regressed\r\n  // in this scenario, so we are doing it manually.\r\n  if (n === undefined) {\r\n    n = NaN;\r\n  } else if (!NumberIsInteger(n)) {\r\n    n = NumberParseInt(n, 10);\r\n  }\r\n  const state = this._readableState;\r\n  const nOrig = n;\r\n\r\n  // If we're asking for more than the current hwm, then raise the hwm.\r\n  if (n > state.highWaterMark)\r\n    state.highWaterMark = computeNewHighWaterMark(n);\r\n\r\n  if (n !== 0)\r\n    state.emittedReadable = false;\r\n\r\n  // If we're doing read(0) to trigger a readable event, but we\r\n  // already have a bunch of data in the buffer, then just trigger\r\n  // the 'readable' event and move on.\r\n  if (n === 0 &&\r\n      state.needReadable &&\r\n      ((state.highWaterMark !== 0 ?\r\n        state.length >= state.highWaterMark :\r\n        state.length > 0) ||\r\n       state.ended)) {\r\n    debug('read: emitReadable', state.length, state.ended);\r\n    if (state.length === 0 && state.ended)\r\n      endReadable(this);\r\n    else\r\n      emitReadable(this);\r\n    return null;\r\n  }\r\n\r\n  n = howMuchToRead(n, state);\r\n\r\n  // If we've ended, and we're now clear, then finish it up.\r\n  if (n === 0 && state.ended) {\r\n    if (state.length === 0)\r\n      endReadable(this);\r\n    return null;\r\n  }\r\n\r\n  // All the actual chunk generation logic needs to be\r\n  // *below* the call to _read.  The reason is that in certain\r\n  // synthetic stream cases, such as passthrough streams, _read\r\n  // may be a completely synchronous operation which may change\r\n  // the state of the read buffer, providing enough data when\r\n  // before there was *not* enough.\r\n  //\r\n  // So, the steps are:\r\n  // 1. Figure out what the state of things will be after we do\r\n  // a read from the buffer.\r\n  //\r\n  // 2. If that resulting state will trigger a _read, then call _read.\r\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\r\n  // deeply ugly to write APIs this way, but that still doesn't mean\r\n  // that the Readable class should behave improperly, as streams are\r\n  // designed to be sync/async agnostic.\r\n  // Take note if the _read call is sync or async (ie, if the read call\r\n  // has returned yet), so that we know whether or not it's safe to emit\r\n  // 'readable' etc.\r\n  //\r\n  // 3. Actually pull the requested chunks out of the buffer and return.\r\n\r\n  // if we need a readable event, then we need to do some reading.\r\n  let doRead = state.needReadable;\r\n  debug('need readable', doRead);\r\n\r\n  // If we currently have less than the highWaterMark, then also read some.\r\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\r\n    doRead = true;\r\n    debug('length less than watermark', doRead);\r\n  }\r\n\r\n  // However, if we've ended, then there's no point, if we're already\r\n  // reading, then it's unnecessary, if we're constructing we have to wait,\r\n  // and if we're destroyed or errored, then it's not allowed,\r\n  if (state.ended || state.reading || state.destroyed || state.errored ||\r\n      !state.constructed) {\r\n    doRead = false;\r\n    debug('reading, ended or constructing', doRead);\r\n  } else if (doRead) {\r\n    debug('do read');\r\n    state.reading = true;\r\n    state.sync = true;\r\n    // If the length is currently zero, then we *need* a readable event.\r\n    if (state.length === 0)\r\n      state.needReadable = true;\r\n\r\n    // Call internal read method\r\n    try {\r\n      this._read(state.highWaterMark);\r\n    } catch (err) {\r\n      errorOrDestroy(this, err);\r\n    }\r\n\r\n    state.sync = false;\r\n    // If _read pushed data synchronously, then `reading` will be false,\r\n    // and we need to re-evaluate how much data we can return to the user.\r\n    if (!state.reading)\r\n      n = howMuchToRead(nOrig, state);\r\n  }\r\n\r\n  let ret;\r\n  if (n > 0)\r\n    ret = fromList(n, state);\r\n  else\r\n    ret = null;\r\n\r\n  if (ret === null) {\r\n    state.needReadable = state.length <= state.highWaterMark;\r\n    n = 0;\r\n  } else {\r\n    state.length -= n;\r\n    if (state.multiAwaitDrain) {\r\n      state.awaitDrainWriters.clear();\r\n    } else {\r\n      state.awaitDrainWriters = null;\r\n    }\r\n  }\r\n\r\n  if (state.length === 0) {\r\n    // If we have nothing in the buffer, then we want to know\r\n    // as soon as we *do* get something into the buffer.\r\n    if (!state.ended)\r\n      state.needReadable = true;\r\n\r\n    // If we tried to read() past the EOF, then emit end on the next tick.\r\n    if (nOrig !== n && state.ended)\r\n      endReadable(this);\r\n  }\r\n\r\n  if (ret !== null && !state.errorEmitted && !state.closeEmitted) {\r\n    state.dataEmitted = true;\r\n    this.emit('data', ret);\r\n  }\r\n\r\n  return ret;\r\n};\r\n\r\nfunction onEofChunk(stream, state) {\r\n  debug('onEofChunk');\r\n  if (state.ended) return;\r\n  if (state.decoder) {\r\n    const chunk = state.decoder.end();\r\n    if (chunk && chunk.length) {\r\n      state.buffer.push(chunk);\r\n      state.length += state.objectMode ? 1 : chunk.length;\r\n    }\r\n  }\r\n  state.ended = true;\r\n\r\n  if (state.sync) {\r\n    // If we are sync, wait until next tick to emit the data.\r\n    // Otherwise we risk emitting data in the flow()\r\n    // the readable code triggers during a read() call.\r\n    emitReadable(stream);\r\n  } else {\r\n    // Emit 'readable' now to make sure it gets picked up.\r\n    state.needReadable = false;\r\n    state.emittedReadable = true;\r\n    // We have to emit readable now that we are EOF. Modules\r\n    // in the ecosystem (e.g. dicer) rely on this event being sync.\r\n    emitReadable_(stream);\r\n  }\r\n}\r\n\r\n// Don't emit readable right away in sync mode, because this can trigger\r\n// another read() call => stack overflow.  This way, it might trigger\r\n// a nextTick recursion warning, but that's not so bad.\r\nfunction emitReadable(stream) {\r\n  const state = stream._readableState;\r\n  debug('emitReadable', state.needReadable, state.emittedReadable);\r\n  state.needReadable = false;\r\n  if (!state.emittedReadable) {\r\n    debug('emitReadable', state.flowing);\r\n    state.emittedReadable = true;\r\n    process.nextTick(emitReadable_, stream);\r\n  }\r\n}\r\n\r\nfunction emitReadable_(stream) {\r\n  const state = stream._readableState;\r\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\r\n  if (!state.destroyed && !state.errored && (state.length || state.ended)) {\r\n    stream.emit('readable');\r\n    state.emittedReadable = false;\r\n  }\r\n\r\n  // The stream needs another readable event if:\r\n  // 1. It is not flowing, as the flow mechanism will take\r\n  //    care of it.\r\n  // 2. It is not ended.\r\n  // 3. It is below the highWaterMark, so we can schedule\r\n  //    another readable later.\r\n  state.needReadable =\r\n    !state.flowing &&\r\n    !state.ended &&\r\n    state.length <= state.highWaterMark;\r\n  flow(stream);\r\n}\r\n\r\n\r\n// At this point, the user has presumably seen the 'readable' event,\r\n// and called read() to consume some data.  that may have triggered\r\n// in turn another _read(n) call, in which case reading = true if\r\n// it's in progress.\r\n// However, if we're not ended, or reading, and the length < hwm,\r\n// then go ahead and try to read some more preemptively.\r\nfunction maybeReadMore(stream, state) {\r\n  if (!state.readingMore && state.constructed) {\r\n    state.readingMore = true;\r\n    process.nextTick(maybeReadMore_, stream, state);\r\n  }\r\n}\r\n\r\nfunction maybeReadMore_(stream, state) {\r\n  // Attempt to read more data if we should.\r\n  //\r\n  // The conditions for reading more data are (one of):\r\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\r\n  //   is responsible for filling the buffer with enough data if such data\r\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\r\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\r\n  //   when the stream consumer calls read() instead.\r\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\r\n  //   the loop below is responsible for ensuring read() is called. Failing to\r\n  //   call read here would abort the flow and there's no other mechanism for\r\n  //   continuing the flow if the stream consumer has just subscribed to the\r\n  //   'data' event.\r\n  //\r\n  // In addition to the above conditions to keep reading data, the following\r\n  // conditions prevent the data from being read:\r\n  // - The stream has ended (state.ended).\r\n  // - There is already a pending 'read' operation (state.reading). This is a\r\n  //   case where the stream has called the implementation defined _read()\r\n  //   method, but they are processing the call asynchronously and have _not_\r\n  //   called push() with new data. In this case we skip performing more\r\n  //   read()s. The execution ends in this method again after the _read() ends\r\n  //   up calling push() with more data.\r\n  while (!state.reading && !state.ended &&\r\n         (state.length < state.highWaterMark ||\r\n          (state.flowing && state.length === 0))) {\r\n    const len = state.length;\r\n    debug('maybeReadMore read 0');\r\n    stream.read(0);\r\n    if (len === state.length)\r\n      // Didn't get any data, stop spinning.\r\n      break;\r\n  }\r\n  state.readingMore = false;\r\n}\r\n\r\n// Abstract method.  to be overridden in specific implementation classes.\r\n// call cb(er, data) where data is <= n in length.\r\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\r\n// arbitrary, and perhaps not very meaningful.\r\nReadable.prototype._read = function(n) {\r\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_read()');\r\n};\r\n\r\nReadable.prototype.pipe = function(dest, pipeOpts) {\r\n  const src = this;\r\n  const state = this._readableState;\r\n\r\n  if (state.pipes.length === 1) {\r\n    if (!state.multiAwaitDrain) {\r\n      state.multiAwaitDrain = true;\r\n      state.awaitDrainWriters = new SafeSet(\r\n        state.awaitDrainWriters ? [state.awaitDrainWriters] : []\r\n      );\r\n    }\r\n  }\r\n\r\n  state.pipes.push(dest);\r\n  debug('pipe count=%d opts=%j', state.pipes.length, pipeOpts);\r\n\r\n  const doEnd = (!pipeOpts || pipeOpts.end !== false) &&\r\n              dest !== process.stdout &&\r\n              dest !== process.stderr;\r\n\r\n  const endFn = doEnd ? onend : unpipe;\r\n  if (state.endEmitted)\r\n    process.nextTick(endFn);\r\n  else\r\n    src.once('end', endFn);\r\n\r\n  dest.on('unpipe', onunpipe);\r\n  function onunpipe(readable, unpipeInfo) {\r\n    debug('onunpipe');\r\n    if (readable === src) {\r\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\r\n        unpipeInfo.hasUnpiped = true;\r\n        cleanup();\r\n      }\r\n    }\r\n  }\r\n\r\n  function onend() {\r\n    debug('onend');\r\n    dest.end();\r\n  }\r\n\r\n  let ondrain;\r\n\r\n  let cleanedUp = false;\r\n  function cleanup() {\r\n    debug('cleanup');\r\n    // Cleanup event handlers once the pipe is broken.\r\n    dest.removeListener('close', onclose);\r\n    dest.removeListener('finish', onfinish);\r\n    if (ondrain) {\r\n      dest.removeListener('drain', ondrain);\r\n    }\r\n    dest.removeListener('error', onerror);\r\n    dest.removeListener('unpipe', onunpipe);\r\n    src.removeListener('end', onend);\r\n    src.removeListener('end', unpipe);\r\n    src.removeListener('data', ondata);\r\n\r\n    cleanedUp = true;\r\n\r\n    // If the reader is waiting for a drain event from this\r\n    // specific writer, then it would cause it to never start\r\n    // flowing again.\r\n    // So, if this is awaiting a drain, then we just call it now.\r\n    // If we don't know, then assume that we are waiting for one.\r\n    if (ondrain && state.awaitDrainWriters &&\r\n        (!dest._writableState || dest._writableState.needDrain))\r\n      ondrain();\r\n  }\r\n\r\n  function pause() {\r\n    // If the user unpiped during `dest.write()`, it is possible\r\n    // to get stuck in a permanently paused state if that write\r\n    // also returned false.\r\n    // => Check whether `dest` is still a piping destination.\r\n    if (!cleanedUp) {\r\n      if (state.pipes.length === 1 && state.pipes[0] === dest) {\r\n        debug('false write response, pause', 0);\r\n        state.awaitDrainWriters = dest;\r\n        state.multiAwaitDrain = false;\r\n      } else if (state.pipes.length > 1 && state.pipes.includes(dest)) {\r\n        debug('false write response, pause', state.awaitDrainWriters.size);\r\n        state.awaitDrainWriters.add(dest);\r\n      }\r\n      src.pause();\r\n    }\r\n    if (!ondrain) {\r\n      // When the dest drains, it reduces the awaitDrain counter\r\n      // on the source.  This would be more elegant with a .once()\r\n      // handler in flow(), but adding and removing repeatedly is\r\n      // too slow.\r\n      ondrain = pipeOnDrain(src, dest);\r\n      dest.on('drain', ondrain);\r\n    }\r\n  }\r\n\r\n  src.on('data', ondata);\r\n  function ondata(chunk) {\r\n    debug('ondata');\r\n    const ret = dest.write(chunk);\r\n    debug('dest.write', ret);\r\n    if (ret === false) {\r\n      pause();\r\n    }\r\n  }\r\n\r\n  // If the dest has an error, then stop piping into it.\r\n  // However, don't suppress the throwing behavior for this.\r\n  function onerror(er) {\r\n    debug('onerror', er);\r\n    unpipe();\r\n    dest.removeListener('error', onerror);\r\n    if (dest.listenerCount('error') === 0) {\r\n      const s = dest._writableState || dest._readableState;\r\n      if (s && !s.errorEmitted) {\r\n        // User incorrectly emitted 'error' directly on the stream.\r\n        errorOrDestroy(dest, er);\r\n      } else {\r\n        dest.emit('error', er);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Make sure our error handler is attached before userland ones.\r\n  prependListener(dest, 'error', onerror);\r\n\r\n  // Both close and finish should trigger unpipe, but only once.\r\n  function onclose() {\r\n    dest.removeListener('finish', onfinish);\r\n    unpipe();\r\n  }\r\n  dest.once('close', onclose);\r\n  function onfinish() {\r\n    debug('onfinish');\r\n    dest.removeListener('close', onclose);\r\n    unpipe();\r\n  }\r\n  dest.once('finish', onfinish);\r\n\r\n  function unpipe() {\r\n    debug('unpipe');\r\n    src.unpipe(dest);\r\n  }\r\n\r\n  // Tell the dest that it's being piped to.\r\n  dest.emit('pipe', src);\r\n\r\n  // Start the flow if it hasn't been started already.\r\n\r\n  if (dest.writableNeedDrain === true) {\r\n    if (state.flowing) {\r\n      pause();\r\n    }\r\n  } else if (!state.flowing) {\r\n    debug('pipe resume');\r\n    src.resume();\r\n  }\r\n\r\n  return dest;\r\n};\r\n\r\nfunction pipeOnDrain(src, dest) {\r\n  return function pipeOnDrainFunctionResult() {\r\n    const state = src._readableState;\r\n\r\n    // `ondrain` will call directly,\r\n    // `this` maybe not a reference to dest,\r\n    // so we use the real dest here.\r\n    if (state.awaitDrainWriters === dest) {\r\n      debug('pipeOnDrain', 1);\r\n      state.awaitDrainWriters = null;\r\n    } else if (state.multiAwaitDrain) {\r\n      debug('pipeOnDrain', state.awaitDrainWriters.size);\r\n      state.awaitDrainWriters.delete(dest);\r\n    }\r\n\r\n    if ((!state.awaitDrainWriters || state.awaitDrainWriters.size === 0) &&\r\n      src.listenerCount('data')) {\r\n      src.resume();\r\n    }\r\n  };\r\n}\r\n\r\n\r\nReadable.prototype.unpipe = function(dest) {\r\n  const state = this._readableState;\r\n  const unpipeInfo = { hasUnpiped: false };\r\n\r\n  // If we're not piping anywhere, then do nothing.\r\n  if (state.pipes.length === 0)\r\n    return this;\r\n\r\n  if (!dest) {\r\n    // remove all.\r\n    const dests = state.pipes;\r\n    state.pipes = [];\r\n    this.pause();\r\n\r\n    for (let i = 0; i < dests.length; i++)\r\n      dests[i].emit('unpipe', this, { hasUnpiped: false });\r\n    return this;\r\n  }\r\n\r\n  // Try to find the right one.\r\n  const index = ArrayPrototypeIndexOf(state.pipes, dest);\r\n  if (index === -1)\r\n    return this;\r\n\r\n  state.pipes.splice(index, 1);\r\n  if (state.pipes.length === 0)\r\n    this.pause();\r\n\r\n  dest.emit('unpipe', this, unpipeInfo);\r\n\r\n  return this;\r\n};\r\n\r\n// Set up data events if they are asked for\r\n// Ensure readable listeners eventually get something.\r\nReadable.prototype.on = function(ev, fn) {\r\n  const res = Stream.prototype.on.call(this, ev, fn);\r\n  const state = this._readableState;\r\n\r\n  if (ev === 'data') {\r\n    // Update readableListening so that resume() may be a no-op\r\n    // a few lines down. This is needed to support once('readable').\r\n    state.readableListening = this.listenerCount('readable') > 0;\r\n\r\n    // Try start flowing on next tick if stream isn't explicitly paused.\r\n    if (state.flowing !== false)\r\n      this.resume();\r\n  } else if (ev === 'readable') {\r\n    if (!state.endEmitted && !state.readableListening) {\r\n      state.readableListening = state.needReadable = true;\r\n      state.flowing = false;\r\n      state.emittedReadable = false;\r\n      debug('on readable', state.length, state.reading);\r\n      if (state.length) {\r\n        emitReadable(this);\r\n      } else if (!state.reading) {\r\n        process.nextTick(nReadingNextTick, this);\r\n      }\r\n    }\r\n  }\r\n\r\n  return res;\r\n};\r\nReadable.prototype.addListener = Readable.prototype.on;\r\n\r\nReadable.prototype.removeListener = function(ev, fn) {\r\n  const res = Stream.prototype.removeListener.call(this,\r\n                                                   ev, fn);\r\n\r\n  if (ev === 'readable') {\r\n    // We need to check if there is someone still listening to\r\n    // readable and reset the state. However this needs to happen\r\n    // after readable has been emitted but before I/O (nextTick) to\r\n    // support once('readable', fn) cycles. This means that calling\r\n    // resume within the same tick will have no\r\n    // effect.\r\n    process.nextTick(updateReadableListening, this);\r\n  }\r\n\r\n  return res;\r\n};\r\nReadable.prototype.off = Readable.prototype.removeListener;\r\n\r\nReadable.prototype.removeAllListeners = function(ev) {\r\n  const res = Stream.prototype.removeAllListeners.apply(this,\r\n                                                        arguments);\r\n\r\n  if (ev === 'readable' || ev === undefined) {\r\n    // We need to check if there is someone still listening to\r\n    // readable and reset the state. However this needs to happen\r\n    // after readable has been emitted but before I/O (nextTick) to\r\n    // support once('readable', fn) cycles. This means that calling\r\n    // resume within the same tick will have no\r\n    // effect.\r\n    process.nextTick(updateReadableListening, this);\r\n  }\r\n\r\n  return res;\r\n};\r\n\r\nfunction updateReadableListening(self) {\r\n  const state = self._readableState;\r\n  state.readableListening = self.listenerCount('readable') > 0;\r\n\r\n  if (state.resumeScheduled && state[kPaused] === false) {\r\n    // Flowing needs to be set to true now, otherwise\r\n    // the upcoming resume will not flow.\r\n    state.flowing = true;\r\n\r\n    // Crude way to check if we should resume.\r\n  } else if (self.listenerCount('data') > 0) {\r\n    self.resume();\r\n  } else if (!state.readableListening) {\r\n    state.flowing = null;\r\n  }\r\n}\r\n\r\nfunction nReadingNextTick(self) {\r\n  debug('readable nexttick read 0');\r\n  self.read(0);\r\n}\r\n\r\n// pause() and resume() are remnants of the legacy readable stream API\r\n// If the user uses them, then switch into old mode.\r\nReadable.prototype.resume = function() {\r\n  const state = this._readableState;\r\n  if (!state.flowing) {\r\n    debug('resume');\r\n    // We flow only if there is no one listening\r\n    // for readable, but we still have to call\r\n    // resume().\r\n    state.flowing = !state.readableListening;\r\n    resume(this, state);\r\n  }\r\n  state[kPaused] = false;\r\n  return this;\r\n};\r\n\r\nfunction resume(stream, state) {\r\n  if (!state.resumeScheduled) {\r\n    state.resumeScheduled = true;\r\n    process.nextTick(resume_, stream, state);\r\n  }\r\n}\r\n\r\nfunction resume_(stream, state) {\r\n  debug('resume', state.reading);\r\n  if (!state.reading) {\r\n    stream.read(0);\r\n  }\r\n\r\n  state.resumeScheduled = false;\r\n  stream.emit('resume');\r\n  flow(stream);\r\n  if (state.flowing && !state.reading)\r\n    stream.read(0);\r\n}\r\n\r\nReadable.prototype.pause = function() {\r\n  debug('call pause flowing=%j', this._readableState.flowing);\r\n  if (this._readableState.flowing !== false) {\r\n    debug('pause');\r\n    this._readableState.flowing = false;\r\n    this.emit('pause');\r\n  }\r\n  this._readableState[kPaused] = true;\r\n  return this;\r\n};\r\n\r\nfunction flow(stream) {\r\n  const state = stream._readableState;\r\n  debug('flow', state.flowing);\r\n  while (state.flowing && stream.read() !== null);\r\n}\r\n\r\n// Wrap an old-style stream as the async data source.\r\n// This is *not* part of the readable stream interface.\r\n// It is an ugly unfortunate mess of history.\r\nReadable.prototype.wrap = function(stream) {\r\n  let paused = false;\r\n\r\n  // TODO (ronag): Should this.destroy(err) emit\r\n  // 'error' on the wrapped stream? Would require\r\n  // a static factory method, e.g. Readable.wrap(stream).\r\n\r\n  stream.on('data', (chunk) => {\r\n    if (!this.push(chunk) && stream.pause) {\r\n      paused = true;\r\n      stream.pause();\r\n    }\r\n  });\r\n\r\n  stream.on('end', () => {\r\n    this.push(null);\r\n  });\r\n\r\n  stream.on('error', (err) => {\r\n    errorOrDestroy(this, err);\r\n  });\r\n\r\n  stream.on('close', () => {\r\n    this.destroy();\r\n  });\r\n\r\n  stream.on('destroy', () => {\r\n    this.destroy();\r\n  });\r\n\r\n  this._read = () => {\r\n    if (paused && stream.resume) {\r\n      paused = false;\r\n      stream.resume();\r\n    }\r\n  };\r\n\r\n  // Proxy all the other methods. Important when wrapping filters and duplexes.\r\n  const streamKeys = ObjectKeys(stream);\r\n  for (let j = 1; j < streamKeys.length; j++) {\r\n    const i = streamKeys[j];\r\n    if (this[i] === undefined && typeof stream[i] === 'function') {\r\n      this[i] = stream[i].bind(stream);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\nReadable.prototype[SymbolAsyncIterator] = function() {\r\n  return streamToAsyncIterator(this);\r\n};\r\n\r\nReadable.prototype.iterator = function(options) {\r\n  if (options !== undefined) {\r\n    validateObject(options, 'options');\r\n  }\r\n  return streamToAsyncIterator(this, options);\r\n};\r\n\r\nfunction streamToAsyncIterator(stream, options) {\r\n  if (typeof stream.read !== 'function') {\r\n    stream = Readable.wrap(stream, { objectMode: true });\r\n  }\r\n\r\n  const iter = createAsyncIterator(stream, options);\r\n  iter.stream = stream;\r\n  return iter;\r\n}\r\n\r\nasync function* createAsyncIterator(stream, options) {\r\n  let callback = nop;\r\n\r\n  function next(resolve) {\r\n    if (this === stream) {\r\n      callback();\r\n      callback = nop;\r\n    } else {\r\n      callback = resolve;\r\n    }\r\n  }\r\n\r\n  stream.on('readable', next);\r\n\r\n  let error;\r\n  const cleanup = eos(stream, { writable: false }, (err) => {\r\n    error = err ? aggregateTwoErrors(error, err) : null;\r\n    callback();\r\n    callback = nop;\r\n  });\r\n\r\n  try {\r\n    while (true) {\r\n      const chunk = stream.destroyed ? null : stream.read();\r\n      if (chunk !== null) {\r\n        yield chunk;\r\n      } else if (error) {\r\n        throw error;\r\n      } else if (error === null) {\r\n        return;\r\n      } else {\r\n        await new Promise(next);\r\n      }\r\n    }\r\n  } catch (err) {\r\n    error = aggregateTwoErrors(error, err);\r\n    throw error;\r\n  } finally {\r\n    if (\r\n      (error || options?.destroyOnReturn !== false) &&\r\n      (error === undefined || stream._readableState.autoDestroy)\r\n    ) {\r\n      destroyImpl.destroyer(stream, null);\r\n    } else {\r\n      stream.off('readable', next);\r\n      cleanup();\r\n    }\r\n  }\r\n}\r\n\r\n// Making it explicit these properties are not enumerable\r\n// because otherwise some prototype manipulation in\r\n// userland will fail.\r\nObjectDefineProperties(Readable.prototype, {\r\n  readable: {\r\n    __proto__: null,\r\n    get() {\r\n      const r = this._readableState;\r\n      // r.readable === false means that this is part of a Duplex stream\r\n      // where the readable side was disabled upon construction.\r\n      // Compat. The user might manually disable readable side through\r\n      // deprecated setter.\r\n      return !!r && r.readable !== false && !r.destroyed && !r.errorEmitted &&\r\n        !r.endEmitted;\r\n    },\r\n    set(val) {\r\n      // Backwards compat.\r\n      if (this._readableState) {\r\n        this._readableState.readable = !!val;\r\n      }\r\n    }\r\n  },\r\n\r\n  readableDidRead: {\r\n    __proto__: null,\r\n    enumerable: false,\r\n    get: function() {\r\n      return this._readableState.dataEmitted;\r\n    }\r\n  },\r\n\r\n  readableAborted: {\r\n    __proto__: null,\r\n    enumerable: false,\r\n    get: function() {\r\n      return !!(\r\n        this._readableState.readable !== false &&\r\n        (this._readableState.destroyed || this._readableState.errored) &&\r\n        !this._readableState.endEmitted\r\n      );\r\n    }\r\n  },\r\n\r\n  readableHighWaterMark: {\r\n    __proto__: null,\r\n    enumerable: false,\r\n    get: function() {\r\n      return this._readableState.highWaterMark;\r\n    }\r\n  },\r\n\r\n  readableBuffer: {\r\n    __proto__: null,\r\n    enumerable: false,\r\n    get: function() {\r\n      return this._readableState && this._readableState.buffer;\r\n    }\r\n  },\r\n\r\n  readableFlowing: {\r\n    __proto__: null,\r\n    enumerable: false,\r\n    get: function() {\r\n      return this._readableState.flowing;\r\n    },\r\n    set: function(state) {\r\n      if (this._readableState) {\r\n        this._readableState.flowing = state;\r\n      }\r\n    }\r\n  },\r\n\r\n  readableLength: {\r\n    __proto__: null,\r\n    enumerable: false,\r\n    get() {\r\n      return this._readableState.length;\r\n    }\r\n  },\r\n\r\n  readableObjectMode: {\r\n    __proto__: null,\r\n    enumerable: false,\r\n    get() {\r\n      return this._readableState ? this._readableState.objectMode : false;\r\n    }\r\n  },\r\n\r\n  readableEncoding: {\r\n    __proto__: null,\r\n    enumerable: false,\r\n    get() {\r\n      return this._readableState ? this._readableState.encoding : null;\r\n    }\r\n  },\r\n\r\n  errored: {\r\n    __proto__: null,\r\n    enumerable: false,\r\n    get() {\r\n      return this._readableState ? this._readableState.errored : null;\r\n    }\r\n  },\r\n\r\n  closed: {\r\n    __proto__: null,\r\n    get() {\r\n      return this._readableState ? this._readableState.closed : false;\r\n    }\r\n  },\r\n\r\n  destroyed: {\r\n    __proto__: null,\r\n    enumerable: false,\r\n    get() {\r\n      return this._readableState ? this._readableState.destroyed : false;\r\n    },\r\n    set(value) {\r\n      // We ignore the value if the stream\r\n      // has not been initialized yet.\r\n      if (!this._readableState) {\r\n        return;\r\n      }\r\n\r\n      // Backward compatibility, the user is explicitly\r\n      // managing destroyed.\r\n      this._readableState.destroyed = value;\r\n    }\r\n  },\r\n\r\n  readableEnded: {\r\n    __proto__: null,\r\n    enumerable: false,\r\n    get() {\r\n      return this._readableState ? this._readableState.endEmitted : false;\r\n    }\r\n  },\r\n\r\n});\r\n\r\nObjectDefineProperties(ReadableState.prototype, {\r\n  // Legacy getter for `pipesCount`.\r\n  pipesCount: {\r\n    __proto__: null,\r\n    get() {\r\n      return this.pipes.length;\r\n    }\r\n  },\r\n\r\n  // Legacy property for `paused`.\r\n  paused: {\r\n    __proto__: null,\r\n    get() {\r\n      return this[kPaused] !== false;\r\n    },\r\n    set(value) {\r\n      this[kPaused] = !!value;\r\n    }\r\n  }\r\n});\r\n\r\n// Exposed for testing purposes only.\r\nReadable._fromList = fromList;\r\n\r\n// Pluck off n bytes from an array of buffers.\r\n// Length is the combined lengths of all the buffers in the list.\r\n// This function is designed to be inlinable, so please take care when making\r\n// changes to the function body.\r\nfunction fromList(n, state) {\r\n  // nothing buffered.\r\n  if (state.length === 0)\r\n    return null;\r\n\r\n  let ret;\r\n  if (state.objectMode)\r\n    ret = state.buffer.shift();\r\n  else if (!n || n >= state.length) {\r\n    // Read it all, truncate the list.\r\n    if (state.decoder)\r\n      ret = state.buffer.join('');\r\n    else if (state.buffer.length === 1)\r\n      ret = state.buffer.first();\r\n    else\r\n      ret = state.buffer.concat(state.length);\r\n    state.buffer.clear();\r\n  } else {\r\n    // read part of list.\r\n    ret = state.buffer.consume(n, state.decoder);\r\n  }\r\n\r\n  return ret;\r\n}\r\n\r\nfunction endReadable(stream) {\r\n  const state = stream._readableState;\r\n\r\n  debug('endReadable', state.endEmitted);\r\n  if (!state.endEmitted) {\r\n    state.ended = true;\r\n    process.nextTick(endReadableNT, state, stream);\r\n  }\r\n}\r\n\r\nfunction endReadableNT(state, stream) {\r\n  debug('endReadableNT', state.endEmitted, state.length);\r\n\r\n  // Check that we didn't get one last unshift.\r\n  if (!state.errored && !state.closeEmitted &&\r\n      !state.endEmitted && state.length === 0) {\r\n    state.endEmitted = true;\r\n    stream.emit('end');\r\n\r\n    if (stream.writable && stream.allowHalfOpen === false) {\r\n      process.nextTick(endWritableNT, stream);\r\n    } else if (state.autoDestroy) {\r\n      // In case of duplex streams we need a way to detect\r\n      // if the writable side is ready for autoDestroy as well.\r\n      const wState = stream._writableState;\r\n      const autoDestroy = !wState || (\r\n        wState.autoDestroy &&\r\n        // We don't expect the writable to ever 'finish'\r\n        // if writable is explicitly set to false.\r\n        (wState.finished || wState.writable === false)\r\n      );\r\n\r\n      if (autoDestroy) {\r\n        stream.destroy();\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction endWritableNT(stream) {\r\n  const writable = stream.writable && !stream.writableEnded &&\r\n    !stream.destroyed;\r\n  if (writable) {\r\n    stream.end();\r\n  }\r\n}\r\n\r\nReadable.from = function(iterable, opts) {\r\n  return from(Readable, iterable, opts);\r\n};\r\n\r\nlet webStreamsAdapters;\r\n\r\n// Lazy to avoid circular references\r\nfunction lazyWebStreams() {\r\n  if (webStreamsAdapters === undefined)\r\n    webStreamsAdapters = require('internal/webstreams/adapters');\r\n  return webStreamsAdapters;\r\n}\r\n\r\nReadable.fromWeb = function(readableStream, options) {\r\n  return lazyWebStreams().newStreamReadableFromReadableStream(\r\n    readableStream,\r\n    options);\r\n};\r\n\r\nReadable.toWeb = function(streamReadable, options) {\r\n  return lazyWebStreams().newReadableStreamFromStreamReadable(\r\n    streamReadable,\r\n    options);\r\n};\r\n\r\nReadable.wrap = function(src, options) {\r\n  return new Readable({\r\n    objectMode: src.readableObjectMode ?? src.objectMode ?? true,\r\n    ...options,\r\n    destroy(err, callback) {\r\n      destroyImpl.destroyer(src, err);\r\n      callback(err);\r\n    }\r\n  }).wrap(src);\r\n};\r\n",
    "name": "readable",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 60,
    "sourcePositions": []
  },
  {
    "url": "node:internal/streams/legacy",
    "source": "'use strict';\r\n\r\nconst {\r\n  ArrayIsArray,\r\n  ObjectSetPrototypeOf,\r\n} = primordials;\r\n\r\nconst EE = require('events');\r\n\r\nfunction Stream(opts) {\r\n  EE.call(this, opts);\r\n}\r\nObjectSetPrototypeOf(Stream.prototype, EE.prototype);\r\nObjectSetPrototypeOf(Stream, EE);\r\n\r\nStream.prototype.pipe = function(dest, options) {\r\n  const source = this;\r\n\r\n  function ondata(chunk) {\r\n    if (dest.writable && dest.write(chunk) === false && source.pause) {\r\n      source.pause();\r\n    }\r\n  }\r\n\r\n  source.on('data', ondata);\r\n\r\n  function ondrain() {\r\n    if (source.readable && source.resume) {\r\n      source.resume();\r\n    }\r\n  }\r\n\r\n  dest.on('drain', ondrain);\r\n\r\n  // If the 'end' option is not supplied, dest.end() will be called when\r\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\r\n  if (!dest._isStdio && (!options || options.end !== false)) {\r\n    source.on('end', onend);\r\n    source.on('close', onclose);\r\n  }\r\n\r\n  let didOnEnd = false;\r\n  function onend() {\r\n    if (didOnEnd) return;\r\n    didOnEnd = true;\r\n\r\n    dest.end();\r\n  }\r\n\r\n\r\n  function onclose() {\r\n    if (didOnEnd) return;\r\n    didOnEnd = true;\r\n\r\n    if (typeof dest.destroy === 'function') dest.destroy();\r\n  }\r\n\r\n  // Don't leave dangling pipes when there are errors.\r\n  function onerror(er) {\r\n    cleanup();\r\n    if (EE.listenerCount(this, 'error') === 0) {\r\n      this.emit('error', er);\r\n    }\r\n  }\r\n\r\n  prependListener(source, 'error', onerror);\r\n  prependListener(dest, 'error', onerror);\r\n\r\n  // Remove all the event listeners that were added.\r\n  function cleanup() {\r\n    source.removeListener('data', ondata);\r\n    dest.removeListener('drain', ondrain);\r\n\r\n    source.removeListener('end', onend);\r\n    source.removeListener('close', onclose);\r\n\r\n    source.removeListener('error', onerror);\r\n    dest.removeListener('error', onerror);\r\n\r\n    source.removeListener('end', cleanup);\r\n    source.removeListener('close', cleanup);\r\n\r\n    dest.removeListener('close', cleanup);\r\n  }\r\n\r\n  source.on('end', cleanup);\r\n  source.on('close', cleanup);\r\n\r\n  dest.on('close', cleanup);\r\n  dest.emit('pipe', source);\r\n\r\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\r\n  return dest;\r\n};\r\n\r\nfunction prependListener(emitter, event, fn) {\r\n  // Sadly this is not cacheable as some libraries bundle their own\r\n  // event emitter implementation with them.\r\n  if (typeof emitter.prependListener === 'function')\r\n    return emitter.prependListener(event, fn);\r\n\r\n  // This is a hack to make sure that our error handler is attached before any\r\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\r\n  // to continue to work with older versions of Node.js that do not include\r\n  // the prependListener() method. The goal is to eventually remove this hack.\r\n  if (!emitter._events || !emitter._events[event])\r\n    emitter.on(event, fn);\r\n  else if (ArrayIsArray(emitter._events[event]))\r\n    emitter._events[event].unshift(fn);\r\n  else\r\n    emitter._events[event] = [fn, emitter._events[event]];\r\n}\r\n\r\nmodule.exports = { Stream, prependListener };\r\n",
    "name": "legacy",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 61,
    "sourcePositions": []
  },
  null,
  {
    "url": "node:internal/streams/buffer_list",
    "source": "'use strict';\r\n\r\nconst {\r\n  StringPrototypeSlice,\r\n  SymbolIterator,\r\n  TypedArrayPrototypeSet,\r\n  Uint8Array,\r\n} = primordials;\r\n\r\nconst { Buffer } = require('buffer');\r\nconst { inspect } = require('internal/util/inspect');\r\n\r\nmodule.exports = class BufferList {\r\n  constructor() {\r\n    this.head = null;\r\n    this.tail = null;\r\n    this.length = 0;\r\n  }\r\n\r\n  push(v) {\r\n    const entry = { data: v, next: null };\r\n    if (this.length > 0)\r\n      this.tail.next = entry;\r\n    else\r\n      this.head = entry;\r\n    this.tail = entry;\r\n    ++this.length;\r\n  }\r\n\r\n  unshift(v) {\r\n    const entry = { data: v, next: this.head };\r\n    if (this.length === 0)\r\n      this.tail = entry;\r\n    this.head = entry;\r\n    ++this.length;\r\n  }\r\n\r\n  shift() {\r\n    if (this.length === 0)\r\n      return;\r\n    const ret = this.head.data;\r\n    if (this.length === 1)\r\n      this.head = this.tail = null;\r\n    else\r\n      this.head = this.head.next;\r\n    --this.length;\r\n    return ret;\r\n  }\r\n\r\n  clear() {\r\n    this.head = this.tail = null;\r\n    this.length = 0;\r\n  }\r\n\r\n  join(s) {\r\n    if (this.length === 0)\r\n      return '';\r\n    let p = this.head;\r\n    let ret = '' + p.data;\r\n    while ((p = p.next) !== null)\r\n      ret += s + p.data;\r\n    return ret;\r\n  }\r\n\r\n  concat(n) {\r\n    if (this.length === 0)\r\n      return Buffer.alloc(0);\r\n    const ret = Buffer.allocUnsafe(n >>> 0);\r\n    let p = this.head;\r\n    let i = 0;\r\n    while (p) {\r\n      TypedArrayPrototypeSet(ret, p.data, i);\r\n      i += p.data.length;\r\n      p = p.next;\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  // Consumes a specified amount of bytes or characters from the buffered data.\r\n  consume(n, hasStrings) {\r\n    const data = this.head.data;\r\n    if (n < data.length) {\r\n      // `slice` is the same for buffers and strings.\r\n      const slice = data.slice(0, n);\r\n      this.head.data = data.slice(n);\r\n      return slice;\r\n    }\r\n    if (n === data.length) {\r\n      // First chunk is a perfect match.\r\n      return this.shift();\r\n    }\r\n    // Result spans more than one buffer.\r\n    return hasStrings ? this._getString(n) : this._getBuffer(n);\r\n  }\r\n\r\n  first() {\r\n    return this.head.data;\r\n  }\r\n\r\n  *[SymbolIterator]() {\r\n    for (let p = this.head; p; p = p.next) {\r\n      yield p.data;\r\n    }\r\n  }\r\n\r\n  // Consumes a specified amount of characters from the buffered data.\r\n  _getString(n) {\r\n    let ret = '';\r\n    let p = this.head;\r\n    let c = 0;\r\n    do {\r\n      const str = p.data;\r\n      if (n > str.length) {\r\n        ret += str;\r\n        n -= str.length;\r\n      } else {\r\n        if (n === str.length) {\r\n          ret += str;\r\n          ++c;\r\n          if (p.next)\r\n            this.head = p.next;\r\n          else\r\n            this.head = this.tail = null;\r\n        } else {\r\n          ret += StringPrototypeSlice(str, 0, n);\r\n          this.head = p;\r\n          p.data = StringPrototypeSlice(str, n);\r\n        }\r\n        break;\r\n      }\r\n      ++c;\r\n    } while ((p = p.next) !== null);\r\n    this.length -= c;\r\n    return ret;\r\n  }\r\n\r\n  // Consumes a specified amount of bytes from the buffered data.\r\n  _getBuffer(n) {\r\n    const ret = Buffer.allocUnsafe(n);\r\n    const retLen = n;\r\n    let p = this.head;\r\n    let c = 0;\r\n    do {\r\n      const buf = p.data;\r\n      if (n > buf.length) {\r\n        TypedArrayPrototypeSet(ret, buf, retLen - n);\r\n        n -= buf.length;\r\n      } else {\r\n        if (n === buf.length) {\r\n          TypedArrayPrototypeSet(ret, buf, retLen - n);\r\n          ++c;\r\n          if (p.next)\r\n            this.head = p.next;\r\n          else\r\n            this.head = this.tail = null;\r\n        } else {\r\n          TypedArrayPrototypeSet(ret,\r\n                                 new Uint8Array(buf.buffer, buf.byteOffset, n),\r\n                                 retLen - n);\r\n          this.head = p;\r\n          p.data = buf.slice(n);\r\n        }\r\n        break;\r\n      }\r\n      ++c;\r\n    } while ((p = p.next) !== null);\r\n    this.length -= c;\r\n    return ret;\r\n  }\r\n\r\n  // Make sure the linked list only shows the minimal necessary information.\r\n  [inspect.custom](_, options) {\r\n    return inspect(this, {\r\n      ...options,\r\n      // Only inspect one level.\r\n      depth: 0,\r\n      // It should not recurse.\r\n      customInspect: false\r\n    });\r\n  }\r\n};\r\n",
    "name": "buffer_list",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 63,
    "sourcePositions": []
  },
  {
    "url": "node:internal/streams/state",
    "source": "'use strict';\r\n\r\nconst {\r\n  MathFloor,\r\n  NumberIsInteger,\r\n} = primordials;\r\n\r\nconst { ERR_INVALID_ARG_VALUE } = require('internal/errors').codes;\r\n\r\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\r\n  return options.highWaterMark != null ? options.highWaterMark :\r\n    isDuplex ? options[duplexKey] : null;\r\n}\r\n\r\nfunction getDefaultHighWaterMark(objectMode) {\r\n  return objectMode ? 16 : 16 * 1024;\r\n}\r\n\r\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\r\n  const hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\r\n  if (hwm != null) {\r\n    if (!NumberIsInteger(hwm) || hwm < 0) {\r\n      const name = isDuplex ? `options.${duplexKey}` : 'options.highWaterMark';\r\n      throw new ERR_INVALID_ARG_VALUE(name, hwm);\r\n    }\r\n    return MathFloor(hwm);\r\n  }\r\n\r\n  // Default value\r\n  return getDefaultHighWaterMark(state.objectMode);\r\n}\r\n\r\nmodule.exports = {\r\n  getHighWaterMark,\r\n  getDefaultHighWaterMark\r\n};\r\n",
    "name": "state",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 64,
    "sourcePositions": []
  },
  null,
  null,
  {
    "url": "node:internal/streams/writable",
    "source": "// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n// A bit simpler than readable streams.\r\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\r\n// the drain event emission and buffering.\r\n\r\n'use strict';\r\n\r\nconst {\r\n  ArrayPrototypeSlice,\r\n  Error,\r\n  FunctionPrototypeSymbolHasInstance,\r\n  ObjectDefineProperty,\r\n  ObjectDefineProperties,\r\n  ObjectSetPrototypeOf,\r\n  StringPrototypeToLowerCase,\r\n  Symbol,\r\n  SymbolHasInstance,\r\n} = primordials;\r\n\r\nmodule.exports = Writable;\r\nWritable.WritableState = WritableState;\r\n\r\nconst EE = require('events');\r\nconst Stream = require('internal/streams/legacy').Stream;\r\nconst { Buffer } = require('buffer');\r\nconst destroyImpl = require('internal/streams/destroy');\r\n\r\nconst {\r\n  addAbortSignal,\r\n} = require('internal/streams/add-abort-signal');\r\n\r\nconst {\r\n  getHighWaterMark,\r\n  getDefaultHighWaterMark\r\n} = require('internal/streams/state');\r\nconst {\r\n  ERR_INVALID_ARG_TYPE,\r\n  ERR_METHOD_NOT_IMPLEMENTED,\r\n  ERR_MULTIPLE_CALLBACK,\r\n  ERR_STREAM_CANNOT_PIPE,\r\n  ERR_STREAM_DESTROYED,\r\n  ERR_STREAM_ALREADY_FINISHED,\r\n  ERR_STREAM_NULL_VALUES,\r\n  ERR_STREAM_WRITE_AFTER_END,\r\n  ERR_UNKNOWN_ENCODING\r\n} = require('internal/errors').codes;\r\n\r\nconst { errorOrDestroy } = destroyImpl;\r\n\r\nObjectSetPrototypeOf(Writable.prototype, Stream.prototype);\r\nObjectSetPrototypeOf(Writable, Stream);\r\n\r\nfunction nop() {}\r\n\r\nconst kOnFinished = Symbol('kOnFinished');\r\n\r\nfunction WritableState(options, stream, isDuplex) {\r\n  // Duplex streams are both readable and writable, but share\r\n  // the same options object.\r\n  // However, some cases require setting options to different\r\n  // values for the readable and the writable sides of the duplex stream,\r\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\r\n  if (typeof isDuplex !== 'boolean')\r\n    isDuplex = stream instanceof Stream.Duplex;\r\n\r\n  // Object stream flag to indicate whether or not this stream\r\n  // contains buffers or objects.\r\n  this.objectMode = !!(options && options.objectMode);\r\n\r\n  if (isDuplex)\r\n    this.objectMode = this.objectMode ||\r\n      !!(options && options.writableObjectMode);\r\n\r\n  // The point at which write() starts returning false\r\n  // Note: 0 is a valid value, means that we always return false if\r\n  // the entire buffer is not flushed immediately on write().\r\n  this.highWaterMark = options ?\r\n    getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex) :\r\n    getDefaultHighWaterMark(false);\r\n\r\n  // if _final has been called.\r\n  this.finalCalled = false;\r\n\r\n  // drain event flag.\r\n  this.needDrain = false;\r\n  // At the start of calling end()\r\n  this.ending = false;\r\n  // When end() has been called, and returned.\r\n  this.ended = false;\r\n  // When 'finish' is emitted.\r\n  this.finished = false;\r\n\r\n  // Has it been destroyed\r\n  this.destroyed = false;\r\n\r\n  // Should we decode strings into buffers before passing to _write?\r\n  // this is here so that some node-core streams can optimize string\r\n  // handling at a lower level.\r\n  const noDecode = !!(options && options.decodeStrings === false);\r\n  this.decodeStrings = !noDecode;\r\n\r\n  // Crypto is kind of old and crusty.  Historically, its default string\r\n  // encoding is 'binary' so we have to make this configurable.\r\n  // Everything else in the universe uses 'utf8', though.\r\n  this.defaultEncoding = (options && options.defaultEncoding) || 'utf8';\r\n\r\n  // Not an actual buffer we keep track of, but a measurement\r\n  // of how much we're waiting to get pushed to some underlying\r\n  // socket or file.\r\n  this.length = 0;\r\n\r\n  // A flag to see when we're in the middle of a write.\r\n  this.writing = false;\r\n\r\n  // When true all writes will be buffered until .uncork() call.\r\n  this.corked = 0;\r\n\r\n  // A flag to be able to tell if the onwrite cb is called immediately,\r\n  // or on a later tick.  We set this to true at first, because any\r\n  // actions that shouldn't happen until \"later\" should generally also\r\n  // not happen before the first write call.\r\n  this.sync = true;\r\n\r\n  // A flag to know if we're processing previously buffered items, which\r\n  // may call the _write() callback in the same tick, so that we don't\r\n  // end up in an overlapped onwrite situation.\r\n  this.bufferProcessing = false;\r\n\r\n  // The callback that's passed to _write(chunk, cb).\r\n  this.onwrite = onwrite.bind(undefined, stream);\r\n\r\n  // The callback that the user supplies to write(chunk, encoding, cb).\r\n  this.writecb = null;\r\n\r\n  // The amount that is being written when _write is called.\r\n  this.writelen = 0;\r\n\r\n  // Storage for data passed to the afterWrite() callback in case of\r\n  // synchronous _write() completion.\r\n  this.afterWriteTickInfo = null;\r\n\r\n  resetBuffer(this);\r\n\r\n  // Number of pending user-supplied write callbacks\r\n  // this must be 0 before 'finish' can be emitted.\r\n  this.pendingcb = 0;\r\n\r\n  // Stream is still being constructed and cannot be\r\n  // destroyed until construction finished or failed.\r\n  // Async construction is opt in, therefore we start as\r\n  // constructed.\r\n  this.constructed = true;\r\n\r\n  // Emit prefinish if the only thing we're waiting for is _write cbs\r\n  // This is relevant for synchronous Transform streams.\r\n  this.prefinished = false;\r\n\r\n  // True if the error was already emitted and should not be thrown again.\r\n  this.errorEmitted = false;\r\n\r\n  // Should close be emitted on destroy. Defaults to true.\r\n  this.emitClose = !options || options.emitClose !== false;\r\n\r\n  // Should .destroy() be called after 'finish' (and potentially 'end').\r\n  this.autoDestroy = !options || options.autoDestroy !== false;\r\n\r\n  // Indicates whether the stream has errored. When true all write() calls\r\n  // should return false. This is needed since when autoDestroy\r\n  // is disabled we need a way to tell whether the stream has failed.\r\n  this.errored = null;\r\n\r\n  // Indicates whether the stream has finished destroying.\r\n  this.closed = false;\r\n\r\n  // True if close has been emitted or would have been emitted\r\n  // depending on emitClose.\r\n  this.closeEmitted = false;\r\n\r\n  this[kOnFinished] = [];\r\n}\r\n\r\nfunction resetBuffer(state) {\r\n  state.buffered = [];\r\n  state.bufferedIndex = 0;\r\n  state.allBuffers = true;\r\n  state.allNoop = true;\r\n}\r\n\r\nWritableState.prototype.getBuffer = function getBuffer() {\r\n  return ArrayPrototypeSlice(this.buffered, this.bufferedIndex);\r\n};\r\n\r\nObjectDefineProperty(WritableState.prototype, 'bufferedRequestCount', {\r\n  __proto__: null,\r\n  get() {\r\n    return this.buffered.length - this.bufferedIndex;\r\n  }\r\n});\r\n\r\nfunction Writable(options) {\r\n  // Writable ctor is applied to Duplexes, too.\r\n  // `realHasInstance` is necessary because using plain `instanceof`\r\n  // would return false, as no `_writableState` property is attached.\r\n\r\n  // Trying to use the custom `instanceof` for Writable here will also break the\r\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\r\n  // `_writableState` that would lead to infinite recursion.\r\n\r\n  // Checking for a Stream.Duplex instance is faster here instead of inside\r\n  // the WritableState constructor, at least with V8 6.5.\r\n  const isDuplex = (this instanceof Stream.Duplex);\r\n\r\n  if (!isDuplex && !FunctionPrototypeSymbolHasInstance(Writable, this))\r\n    return new Writable(options);\r\n\r\n  this._writableState = new WritableState(options, this, isDuplex);\r\n\r\n  if (options) {\r\n    if (typeof options.write === 'function')\r\n      this._write = options.write;\r\n\r\n    if (typeof options.writev === 'function')\r\n      this._writev = options.writev;\r\n\r\n    if (typeof options.destroy === 'function')\r\n      this._destroy = options.destroy;\r\n\r\n    if (typeof options.final === 'function')\r\n      this._final = options.final;\r\n\r\n    if (typeof options.construct === 'function')\r\n      this._construct = options.construct;\r\n\r\n    if (options.signal)\r\n      addAbortSignal(options.signal, this);\r\n  }\r\n\r\n  Stream.call(this, options);\r\n\r\n  destroyImpl.construct(this, () => {\r\n    const state = this._writableState;\r\n\r\n    if (!state.writing) {\r\n      clearBuffer(this, state);\r\n    }\r\n\r\n    finishMaybe(this, state);\r\n  });\r\n}\r\n\r\nObjectDefineProperty(Writable, SymbolHasInstance, {\r\n  __proto__: null,\r\n  value: function(object) {\r\n    if (FunctionPrototypeSymbolHasInstance(this, object)) return true;\r\n    if (this !== Writable) return false;\r\n\r\n    return object && object._writableState instanceof WritableState;\r\n  },\r\n});\r\n\r\n// Otherwise people can pipe Writable streams, which is just wrong.\r\nWritable.prototype.pipe = function() {\r\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\r\n};\r\n\r\nfunction _write(stream, chunk, encoding, cb) {\r\n  const state = stream._writableState;\r\n\r\n  if (typeof encoding === 'function') {\r\n    cb = encoding;\r\n    encoding = state.defaultEncoding;\r\n  } else {\r\n    if (!encoding)\r\n      encoding = state.defaultEncoding;\r\n    else if (encoding !== 'buffer' && !Buffer.isEncoding(encoding))\r\n      throw new ERR_UNKNOWN_ENCODING(encoding);\r\n    if (typeof cb !== 'function')\r\n      cb = nop;\r\n  }\r\n\r\n  if (chunk === null) {\r\n    throw new ERR_STREAM_NULL_VALUES();\r\n  } else if (!state.objectMode) {\r\n    if (typeof chunk === 'string') {\r\n      if (state.decodeStrings !== false) {\r\n        chunk = Buffer.from(chunk, encoding);\r\n        encoding = 'buffer';\r\n      }\r\n    } else if (chunk instanceof Buffer) {\r\n      encoding = 'buffer';\r\n    } else if (Stream._isUint8Array(chunk)) {\r\n      chunk = Stream._uint8ArrayToBuffer(chunk);\r\n      encoding = 'buffer';\r\n    } else {\r\n      throw new ERR_INVALID_ARG_TYPE(\r\n        'chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\r\n    }\r\n  }\r\n\r\n  let err;\r\n  if (state.ending) {\r\n    err = new ERR_STREAM_WRITE_AFTER_END();\r\n  } else if (state.destroyed) {\r\n    err = new ERR_STREAM_DESTROYED('write');\r\n  }\r\n\r\n  if (err) {\r\n    process.nextTick(cb, err);\r\n    errorOrDestroy(stream, err, true);\r\n    return err;\r\n  }\r\n  state.pendingcb++;\r\n  return writeOrBuffer(stream, state, chunk, encoding, cb);\r\n}\r\n\r\nWritable.prototype.write = function(chunk, encoding, cb) {\r\n  return _write(this, chunk, encoding, cb) === true;\r\n};\r\n\r\nWritable.prototype.cork = function() {\r\n  this._writableState.corked++;\r\n};\r\n\r\nWritable.prototype.uncork = function() {\r\n  const state = this._writableState;\r\n\r\n  if (state.corked) {\r\n    state.corked--;\r\n\r\n    if (!state.writing)\r\n      clearBuffer(this, state);\r\n  }\r\n};\r\n\r\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\r\n  // node::ParseEncoding() requires lower case.\r\n  if (typeof encoding === 'string')\r\n    encoding = StringPrototypeToLowerCase(encoding);\r\n  if (!Buffer.isEncoding(encoding))\r\n    throw new ERR_UNKNOWN_ENCODING(encoding);\r\n  this._writableState.defaultEncoding = encoding;\r\n  return this;\r\n};\r\n\r\n// If we're already writing something, then just put this\r\n// in the queue, and wait our turn.  Otherwise, call _write\r\n// If we return false, then we need a drain event, so set that flag.\r\nfunction writeOrBuffer(stream, state, chunk, encoding, callback) {\r\n  const len = state.objectMode ? 1 : chunk.length;\r\n\r\n  state.length += len;\r\n\r\n  // stream._write resets state.length\r\n  const ret = state.length < state.highWaterMark;\r\n  // We must ensure that previous needDrain will not be reset to false.\r\n  if (!ret)\r\n    state.needDrain = true;\r\n\r\n  if (state.writing || state.corked || state.errored || !state.constructed) {\r\n    state.buffered.push({ chunk, encoding, callback });\r\n    if (state.allBuffers && encoding !== 'buffer') {\r\n      state.allBuffers = false;\r\n    }\r\n    if (state.allNoop && callback !== nop) {\r\n      state.allNoop = false;\r\n    }\r\n  } else {\r\n    state.writelen = len;\r\n    state.writecb = callback;\r\n    state.writing = true;\r\n    state.sync = true;\r\n    stream._write(chunk, encoding, state.onwrite);\r\n    state.sync = false;\r\n  }\r\n\r\n  // Return false if errored or destroyed in order to break\r\n  // any synchronous while(stream.write(data)) loops.\r\n  return ret && !state.errored && !state.destroyed;\r\n}\r\n\r\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\r\n  state.writelen = len;\r\n  state.writecb = cb;\r\n  state.writing = true;\r\n  state.sync = true;\r\n  if (state.destroyed)\r\n    state.onwrite(new ERR_STREAM_DESTROYED('write'));\r\n  else if (writev)\r\n    stream._writev(chunk, state.onwrite);\r\n  else\r\n    stream._write(chunk, encoding, state.onwrite);\r\n  state.sync = false;\r\n}\r\n\r\nfunction onwriteError(stream, state, er, cb) {\r\n  --state.pendingcb;\r\n\r\n  cb(er);\r\n  // Ensure callbacks are invoked even when autoDestroy is\r\n  // not enabled. Passing `er` here doesn't make sense since\r\n  // it's related to one specific write, not to the buffered\r\n  // writes.\r\n  errorBuffer(state);\r\n  // This can emit error, but error must always follow cb.\r\n  errorOrDestroy(stream, er);\r\n}\r\n\r\nfunction onwrite(stream, er) {\r\n  const state = stream._writableState;\r\n  const sync = state.sync;\r\n  const cb = state.writecb;\r\n\r\n  if (typeof cb !== 'function') {\r\n    errorOrDestroy(stream, new ERR_MULTIPLE_CALLBACK());\r\n    return;\r\n  }\r\n\r\n  state.writing = false;\r\n  state.writecb = null;\r\n  state.length -= state.writelen;\r\n  state.writelen = 0;\r\n\r\n  if (er) {\r\n    // Avoid V8 leak, https://github.com/nodejs/node/pull/34103#issuecomment-652002364\r\n    er.stack; // eslint-disable-line no-unused-expressions\r\n\r\n    if (!state.errored) {\r\n      state.errored = er;\r\n    }\r\n\r\n    // In case of duplex streams we need to notify the readable side of the\r\n    // error.\r\n    if (stream._readableState && !stream._readableState.errored) {\r\n      stream._readableState.errored = er;\r\n    }\r\n\r\n    if (sync) {\r\n      process.nextTick(onwriteError, stream, state, er, cb);\r\n    } else {\r\n      onwriteError(stream, state, er, cb);\r\n    }\r\n  } else {\r\n    if (state.buffered.length > state.bufferedIndex) {\r\n      clearBuffer(stream, state);\r\n    }\r\n\r\n    if (sync) {\r\n      // It is a common case that the callback passed to .write() is always\r\n      // the same. In that case, we do not schedule a new nextTick(), but\r\n      // rather just increase a counter, to improve performance and avoid\r\n      // memory allocations.\r\n      if (state.afterWriteTickInfo !== null &&\r\n          state.afterWriteTickInfo.cb === cb) {\r\n        state.afterWriteTickInfo.count++;\r\n      } else {\r\n        state.afterWriteTickInfo = { count: 1, cb, stream, state };\r\n        process.nextTick(afterWriteTick, state.afterWriteTickInfo);\r\n      }\r\n    } else {\r\n      afterWrite(stream, state, 1, cb);\r\n    }\r\n  }\r\n}\r\n\r\nfunction afterWriteTick({ stream, state, count, cb }) {\r\n  state.afterWriteTickInfo = null;\r\n  return afterWrite(stream, state, count, cb);\r\n}\r\n\r\nfunction afterWrite(stream, state, count, cb) {\r\n  const needDrain = !state.ending && !stream.destroyed && state.length === 0 &&\r\n    state.needDrain;\r\n  if (needDrain) {\r\n    state.needDrain = false;\r\n    stream.emit('drain');\r\n  }\r\n\r\n  while (count-- > 0) {\r\n    state.pendingcb--;\r\n    cb();\r\n  }\r\n\r\n  if (state.destroyed) {\r\n    errorBuffer(state);\r\n  }\r\n\r\n  finishMaybe(stream, state);\r\n}\r\n\r\n// If there's something in the buffer waiting, then invoke callbacks.\r\nfunction errorBuffer(state) {\r\n  if (state.writing) {\r\n    return;\r\n  }\r\n\r\n  for (let n = state.bufferedIndex; n < state.buffered.length; ++n) {\r\n    const { chunk, callback } = state.buffered[n];\r\n    const len = state.objectMode ? 1 : chunk.length;\r\n    state.length -= len;\r\n    callback(state.errored ?? new ERR_STREAM_DESTROYED('write'));\r\n  }\r\n\r\n  const onfinishCallbacks = state[kOnFinished].splice(0);\r\n  for (let i = 0; i < onfinishCallbacks.length; i++) {\r\n    onfinishCallbacks[i](state.errored ?? new ERR_STREAM_DESTROYED('end'));\r\n  }\r\n\r\n  resetBuffer(state);\r\n}\r\n\r\n// If there's something in the buffer waiting, then process it.\r\nfunction clearBuffer(stream, state) {\r\n  if (state.corked ||\r\n      state.bufferProcessing ||\r\n      state.destroyed ||\r\n      !state.constructed) {\r\n    return;\r\n  }\r\n\r\n  const { buffered, bufferedIndex, objectMode } = state;\r\n  const bufferedLength = buffered.length - bufferedIndex;\r\n\r\n  if (!bufferedLength) {\r\n    return;\r\n  }\r\n\r\n  let i = bufferedIndex;\r\n\r\n  state.bufferProcessing = true;\r\n  if (bufferedLength > 1 && stream._writev) {\r\n    state.pendingcb -= bufferedLength - 1;\r\n\r\n    const callback = state.allNoop ? nop : (err) => {\r\n      for (let n = i; n < buffered.length; ++n) {\r\n        buffered[n].callback(err);\r\n      }\r\n    };\r\n    // Make a copy of `buffered` if it's going to be used by `callback` above,\r\n    // since `doWrite` will mutate the array.\r\n    const chunks = state.allNoop && i === 0 ?\r\n      buffered : ArrayPrototypeSlice(buffered, i);\r\n    chunks.allBuffers = state.allBuffers;\r\n\r\n    doWrite(stream, state, true, state.length, chunks, '', callback);\r\n\r\n    resetBuffer(state);\r\n  } else {\r\n    do {\r\n      const { chunk, encoding, callback } = buffered[i];\r\n      buffered[i++] = null;\r\n      const len = objectMode ? 1 : chunk.length;\r\n      doWrite(stream, state, false, len, chunk, encoding, callback);\r\n    } while (i < buffered.length && !state.writing);\r\n\r\n    if (i === buffered.length) {\r\n      resetBuffer(state);\r\n    } else if (i > 256) {\r\n      buffered.splice(0, i);\r\n      state.bufferedIndex = 0;\r\n    } else {\r\n      state.bufferedIndex = i;\r\n    }\r\n  }\r\n  state.bufferProcessing = false;\r\n}\r\n\r\nWritable.prototype._write = function(chunk, encoding, cb) {\r\n  if (this._writev) {\r\n    this._writev([{ chunk, encoding }], cb);\r\n  } else {\r\n    throw new ERR_METHOD_NOT_IMPLEMENTED('_write()');\r\n  }\r\n};\r\n\r\nWritable.prototype._writev = null;\r\n\r\nWritable.prototype.end = function(chunk, encoding, cb) {\r\n  const state = this._writableState;\r\n\r\n  if (typeof chunk === 'function') {\r\n    cb = chunk;\r\n    chunk = null;\r\n    encoding = null;\r\n  } else if (typeof encoding === 'function') {\r\n    cb = encoding;\r\n    encoding = null;\r\n  }\r\n\r\n  let err;\r\n\r\n  if (chunk !== null && chunk !== undefined) {\r\n    const ret = _write(this, chunk, encoding);\r\n    if (ret instanceof Error) {\r\n      err = ret;\r\n    }\r\n  }\r\n\r\n  // .end() fully uncorks.\r\n  if (state.corked) {\r\n    state.corked = 1;\r\n    this.uncork();\r\n  }\r\n\r\n  if (err) {\r\n    // Do nothing...\r\n  } else if (!state.errored && !state.ending) {\r\n    // This is forgiving in terms of unnecessary calls to end() and can hide\r\n    // logic errors. However, usually such errors are harmless and causing a\r\n    // hard error can be disproportionately destructive. It is not always\r\n    // trivial for the user to determine whether end() needs to be called\r\n    // or not.\r\n\r\n    state.ending = true;\r\n    finishMaybe(this, state, true);\r\n    state.ended = true;\r\n  } else if (state.finished) {\r\n    err = new ERR_STREAM_ALREADY_FINISHED('end');\r\n  } else if (state.destroyed) {\r\n    err = new ERR_STREAM_DESTROYED('end');\r\n  }\r\n\r\n  if (typeof cb === 'function') {\r\n    if (err || state.finished) {\r\n      process.nextTick(cb, err);\r\n    } else {\r\n      state[kOnFinished].push(cb);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\nfunction needFinish(state) {\r\n  return (state.ending &&\r\n          !state.destroyed &&\r\n          state.constructed &&\r\n          state.length === 0 &&\r\n          !state.errored &&\r\n          state.buffered.length === 0 &&\r\n          !state.finished &&\r\n          !state.writing &&\r\n          !state.errorEmitted &&\r\n          !state.closeEmitted);\r\n}\r\n\r\nfunction callFinal(stream, state) {\r\n  let called = false;\r\n\r\n  function onFinish(err) {\r\n    if (called) {\r\n      errorOrDestroy(stream, err ?? ERR_MULTIPLE_CALLBACK());\r\n      return;\r\n    }\r\n    called = true;\r\n\r\n    state.pendingcb--;\r\n    if (err) {\r\n      const onfinishCallbacks = state[kOnFinished].splice(0);\r\n      for (let i = 0; i < onfinishCallbacks.length; i++) {\r\n        onfinishCallbacks[i](err);\r\n      }\r\n      errorOrDestroy(stream, err, state.sync);\r\n    } else if (needFinish(state)) {\r\n      state.prefinished = true;\r\n      stream.emit('prefinish');\r\n      // Backwards compat. Don't check state.sync here.\r\n      // Some streams assume 'finish' will be emitted\r\n      // asynchronously relative to _final callback.\r\n      state.pendingcb++;\r\n      process.nextTick(finish, stream, state);\r\n    }\r\n  }\r\n\r\n  state.sync = true;\r\n  state.pendingcb++;\r\n\r\n  try {\r\n    stream._final(onFinish);\r\n  } catch (err) {\r\n    onFinish(err);\r\n  }\r\n\r\n  state.sync = false;\r\n}\r\n\r\nfunction prefinish(stream, state) {\r\n  if (!state.prefinished && !state.finalCalled) {\r\n    if (typeof stream._final === 'function' && !state.destroyed) {\r\n      state.finalCalled = true;\r\n      callFinal(stream, state);\r\n    } else {\r\n      state.prefinished = true;\r\n      stream.emit('prefinish');\r\n    }\r\n  }\r\n}\r\n\r\nfunction finishMaybe(stream, state, sync) {\r\n  if (needFinish(state)) {\r\n    prefinish(stream, state);\r\n    if (state.pendingcb === 0) {\r\n      if (sync) {\r\n        state.pendingcb++;\r\n        process.nextTick((stream, state) => {\r\n          if (needFinish(state)) {\r\n            finish(stream, state);\r\n          } else {\r\n            state.pendingcb--;\r\n          }\r\n        }, stream, state);\r\n      } else if (needFinish(state)) {\r\n        state.pendingcb++;\r\n        finish(stream, state);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction finish(stream, state) {\r\n  state.pendingcb--;\r\n  state.finished = true;\r\n\r\n  const onfinishCallbacks = state[kOnFinished].splice(0);\r\n  for (let i = 0; i < onfinishCallbacks.length; i++) {\r\n    onfinishCallbacks[i]();\r\n  }\r\n\r\n  stream.emit('finish');\r\n\r\n  if (state.autoDestroy) {\r\n    // In case of duplex streams we need a way to detect\r\n    // if the readable side is ready for autoDestroy as well.\r\n    const rState = stream._readableState;\r\n    const autoDestroy = !rState || (\r\n      rState.autoDestroy &&\r\n      // We don't expect the readable to ever 'end'\r\n      // if readable is explicitly set to false.\r\n      (rState.endEmitted || rState.readable === false)\r\n    );\r\n    if (autoDestroy) {\r\n      stream.destroy();\r\n    }\r\n  }\r\n}\r\n\r\nObjectDefineProperties(Writable.prototype, {\r\n\r\n  closed: {\r\n    __proto__: null,\r\n    get() {\r\n      return this._writableState ? this._writableState.closed : false;\r\n    }\r\n  },\r\n\r\n  destroyed: {\r\n    __proto__: null,\r\n    get() {\r\n      return this._writableState ? this._writableState.destroyed : false;\r\n    },\r\n    set(value) {\r\n      // Backward compatibility, the user is explicitly managing destroyed.\r\n      if (this._writableState) {\r\n        this._writableState.destroyed = value;\r\n      }\r\n    }\r\n  },\r\n\r\n  writable: {\r\n    __proto__: null,\r\n    get() {\r\n      const w = this._writableState;\r\n      // w.writable === false means that this is part of a Duplex stream\r\n      // where the writable side was disabled upon construction.\r\n      // Compat. The user might manually disable writable side through\r\n      // deprecated setter.\r\n      return !!w && w.writable !== false && !w.destroyed && !w.errored &&\r\n        !w.ending && !w.ended;\r\n    },\r\n    set(val) {\r\n      // Backwards compatible.\r\n      if (this._writableState) {\r\n        this._writableState.writable = !!val;\r\n      }\r\n    }\r\n  },\r\n\r\n  writableFinished: {\r\n    __proto__: null,\r\n    get() {\r\n      return this._writableState ? this._writableState.finished : false;\r\n    }\r\n  },\r\n\r\n  writableObjectMode: {\r\n    __proto__: null,\r\n    get() {\r\n      return this._writableState ? this._writableState.objectMode : false;\r\n    }\r\n  },\r\n\r\n  writableBuffer: {\r\n    __proto__: null,\r\n    get() {\r\n      return this._writableState && this._writableState.getBuffer();\r\n    }\r\n  },\r\n\r\n  writableEnded: {\r\n    __proto__: null,\r\n    get() {\r\n      return this._writableState ? this._writableState.ending : false;\r\n    }\r\n  },\r\n\r\n  writableNeedDrain: {\r\n    __proto__: null,\r\n    get() {\r\n      const wState = this._writableState;\r\n      if (!wState) return false;\r\n      return !wState.destroyed && !wState.ending && wState.needDrain;\r\n    }\r\n  },\r\n\r\n  writableHighWaterMark: {\r\n    __proto__: null,\r\n    get() {\r\n      return this._writableState && this._writableState.highWaterMark;\r\n    }\r\n  },\r\n\r\n  writableCorked: {\r\n    __proto__: null,\r\n    get() {\r\n      return this._writableState ? this._writableState.corked : 0;\r\n    }\r\n  },\r\n\r\n  writableLength: {\r\n    __proto__: null,\r\n    get() {\r\n      return this._writableState && this._writableState.length;\r\n    }\r\n  },\r\n\r\n  errored: {\r\n    __proto__: null,\r\n    enumerable: false,\r\n    get() {\r\n      return this._writableState ? this._writableState.errored : null;\r\n    }\r\n  },\r\n\r\n  writableAborted: {\r\n    __proto__: null,\r\n    enumerable: false,\r\n    get: function() {\r\n      return !!(\r\n        this._writableState.writable !== false &&\r\n        (this._writableState.destroyed || this._writableState.errored) &&\r\n        !this._writableState.finished\r\n      );\r\n    }\r\n  },\r\n});\r\n\r\nconst destroy = destroyImpl.destroy;\r\nWritable.prototype.destroy = function(err, cb) {\r\n  const state = this._writableState;\r\n\r\n  // Invoke pending callbacks.\r\n  if (!state.destroyed &&\r\n    (state.bufferedIndex < state.buffered.length ||\r\n      state[kOnFinished].length)) {\r\n    process.nextTick(errorBuffer, state);\r\n  }\r\n\r\n  destroy.call(this, err, cb);\r\n  return this;\r\n};\r\n\r\nWritable.prototype._undestroy = destroyImpl.undestroy;\r\nWritable.prototype._destroy = function(err, cb) {\r\n  cb(err);\r\n};\r\n\r\nWritable.prototype[EE.captureRejectionSymbol] = function(err) {\r\n  this.destroy(err);\r\n};\r\n\r\nlet webStreamsAdapters;\r\n\r\n// Lazy to avoid circular references\r\nfunction lazyWebStreams() {\r\n  if (webStreamsAdapters === undefined)\r\n    webStreamsAdapters = require('internal/webstreams/adapters');\r\n  return webStreamsAdapters;\r\n}\r\n\r\nWritable.fromWeb = function(writableStream, options) {\r\n  return lazyWebStreams().newStreamWritableFromWritableStream(\r\n    writableStream,\r\n    options);\r\n};\r\n\r\nWritable.toWeb = function(streamWritable) {\r\n  return lazyWebStreams().newWritableStreamFromStreamWritable(streamWritable);\r\n};\r\n",
    "name": "writable",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 67,
    "sourcePositions": []
  },
  null,
  null,
  null,
  null,
  null,
  {
    "url": "node:path",
    "source": "// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n'use strict';\r\n\r\nconst {\r\n  FunctionPrototypeBind,\r\n  StringPrototypeCharCodeAt,\r\n  StringPrototypeIndexOf,\r\n  StringPrototypeLastIndexOf,\r\n  StringPrototypeReplace,\r\n  StringPrototypeSlice,\r\n  StringPrototypeToLowerCase,\r\n} = primordials;\r\n\r\nconst {\r\n  CHAR_UPPERCASE_A,\r\n  CHAR_LOWERCASE_A,\r\n  CHAR_UPPERCASE_Z,\r\n  CHAR_LOWERCASE_Z,\r\n  CHAR_DOT,\r\n  CHAR_FORWARD_SLASH,\r\n  CHAR_BACKWARD_SLASH,\r\n  CHAR_COLON,\r\n  CHAR_QUESTION_MARK,\r\n} = require('internal/constants');\r\nconst {\r\n  validateObject,\r\n  validateString,\r\n} = require('internal/validators');\r\n\r\nconst platformIsWin32 = (process.platform === 'win32');\r\n\r\nfunction isPathSeparator(code) {\r\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\r\n}\r\n\r\nfunction isPosixPathSeparator(code) {\r\n  return code === CHAR_FORWARD_SLASH;\r\n}\r\n\r\nfunction isWindowsDeviceRoot(code) {\r\n  return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\r\n         (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\r\n}\r\n\r\n// Resolves . and .. elements in a path with directory names\r\nfunction normalizeString(path, allowAboveRoot, separator, isPathSeparator) {\r\n  let res = '';\r\n  let lastSegmentLength = 0;\r\n  let lastSlash = -1;\r\n  let dots = 0;\r\n  let code = 0;\r\n  for (let i = 0; i <= path.length; ++i) {\r\n    if (i < path.length)\r\n      code = StringPrototypeCharCodeAt(path, i);\r\n    else if (isPathSeparator(code))\r\n      break;\r\n    else\r\n      code = CHAR_FORWARD_SLASH;\r\n\r\n    if (isPathSeparator(code)) {\r\n      if (lastSlash === i - 1 || dots === 1) {\r\n        // NOOP\r\n      } else if (dots === 2) {\r\n        if (res.length < 2 || lastSegmentLength !== 2 ||\r\n            StringPrototypeCharCodeAt(res, res.length - 1) !== CHAR_DOT ||\r\n            StringPrototypeCharCodeAt(res, res.length - 2) !== CHAR_DOT) {\r\n          if (res.length > 2) {\r\n            const lastSlashIndex = StringPrototypeLastIndexOf(res, separator);\r\n            if (lastSlashIndex === -1) {\r\n              res = '';\r\n              lastSegmentLength = 0;\r\n            } else {\r\n              res = StringPrototypeSlice(res, 0, lastSlashIndex);\r\n              lastSegmentLength =\r\n                res.length - 1 - StringPrototypeLastIndexOf(res, separator);\r\n            }\r\n            lastSlash = i;\r\n            dots = 0;\r\n            continue;\r\n          } else if (res.length !== 0) {\r\n            res = '';\r\n            lastSegmentLength = 0;\r\n            lastSlash = i;\r\n            dots = 0;\r\n            continue;\r\n          }\r\n        }\r\n        if (allowAboveRoot) {\r\n          res += res.length > 0 ? `${separator}..` : '..';\r\n          lastSegmentLength = 2;\r\n        }\r\n      } else {\r\n        if (res.length > 0)\r\n          res += `${separator}${StringPrototypeSlice(path, lastSlash + 1, i)}`;\r\n        else\r\n          res = StringPrototypeSlice(path, lastSlash + 1, i);\r\n        lastSegmentLength = i - lastSlash - 1;\r\n      }\r\n      lastSlash = i;\r\n      dots = 0;\r\n    } else if (code === CHAR_DOT && dots !== -1) {\r\n      ++dots;\r\n    } else {\r\n      dots = -1;\r\n    }\r\n  }\r\n  return res;\r\n}\r\n\r\n/**\r\n * @param {string} sep\r\n * @param {{\r\n *  dir?: string;\r\n *  root?: string;\r\n *  base?: string;\r\n *  name?: string;\r\n *  ext?: string;\r\n *  }} pathObject\r\n * @returns {string}\r\n */\r\nfunction _format(sep, pathObject) {\r\n  validateObject(pathObject, 'pathObject');\r\n  const dir = pathObject.dir || pathObject.root;\r\n  const base = pathObject.base ||\r\n    `${pathObject.name || ''}${pathObject.ext || ''}`;\r\n  if (!dir) {\r\n    return base;\r\n  }\r\n  return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\r\n}\r\n\r\nconst win32 = {\r\n  /**\r\n   * path.resolve([from ...], to)\r\n   * @param {...string} args\r\n   * @returns {string}\r\n   */\r\n  resolve(...args) {\r\n    let resolvedDevice = '';\r\n    let resolvedTail = '';\r\n    let resolvedAbsolute = false;\r\n\r\n    for (let i = args.length - 1; i >= -1; i--) {\r\n      let path;\r\n      if (i >= 0) {\r\n        path = args[i];\r\n        validateString(path, 'path');\r\n\r\n        // Skip empty entries\r\n        if (path.length === 0) {\r\n          continue;\r\n        }\r\n      } else if (resolvedDevice.length === 0) {\r\n        path = process.cwd();\r\n      } else {\r\n        // Windows has the concept of drive-specific current working\r\n        // directories. If we've resolved a drive letter but not yet an\r\n        // absolute path, get cwd for that drive, or the process cwd if\r\n        // the drive cwd is not available. We're sure the device is not\r\n        // a UNC path at this points, because UNC paths are always absolute.\r\n        path = process.env[`=${resolvedDevice}`] || process.cwd();\r\n\r\n        // Verify that a cwd was found and that it actually points\r\n        // to our drive. If not, default to the drive's root.\r\n        if (path === undefined ||\r\n            (StringPrototypeToLowerCase(StringPrototypeSlice(path, 0, 2)) !==\r\n            StringPrototypeToLowerCase(resolvedDevice) &&\r\n            StringPrototypeCharCodeAt(path, 2) === CHAR_BACKWARD_SLASH)) {\r\n          path = `${resolvedDevice}\\\\`;\r\n        }\r\n      }\r\n\r\n      const len = path.length;\r\n      let rootEnd = 0;\r\n      let device = '';\r\n      let isAbsolute = false;\r\n      const code = StringPrototypeCharCodeAt(path, 0);\r\n\r\n      // Try to match a root\r\n      if (len === 1) {\r\n        if (isPathSeparator(code)) {\r\n          // `path` contains just a path separator\r\n          rootEnd = 1;\r\n          isAbsolute = true;\r\n        }\r\n      } else if (isPathSeparator(code)) {\r\n        // Possible UNC root\r\n\r\n        // If we started with a separator, we know we at least have an\r\n        // absolute path of some kind (UNC or otherwise)\r\n        isAbsolute = true;\r\n\r\n        if (isPathSeparator(StringPrototypeCharCodeAt(path, 1))) {\r\n          // Matched double path separator at beginning\r\n          let j = 2;\r\n          let last = j;\r\n          // Match 1 or more non-path separators\r\n          while (j < len &&\r\n                 !isPathSeparator(StringPrototypeCharCodeAt(path, j))) {\r\n            j++;\r\n          }\r\n          if (j < len && j !== last) {\r\n            const firstPart = StringPrototypeSlice(path, last, j);\r\n            // Matched!\r\n            last = j;\r\n            // Match 1 or more path separators\r\n            while (j < len &&\r\n                   isPathSeparator(StringPrototypeCharCodeAt(path, j))) {\r\n              j++;\r\n            }\r\n            if (j < len && j !== last) {\r\n              // Matched!\r\n              last = j;\r\n              // Match 1 or more non-path separators\r\n              while (j < len &&\r\n                     !isPathSeparator(StringPrototypeCharCodeAt(path, j))) {\r\n                j++;\r\n              }\r\n              if (j === len || j !== last) {\r\n                // We matched a UNC root\r\n                device =\r\n                  `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path, last, j)}`;\r\n                rootEnd = j;\r\n              }\r\n            }\r\n          }\r\n        } else {\r\n          rootEnd = 1;\r\n        }\r\n      } else if (isWindowsDeviceRoot(code) &&\r\n                  StringPrototypeCharCodeAt(path, 1) === CHAR_COLON) {\r\n        // Possible device root\r\n        device = StringPrototypeSlice(path, 0, 2);\r\n        rootEnd = 2;\r\n        if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path, 2))) {\r\n          // Treat separator following drive name as an absolute path\r\n          // indicator\r\n          isAbsolute = true;\r\n          rootEnd = 3;\r\n        }\r\n      }\r\n\r\n      if (device.length > 0) {\r\n        if (resolvedDevice.length > 0) {\r\n          if (StringPrototypeToLowerCase(device) !==\r\n              StringPrototypeToLowerCase(resolvedDevice))\r\n            // This path points to another device so it is not applicable\r\n            continue;\r\n        } else {\r\n          resolvedDevice = device;\r\n        }\r\n      }\r\n\r\n      if (resolvedAbsolute) {\r\n        if (resolvedDevice.length > 0)\r\n          break;\r\n      } else {\r\n        resolvedTail =\r\n          `${StringPrototypeSlice(path, rootEnd)}\\\\${resolvedTail}`;\r\n        resolvedAbsolute = isAbsolute;\r\n        if (isAbsolute && resolvedDevice.length > 0) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // At this point the path should be resolved to a full absolute path,\r\n    // but handle relative paths to be safe (might happen when process.cwd()\r\n    // fails)\r\n\r\n    // Normalize the tail path\r\n    resolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\',\r\n                                   isPathSeparator);\r\n\r\n    return resolvedAbsolute ?\r\n      `${resolvedDevice}\\\\${resolvedTail}` :\r\n      `${resolvedDevice}${resolvedTail}` || '.';\r\n  },\r\n\r\n  /**\r\n   * @param {string} path\r\n   * @returns {string}\r\n   */\r\n  normalize(path) {\r\n    validateString(path, 'path');\r\n    const len = path.length;\r\n    if (len === 0)\r\n      return '.';\r\n    let rootEnd = 0;\r\n    let device;\r\n    let isAbsolute = false;\r\n    const code = StringPrototypeCharCodeAt(path, 0);\r\n\r\n    // Try to match a root\r\n    if (len === 1) {\r\n      // `path` contains just a single char, exit early to avoid\r\n      // unnecessary work\r\n      return isPosixPathSeparator(code) ? '\\\\' : path;\r\n    }\r\n    if (isPathSeparator(code)) {\r\n      // Possible UNC root\r\n\r\n      // If we started with a separator, we know we at least have an absolute\r\n      // path of some kind (UNC or otherwise)\r\n      isAbsolute = true;\r\n\r\n      if (isPathSeparator(StringPrototypeCharCodeAt(path, 1))) {\r\n        // Matched double path separator at beginning\r\n        let j = 2;\r\n        let last = j;\r\n        // Match 1 or more non-path separators\r\n        while (j < len &&\r\n               !isPathSeparator(StringPrototypeCharCodeAt(path, j))) {\r\n          j++;\r\n        }\r\n        if (j < len && j !== last) {\r\n          const firstPart = StringPrototypeSlice(path, last, j);\r\n          // Matched!\r\n          last = j;\r\n          // Match 1 or more path separators\r\n          while (j < len &&\r\n                 isPathSeparator(StringPrototypeCharCodeAt(path, j))) {\r\n            j++;\r\n          }\r\n          if (j < len && j !== last) {\r\n            // Matched!\r\n            last = j;\r\n            // Match 1 or more non-path separators\r\n            while (j < len &&\r\n                   !isPathSeparator(StringPrototypeCharCodeAt(path, j))) {\r\n              j++;\r\n            }\r\n            if (j === len) {\r\n              // We matched a UNC root only\r\n              // Return the normalized version of the UNC root since there\r\n              // is nothing left to process\r\n              return `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path, last)}\\\\`;\r\n            }\r\n            if (j !== last) {\r\n              // We matched a UNC root with leftovers\r\n              device =\r\n                `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path, last, j)}`;\r\n              rootEnd = j;\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        rootEnd = 1;\r\n      }\r\n    } else if (isWindowsDeviceRoot(code) &&\r\n               StringPrototypeCharCodeAt(path, 1) === CHAR_COLON) {\r\n      // Possible device root\r\n      device = StringPrototypeSlice(path, 0, 2);\r\n      rootEnd = 2;\r\n      if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path, 2))) {\r\n        // Treat separator following drive name as an absolute path\r\n        // indicator\r\n        isAbsolute = true;\r\n        rootEnd = 3;\r\n      }\r\n    }\r\n\r\n    let tail = rootEnd < len ?\r\n      normalizeString(StringPrototypeSlice(path, rootEnd),\r\n                      !isAbsolute, '\\\\', isPathSeparator) :\r\n      '';\r\n    if (tail.length === 0 && !isAbsolute)\r\n      tail = '.';\r\n    if (tail.length > 0 &&\r\n        isPathSeparator(StringPrototypeCharCodeAt(path, len - 1)))\r\n      tail += '\\\\';\r\n    if (device === undefined) {\r\n      return isAbsolute ? `\\\\${tail}` : tail;\r\n    }\r\n    return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\r\n  },\r\n\r\n  /**\r\n   * @param {string} path\r\n   * @returns {boolean}\r\n   */\r\n  isAbsolute(path) {\r\n    validateString(path, 'path');\r\n    const len = path.length;\r\n    if (len === 0)\r\n      return false;\r\n\r\n    const code = StringPrototypeCharCodeAt(path, 0);\r\n    return isPathSeparator(code) ||\r\n      // Possible device root\r\n      (len > 2 &&\r\n      isWindowsDeviceRoot(code) &&\r\n      StringPrototypeCharCodeAt(path, 1) === CHAR_COLON &&\r\n      isPathSeparator(StringPrototypeCharCodeAt(path, 2)));\r\n  },\r\n\r\n  /**\r\n   * @param {...string} args\r\n   * @returns {string}\r\n   */\r\n  join(...args) {\r\n    if (args.length === 0)\r\n      return '.';\r\n\r\n    let joined;\r\n    let firstPart;\r\n    for (let i = 0; i < args.length; ++i) {\r\n      const arg = args[i];\r\n      validateString(arg, 'path');\r\n      if (arg.length > 0) {\r\n        if (joined === undefined)\r\n          joined = firstPart = arg;\r\n        else\r\n          joined += `\\\\${arg}`;\r\n      }\r\n    }\r\n\r\n    if (joined === undefined)\r\n      return '.';\r\n\r\n    // Make sure that the joined path doesn't start with two slashes, because\r\n    // normalize() will mistake it for a UNC path then.\r\n    //\r\n    // This step is skipped when it is very clear that the user actually\r\n    // intended to point at a UNC path. This is assumed when the first\r\n    // non-empty string arguments starts with exactly two slashes followed by\r\n    // at least one more non-slash character.\r\n    //\r\n    // Note that for normalize() to treat a path as a UNC path it needs to\r\n    // have at least 2 components, so we don't filter for that here.\r\n    // This means that the user can use join to construct UNC paths from\r\n    // a server name and a share name; for example:\r\n    //   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\r\n    let needsReplace = true;\r\n    let slashCount = 0;\r\n    if (isPathSeparator(StringPrototypeCharCodeAt(firstPart, 0))) {\r\n      ++slashCount;\r\n      const firstLen = firstPart.length;\r\n      if (firstLen > 1 &&\r\n          isPathSeparator(StringPrototypeCharCodeAt(firstPart, 1))) {\r\n        ++slashCount;\r\n        if (firstLen > 2) {\r\n          if (isPathSeparator(StringPrototypeCharCodeAt(firstPart, 2)))\r\n            ++slashCount;\r\n          else {\r\n            // We matched a UNC path in the first part\r\n            needsReplace = false;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (needsReplace) {\r\n      // Find any more consecutive slashes we need to replace\r\n      while (slashCount < joined.length &&\r\n             isPathSeparator(StringPrototypeCharCodeAt(joined, slashCount))) {\r\n        slashCount++;\r\n      }\r\n\r\n      // Replace the slashes if needed\r\n      if (slashCount >= 2)\r\n        joined = `\\\\${StringPrototypeSlice(joined, slashCount)}`;\r\n    }\r\n\r\n    return win32.normalize(joined);\r\n  },\r\n\r\n  /**\r\n   * It will solve the relative path from `from` to `to`, for instance\r\n   * from = 'C:\\\\orandea\\\\test\\\\aaa'\r\n   * to = 'C:\\\\orandea\\\\impl\\\\bbb'\r\n   * The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\r\n   * @param {string} from\r\n   * @param {string} to\r\n   * @returns {string}\r\n   */\r\n  relative(from, to) {\r\n    validateString(from, 'from');\r\n    validateString(to, 'to');\r\n\r\n    if (from === to)\r\n      return '';\r\n\r\n    const fromOrig = win32.resolve(from);\r\n    const toOrig = win32.resolve(to);\r\n\r\n    if (fromOrig === toOrig)\r\n      return '';\r\n\r\n    from = StringPrototypeToLowerCase(fromOrig);\r\n    to = StringPrototypeToLowerCase(toOrig);\r\n\r\n    if (from === to)\r\n      return '';\r\n\r\n    // Trim any leading backslashes\r\n    let fromStart = 0;\r\n    while (fromStart < from.length &&\r\n           StringPrototypeCharCodeAt(from, fromStart) === CHAR_BACKWARD_SLASH) {\r\n      fromStart++;\r\n    }\r\n    // Trim trailing backslashes (applicable to UNC paths only)\r\n    let fromEnd = from.length;\r\n    while (\r\n      fromEnd - 1 > fromStart &&\r\n      StringPrototypeCharCodeAt(from, fromEnd - 1) === CHAR_BACKWARD_SLASH\r\n    ) {\r\n      fromEnd--;\r\n    }\r\n    const fromLen = fromEnd - fromStart;\r\n\r\n    // Trim any leading backslashes\r\n    let toStart = 0;\r\n    while (toStart < to.length &&\r\n           StringPrototypeCharCodeAt(to, toStart) === CHAR_BACKWARD_SLASH) {\r\n      toStart++;\r\n    }\r\n    // Trim trailing backslashes (applicable to UNC paths only)\r\n    let toEnd = to.length;\r\n    while (toEnd - 1 > toStart &&\r\n           StringPrototypeCharCodeAt(to, toEnd - 1) === CHAR_BACKWARD_SLASH) {\r\n      toEnd--;\r\n    }\r\n    const toLen = toEnd - toStart;\r\n\r\n    // Compare paths to find the longest common path from root\r\n    const length = fromLen < toLen ? fromLen : toLen;\r\n    let lastCommonSep = -1;\r\n    let i = 0;\r\n    for (; i < length; i++) {\r\n      const fromCode = StringPrototypeCharCodeAt(from, fromStart + i);\r\n      if (fromCode !== StringPrototypeCharCodeAt(to, toStart + i))\r\n        break;\r\n      else if (fromCode === CHAR_BACKWARD_SLASH)\r\n        lastCommonSep = i;\r\n    }\r\n\r\n    // We found a mismatch before the first common path separator was seen, so\r\n    // return the original `to`.\r\n    if (i !== length) {\r\n      if (lastCommonSep === -1)\r\n        return toOrig;\r\n    } else {\r\n      if (toLen > length) {\r\n        if (StringPrototypeCharCodeAt(to, toStart + i) ===\r\n            CHAR_BACKWARD_SLASH) {\r\n          // We get here if `from` is the exact base path for `to`.\r\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\r\n          return StringPrototypeSlice(toOrig, toStart + i + 1);\r\n        }\r\n        if (i === 2) {\r\n          // We get here if `from` is the device root.\r\n          // For example: from='C:\\\\'; to='C:\\\\foo'\r\n          return StringPrototypeSlice(toOrig, toStart + i);\r\n        }\r\n      }\r\n      if (fromLen > length) {\r\n        if (StringPrototypeCharCodeAt(from, fromStart + i) ===\r\n            CHAR_BACKWARD_SLASH) {\r\n          // We get here if `to` is the exact base path for `from`.\r\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\r\n          lastCommonSep = i;\r\n        } else if (i === 2) {\r\n          // We get here if `to` is the device root.\r\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\r\n          lastCommonSep = 3;\r\n        }\r\n      }\r\n      if (lastCommonSep === -1)\r\n        lastCommonSep = 0;\r\n    }\r\n\r\n    let out = '';\r\n    // Generate the relative path based on the path difference between `to` and\r\n    // `from`\r\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\r\n      if (i === fromEnd ||\r\n          StringPrototypeCharCodeAt(from, i) === CHAR_BACKWARD_SLASH) {\r\n        out += out.length === 0 ? '..' : '\\\\..';\r\n      }\r\n    }\r\n\r\n    toStart += lastCommonSep;\r\n\r\n    // Lastly, append the rest of the destination (`to`) path that comes after\r\n    // the common path parts\r\n    if (out.length > 0)\r\n      return `${out}${StringPrototypeSlice(toOrig, toStart, toEnd)}`;\r\n\r\n    if (StringPrototypeCharCodeAt(toOrig, toStart) === CHAR_BACKWARD_SLASH)\r\n      ++toStart;\r\n    return StringPrototypeSlice(toOrig, toStart, toEnd);\r\n  },\r\n\r\n  /**\r\n   * @param {string} path\r\n   * @returns {string}\r\n   */\r\n  toNamespacedPath(path) {\r\n    // Note: this will *probably* throw somewhere.\r\n    if (typeof path !== 'string' || path.length === 0)\r\n      return path;\r\n\r\n    const resolvedPath = win32.resolve(path);\r\n\r\n    if (resolvedPath.length <= 2)\r\n      return path;\r\n\r\n    if (StringPrototypeCharCodeAt(resolvedPath, 0) === CHAR_BACKWARD_SLASH) {\r\n      // Possible UNC root\r\n      if (StringPrototypeCharCodeAt(resolvedPath, 1) === CHAR_BACKWARD_SLASH) {\r\n        const code = StringPrototypeCharCodeAt(resolvedPath, 2);\r\n        if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\r\n          // Matched non-long UNC root, convert the path to a long UNC path\r\n          return `\\\\\\\\?\\\\UNC\\\\${StringPrototypeSlice(resolvedPath, 2)}`;\r\n        }\r\n      }\r\n    } else if (\r\n      isWindowsDeviceRoot(StringPrototypeCharCodeAt(resolvedPath, 0)) &&\r\n      StringPrototypeCharCodeAt(resolvedPath, 1) === CHAR_COLON &&\r\n      StringPrototypeCharCodeAt(resolvedPath, 2) === CHAR_BACKWARD_SLASH\r\n    ) {\r\n      // Matched device root, convert the path to a long UNC path\r\n      return `\\\\\\\\?\\\\${resolvedPath}`;\r\n    }\r\n\r\n    return path;\r\n  },\r\n\r\n  /**\r\n   * @param {string} path\r\n   * @returns {string}\r\n   */\r\n  dirname(path) {\r\n    validateString(path, 'path');\r\n    const len = path.length;\r\n    if (len === 0)\r\n      return '.';\r\n    let rootEnd = -1;\r\n    let offset = 0;\r\n    const code = StringPrototypeCharCodeAt(path, 0);\r\n\r\n    if (len === 1) {\r\n      // `path` contains just a path separator, exit early to avoid\r\n      // unnecessary work or a dot.\r\n      return isPathSeparator(code) ? path : '.';\r\n    }\r\n\r\n    // Try to match a root\r\n    if (isPathSeparator(code)) {\r\n      // Possible UNC root\r\n\r\n      rootEnd = offset = 1;\r\n\r\n      if (isPathSeparator(StringPrototypeCharCodeAt(path, 1))) {\r\n        // Matched double path separator at beginning\r\n        let j = 2;\r\n        let last = j;\r\n        // Match 1 or more non-path separators\r\n        while (j < len &&\r\n               !isPathSeparator(StringPrototypeCharCodeAt(path, j))) {\r\n          j++;\r\n        }\r\n        if (j < len && j !== last) {\r\n          // Matched!\r\n          last = j;\r\n          // Match 1 or more path separators\r\n          while (j < len &&\r\n                 isPathSeparator(StringPrototypeCharCodeAt(path, j))) {\r\n            j++;\r\n          }\r\n          if (j < len && j !== last) {\r\n            // Matched!\r\n            last = j;\r\n            // Match 1 or more non-path separators\r\n            while (j < len &&\r\n                   !isPathSeparator(StringPrototypeCharCodeAt(path, j))) {\r\n              j++;\r\n            }\r\n            if (j === len) {\r\n              // We matched a UNC root only\r\n              return path;\r\n            }\r\n            if (j !== last) {\r\n              // We matched a UNC root with leftovers\r\n\r\n              // Offset by 1 to include the separator after the UNC root to\r\n              // treat it as a \"normal root\" on top of a (UNC) root\r\n              rootEnd = offset = j + 1;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    // Possible device root\r\n    } else if (isWindowsDeviceRoot(code) &&\r\n               StringPrototypeCharCodeAt(path, 1) === CHAR_COLON) {\r\n      rootEnd =\r\n        len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path, 2)) ? 3 : 2;\r\n      offset = rootEnd;\r\n    }\r\n\r\n    let end = -1;\r\n    let matchedSlash = true;\r\n    for (let i = len - 1; i >= offset; --i) {\r\n      if (isPathSeparator(StringPrototypeCharCodeAt(path, i))) {\r\n        if (!matchedSlash) {\r\n          end = i;\r\n          break;\r\n        }\r\n      } else {\r\n        // We saw the first non-path separator\r\n        matchedSlash = false;\r\n      }\r\n    }\r\n\r\n    if (end === -1) {\r\n      if (rootEnd === -1)\r\n        return '.';\r\n\r\n      end = rootEnd;\r\n    }\r\n    return StringPrototypeSlice(path, 0, end);\r\n  },\r\n\r\n  /**\r\n   * @param {string} path\r\n   * @param {string} [suffix]\r\n   * @returns {string}\r\n   */\r\n  basename(path, suffix) {\r\n    if (suffix !== undefined)\r\n      validateString(suffix, 'ext');\r\n    validateString(path, 'path');\r\n    let start = 0;\r\n    let end = -1;\r\n    let matchedSlash = true;\r\n\r\n    // Check for a drive letter prefix so as not to mistake the following\r\n    // path separator as an extra separator at the end of the path that can be\r\n    // disregarded\r\n    if (path.length >= 2 &&\r\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path, 0)) &&\r\n        StringPrototypeCharCodeAt(path, 1) === CHAR_COLON) {\r\n      start = 2;\r\n    }\r\n\r\n    if (suffix !== undefined && suffix.length > 0 && suffix.length <= path.length) {\r\n      if (suffix === path)\r\n        return '';\r\n      let extIdx = suffix.length - 1;\r\n      let firstNonSlashEnd = -1;\r\n      for (let i = path.length - 1; i >= start; --i) {\r\n        const code = StringPrototypeCharCodeAt(path, i);\r\n        if (isPathSeparator(code)) {\r\n          // If we reached a path separator that was not part of a set of path\r\n          // separators at the end of the string, stop now\r\n          if (!matchedSlash) {\r\n            start = i + 1;\r\n            break;\r\n          }\r\n        } else {\r\n          if (firstNonSlashEnd === -1) {\r\n            // We saw the first non-path separator, remember this index in case\r\n            // we need it if the extension ends up not matching\r\n            matchedSlash = false;\r\n            firstNonSlashEnd = i + 1;\r\n          }\r\n          if (extIdx >= 0) {\r\n            // Try to match the explicit extension\r\n            if (code === StringPrototypeCharCodeAt(suffix, extIdx)) {\r\n              if (--extIdx === -1) {\r\n                // We matched the extension, so mark this as the end of our path\r\n                // component\r\n                end = i;\r\n              }\r\n            } else {\r\n              // Extension does not match, so our result is the entire path\r\n              // component\r\n              extIdx = -1;\r\n              end = firstNonSlashEnd;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (start === end)\r\n        end = firstNonSlashEnd;\r\n      else if (end === -1)\r\n        end = path.length;\r\n      return StringPrototypeSlice(path, start, end);\r\n    }\r\n    for (let i = path.length - 1; i >= start; --i) {\r\n      if (isPathSeparator(StringPrototypeCharCodeAt(path, i))) {\r\n        // If we reached a path separator that was not part of a set of path\r\n        // separators at the end of the string, stop now\r\n        if (!matchedSlash) {\r\n          start = i + 1;\r\n          break;\r\n        }\r\n      } else if (end === -1) {\r\n        // We saw the first non-path separator, mark this as the end of our\r\n        // path component\r\n        matchedSlash = false;\r\n        end = i + 1;\r\n      }\r\n    }\r\n\r\n    if (end === -1)\r\n      return '';\r\n    return StringPrototypeSlice(path, start, end);\r\n  },\r\n\r\n  /**\r\n   * @param {string} path\r\n   * @returns {string}\r\n   */\r\n  extname(path) {\r\n    validateString(path, 'path');\r\n    let start = 0;\r\n    let startDot = -1;\r\n    let startPart = 0;\r\n    let end = -1;\r\n    let matchedSlash = true;\r\n    // Track the state of characters (if any) we see before our first dot and\r\n    // after any path separator we find\r\n    let preDotState = 0;\r\n\r\n    // Check for a drive letter prefix so as not to mistake the following\r\n    // path separator as an extra separator at the end of the path that can be\r\n    // disregarded\r\n\r\n    if (path.length >= 2 &&\r\n        StringPrototypeCharCodeAt(path, 1) === CHAR_COLON &&\r\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path, 0))) {\r\n      start = startPart = 2;\r\n    }\r\n\r\n    for (let i = path.length - 1; i >= start; --i) {\r\n      const code = StringPrototypeCharCodeAt(path, i);\r\n      if (isPathSeparator(code)) {\r\n        // If we reached a path separator that was not part of a set of path\r\n        // separators at the end of the string, stop now\r\n        if (!matchedSlash) {\r\n          startPart = i + 1;\r\n          break;\r\n        }\r\n        continue;\r\n      }\r\n      if (end === -1) {\r\n        // We saw the first non-path separator, mark this as the end of our\r\n        // extension\r\n        matchedSlash = false;\r\n        end = i + 1;\r\n      }\r\n      if (code === CHAR_DOT) {\r\n        // If this is our first dot, mark it as the start of our extension\r\n        if (startDot === -1)\r\n          startDot = i;\r\n        else if (preDotState !== 1)\r\n          preDotState = 1;\r\n      } else if (startDot !== -1) {\r\n        // We saw a non-dot and non-path separator before our dot, so we should\r\n        // have a good chance at having a non-empty extension\r\n        preDotState = -1;\r\n      }\r\n    }\r\n\r\n    if (startDot === -1 ||\r\n        end === -1 ||\r\n        // We saw a non-dot character immediately before the dot\r\n        preDotState === 0 ||\r\n        // The (right-most) trimmed path component is exactly '..'\r\n        (preDotState === 1 &&\r\n         startDot === end - 1 &&\r\n         startDot === startPart + 1)) {\r\n      return '';\r\n    }\r\n    return StringPrototypeSlice(path, startDot, end);\r\n  },\r\n\r\n  format: FunctionPrototypeBind(_format, null, '\\\\'),\r\n\r\n  /**\r\n   * @param {string} path\r\n   * @returns {{\r\n   *  dir: string;\r\n   *  root: string;\r\n   *  base: string;\r\n   *  name: string;\r\n   *  ext: string;\r\n   *  }}\r\n   */\r\n  parse(path) {\r\n    validateString(path, 'path');\r\n\r\n    const ret = { root: '', dir: '', base: '', ext: '', name: '' };\r\n    if (path.length === 0)\r\n      return ret;\r\n\r\n    const len = path.length;\r\n    let rootEnd = 0;\r\n    let code = StringPrototypeCharCodeAt(path, 0);\r\n\r\n    if (len === 1) {\r\n      if (isPathSeparator(code)) {\r\n        // `path` contains just a path separator, exit early to avoid\r\n        // unnecessary work\r\n        ret.root = ret.dir = path;\r\n        return ret;\r\n      }\r\n      ret.base = ret.name = path;\r\n      return ret;\r\n    }\r\n    // Try to match a root\r\n    if (isPathSeparator(code)) {\r\n      // Possible UNC root\r\n\r\n      rootEnd = 1;\r\n      if (isPathSeparator(StringPrototypeCharCodeAt(path, 1))) {\r\n        // Matched double path separator at beginning\r\n        let j = 2;\r\n        let last = j;\r\n        // Match 1 or more non-path separators\r\n        while (j < len &&\r\n               !isPathSeparator(StringPrototypeCharCodeAt(path, j))) {\r\n          j++;\r\n        }\r\n        if (j < len && j !== last) {\r\n          // Matched!\r\n          last = j;\r\n          // Match 1 or more path separators\r\n          while (j < len &&\r\n                 isPathSeparator(StringPrototypeCharCodeAt(path, j))) {\r\n            j++;\r\n          }\r\n          if (j < len && j !== last) {\r\n            // Matched!\r\n            last = j;\r\n            // Match 1 or more non-path separators\r\n            while (j < len &&\r\n                   !isPathSeparator(StringPrototypeCharCodeAt(path, j))) {\r\n              j++;\r\n            }\r\n            if (j === len) {\r\n              // We matched a UNC root only\r\n              rootEnd = j;\r\n            } else if (j !== last) {\r\n              // We matched a UNC root with leftovers\r\n              rootEnd = j + 1;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else if (isWindowsDeviceRoot(code) &&\r\n               StringPrototypeCharCodeAt(path, 1) === CHAR_COLON) {\r\n      // Possible device root\r\n      if (len <= 2) {\r\n        // `path` contains just a drive root, exit early to avoid\r\n        // unnecessary work\r\n        ret.root = ret.dir = path;\r\n        return ret;\r\n      }\r\n      rootEnd = 2;\r\n      if (isPathSeparator(StringPrototypeCharCodeAt(path, 2))) {\r\n        if (len === 3) {\r\n          // `path` contains just a drive root, exit early to avoid\r\n          // unnecessary work\r\n          ret.root = ret.dir = path;\r\n          return ret;\r\n        }\r\n        rootEnd = 3;\r\n      }\r\n    }\r\n    if (rootEnd > 0)\r\n      ret.root = StringPrototypeSlice(path, 0, rootEnd);\r\n\r\n    let startDot = -1;\r\n    let startPart = rootEnd;\r\n    let end = -1;\r\n    let matchedSlash = true;\r\n    let i = path.length - 1;\r\n\r\n    // Track the state of characters (if any) we see before our first dot and\r\n    // after any path separator we find\r\n    let preDotState = 0;\r\n\r\n    // Get non-dir info\r\n    for (; i >= rootEnd; --i) {\r\n      code = StringPrototypeCharCodeAt(path, i);\r\n      if (isPathSeparator(code)) {\r\n        // If we reached a path separator that was not part of a set of path\r\n        // separators at the end of the string, stop now\r\n        if (!matchedSlash) {\r\n          startPart = i + 1;\r\n          break;\r\n        }\r\n        continue;\r\n      }\r\n      if (end === -1) {\r\n        // We saw the first non-path separator, mark this as the end of our\r\n        // extension\r\n        matchedSlash = false;\r\n        end = i + 1;\r\n      }\r\n      if (code === CHAR_DOT) {\r\n        // If this is our first dot, mark it as the start of our extension\r\n        if (startDot === -1)\r\n          startDot = i;\r\n        else if (preDotState !== 1)\r\n          preDotState = 1;\r\n      } else if (startDot !== -1) {\r\n        // We saw a non-dot and non-path separator before our dot, so we should\r\n        // have a good chance at having a non-empty extension\r\n        preDotState = -1;\r\n      }\r\n    }\r\n\r\n    if (end !== -1) {\r\n      if (startDot === -1 ||\r\n          // We saw a non-dot character immediately before the dot\r\n          preDotState === 0 ||\r\n          // The (right-most) trimmed path component is exactly '..'\r\n          (preDotState === 1 &&\r\n           startDot === end - 1 &&\r\n           startDot === startPart + 1)) {\r\n        ret.base = ret.name = StringPrototypeSlice(path, startPart, end);\r\n      } else {\r\n        ret.name = StringPrototypeSlice(path, startPart, startDot);\r\n        ret.base = StringPrototypeSlice(path, startPart, end);\r\n        ret.ext = StringPrototypeSlice(path, startDot, end);\r\n      }\r\n    }\r\n\r\n    // If the directory is the root, use the entire root as the `dir` including\r\n    // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\r\n    // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\r\n    if (startPart > 0 && startPart !== rootEnd)\r\n      ret.dir = StringPrototypeSlice(path, 0, startPart - 1);\r\n    else\r\n      ret.dir = ret.root;\r\n\r\n    return ret;\r\n  },\r\n\r\n  sep: '\\\\',\r\n  delimiter: ';',\r\n  win32: null,\r\n  posix: null\r\n};\r\n\r\nconst posixCwd = (() => {\r\n  if (platformIsWin32) {\r\n    // Converts Windows' backslash path separators to POSIX forward slashes\r\n    // and truncates any drive indicator\r\n    const regexp = /\\\\/g;\r\n    return () => {\r\n      const cwd = StringPrototypeReplace(process.cwd(), regexp, '/');\r\n      return StringPrototypeSlice(cwd, StringPrototypeIndexOf(cwd, '/'));\r\n    };\r\n  }\r\n\r\n  // We're already on POSIX, no need for any transformations\r\n  return () => process.cwd();\r\n})();\r\n\r\nconst posix = {\r\n  /**\r\n   * path.resolve([from ...], to)\r\n   * @param {...string} args\r\n   * @returns {string}\r\n   */\r\n  resolve(...args) {\r\n    let resolvedPath = '';\r\n    let resolvedAbsolute = false;\r\n\r\n    for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\r\n      const path = i >= 0 ? args[i] : posixCwd();\r\n\r\n      validateString(path, 'path');\r\n\r\n      // Skip empty entries\r\n      if (path.length === 0) {\r\n        continue;\r\n      }\r\n\r\n      resolvedPath = `${path}/${resolvedPath}`;\r\n      resolvedAbsolute =\r\n        StringPrototypeCharCodeAt(path, 0) === CHAR_FORWARD_SLASH;\r\n    }\r\n\r\n    // At this point the path should be resolved to a full absolute path, but\r\n    // handle relative paths to be safe (might happen when process.cwd() fails)\r\n\r\n    // Normalize the path\r\n    resolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/',\r\n                                   isPosixPathSeparator);\r\n\r\n    if (resolvedAbsolute) {\r\n      return `/${resolvedPath}`;\r\n    }\r\n    return resolvedPath.length > 0 ? resolvedPath : '.';\r\n  },\r\n\r\n  /**\r\n   * @param {string} path\r\n   * @returns {string}\r\n   */\r\n  normalize(path) {\r\n    validateString(path, 'path');\r\n\r\n    if (path.length === 0)\r\n      return '.';\r\n\r\n    const isAbsolute =\r\n      StringPrototypeCharCodeAt(path, 0) === CHAR_FORWARD_SLASH;\r\n    const trailingSeparator =\r\n      StringPrototypeCharCodeAt(path, path.length - 1) === CHAR_FORWARD_SLASH;\r\n\r\n    // Normalize the path\r\n    path = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\r\n\r\n    if (path.length === 0) {\r\n      if (isAbsolute)\r\n        return '/';\r\n      return trailingSeparator ? './' : '.';\r\n    }\r\n    if (trailingSeparator)\r\n      path += '/';\r\n\r\n    return isAbsolute ? `/${path}` : path;\r\n  },\r\n\r\n  /**\r\n   * @param {string} path\r\n   * @returns {boolean}\r\n   */\r\n  isAbsolute(path) {\r\n    validateString(path, 'path');\r\n    return path.length > 0 &&\r\n           StringPrototypeCharCodeAt(path, 0) === CHAR_FORWARD_SLASH;\r\n  },\r\n\r\n  /**\r\n   * @param {...string} args\r\n   * @returns {string}\r\n   */\r\n  join(...args) {\r\n    if (args.length === 0)\r\n      return '.';\r\n    let joined;\r\n    for (let i = 0; i < args.length; ++i) {\r\n      const arg = args[i];\r\n      validateString(arg, 'path');\r\n      if (arg.length > 0) {\r\n        if (joined === undefined)\r\n          joined = arg;\r\n        else\r\n          joined += `/${arg}`;\r\n      }\r\n    }\r\n    if (joined === undefined)\r\n      return '.';\r\n    return posix.normalize(joined);\r\n  },\r\n\r\n  /**\r\n   * @param {string} from\r\n   * @param {string} to\r\n   * @returns {string}\r\n   */\r\n  relative(from, to) {\r\n    validateString(from, 'from');\r\n    validateString(to, 'to');\r\n\r\n    if (from === to)\r\n      return '';\r\n\r\n    // Trim leading forward slashes.\r\n    from = posix.resolve(from);\r\n    to = posix.resolve(to);\r\n\r\n    if (from === to)\r\n      return '';\r\n\r\n    const fromStart = 1;\r\n    const fromEnd = from.length;\r\n    const fromLen = fromEnd - fromStart;\r\n    const toStart = 1;\r\n    const toLen = to.length - toStart;\r\n\r\n    // Compare paths to find the longest common path from root\r\n    const length = (fromLen < toLen ? fromLen : toLen);\r\n    let lastCommonSep = -1;\r\n    let i = 0;\r\n    for (; i < length; i++) {\r\n      const fromCode = StringPrototypeCharCodeAt(from, fromStart + i);\r\n      if (fromCode !== StringPrototypeCharCodeAt(to, toStart + i))\r\n        break;\r\n      else if (fromCode === CHAR_FORWARD_SLASH)\r\n        lastCommonSep = i;\r\n    }\r\n    if (i === length) {\r\n      if (toLen > length) {\r\n        if (StringPrototypeCharCodeAt(to, toStart + i) === CHAR_FORWARD_SLASH) {\r\n          // We get here if `from` is the exact base path for `to`.\r\n          // For example: from='/foo/bar'; to='/foo/bar/baz'\r\n          return StringPrototypeSlice(to, toStart + i + 1);\r\n        }\r\n        if (i === 0) {\r\n          // We get here if `from` is the root\r\n          // For example: from='/'; to='/foo'\r\n          return StringPrototypeSlice(to, toStart + i);\r\n        }\r\n      } else if (fromLen > length) {\r\n        if (StringPrototypeCharCodeAt(from, fromStart + i) ===\r\n            CHAR_FORWARD_SLASH) {\r\n          // We get here if `to` is the exact base path for `from`.\r\n          // For example: from='/foo/bar/baz'; to='/foo/bar'\r\n          lastCommonSep = i;\r\n        } else if (i === 0) {\r\n          // We get here if `to` is the root.\r\n          // For example: from='/foo/bar'; to='/'\r\n          lastCommonSep = 0;\r\n        }\r\n      }\r\n    }\r\n\r\n    let out = '';\r\n    // Generate the relative path based on the path difference between `to`\r\n    // and `from`.\r\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\r\n      if (i === fromEnd ||\r\n          StringPrototypeCharCodeAt(from, i) === CHAR_FORWARD_SLASH) {\r\n        out += out.length === 0 ? '..' : '/..';\r\n      }\r\n    }\r\n\r\n    // Lastly, append the rest of the destination (`to`) path that comes after\r\n    // the common path parts.\r\n    return `${out}${StringPrototypeSlice(to, toStart + lastCommonSep)}`;\r\n  },\r\n\r\n  /**\r\n   * @param {string} path\r\n   * @returns {string}\r\n   */\r\n  toNamespacedPath(path) {\r\n    // Non-op on posix systems\r\n    return path;\r\n  },\r\n\r\n  /**\r\n   * @param {string} path\r\n   * @returns {string}\r\n   */\r\n  dirname(path) {\r\n    validateString(path, 'path');\r\n    if (path.length === 0)\r\n      return '.';\r\n    const hasRoot = StringPrototypeCharCodeAt(path, 0) === CHAR_FORWARD_SLASH;\r\n    let end = -1;\r\n    let matchedSlash = true;\r\n    for (let i = path.length - 1; i >= 1; --i) {\r\n      if (StringPrototypeCharCodeAt(path, i) === CHAR_FORWARD_SLASH) {\r\n        if (!matchedSlash) {\r\n          end = i;\r\n          break;\r\n        }\r\n      } else {\r\n        // We saw the first non-path separator\r\n        matchedSlash = false;\r\n      }\r\n    }\r\n\r\n    if (end === -1)\r\n      return hasRoot ? '/' : '.';\r\n    if (hasRoot && end === 1)\r\n      return '//';\r\n    return StringPrototypeSlice(path, 0, end);\r\n  },\r\n\r\n  /**\r\n   * @param {string} path\r\n   * @param {string} [suffix]\r\n   * @returns {string}\r\n   */\r\n  basename(path, suffix) {\r\n    if (suffix !== undefined)\r\n      validateString(suffix, 'ext');\r\n    validateString(path, 'path');\r\n\r\n    let start = 0;\r\n    let end = -1;\r\n    let matchedSlash = true;\r\n\r\n    if (suffix !== undefined && suffix.length > 0 && suffix.length <= path.length) {\r\n      if (suffix === path)\r\n        return '';\r\n      let extIdx = suffix.length - 1;\r\n      let firstNonSlashEnd = -1;\r\n      for (let i = path.length - 1; i >= 0; --i) {\r\n        const code = StringPrototypeCharCodeAt(path, i);\r\n        if (code === CHAR_FORWARD_SLASH) {\r\n          // If we reached a path separator that was not part of a set of path\r\n          // separators at the end of the string, stop now\r\n          if (!matchedSlash) {\r\n            start = i + 1;\r\n            break;\r\n          }\r\n        } else {\r\n          if (firstNonSlashEnd === -1) {\r\n            // We saw the first non-path separator, remember this index in case\r\n            // we need it if the extension ends up not matching\r\n            matchedSlash = false;\r\n            firstNonSlashEnd = i + 1;\r\n          }\r\n          if (extIdx >= 0) {\r\n            // Try to match the explicit extension\r\n            if (code === StringPrototypeCharCodeAt(suffix, extIdx)) {\r\n              if (--extIdx === -1) {\r\n                // We matched the extension, so mark this as the end of our path\r\n                // component\r\n                end = i;\r\n              }\r\n            } else {\r\n              // Extension does not match, so our result is the entire path\r\n              // component\r\n              extIdx = -1;\r\n              end = firstNonSlashEnd;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (start === end)\r\n        end = firstNonSlashEnd;\r\n      else if (end === -1)\r\n        end = path.length;\r\n      return StringPrototypeSlice(path, start, end);\r\n    }\r\n    for (let i = path.length - 1; i >= 0; --i) {\r\n      if (StringPrototypeCharCodeAt(path, i) === CHAR_FORWARD_SLASH) {\r\n        // If we reached a path separator that was not part of a set of path\r\n        // separators at the end of the string, stop now\r\n        if (!matchedSlash) {\r\n          start = i + 1;\r\n          break;\r\n        }\r\n      } else if (end === -1) {\r\n        // We saw the first non-path separator, mark this as the end of our\r\n        // path component\r\n        matchedSlash = false;\r\n        end = i + 1;\r\n      }\r\n    }\r\n\r\n    if (end === -1)\r\n      return '';\r\n    return StringPrototypeSlice(path, start, end);\r\n  },\r\n\r\n  /**\r\n   * @param {string} path\r\n   * @returns {string}\r\n   */\r\n  extname(path) {\r\n    validateString(path, 'path');\r\n    let startDot = -1;\r\n    let startPart = 0;\r\n    let end = -1;\r\n    let matchedSlash = true;\r\n    // Track the state of characters (if any) we see before our first dot and\r\n    // after any path separator we find\r\n    let preDotState = 0;\r\n    for (let i = path.length - 1; i >= 0; --i) {\r\n      const code = StringPrototypeCharCodeAt(path, i);\r\n      if (code === CHAR_FORWARD_SLASH) {\r\n        // If we reached a path separator that was not part of a set of path\r\n        // separators at the end of the string, stop now\r\n        if (!matchedSlash) {\r\n          startPart = i + 1;\r\n          break;\r\n        }\r\n        continue;\r\n      }\r\n      if (end === -1) {\r\n        // We saw the first non-path separator, mark this as the end of our\r\n        // extension\r\n        matchedSlash = false;\r\n        end = i + 1;\r\n      }\r\n      if (code === CHAR_DOT) {\r\n        // If this is our first dot, mark it as the start of our extension\r\n        if (startDot === -1)\r\n          startDot = i;\r\n        else if (preDotState !== 1)\r\n          preDotState = 1;\r\n      } else if (startDot !== -1) {\r\n        // We saw a non-dot and non-path separator before our dot, so we should\r\n        // have a good chance at having a non-empty extension\r\n        preDotState = -1;\r\n      }\r\n    }\r\n\r\n    if (startDot === -1 ||\r\n        end === -1 ||\r\n        // We saw a non-dot character immediately before the dot\r\n        preDotState === 0 ||\r\n        // The (right-most) trimmed path component is exactly '..'\r\n        (preDotState === 1 &&\r\n         startDot === end - 1 &&\r\n         startDot === startPart + 1)) {\r\n      return '';\r\n    }\r\n    return StringPrototypeSlice(path, startDot, end);\r\n  },\r\n\r\n  format: FunctionPrototypeBind(_format, null, '/'),\r\n\r\n  /**\r\n   * @param {string} path\r\n   * @returns {{\r\n   *   dir: string;\r\n   *   root: string;\r\n   *   base: string;\r\n   *   name: string;\r\n   *   ext: string;\r\n   *   }}\r\n   */\r\n  parse(path) {\r\n    validateString(path, 'path');\r\n\r\n    const ret = { root: '', dir: '', base: '', ext: '', name: '' };\r\n    if (path.length === 0)\r\n      return ret;\r\n    const isAbsolute =\r\n      StringPrototypeCharCodeAt(path, 0) === CHAR_FORWARD_SLASH;\r\n    let start;\r\n    if (isAbsolute) {\r\n      ret.root = '/';\r\n      start = 1;\r\n    } else {\r\n      start = 0;\r\n    }\r\n    let startDot = -1;\r\n    let startPart = 0;\r\n    let end = -1;\r\n    let matchedSlash = true;\r\n    let i = path.length - 1;\r\n\r\n    // Track the state of characters (if any) we see before our first dot and\r\n    // after any path separator we find\r\n    let preDotState = 0;\r\n\r\n    // Get non-dir info\r\n    for (; i >= start; --i) {\r\n      const code = StringPrototypeCharCodeAt(path, i);\r\n      if (code === CHAR_FORWARD_SLASH) {\r\n        // If we reached a path separator that was not part of a set of path\r\n        // separators at the end of the string, stop now\r\n        if (!matchedSlash) {\r\n          startPart = i + 1;\r\n          break;\r\n        }\r\n        continue;\r\n      }\r\n      if (end === -1) {\r\n        // We saw the first non-path separator, mark this as the end of our\r\n        // extension\r\n        matchedSlash = false;\r\n        end = i + 1;\r\n      }\r\n      if (code === CHAR_DOT) {\r\n        // If this is our first dot, mark it as the start of our extension\r\n        if (startDot === -1)\r\n          startDot = i;\r\n        else if (preDotState !== 1)\r\n          preDotState = 1;\r\n      } else if (startDot !== -1) {\r\n        // We saw a non-dot and non-path separator before our dot, so we should\r\n        // have a good chance at having a non-empty extension\r\n        preDotState = -1;\r\n      }\r\n    }\r\n\r\n    if (end !== -1) {\r\n      const start = startPart === 0 && isAbsolute ? 1 : startPart;\r\n      if (startDot === -1 ||\r\n          // We saw a non-dot character immediately before the dot\r\n          preDotState === 0 ||\r\n          // The (right-most) trimmed path component is exactly '..'\r\n          (preDotState === 1 &&\r\n          startDot === end - 1 &&\r\n          startDot === startPart + 1)) {\r\n        ret.base = ret.name = StringPrototypeSlice(path, start, end);\r\n      } else {\r\n        ret.name = StringPrototypeSlice(path, start, startDot);\r\n        ret.base = StringPrototypeSlice(path, start, end);\r\n        ret.ext = StringPrototypeSlice(path, startDot, end);\r\n      }\r\n    }\r\n\r\n    if (startPart > 0)\r\n      ret.dir = StringPrototypeSlice(path, 0, startPart - 1);\r\n    else if (isAbsolute)\r\n      ret.dir = '/';\r\n\r\n    return ret;\r\n  },\r\n\r\n  sep: '/',\r\n  delimiter: ':',\r\n  win32: null,\r\n  posix: null\r\n};\r\n\r\nposix.win32 = win32.win32 = win32;\r\nposix.posix = win32.posix = posix;\r\n\r\n// Legacy internal API, docs-only deprecated: DEP0080\r\nwin32._makeLong = win32.toNamespacedPath;\r\nposix._makeLong = posix.toNamespacedPath;\r\n\r\nmodule.exports = platformIsWin32 ? win32 : posix;\r\n",
    "name": "node:path",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 73,
    "sourcePositions": []
  },
  null,
  {
    "url": "node:fs",
    "source": "// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n// Maintainers, keep in mind that ES1-style octal literals (`0666`) are not\r\n// allowed in strict mode. Use ES6-style octal literals instead (`0o666`).\r\n\r\n'use strict';\r\n\r\nconst {\r\n  ArrayPrototypePush,\r\n  BigIntPrototypeToString,\r\n  MathMax,\r\n  Number,\r\n  ObjectDefineProperties,\r\n  ObjectDefineProperty,\r\n  Promise,\r\n  ReflectApply,\r\n  SafeMap,\r\n  SafeSet,\r\n  String,\r\n  StringPrototypeCharCodeAt,\r\n  StringPrototypeIndexOf,\r\n  StringPrototypeSlice,\r\n} = primordials;\r\n\r\nconst { fs: constants } = internalBinding('constants');\r\nconst {\r\n  S_IFIFO,\r\n  S_IFLNK,\r\n  S_IFMT,\r\n  S_IFREG,\r\n  S_IFSOCK,\r\n  F_OK,\r\n  R_OK,\r\n  W_OK,\r\n  X_OK,\r\n  O_WRONLY,\r\n  O_SYMLINK\r\n} = constants;\r\n\r\nconst pathModule = require('path');\r\nconst { isArrayBufferView } = require('internal/util/types');\r\n\r\n// We need to get the statValues from the binding at the callsite since\r\n// it's re-initialized after deserialization.\r\n\r\nconst binding = internalBinding('fs');\r\nconst { Buffer } = require('buffer');\r\nconst {\r\n  aggregateTwoErrors,\r\n  codes: {\r\n    ERR_FS_FILE_TOO_LARGE,\r\n    ERR_INVALID_ARG_VALUE,\r\n    ERR_FEATURE_UNAVAILABLE_ON_PLATFORM,\r\n  },\r\n  AbortError,\r\n  uvErrmapGet,\r\n  uvException\r\n} = require('internal/errors');\r\n\r\nconst { FSReqCallback } = binding;\r\nconst { toPathIfFileURL } = require('internal/url');\r\nconst {\r\n  customPromisifyArgs: kCustomPromisifyArgsSymbol,\r\n  deprecate,\r\n  kEmptyObject,\r\n  promisify: {\r\n    custom: kCustomPromisifiedSymbol,\r\n  },\r\n  SideEffectFreeRegExpPrototypeExec,\r\n} = require('internal/util');\r\nconst {\r\n  constants: {\r\n    kIoMaxLength,\r\n    kMaxUserId,\r\n  },\r\n  copyObject,\r\n  Dirent,\r\n  emitRecursiveRmdirWarning,\r\n  getDirents,\r\n  getOptions,\r\n  getValidatedFd,\r\n  getValidatedPath,\r\n  getValidMode,\r\n  handleErrorFromBinding,\r\n  nullCheck,\r\n  preprocessSymlinkDestination,\r\n  Stats,\r\n  getStatFsFromBinding,\r\n  getStatsFromBinding,\r\n  realpathCacheKey,\r\n  stringToFlags,\r\n  stringToSymlinkType,\r\n  toUnixTimestamp,\r\n  validateBufferArray,\r\n  validateCpOptions,\r\n  validateOffsetLengthRead,\r\n  validateOffsetLengthWrite,\r\n  validatePath,\r\n  validatePosition,\r\n  validateRmOptions,\r\n  validateRmOptionsSync,\r\n  validateRmdirOptions,\r\n  validateStringAfterArrayBufferView,\r\n  validatePrimitiveStringAfterArrayBufferView,\r\n  warnOnNonPortableTemplate\r\n} = require('internal/fs/utils');\r\nconst {\r\n  Dir,\r\n  opendir,\r\n  opendirSync\r\n} = require('internal/fs/dir');\r\nconst {\r\n  CHAR_FORWARD_SLASH,\r\n  CHAR_BACKWARD_SLASH,\r\n} = require('internal/constants');\r\nconst {\r\n  isUint32,\r\n  parseFileMode,\r\n  validateBoolean,\r\n  validateBuffer,\r\n  validateEncoding,\r\n  validateFunction,\r\n  validateInteger,\r\n  validateObject,\r\n  validateString,\r\n} = require('internal/validators');\r\n\r\nconst watchers = require('internal/fs/watchers');\r\nconst ReadFileContext = require('internal/fs/read_file_context');\r\n\r\nlet truncateWarn = true;\r\nlet fs;\r\n\r\n// Lazy loaded\r\nlet cpFn;\r\nlet cpSyncFn;\r\nlet promises = null;\r\nlet ReadStream;\r\nlet WriteStream;\r\nlet rimraf;\r\nlet rimrafSync;\r\n\r\n// These have to be separate because of how graceful-fs happens to do it's\r\n// monkeypatching.\r\nlet FileReadStream;\r\nlet FileWriteStream;\r\n\r\nconst isWindows = process.platform === 'win32';\r\nconst isOSX = process.platform === 'darwin';\r\n\r\n\r\nconst showStringCoercionDeprecation = deprecate(\r\n  () => {},\r\n  'Implicit coercion of objects with own toString property is deprecated.',\r\n  'DEP0162'\r\n);\r\nfunction showTruncateDeprecation() {\r\n  if (truncateWarn) {\r\n    process.emitWarning(\r\n      'Using fs.truncate with a file descriptor is deprecated. Please use ' +\r\n      'fs.ftruncate with a file descriptor instead.',\r\n      'DeprecationWarning', 'DEP0081');\r\n    truncateWarn = false;\r\n  }\r\n}\r\n\r\nfunction maybeCallback(cb) {\r\n  validateFunction(cb, 'cb');\r\n\r\n  return cb;\r\n}\r\n\r\n// Ensure that callbacks run in the global context. Only use this function\r\n// for callbacks that are passed to the binding layer, callbacks that are\r\n// invoked from JS already run in the proper scope.\r\nfunction makeCallback(cb) {\r\n  validateFunction(cb, 'cb');\r\n\r\n  return (...args) => ReflectApply(cb, this, args);\r\n}\r\n\r\n// Special case of `makeCallback()` that is specific to async `*stat()` calls as\r\n// an optimization, since the data passed back to the callback needs to be\r\n// transformed anyway.\r\nfunction makeStatsCallback(cb) {\r\n  validateFunction(cb, 'cb');\r\n\r\n  return (err, stats) => {\r\n    if (err) return cb(err);\r\n    cb(err, getStatsFromBinding(stats));\r\n  };\r\n}\r\n\r\nconst isFd = isUint32;\r\n\r\nfunction isFileType(stats, fileType) {\r\n  // Use stats array directly to avoid creating an fs.Stats instance just for\r\n  // our internal use.\r\n  let mode = stats[1];\r\n  if (typeof mode === 'bigint')\r\n    mode = Number(mode);\r\n  return (mode & S_IFMT) === fileType;\r\n}\r\n\r\n/**\r\n * Tests a user's permissions for the file or directory\r\n * specified by `path`.\r\n * @param {string | Buffer | URL} path\r\n * @param {number} [mode]\r\n * @param {(err?: Error) => any} callback\r\n * @returns {void}\r\n */\r\nfunction access(path, mode, callback) {\r\n  if (typeof mode === 'function') {\r\n    callback = mode;\r\n    mode = F_OK;\r\n  }\r\n\r\n  path = getValidatedPath(path);\r\n  mode = getValidMode(mode, 'access');\r\n  callback = makeCallback(callback);\r\n\r\n  const req = new FSReqCallback();\r\n  req.oncomplete = callback;\r\n  binding.access(pathModule.toNamespacedPath(path), mode, req);\r\n}\r\n\r\n/**\r\n * Synchronously tests a user's permissions for the file or\r\n * directory specified by `path`.\r\n * @param {string | Buffer | URL} path\r\n * @param {number} [mode]\r\n * @returns {void}\r\n */\r\nfunction accessSync(path, mode) {\r\n  path = getValidatedPath(path);\r\n  mode = getValidMode(mode, 'access');\r\n\r\n  const ctx = { path };\r\n  binding.access(pathModule.toNamespacedPath(path), mode, undefined, ctx);\r\n  handleErrorFromBinding(ctx);\r\n}\r\n\r\n/**\r\n * Tests whether or not the given path exists.\r\n * @param {string | Buffer | URL} path\r\n * @param {(exists?: boolean) => any} callback\r\n * @returns {void}\r\n */\r\nfunction exists(path, callback) {\r\n  maybeCallback(callback);\r\n\r\n  function suppressedCallback(err) {\r\n    callback(err ? false : true);\r\n  }\r\n\r\n  try {\r\n    fs.access(path, F_OK, suppressedCallback);\r\n  } catch {\r\n    return callback(false);\r\n  }\r\n}\r\n\r\nObjectDefineProperty(exists, kCustomPromisifiedSymbol, {\r\n  __proto__: null,\r\n  value: function exists(path) { // eslint-disable-line func-name-matching\r\n    return new Promise((resolve) => fs.exists(path, resolve));\r\n  },\r\n});\r\n\r\n// fs.existsSync never throws, it only returns true or false.\r\n// Since fs.existsSync never throws, users have established\r\n// the expectation that passing invalid arguments to it, even like\r\n// fs.existsSync(), would only get a false in return, so we cannot signal\r\n// validation errors to users properly out of compatibility concerns.\r\n// TODO(joyeecheung): deprecate the never-throw-on-invalid-arguments behavior\r\n/**\r\n * Synchronously tests whether or not the given path exists.\r\n * @param {string | Buffer | URL} path\r\n * @returns {boolean}\r\n */\r\nfunction existsSync(path) {\r\n  try {\r\n    path = getValidatedPath(path);\r\n  } catch {\r\n    return false;\r\n  }\r\n  const ctx = { path };\r\n  const nPath = pathModule.toNamespacedPath(path);\r\n  binding.access(nPath, F_OK, undefined, ctx);\r\n\r\n  // In case of an invalid symlink, `binding.access()` on win32\r\n  // will **not** return an error and is therefore not enough.\r\n  // Double check with `binding.stat()`.\r\n  if (isWindows && ctx.errno === undefined) {\r\n    binding.stat(nPath, false, undefined, ctx);\r\n  }\r\n\r\n  return ctx.errno === undefined;\r\n}\r\n\r\nfunction readFileAfterOpen(err, fd) {\r\n  const context = this.context;\r\n\r\n  if (err) {\r\n    context.callback(err);\r\n    return;\r\n  }\r\n\r\n  context.fd = fd;\r\n\r\n  const req = new FSReqCallback();\r\n  req.oncomplete = readFileAfterStat;\r\n  req.context = context;\r\n  binding.fstat(fd, false, req);\r\n}\r\n\r\nfunction readFileAfterStat(err, stats) {\r\n  const context = this.context;\r\n\r\n  if (err)\r\n    return context.close(err);\r\n\r\n  // TODO(BridgeAR): Check if allocating a smaller chunk is better performance\r\n  // wise, similar to the promise based version (less peak memory and chunked\r\n  // stringify operations vs multiple C++/JS boundary crossings).\r\n  const size = context.size = isFileType(stats, S_IFREG) ? stats[8] : 0;\r\n\r\n  if (size > kIoMaxLength) {\r\n    err = new ERR_FS_FILE_TOO_LARGE(size);\r\n    return context.close(err);\r\n  }\r\n\r\n  try {\r\n    if (size === 0) {\r\n      // TODO(BridgeAR): If an encoding is set, use the StringDecoder to concat\r\n      // the result and reuse the buffer instead of allocating a new one.\r\n      context.buffers = [];\r\n    } else {\r\n      context.buffer = Buffer.allocUnsafeSlow(size);\r\n    }\r\n  } catch (err) {\r\n    return context.close(err);\r\n  }\r\n  context.read();\r\n}\r\n\r\nfunction checkAborted(signal, callback) {\r\n  if (signal?.aborted) {\r\n    callback(new AbortError(undefined, { cause: signal?.reason }));\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Asynchronously reads the entire contents of a file.\r\n * @param {string | Buffer | URL | number} path\r\n * @param {{\r\n *   encoding?: string | null;\r\n *   flag?: string;\r\n *   signal?: AbortSignal;\r\n *   } | string} [options]\r\n * @param {(\r\n *   err?: Error,\r\n *   data?: string | Buffer\r\n *   ) => any} callback\r\n * @returns {void}\r\n */\r\nfunction readFile(path, options, callback) {\r\n  callback = maybeCallback(callback || options);\r\n  options = getOptions(options, { flag: 'r' });\r\n  const context = new ReadFileContext(callback, options.encoding);\r\n  context.isUserFd = isFd(path); // File descriptor ownership\r\n\r\n  if (options.signal) {\r\n    context.signal = options.signal;\r\n  }\r\n  if (context.isUserFd) {\r\n    process.nextTick(function tick(context) {\r\n      ReflectApply(readFileAfterOpen, { context }, [null, path]);\r\n    }, context);\r\n    return;\r\n  }\r\n\r\n  if (checkAborted(options.signal, callback))\r\n    return;\r\n\r\n  const flagsNumber = stringToFlags(options.flag, 'options.flag');\r\n  path = getValidatedPath(path);\r\n\r\n  const req = new FSReqCallback();\r\n  req.context = context;\r\n  req.oncomplete = readFileAfterOpen;\r\n  binding.open(pathModule.toNamespacedPath(path),\r\n               flagsNumber,\r\n               0o666,\r\n               req);\r\n}\r\n\r\nfunction tryStatSync(fd, isUserFd) {\r\n  const ctx = {};\r\n  const stats = binding.fstat(fd, false, undefined, ctx);\r\n  if (ctx.errno !== undefined && !isUserFd) {\r\n    fs.closeSync(fd);\r\n    throw uvException(ctx);\r\n  }\r\n  return stats;\r\n}\r\n\r\nfunction tryCreateBuffer(size, fd, isUserFd) {\r\n  let threw = true;\r\n  let buffer;\r\n  try {\r\n    if (size > kIoMaxLength) {\r\n      throw new ERR_FS_FILE_TOO_LARGE(size);\r\n    }\r\n    buffer = Buffer.allocUnsafe(size);\r\n    threw = false;\r\n  } finally {\r\n    if (threw && !isUserFd) fs.closeSync(fd);\r\n  }\r\n  return buffer;\r\n}\r\n\r\nfunction tryReadSync(fd, isUserFd, buffer, pos, len) {\r\n  let threw = true;\r\n  let bytesRead;\r\n  try {\r\n    bytesRead = fs.readSync(fd, buffer, pos, len);\r\n    threw = false;\r\n  } finally {\r\n    if (threw && !isUserFd) fs.closeSync(fd);\r\n  }\r\n  return bytesRead;\r\n}\r\n\r\n/**\r\n * Synchronously reads the entire contents of a file.\r\n * @param {string | Buffer | URL | number} path\r\n * @param {{\r\n *   encoding?: string | null;\r\n *   flag?: string;\r\n *   }} [options]\r\n * @returns {string | Buffer}\r\n */\r\nfunction readFileSync(path, options) {\r\n  options = getOptions(options, { flag: 'r' });\r\n  const isUserFd = isFd(path); // File descriptor ownership\r\n  const fd = isUserFd ? path : fs.openSync(path, options.flag, 0o666);\r\n\r\n  const stats = tryStatSync(fd, isUserFd);\r\n  const size = isFileType(stats, S_IFREG) ? stats[8] : 0;\r\n  let pos = 0;\r\n  let buffer; // Single buffer with file data\r\n  let buffers; // List for when size is unknown\r\n\r\n  if (size === 0) {\r\n    buffers = [];\r\n  } else {\r\n    buffer = tryCreateBuffer(size, fd, isUserFd);\r\n  }\r\n\r\n  let bytesRead;\r\n\r\n  if (size !== 0) {\r\n    do {\r\n      bytesRead = tryReadSync(fd, isUserFd, buffer, pos, size - pos);\r\n      pos += bytesRead;\r\n    } while (bytesRead !== 0 && pos < size);\r\n  } else {\r\n    do {\r\n      // The kernel lies about many files.\r\n      // Go ahead and try to read some bytes.\r\n      buffer = Buffer.allocUnsafe(8192);\r\n      bytesRead = tryReadSync(fd, isUserFd, buffer, 0, 8192);\r\n      if (bytesRead !== 0) {\r\n        ArrayPrototypePush(buffers, buffer.slice(0, bytesRead));\r\n      }\r\n      pos += bytesRead;\r\n    } while (bytesRead !== 0);\r\n  }\r\n\r\n  if (!isUserFd)\r\n    fs.closeSync(fd);\r\n\r\n  if (size === 0) {\r\n    // Data was collected into the buffers list.\r\n    buffer = Buffer.concat(buffers, pos);\r\n  } else if (pos < size) {\r\n    buffer = buffer.slice(0, pos);\r\n  }\r\n\r\n  if (options.encoding) buffer = buffer.toString(options.encoding);\r\n  return buffer;\r\n}\r\n\r\nfunction defaultCloseCallback(err) {\r\n  if (err != null) throw err;\r\n}\r\n\r\n/**\r\n * Closes the file descriptor.\r\n * @param {number} fd\r\n * @param {(err?: Error) => any} [callback]\r\n * @returns {void}\r\n */\r\nfunction close(fd, callback = defaultCloseCallback) {\r\n  fd = getValidatedFd(fd);\r\n  if (callback !== defaultCloseCallback)\r\n    callback = makeCallback(callback);\r\n\r\n  const req = new FSReqCallback();\r\n  req.oncomplete = callback;\r\n  binding.close(fd, req);\r\n}\r\n\r\n/**\r\n * Synchronously closes the file descriptor.\r\n * @param {number} fd\r\n * @returns {void}\r\n */\r\nfunction closeSync(fd) {\r\n  fd = getValidatedFd(fd);\r\n\r\n  const ctx = {};\r\n  binding.close(fd, undefined, ctx);\r\n  handleErrorFromBinding(ctx);\r\n}\r\n\r\n/**\r\n * Asynchronously opens a file.\r\n * @param {string | Buffer | URL} path\r\n * @param {string | number} [flags]\r\n * @param {string | number} [mode]\r\n * @param {(\r\n *   err?: Error,\r\n *   fd?: number\r\n *   ) => any} callback\r\n * @returns {void}\r\n */\r\nfunction open(path, flags, mode, callback) {\r\n  path = getValidatedPath(path);\r\n  if (arguments.length < 3) {\r\n    callback = flags;\r\n    flags = 'r';\r\n    mode = 0o666;\r\n  } else if (typeof mode === 'function') {\r\n    callback = mode;\r\n    mode = 0o666;\r\n  } else {\r\n    mode = parseFileMode(mode, 'mode', 0o666);\r\n  }\r\n  const flagsNumber = stringToFlags(flags);\r\n  callback = makeCallback(callback);\r\n\r\n  const req = new FSReqCallback();\r\n  req.oncomplete = callback;\r\n\r\n  binding.open(pathModule.toNamespacedPath(path),\r\n               flagsNumber,\r\n               mode,\r\n               req);\r\n}\r\n\r\n/**\r\n * Synchronously opens a file.\r\n * @param {string | Buffer | URL} path\r\n * @param {string | number} [flags]\r\n * @param {string | number} [mode]\r\n * @returns {number}\r\n */\r\nfunction openSync(path, flags, mode) {\r\n  path = getValidatedPath(path);\r\n  const flagsNumber = stringToFlags(flags);\r\n  mode = parseFileMode(mode, 'mode', 0o666);\r\n\r\n  const ctx = { path };\r\n  const result = binding.open(pathModule.toNamespacedPath(path),\r\n                              flagsNumber, mode,\r\n                              undefined, ctx);\r\n  handleErrorFromBinding(ctx);\r\n  return result;\r\n}\r\n\r\n/**\r\n * Reads file from the specified `fd` (file descriptor).\r\n * @param {number} fd\r\n * @param {Buffer | TypedArray | DataView} buffer\r\n * @param {number} offsetOrOptions\r\n * @param {number} length\r\n * @param {number | bigint | null} position\r\n * @param {(\r\n *   err?: Error,\r\n *   bytesRead?: number,\r\n *   buffer?: Buffer\r\n *   ) => any} callback\r\n * @returns {void}\r\n */\r\nfunction read(fd, buffer, offsetOrOptions, length, position, callback) {\r\n  fd = getValidatedFd(fd);\r\n\r\n  let offset = offsetOrOptions;\r\n  let params = null;\r\n  if (arguments.length <= 4) {\r\n    if (arguments.length === 4) {\r\n      // This is fs.read(fd, buffer, options, callback)\r\n      validateObject(offsetOrOptions, 'options', { nullable: true });\r\n      callback = length;\r\n      params = offsetOrOptions;\r\n    } else if (arguments.length === 3) {\r\n      // This is fs.read(fd, bufferOrParams, callback)\r\n      if (!isArrayBufferView(buffer)) {\r\n        // This is fs.read(fd, params, callback)\r\n        params = buffer;\r\n        ({ buffer = Buffer.alloc(16384) } = params ?? kEmptyObject);\r\n      }\r\n      callback = offsetOrOptions;\r\n    } else {\r\n      // This is fs.read(fd, callback)\r\n      callback = buffer;\r\n      buffer = Buffer.alloc(16384);\r\n    }\r\n\r\n    ({\r\n      offset = 0,\r\n      length = buffer.byteLength - offset,\r\n      position = null,\r\n    } = params ?? kEmptyObject);\r\n  }\r\n\r\n  validateBuffer(buffer);\r\n  callback = maybeCallback(callback);\r\n\r\n  if (offset == null) {\r\n    offset = 0;\r\n  } else {\r\n    validateInteger(offset, 'offset', 0);\r\n  }\r\n\r\n  length |= 0;\r\n\r\n  if (length === 0) {\r\n    return process.nextTick(function tick() {\r\n      callback(null, 0, buffer);\r\n    });\r\n  }\r\n\r\n  if (buffer.byteLength === 0) {\r\n    throw new ERR_INVALID_ARG_VALUE('buffer', buffer,\r\n                                    'is empty and cannot be written');\r\n  }\r\n\r\n  validateOffsetLengthRead(offset, length, buffer.byteLength);\r\n\r\n  if (position == null)\r\n    position = -1;\r\n\r\n  validatePosition(position, 'position');\r\n\r\n  function wrapper(err, bytesRead) {\r\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\r\n    callback(err, bytesRead || 0, buffer);\r\n  }\r\n\r\n  const req = new FSReqCallback();\r\n  req.oncomplete = wrapper;\r\n\r\n  binding.read(fd, buffer, offset, length, position, req);\r\n}\r\n\r\nObjectDefineProperty(read, kCustomPromisifyArgsSymbol,\r\n                     { __proto__: null, value: ['bytesRead', 'buffer'], enumerable: false });\r\n\r\n/**\r\n * Synchronously reads the file from the\r\n * specified `fd` (file descriptor).\r\n * @param {number} fd\r\n * @param {Buffer | TypedArray | DataView} buffer\r\n * @param {{\r\n *   offset?: number;\r\n *   length?: number;\r\n *   position?: number | bigint | null;\r\n *   }} [offset]\r\n * @returns {number}\r\n */\r\nfunction readSync(fd, buffer, offset, length, position) {\r\n  fd = getValidatedFd(fd);\r\n\r\n  validateBuffer(buffer);\r\n\r\n  if (arguments.length <= 3) {\r\n    // Assume fs.readSync(fd, buffer, options)\r\n    const options = offset || kEmptyObject;\r\n\r\n    ({\r\n      offset = 0,\r\n      length = buffer.byteLength - offset,\r\n      position = null,\r\n    } = options);\r\n  }\r\n\r\n  if (offset == null) {\r\n    offset = 0;\r\n  } else {\r\n    validateInteger(offset, 'offset', 0);\r\n  }\r\n\r\n  length |= 0;\r\n\r\n  if (length === 0) {\r\n    return 0;\r\n  }\r\n\r\n  if (buffer.byteLength === 0) {\r\n    throw new ERR_INVALID_ARG_VALUE('buffer', buffer,\r\n                                    'is empty and cannot be written');\r\n  }\r\n\r\n  validateOffsetLengthRead(offset, length, buffer.byteLength);\r\n\r\n  if (position == null)\r\n    position = -1;\r\n\r\n  validatePosition(position, 'position');\r\n\r\n  const ctx = {};\r\n  const result = binding.read(fd, buffer, offset, length, position,\r\n                              undefined, ctx);\r\n  handleErrorFromBinding(ctx);\r\n  return result;\r\n}\r\n\r\n/**\r\n * Reads file from the specified `fd` (file descriptor)\r\n * and writes to an array of `ArrayBufferView`s.\r\n * @param {number} fd\r\n * @param {ArrayBufferView[]} buffers\r\n * @param {number | null} [position]\r\n * @param {(\r\n *   err?: Error,\r\n *   bytesRead?: number,\r\n *   buffers?: ArrayBufferView[];\r\n *   ) => any} callback\r\n * @returns {void}\r\n */\r\nfunction readv(fd, buffers, position, callback) {\r\n  function wrapper(err, read) {\r\n    callback(err, read || 0, buffers);\r\n  }\r\n\r\n  fd = getValidatedFd(fd);\r\n  validateBufferArray(buffers);\r\n  callback = maybeCallback(callback || position);\r\n\r\n  const req = new FSReqCallback();\r\n  req.oncomplete = wrapper;\r\n\r\n  if (typeof position !== 'number')\r\n    position = null;\r\n\r\n  return binding.readBuffers(fd, buffers, position, req);\r\n}\r\n\r\nObjectDefineProperty(readv, kCustomPromisifyArgsSymbol,\r\n                     { __proto__: null, value: ['bytesRead', 'buffers'], enumerable: false });\r\n\r\n/**\r\n * Synchronously reads file from the\r\n * specified `fd` (file descriptor) and writes to an array\r\n * of `ArrayBufferView`s.\r\n * @param {number} fd\r\n * @param {ArrayBufferView[]} buffers\r\n * @param {number | null} [position]\r\n * @returns {number}\r\n */\r\nfunction readvSync(fd, buffers, position) {\r\n  fd = getValidatedFd(fd);\r\n  validateBufferArray(buffers);\r\n\r\n  const ctx = {};\r\n\r\n  if (typeof position !== 'number')\r\n    position = null;\r\n\r\n  const result = binding.readBuffers(fd, buffers, position, undefined, ctx);\r\n  handleErrorFromBinding(ctx);\r\n  return result;\r\n}\r\n\r\n/**\r\n * Writes `buffer` to the specified `fd` (file descriptor).\r\n * @param {number} fd\r\n * @param {Buffer | TypedArray | DataView | string | object} buffer\r\n * @param {number | object} [offsetOrOptions]\r\n * @param {number} [length]\r\n * @param {number | null} [position]\r\n * @param {(\r\n *   err?: Error,\r\n *   bytesWritten?: number;\r\n *   buffer?: Buffer | TypedArray | DataView\r\n *   ) => any} callback\r\n * @returns {void}\r\n */\r\nfunction write(fd, buffer, offsetOrOptions, length, position, callback) {\r\n  function wrapper(err, written) {\r\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\r\n    callback(err, written || 0, buffer);\r\n  }\r\n\r\n  fd = getValidatedFd(fd);\r\n\r\n  let offset = offsetOrOptions;\r\n  if (isArrayBufferView(buffer)) {\r\n    callback = maybeCallback(callback || position || length || offset);\r\n\r\n    if (typeof offset === 'object') {\r\n      ({\r\n        offset = 0,\r\n        length = buffer.byteLength - offset,\r\n        position = null,\r\n      } = offsetOrOptions ?? kEmptyObject);\r\n    }\r\n\r\n    if (offset == null || typeof offset === 'function') {\r\n      offset = 0;\r\n    } else {\r\n      validateInteger(offset, 'offset', 0);\r\n    }\r\n    if (typeof length !== 'number')\r\n      length = buffer.byteLength - offset;\r\n    if (typeof position !== 'number')\r\n      position = null;\r\n    validateOffsetLengthWrite(offset, length, buffer.byteLength);\r\n\r\n    const req = new FSReqCallback();\r\n    req.oncomplete = wrapper;\r\n    return binding.writeBuffer(fd, buffer, offset, length, position, req);\r\n  }\r\n\r\n  validateStringAfterArrayBufferView(buffer, 'buffer');\r\n  if (typeof buffer !== 'string') {\r\n    showStringCoercionDeprecation();\r\n  }\r\n\r\n  if (typeof position !== 'function') {\r\n    if (typeof offset === 'function') {\r\n      position = offset;\r\n      offset = null;\r\n    } else {\r\n      position = length;\r\n    }\r\n    length = 'utf8';\r\n  }\r\n\r\n  const str = String(buffer);\r\n  validateEncoding(str, length);\r\n  callback = maybeCallback(position);\r\n\r\n  const req = new FSReqCallback();\r\n  req.oncomplete = wrapper;\r\n  return binding.writeString(fd, str, offset, length, req);\r\n}\r\n\r\nObjectDefineProperty(write, kCustomPromisifyArgsSymbol,\r\n                     { __proto__: null, value: ['bytesWritten', 'buffer'], enumerable: false });\r\n\r\n/**\r\n * Synchronously writes `buffer` to the\r\n * specified `fd` (file descriptor).\r\n * @param {number} fd\r\n * @param {Buffer | TypedArray | DataView | string} buffer\r\n * @param {{\r\n *   offset?: number;\r\n *   length?: number;\r\n *   position?: number | null;\r\n *   }} [offsetOrOptions]\r\n * @returns {number}\r\n */\r\nfunction writeSync(fd, buffer, offsetOrOptions, length, position) {\r\n  fd = getValidatedFd(fd);\r\n  const ctx = {};\r\n  let result;\r\n\r\n  let offset = offsetOrOptions;\r\n  if (isArrayBufferView(buffer)) {\r\n    if (typeof offset === 'object') {\r\n      ({\r\n        offset = 0,\r\n        length = buffer.byteLength - offset,\r\n        position = null,\r\n      } = offsetOrOptions ?? kEmptyObject);\r\n    }\r\n    if (position === undefined)\r\n      position = null;\r\n    if (offset == null) {\r\n      offset = 0;\r\n    } else {\r\n      validateInteger(offset, 'offset', 0);\r\n    }\r\n    if (typeof length !== 'number')\r\n      length = buffer.byteLength - offset;\r\n    validateOffsetLengthWrite(offset, length, buffer.byteLength);\r\n    result = binding.writeBuffer(fd, buffer, offset, length, position,\r\n                                 undefined, ctx);\r\n  } else {\r\n    validatePrimitiveStringAfterArrayBufferView(buffer, 'buffer');\r\n    validateEncoding(buffer, length);\r\n\r\n    if (offset === undefined)\r\n      offset = null;\r\n    result = binding.writeString(fd, buffer, offset, length,\r\n                                 undefined, ctx);\r\n  }\r\n  handleErrorFromBinding(ctx);\r\n  return result;\r\n}\r\n\r\n/**\r\n * Writes an array of `ArrayBufferView`s to the\r\n * specified `fd` (file descriptor).\r\n * @param {number} fd\r\n * @param {ArrayBufferView[]} buffers\r\n * @param {number | null} [position]\r\n * @param {(\r\n *   err?: Error,\r\n *   bytesWritten?: number,\r\n *   buffers?: ArrayBufferView[]\r\n *   ) => any} callback\r\n * @returns {void}\r\n */\r\nfunction writev(fd, buffers, position, callback) {\r\n  function wrapper(err, written) {\r\n    callback(err, written || 0, buffers);\r\n  }\r\n\r\n  fd = getValidatedFd(fd);\r\n  validateBufferArray(buffers);\r\n  callback = maybeCallback(callback || position);\r\n\r\n  if (buffers.length === 0) {\r\n    process.nextTick(callback, null, 0, buffers);\r\n    return;\r\n  }\r\n\r\n  const req = new FSReqCallback();\r\n  req.oncomplete = wrapper;\r\n\r\n  if (typeof position !== 'number')\r\n    position = null;\r\n\r\n  return binding.writeBuffers(fd, buffers, position, req);\r\n}\r\n\r\nObjectDefineProperty(writev, kCustomPromisifyArgsSymbol, {\r\n  __proto__: null,\r\n  value: ['bytesWritten', 'buffer'],\r\n  enumerable: false\r\n});\r\n\r\n/**\r\n * Synchronously writes an array of `ArrayBufferView`s\r\n * to the specified `fd` (file descriptor).\r\n * @param {number} fd\r\n * @param {ArrayBufferView[]} buffers\r\n * @param {number | null} [position]\r\n * @returns {number}\r\n */\r\nfunction writevSync(fd, buffers, position) {\r\n  fd = getValidatedFd(fd);\r\n  validateBufferArray(buffers);\r\n\r\n  if (buffers.length === 0) {\r\n    return 0;\r\n  }\r\n\r\n  const ctx = {};\r\n\r\n  if (typeof position !== 'number')\r\n    position = null;\r\n\r\n  const result = binding.writeBuffers(fd, buffers, position, undefined, ctx);\r\n\r\n  handleErrorFromBinding(ctx);\r\n  return result;\r\n}\r\n\r\n/**\r\n * Asynchronously renames file at `oldPath` to\r\n * the pathname provided as `newPath`.\r\n * @param {string | Buffer | URL} oldPath\r\n * @param {string | Buffer | URL} newPath\r\n * @param {(err?: Error) => any} callback\r\n * @returns {void}\r\n */\r\nfunction rename(oldPath, newPath, callback) {\r\n  callback = makeCallback(callback);\r\n  oldPath = getValidatedPath(oldPath, 'oldPath');\r\n  newPath = getValidatedPath(newPath, 'newPath');\r\n  const req = new FSReqCallback();\r\n  req.oncomplete = callback;\r\n  binding.rename(pathModule.toNamespacedPath(oldPath),\r\n                 pathModule.toNamespacedPath(newPath),\r\n                 req);\r\n}\r\n\r\n\r\n/**\r\n * Synchronously renames file at `oldPath` to\r\n * the pathname provided as `newPath`.\r\n * @param {string | Buffer | URL} oldPath\r\n * @param {string | Buffer | URL} newPath\r\n * @returns {void}\r\n */\r\nfunction renameSync(oldPath, newPath) {\r\n  oldPath = getValidatedPath(oldPath, 'oldPath');\r\n  newPath = getValidatedPath(newPath, 'newPath');\r\n  const ctx = { path: oldPath, dest: newPath };\r\n  binding.rename(pathModule.toNamespacedPath(oldPath),\r\n                 pathModule.toNamespacedPath(newPath), undefined, ctx);\r\n  handleErrorFromBinding(ctx);\r\n}\r\n\r\n/**\r\n * Truncates the file.\r\n * @param {string | Buffer | URL} path\r\n * @param {number} [len]\r\n * @param {(err?: Error) => any} callback\r\n * @returns {void}\r\n */\r\nfunction truncate(path, len, callback) {\r\n  if (typeof path === 'number') {\r\n    showTruncateDeprecation();\r\n    return fs.ftruncate(path, len, callback);\r\n  }\r\n  if (typeof len === 'function') {\r\n    callback = len;\r\n    len = 0;\r\n  } else if (len === undefined) {\r\n    len = 0;\r\n  }\r\n\r\n  validateInteger(len, 'len');\r\n  len = MathMax(0, len);\r\n  callback = maybeCallback(callback);\r\n  fs.open(path, 'r+', (er, fd) => {\r\n    if (er) return callback(er);\r\n    const req = new FSReqCallback();\r\n    req.oncomplete = function oncomplete(er) {\r\n      fs.close(fd, (er2) => {\r\n        callback(aggregateTwoErrors(er2, er));\r\n      });\r\n    };\r\n    binding.ftruncate(fd, len, req);\r\n  });\r\n}\r\n\r\n/**\r\n * Synchronously truncates the file.\r\n * @param {string | Buffer | URL} path\r\n * @param {number} [len]\r\n * @returns {void}\r\n */\r\nfunction truncateSync(path, len) {\r\n  if (typeof path === 'number') {\r\n    // legacy\r\n    showTruncateDeprecation();\r\n    return fs.ftruncateSync(path, len);\r\n  }\r\n  if (len === undefined) {\r\n    len = 0;\r\n  }\r\n  // Allow error to be thrown, but still close fd.\r\n  const fd = fs.openSync(path, 'r+');\r\n  let ret;\r\n\r\n  try {\r\n    ret = fs.ftruncateSync(fd, len);\r\n  } finally {\r\n    fs.closeSync(fd);\r\n  }\r\n  return ret;\r\n}\r\n\r\n/**\r\n * Truncates the file descriptor.\r\n * @param {number} fd\r\n * @param {number} [len]\r\n * @param {(err?: Error) => any} callback\r\n * @returns {void}\r\n */\r\nfunction ftruncate(fd, len = 0, callback) {\r\n  if (typeof len === 'function') {\r\n    callback = len;\r\n    len = 0;\r\n  }\r\n  fd = getValidatedFd(fd);\r\n  validateInteger(len, 'len');\r\n  len = MathMax(0, len);\r\n  callback = makeCallback(callback);\r\n\r\n  const req = new FSReqCallback();\r\n  req.oncomplete = callback;\r\n  binding.ftruncate(fd, len, req);\r\n}\r\n\r\n/**\r\n * Synchronously truncates the file descriptor.\r\n * @param {number} fd\r\n * @param {number} [len]\r\n * @returns {void}\r\n */\r\nfunction ftruncateSync(fd, len = 0) {\r\n  fd = getValidatedFd(fd);\r\n  validateInteger(len, 'len');\r\n  len = MathMax(0, len);\r\n  const ctx = {};\r\n  binding.ftruncate(fd, len, undefined, ctx);\r\n  handleErrorFromBinding(ctx);\r\n}\r\n\r\nfunction lazyLoadCp() {\r\n  if (cpFn === undefined) {\r\n    ({ cpFn } = require('internal/fs/cp/cp'));\r\n    cpFn = require('util').callbackify(cpFn);\r\n    ({ cpSyncFn } = require('internal/fs/cp/cp-sync'));\r\n  }\r\n}\r\n\r\nfunction lazyLoadRimraf() {\r\n  if (rimraf === undefined)\r\n    ({ rimraf, rimrafSync } = require('internal/fs/rimraf'));\r\n}\r\n\r\n/**\r\n * Asynchronously removes a directory.\r\n * @param {string | Buffer | URL} path\r\n * @param {{\r\n *   maxRetries?: number;\r\n *   recursive?: boolean;\r\n *   retryDelay?: number;\r\n *   }} [options]\r\n * @param {(err?: Error) => any} callback\r\n * @returns {void}\r\n */\r\nfunction rmdir(path, options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = undefined;\r\n  }\r\n\r\n  callback = makeCallback(callback);\r\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\r\n\r\n  if (options?.recursive) {\r\n    emitRecursiveRmdirWarning();\r\n    validateRmOptions(\r\n      path,\r\n      { ...options, force: false },\r\n      true,\r\n      (err, options) => {\r\n        if (err === false) {\r\n          const req = new FSReqCallback();\r\n          req.oncomplete = callback;\r\n          return binding.rmdir(path, req);\r\n        }\r\n        if (err) {\r\n          return callback(err);\r\n        }\r\n\r\n        lazyLoadRimraf();\r\n        rimraf(path, options, callback);\r\n      });\r\n  } else {\r\n    validateRmdirOptions(options);\r\n    const req = new FSReqCallback();\r\n    req.oncomplete = callback;\r\n    return binding.rmdir(path, req);\r\n  }\r\n}\r\n\r\n/**\r\n * Synchronously removes a directory.\r\n * @param {string | Buffer | URL} path\r\n * @param {{\r\n *   maxRetries?: number;\r\n *   recursive?: boolean;\r\n *   retryDelay?: number;\r\n *   }} [options]\r\n * @returns {void}\r\n */\r\nfunction rmdirSync(path, options) {\r\n  path = getValidatedPath(path);\r\n\r\n  if (options?.recursive) {\r\n    emitRecursiveRmdirWarning();\r\n    options = validateRmOptionsSync(path, { ...options, force: false }, true);\r\n    if (options !== false) {\r\n      lazyLoadRimraf();\r\n      return rimrafSync(pathModule.toNamespacedPath(path), options);\r\n    }\r\n  } else {\r\n    validateRmdirOptions(options);\r\n  }\r\n\r\n  const ctx = { path };\r\n  binding.rmdir(pathModule.toNamespacedPath(path), undefined, ctx);\r\n  return handleErrorFromBinding(ctx);\r\n}\r\n\r\n/**\r\n * Asynchronously removes files and\r\n * directories (modeled on the standard POSIX `rm` utility).\r\n * @param {string | Buffer | URL} path\r\n * @param {{\r\n *   force?: boolean;\r\n *   maxRetries?: number;\r\n *   recursive?: boolean;\r\n *   retryDelay?: number;\r\n *   }} [options]\r\n * @param {(err?: Error) => any} callback\r\n * @returns {void}\r\n */\r\nfunction rm(path, options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = undefined;\r\n  }\r\n  path = getValidatedPath(path);\r\n\r\n  validateRmOptions(path, options, false, (err, options) => {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n    lazyLoadRimraf();\r\n    return rimraf(pathModule.toNamespacedPath(path), options, callback);\r\n  });\r\n}\r\n\r\n/**\r\n * Synchronously removes files and\r\n * directories (modeled on the standard POSIX `rm` utility).\r\n * @param {string | Buffer | URL} path\r\n * @param {{\r\n *   force?: boolean;\r\n *   maxRetries?: number;\r\n *   recursive?: boolean;\r\n *   retryDelay?: number;\r\n *   }} [options]\r\n * @returns {void}\r\n */\r\nfunction rmSync(path, options) {\r\n  path = getValidatedPath(path);\r\n  options = validateRmOptionsSync(path, options, false);\r\n\r\n  lazyLoadRimraf();\r\n  return rimrafSync(pathModule.toNamespacedPath(path), options);\r\n}\r\n\r\n/**\r\n * Forces all currently queued I/O operations associated\r\n * with the file to the operating system's synchronized\r\n * I/O completion state.\r\n * @param {number} fd\r\n * @param {(err?: Error) => any} callback\r\n * @returns {void}\r\n */\r\nfunction fdatasync(fd, callback) {\r\n  fd = getValidatedFd(fd);\r\n  const req = new FSReqCallback();\r\n  req.oncomplete = makeCallback(callback);\r\n  binding.fdatasync(fd, req);\r\n}\r\n\r\n/**\r\n * Synchronously forces all currently queued I/O operations\r\n * associated with the file to the operating\r\n * system's synchronized I/O completion state.\r\n * @param {number} fd\r\n * @returns {void}\r\n */\r\nfunction fdatasyncSync(fd) {\r\n  fd = getValidatedFd(fd);\r\n  const ctx = {};\r\n  binding.fdatasync(fd, undefined, ctx);\r\n  handleErrorFromBinding(ctx);\r\n}\r\n\r\n/**\r\n * Requests for all data for the open file descriptor\r\n * to be flushed to the storage device.\r\n * @param {number} fd\r\n * @param {(err?: Error) => any} callback\r\n * @returns {void}\r\n */\r\nfunction fsync(fd, callback) {\r\n  fd = getValidatedFd(fd);\r\n  const req = new FSReqCallback();\r\n  req.oncomplete = makeCallback(callback);\r\n  binding.fsync(fd, req);\r\n}\r\n\r\n/**\r\n * Synchronously requests for all data for the open\r\n * file descriptor to be flushed to the storage device.\r\n * @param {number} fd\r\n * @returns {void}\r\n */\r\nfunction fsyncSync(fd) {\r\n  fd = getValidatedFd(fd);\r\n  const ctx = {};\r\n  binding.fsync(fd, undefined, ctx);\r\n  handleErrorFromBinding(ctx);\r\n}\r\n\r\n/**\r\n * Asynchronously creates a directory.\r\n * @param {string | Buffer | URL} path\r\n * @param {{\r\n *   recursive?: boolean;\r\n *   mode?: string | number;\r\n *   } | number} [options]\r\n * @param {(err?: Error) => any} callback\r\n * @returns {void}\r\n */\r\nfunction mkdir(path, options, callback) {\r\n  let mode = 0o777;\r\n  let recursive = false;\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n  } else if (typeof options === 'number' || typeof options === 'string') {\r\n    mode = options;\r\n  } else if (options) {\r\n    if (options.recursive !== undefined)\r\n      recursive = options.recursive;\r\n    if (options.mode !== undefined)\r\n      mode = options.mode;\r\n  }\r\n  callback = makeCallback(callback);\r\n  path = getValidatedPath(path);\r\n\r\n  validateBoolean(recursive, 'options.recursive');\r\n\r\n  const req = new FSReqCallback();\r\n  req.oncomplete = callback;\r\n  binding.mkdir(pathModule.toNamespacedPath(path),\r\n                parseFileMode(mode, 'mode'), recursive, req);\r\n}\r\n\r\n/**\r\n * Synchronously creates a directory.\r\n * @param {string | Buffer | URL} path\r\n * @param {{\r\n *   recursive?: boolean;\r\n *   mode?: string | number;\r\n *   } | number} [options]\r\n * @returns {string | void}\r\n */\r\nfunction mkdirSync(path, options) {\r\n  let mode = 0o777;\r\n  let recursive = false;\r\n  if (typeof options === 'number' || typeof options === 'string') {\r\n    mode = options;\r\n  } else if (options) {\r\n    if (options.recursive !== undefined)\r\n      recursive = options.recursive;\r\n    if (options.mode !== undefined)\r\n      mode = options.mode;\r\n  }\r\n  path = getValidatedPath(path);\r\n  validateBoolean(recursive, 'options.recursive');\r\n\r\n  const ctx = { path };\r\n  const result = binding.mkdir(pathModule.toNamespacedPath(path),\r\n                               parseFileMode(mode, 'mode'), recursive,\r\n                               undefined, ctx);\r\n  handleErrorFromBinding(ctx);\r\n  if (recursive) {\r\n    return result;\r\n  }\r\n}\r\n\r\n/**\r\n * Reads the contents of a directory.\r\n * @param {string | Buffer | URL} path\r\n * @param {string | {\r\n *   encoding?: string;\r\n *   withFileTypes?: boolean;\r\n *   }} [options]\r\n * @param {(\r\n *   err?: Error,\r\n *   files?: string[] | Buffer[] | Direct[];\r\n *   ) => any} callback\r\n * @returns {void}\r\n */\r\nfunction readdir(path, options, callback) {\r\n  callback = makeCallback(typeof options === 'function' ? options : callback);\r\n  options = getOptions(options);\r\n  path = getValidatedPath(path);\r\n\r\n  const req = new FSReqCallback();\r\n  if (!options.withFileTypes) {\r\n    req.oncomplete = callback;\r\n  } else {\r\n    req.oncomplete = (err, result) => {\r\n      if (err) {\r\n        callback(err);\r\n        return;\r\n      }\r\n      getDirents(path, result, callback);\r\n    };\r\n  }\r\n  binding.readdir(pathModule.toNamespacedPath(path), options.encoding,\r\n                  !!options.withFileTypes, req);\r\n}\r\n\r\n/**\r\n * Synchronously reads the contents of a directory.\r\n * @param {string | Buffer | URL} path\r\n * @param {string | {\r\n *   encoding?: string;\r\n *   withFileTypes?: boolean;\r\n *   }} [options]\r\n * @returns {string | Buffer[] | Dirent[]}\r\n */\r\nfunction readdirSync(path, options) {\r\n  options = getOptions(options);\r\n  path = getValidatedPath(path);\r\n  const ctx = { path };\r\n  const result = binding.readdir(pathModule.toNamespacedPath(path),\r\n                                 options.encoding, !!options.withFileTypes,\r\n                                 undefined, ctx);\r\n  handleErrorFromBinding(ctx);\r\n  return options.withFileTypes ? getDirents(path, result) : result;\r\n}\r\n\r\n/**\r\n * Invokes the callback with the `fs.Stats`\r\n * for the file descriptor.\r\n * @param {number} fd\r\n * @param {{ bigint?: boolean; }} [options]\r\n * @param {(\r\n *   err?: Error,\r\n *   stats?: Stats\r\n *   ) => any} callback\r\n * @returns {void}\r\n */\r\nfunction fstat(fd, options = { bigint: false }, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = kEmptyObject;\r\n  }\r\n  fd = getValidatedFd(fd);\r\n  callback = makeStatsCallback(callback);\r\n\r\n  const req = new FSReqCallback(options.bigint);\r\n  req.oncomplete = callback;\r\n  binding.fstat(fd, options.bigint, req);\r\n}\r\n\r\n/**\r\n * Retrieves the `fs.Stats` for the symbolic link\r\n * referred to by the `path`.\r\n * @param {string | Buffer | URL} path\r\n * @param {{ bigint?: boolean; }} [options]\r\n * @param {(\r\n *   err?: Error,\r\n *   stats?: Stats\r\n *   ) => any} callback\r\n * @returns {void}\r\n */\r\nfunction lstat(path, options = { bigint: false }, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = kEmptyObject;\r\n  }\r\n  callback = makeStatsCallback(callback);\r\n  path = getValidatedPath(path);\r\n\r\n  const req = new FSReqCallback(options.bigint);\r\n  req.oncomplete = callback;\r\n  binding.lstat(pathModule.toNamespacedPath(path), options.bigint, req);\r\n}\r\n\r\n/**\r\n * Asynchronously gets the stats of a file.\r\n * @param {string | Buffer | URL} path\r\n * @param {{ bigint?: boolean; }} [options]\r\n * @param {(\r\n *   err?: Error,\r\n *   stats?: Stats\r\n *   ) => any} callback\r\n * @returns {void}\r\n */\r\nfunction stat(path, options = { bigint: false }, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = kEmptyObject;\r\n  }\r\n  callback = makeStatsCallback(callback);\r\n  path = getValidatedPath(path);\r\n\r\n  const req = new FSReqCallback(options.bigint);\r\n  req.oncomplete = callback;\r\n  binding.stat(pathModule.toNamespacedPath(path), options.bigint, req);\r\n}\r\n\r\nfunction statfs(path, options = { bigint: false }, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = kEmptyObject;\r\n  }\r\n  callback = maybeCallback(callback);\r\n  path = getValidatedPath(path);\r\n  const req = new FSReqCallback(options.bigint);\r\n  req.oncomplete = (err, stats) => {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n\r\n    callback(err, getStatFsFromBinding(stats));\r\n  };\r\n  binding.statfs(pathModule.toNamespacedPath(path), options.bigint, req);\r\n}\r\n\r\nfunction hasNoEntryError(ctx) {\r\n  if (ctx.errno) {\r\n    const uvErr = uvErrmapGet(ctx.errno);\r\n    return uvErr?.[0] === 'ENOENT';\r\n  }\r\n\r\n  if (ctx.error) {\r\n    return ctx.error.code === 'ENOENT';\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n/**\r\n * Synchronously retrieves the `fs.Stats` for\r\n * the file descriptor.\r\n * @param {number} fd\r\n * @param {{\r\n *   bigint?: boolean;\r\n *   }} [options]\r\n * @returns {Stats}\r\n */\r\nfunction fstatSync(fd, options = { bigint: false }) {\r\n  fd = getValidatedFd(fd);\r\n  const ctx = { fd };\r\n  const stats = binding.fstat(fd, options.bigint, undefined, ctx);\r\n  handleErrorFromBinding(ctx);\r\n  return getStatsFromBinding(stats);\r\n}\r\n\r\n/**\r\n * Synchronously retrieves the `fs.Stats` for\r\n * the symbolic link referred to by the `path`.\r\n * @param {string | Buffer | URL} path\r\n * @param {{\r\n *   bigint?: boolean;\r\n *   throwIfNoEntry?: boolean;\r\n *   }} [options]\r\n * @returns {Stats}\r\n */\r\nfunction lstatSync(path, options = { bigint: false, throwIfNoEntry: true }) {\r\n  path = getValidatedPath(path);\r\n  const ctx = { path };\r\n  const stats = binding.lstat(pathModule.toNamespacedPath(path),\r\n                              options.bigint, undefined, ctx);\r\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\r\n    return undefined;\r\n  }\r\n  handleErrorFromBinding(ctx);\r\n  return getStatsFromBinding(stats);\r\n}\r\n\r\n/**\r\n * Synchronously retrieves the `fs.Stats`\r\n * for the `path`.\r\n * @param {string | Buffer | URL} path\r\n * @param {{\r\n *   bigint?: boolean;\r\n *   throwIfNoEntry?: boolean;\r\n *   }} [options]\r\n * @returns {Stats}\r\n */\r\nfunction statSync(path, options = { bigint: false, throwIfNoEntry: true }) {\r\n  path = getValidatedPath(path);\r\n  const ctx = { path };\r\n  const stats = binding.stat(pathModule.toNamespacedPath(path),\r\n                             options.bigint, undefined, ctx);\r\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\r\n    return undefined;\r\n  }\r\n  handleErrorFromBinding(ctx);\r\n  return getStatsFromBinding(stats);\r\n}\r\n\r\nfunction statfsSync(path, options = { bigint: false }) {\r\n  path = getValidatedPath(path);\r\n  const ctx = { path };\r\n  const stats = binding.statfs(pathModule.toNamespacedPath(path),\r\n                               options.bigint, undefined, ctx);\r\n  handleErrorFromBinding(ctx);\r\n  return getStatFsFromBinding(stats);\r\n}\r\n\r\n/**\r\n * Reads the contents of a symbolic link\r\n * referred to by `path`.\r\n * @param {string | Buffer | URL} path\r\n * @param {{ encoding?: string; } | string} [options]\r\n * @param {(\r\n *   err?: Error,\r\n *   linkString?: string | Buffer\r\n *   ) => any} callback\r\n * @returns {void}\r\n */\r\nfunction readlink(path, options, callback) {\r\n  callback = makeCallback(typeof options === 'function' ? options : callback);\r\n  options = getOptions(options);\r\n  path = getValidatedPath(path, 'oldPath');\r\n  const req = new FSReqCallback();\r\n  req.oncomplete = callback;\r\n  binding.readlink(pathModule.toNamespacedPath(path), options.encoding, req);\r\n}\r\n\r\n/**\r\n * Synchronously reads the contents of a symbolic link\r\n * referred to by `path`.\r\n * @param {string | Buffer | URL} path\r\n * @param {{ encoding?: string; } | string} [options]\r\n * @returns {string | Buffer}\r\n */\r\nfunction readlinkSync(path, options) {\r\n  options = getOptions(options);\r\n  path = getValidatedPath(path, 'oldPath');\r\n  const ctx = { path };\r\n  const result = binding.readlink(pathModule.toNamespacedPath(path),\r\n                                  options.encoding, undefined, ctx);\r\n  handleErrorFromBinding(ctx);\r\n  return result;\r\n}\r\n\r\n/**\r\n * Creates the link called `path` pointing to `target`.\r\n * @param {string | Buffer | URL} target\r\n * @param {string | Buffer | URL} path\r\n * @param {string | null} [type_]\r\n * @param {(err?: Error) => any} callback_\r\n * @returns {void}\r\n */\r\nfunction symlink(target, path, type_, callback_) {\r\n  const type = (typeof type_ === 'string' ? type_ : null);\r\n  const callback = makeCallback(arguments[arguments.length - 1]);\r\n\r\n  target = getValidatedPath(target, 'target');\r\n  path = getValidatedPath(path);\r\n\r\n  if (isWindows && type === null) {\r\n    let absoluteTarget;\r\n    try {\r\n      // Symlinks targets can be relative to the newly created path.\r\n      // Calculate absolute file name of the symlink target, and check\r\n      // if it is a directory. Ignore resolve error to keep symlink\r\n      // errors consistent between platforms if invalid path is\r\n      // provided.\r\n      absoluteTarget = pathModule.resolve(path, '..', target);\r\n    } catch {\r\n      // Continue regardless of error.\r\n    }\r\n    if (absoluteTarget !== undefined) {\r\n      stat(absoluteTarget, (err, stat) => {\r\n        const resolvedType = !err && stat.isDirectory() ? 'dir' : 'file';\r\n        const resolvedFlags = stringToSymlinkType(resolvedType);\r\n        const destination = preprocessSymlinkDestination(target,\r\n                                                         resolvedType,\r\n                                                         path);\r\n\r\n        const req = new FSReqCallback();\r\n        req.oncomplete = callback;\r\n        binding.symlink(destination,\r\n                        pathModule.toNamespacedPath(path), resolvedFlags, req);\r\n      });\r\n      return;\r\n    }\r\n  }\r\n\r\n  const destination = preprocessSymlinkDestination(target, type, path);\r\n\r\n  const flags = stringToSymlinkType(type);\r\n  const req = new FSReqCallback();\r\n  req.oncomplete = callback;\r\n  binding.symlink(destination, pathModule.toNamespacedPath(path), flags, req);\r\n}\r\n\r\n/**\r\n * Synchronously creates the link called `path`\r\n * pointing to `target`.\r\n * @param {string | Buffer | URL} target\r\n * @param {string | Buffer | URL} path\r\n * @param {string | null} [type]\r\n * @returns {void}\r\n */\r\nfunction symlinkSync(target, path, type) {\r\n  type = (typeof type === 'string' ? type : null);\r\n  if (isWindows && type === null) {\r\n    const absoluteTarget = pathModule.resolve(`${path}`, '..', `${target}`);\r\n    if (statSync(absoluteTarget, { throwIfNoEntry: false })?.isDirectory()) {\r\n      type = 'dir';\r\n    }\r\n  }\r\n  target = getValidatedPath(target, 'target');\r\n  path = getValidatedPath(path);\r\n  const flags = stringToSymlinkType(type);\r\n\r\n  const ctx = { path: target, dest: path };\r\n  binding.symlink(preprocessSymlinkDestination(target, type, path),\r\n                  pathModule.toNamespacedPath(path), flags, undefined, ctx);\r\n\r\n  handleErrorFromBinding(ctx);\r\n}\r\n\r\n/**\r\n * Creates a new link from the `existingPath`\r\n * to the `newPath`.\r\n * @param {string | Buffer | URL} existingPath\r\n * @param {string | Buffer | URL} newPath\r\n * @param {(err?: Error) => any} callback\r\n * @returns {void}\r\n */\r\nfunction link(existingPath, newPath, callback) {\r\n  callback = makeCallback(callback);\r\n\r\n  existingPath = getValidatedPath(existingPath, 'existingPath');\r\n  newPath = getValidatedPath(newPath, 'newPath');\r\n\r\n  const req = new FSReqCallback();\r\n  req.oncomplete = callback;\r\n\r\n  binding.link(pathModule.toNamespacedPath(existingPath),\r\n               pathModule.toNamespacedPath(newPath),\r\n               req);\r\n}\r\n\r\n/**\r\n * Synchronously creates a new link from the `existingPath`\r\n * to the `newPath`.\r\n * @param {string | Buffer | URL} existingPath\r\n * @param {string | Buffer | URL} newPath\r\n * @returns {void}\r\n */\r\nfunction linkSync(existingPath, newPath) {\r\n  existingPath = getValidatedPath(existingPath, 'existingPath');\r\n  newPath = getValidatedPath(newPath, 'newPath');\r\n\r\n  const ctx = { path: existingPath, dest: newPath };\r\n  const result = binding.link(pathModule.toNamespacedPath(existingPath),\r\n                              pathModule.toNamespacedPath(newPath),\r\n                              undefined, ctx);\r\n  handleErrorFromBinding(ctx);\r\n  return result;\r\n}\r\n\r\n/**\r\n * Asynchronously removes a file or symbolic link.\r\n * @param {string | Buffer | URL} path\r\n * @param {(err?: Error) => any} callback\r\n * @returns {void}\r\n */\r\nfunction unlink(path, callback) {\r\n  callback = makeCallback(callback);\r\n  path = getValidatedPath(path);\r\n  const req = new FSReqCallback();\r\n  req.oncomplete = callback;\r\n  binding.unlink(pathModule.toNamespacedPath(path), req);\r\n}\r\n\r\n/**\r\n * Synchronously removes a file or symbolic link.\r\n * @param {string | Buffer | URL} path\r\n * @returns {void}\r\n */\r\nfunction unlinkSync(path) {\r\n  path = getValidatedPath(path);\r\n  const ctx = { path };\r\n  binding.unlink(pathModule.toNamespacedPath(path), undefined, ctx);\r\n  handleErrorFromBinding(ctx);\r\n}\r\n\r\n/**\r\n * Sets the permissions on the file.\r\n * @param {number} fd\r\n * @param {string | number} mode\r\n * @param {(err?: Error) => any} callback\r\n * @returns {void}\r\n */\r\nfunction fchmod(fd, mode, callback) {\r\n  fd = getValidatedFd(fd);\r\n  mode = parseFileMode(mode, 'mode');\r\n  callback = makeCallback(callback);\r\n\r\n  const req = new FSReqCallback();\r\n  req.oncomplete = callback;\r\n  binding.fchmod(fd, mode, req);\r\n}\r\n\r\n/**\r\n * Synchronously sets the permissions on the file.\r\n * @param {number} fd\r\n * @param {string | number} mode\r\n * @returns {void}\r\n */\r\nfunction fchmodSync(fd, mode) {\r\n  fd = getValidatedFd(fd);\r\n  mode = parseFileMode(mode, 'mode');\r\n  const ctx = {};\r\n  binding.fchmod(fd, mode, undefined, ctx);\r\n  handleErrorFromBinding(ctx);\r\n}\r\n\r\n/**\r\n * Changes the permissions on a symbolic link.\r\n * @param {string | Buffer | URL} path\r\n * @param {number} mode\r\n * @param {(err?: Error) => any} callback\r\n * @returns {void}\r\n */\r\nfunction lchmod(path, mode, callback) {\r\n  callback = maybeCallback(callback);\r\n  mode = parseFileMode(mode, 'mode');\r\n  fs.open(path, O_WRONLY | O_SYMLINK, (err, fd) => {\r\n    if (err) {\r\n      callback(err);\r\n      return;\r\n    }\r\n    // Prefer to return the chmod error, if one occurs,\r\n    // but still try to close, and report closing errors if they occur.\r\n    fs.fchmod(fd, mode, (err) => {\r\n      fs.close(fd, (err2) => {\r\n        callback(aggregateTwoErrors(err2, err));\r\n      });\r\n    });\r\n  });\r\n}\r\n\r\n/**\r\n * Synchronously changes the permissions on a symbolic link.\r\n * @param {string | Buffer | URL} path\r\n * @param {number} mode\r\n * @returns {void}\r\n */\r\nfunction lchmodSync(path, mode) {\r\n  const fd = fs.openSync(path, O_WRONLY | O_SYMLINK);\r\n\r\n  // Prefer to return the chmod error, if one occurs,\r\n  // but still try to close, and report closing errors if they occur.\r\n  let ret;\r\n  try {\r\n    ret = fs.fchmodSync(fd, mode);\r\n  } finally {\r\n    fs.closeSync(fd);\r\n  }\r\n  return ret;\r\n}\r\n\r\n/**\r\n * Asynchronously changes the permissions of a file.\r\n * @param {string | Buffer | URL} path\r\n * @param {string | number} mode\r\n * @param {(err?: Error) => any} callback\r\n * @returns {void}\r\n */\r\nfunction chmod(path, mode, callback) {\r\n  path = getValidatedPath(path);\r\n  mode = parseFileMode(mode, 'mode');\r\n  callback = makeCallback(callback);\r\n\r\n  const req = new FSReqCallback();\r\n  req.oncomplete = callback;\r\n  binding.chmod(pathModule.toNamespacedPath(path), mode, req);\r\n}\r\n\r\n/**\r\n * Synchronously changes the permissions of a file.\r\n * @param {string | Buffer | URL} path\r\n * @param {string | number} mode\r\n * @returns {void}\r\n */\r\nfunction chmodSync(path, mode) {\r\n  path = getValidatedPath(path);\r\n  mode = parseFileMode(mode, 'mode');\r\n\r\n  const ctx = { path };\r\n  binding.chmod(pathModule.toNamespacedPath(path), mode, undefined, ctx);\r\n  handleErrorFromBinding(ctx);\r\n}\r\n\r\n/**\r\n * Sets the owner of the symbolic link.\r\n * @param {string | Buffer | URL} path\r\n * @param {number} uid\r\n * @param {number} gid\r\n * @param {(err?: Error) => any} callback\r\n * @returns {void}\r\n */\r\nfunction lchown(path, uid, gid, callback) {\r\n  callback = makeCallback(callback);\r\n  path = getValidatedPath(path);\r\n  validateInteger(uid, 'uid', -1, kMaxUserId);\r\n  validateInteger(gid, 'gid', -1, kMaxUserId);\r\n  const req = new FSReqCallback();\r\n  req.oncomplete = callback;\r\n  binding.lchown(pathModule.toNamespacedPath(path), uid, gid, req);\r\n}\r\n\r\n/**\r\n * Synchronously sets the owner of the symbolic link.\r\n * @param {string | Buffer | URL} path\r\n * @param {number} uid\r\n * @param {number} gid\r\n * @returns {void}\r\n */\r\nfunction lchownSync(path, uid, gid) {\r\n  path = getValidatedPath(path);\r\n  validateInteger(uid, 'uid', -1, kMaxUserId);\r\n  validateInteger(gid, 'gid', -1, kMaxUserId);\r\n  const ctx = { path };\r\n  binding.lchown(pathModule.toNamespacedPath(path), uid, gid, undefined, ctx);\r\n  handleErrorFromBinding(ctx);\r\n}\r\n\r\n/**\r\n * Sets the owner of the file.\r\n * @param {number} fd\r\n * @param {number} uid\r\n * @param {number} gid\r\n * @param {(err?: Error) => any} callback\r\n * @returns {void}\r\n */\r\nfunction fchown(fd, uid, gid, callback) {\r\n  fd = getValidatedFd(fd);\r\n  validateInteger(uid, 'uid', -1, kMaxUserId);\r\n  validateInteger(gid, 'gid', -1, kMaxUserId);\r\n  callback = makeCallback(callback);\r\n\r\n  const req = new FSReqCallback();\r\n  req.oncomplete = callback;\r\n  binding.fchown(fd, uid, gid, req);\r\n}\r\n\r\n/**\r\n * Synchronously sets the owner of the file.\r\n * @param {number} fd\r\n * @param {number} uid\r\n * @param {number} gid\r\n * @returns {void}\r\n */\r\nfunction fchownSync(fd, uid, gid) {\r\n  fd = getValidatedFd(fd);\r\n  validateInteger(uid, 'uid', -1, kMaxUserId);\r\n  validateInteger(gid, 'gid', -1, kMaxUserId);\r\n\r\n  const ctx = {};\r\n  binding.fchown(fd, uid, gid, undefined, ctx);\r\n  handleErrorFromBinding(ctx);\r\n}\r\n\r\n/**\r\n * Asynchronously changes the owner and group\r\n * of a file.\r\n * @param {string | Buffer | URL} path\r\n * @param {number} uid\r\n * @param {number} gid\r\n * @param {(err?: Error) => any} callback\r\n * @returns {void}\r\n */\r\nfunction chown(path, uid, gid, callback) {\r\n  callback = makeCallback(callback);\r\n  path = getValidatedPath(path);\r\n  validateInteger(uid, 'uid', -1, kMaxUserId);\r\n  validateInteger(gid, 'gid', -1, kMaxUserId);\r\n\r\n  const req = new FSReqCallback();\r\n  req.oncomplete = callback;\r\n  binding.chown(pathModule.toNamespacedPath(path), uid, gid, req);\r\n}\r\n\r\n/**\r\n * Synchronously changes the owner and group\r\n * of a file.\r\n * @param {string | Buffer | URL} path\r\n * @param {number} uid\r\n * @param {number} gid\r\n * @returns {void}\r\n */\r\nfunction chownSync(path, uid, gid) {\r\n  path = getValidatedPath(path);\r\n  validateInteger(uid, 'uid', -1, kMaxUserId);\r\n  validateInteger(gid, 'gid', -1, kMaxUserId);\r\n  const ctx = { path };\r\n  binding.chown(pathModule.toNamespacedPath(path), uid, gid, undefined, ctx);\r\n  handleErrorFromBinding(ctx);\r\n}\r\n\r\n/**\r\n * Changes the file system timestamps of the object\r\n * referenced by `path`.\r\n * @param {string | Buffer | URL} path\r\n * @param {number | string | Date} atime\r\n * @param {number | string | Date} mtime\r\n * @param {(err?: Error) => any} callback\r\n * @returns {void}\r\n */\r\nfunction utimes(path, atime, mtime, callback) {\r\n  callback = makeCallback(callback);\r\n  path = getValidatedPath(path);\r\n\r\n  const req = new FSReqCallback();\r\n  req.oncomplete = callback;\r\n  binding.utimes(pathModule.toNamespacedPath(path),\r\n                 toUnixTimestamp(atime),\r\n                 toUnixTimestamp(mtime),\r\n                 req);\r\n}\r\n\r\n/**\r\n * Synchronously changes the file system timestamps\r\n * of the object referenced by `path`.\r\n * @param {string | Buffer | URL} path\r\n * @param {number | string | Date} atime\r\n * @param {number | string | Date} mtime\r\n * @returns {void}\r\n */\r\nfunction utimesSync(path, atime, mtime) {\r\n  path = getValidatedPath(path);\r\n  const ctx = { path };\r\n  binding.utimes(pathModule.toNamespacedPath(path),\r\n                 toUnixTimestamp(atime), toUnixTimestamp(mtime),\r\n                 undefined, ctx);\r\n  handleErrorFromBinding(ctx);\r\n}\r\n\r\n/**\r\n * Changes the file system timestamps of the object\r\n * referenced by the supplied `fd` (file descriptor).\r\n * @param {number} fd\r\n * @param {number | string | Date} atime\r\n * @param {number | string | Date} mtime\r\n * @param {(err?: Error) => any} callback\r\n * @returns {void}\r\n */\r\nfunction futimes(fd, atime, mtime, callback) {\r\n  fd = getValidatedFd(fd);\r\n  atime = toUnixTimestamp(atime, 'atime');\r\n  mtime = toUnixTimestamp(mtime, 'mtime');\r\n  callback = makeCallback(callback);\r\n\r\n  const req = new FSReqCallback();\r\n  req.oncomplete = callback;\r\n  binding.futimes(fd, atime, mtime, req);\r\n}\r\n\r\n/**\r\n * Synchronously changes the file system timestamps\r\n * of the object referenced by the\r\n * supplied `fd` (file descriptor).\r\n * @param {number} fd\r\n * @param {number | string | Date} atime\r\n * @param {number | string | Date} mtime\r\n * @returns {void}\r\n */\r\nfunction futimesSync(fd, atime, mtime) {\r\n  fd = getValidatedFd(fd);\r\n  atime = toUnixTimestamp(atime, 'atime');\r\n  mtime = toUnixTimestamp(mtime, 'mtime');\r\n  const ctx = {};\r\n  binding.futimes(fd, atime, mtime, undefined, ctx);\r\n  handleErrorFromBinding(ctx);\r\n}\r\n\r\n/**\r\n * Changes the access and modification times of\r\n * a file in the same way as `fs.utimes()`.\r\n * @param {string | Buffer | URL} path\r\n * @param {number | string | Date} atime\r\n * @param {number | string | Date} mtime\r\n * @param {(err?: Error) => any} callback\r\n * @returns {void}\r\n */\r\nfunction lutimes(path, atime, mtime, callback) {\r\n  callback = makeCallback(callback);\r\n  path = getValidatedPath(path);\r\n\r\n  const req = new FSReqCallback();\r\n  req.oncomplete = callback;\r\n  binding.lutimes(pathModule.toNamespacedPath(path),\r\n                  toUnixTimestamp(atime),\r\n                  toUnixTimestamp(mtime),\r\n                  req);\r\n}\r\n\r\n/**\r\n * Synchronously changes the access and modification\r\n * times of a file in the same way as `fs.utimesSync()`.\r\n * @param {string | Buffer | URL} path\r\n * @param {number | string | Date} atime\r\n * @param {number | string | Date} mtime\r\n * @returns {void}\r\n */\r\nfunction lutimesSync(path, atime, mtime) {\r\n  path = getValidatedPath(path);\r\n  const ctx = { path };\r\n  binding.lutimes(pathModule.toNamespacedPath(path),\r\n                  toUnixTimestamp(atime),\r\n                  toUnixTimestamp(mtime),\r\n                  undefined, ctx);\r\n  handleErrorFromBinding(ctx);\r\n}\r\n\r\nfunction writeAll(fd, isUserFd, buffer, offset, length, signal, callback) {\r\n  if (signal?.aborted) {\r\n    const abortError = new AbortError(undefined, { cause: signal?.reason });\r\n    if (isUserFd) {\r\n      callback(abortError);\r\n    } else {\r\n      fs.close(fd, (err) => {\r\n        callback(aggregateTwoErrors(err, abortError));\r\n      });\r\n    }\r\n    return;\r\n  }\r\n  // write(fd, buffer, offset, length, position, callback)\r\n  fs.write(fd, buffer, offset, length, null, (writeErr, written) => {\r\n    if (writeErr) {\r\n      if (isUserFd) {\r\n        callback(writeErr);\r\n      } else {\r\n        fs.close(fd, (err) => {\r\n          callback(aggregateTwoErrors(err, writeErr));\r\n        });\r\n      }\r\n    } else if (written === length) {\r\n      if (isUserFd) {\r\n        callback(null);\r\n      } else {\r\n        fs.close(fd, callback);\r\n      }\r\n    } else {\r\n      offset += written;\r\n      length -= written;\r\n      writeAll(fd, isUserFd, buffer, offset, length, signal, callback);\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Asynchronously writes data to the file.\r\n * @param {string | Buffer | URL | number} path\r\n * @param {string | Buffer | TypedArray | DataView | object} data\r\n * @param {{\r\n *   encoding?: string | null;\r\n *   mode?: number;\r\n *   flag?: string;\r\n *   signal?: AbortSignal;\r\n *   } | string} [options]\r\n * @param {(err?: Error) => any} callback\r\n * @returns {void}\r\n */\r\nfunction writeFile(path, data, options, callback) {\r\n  callback = maybeCallback(callback || options);\r\n  options = getOptions(options, { encoding: 'utf8', mode: 0o666, flag: 'w' });\r\n  const flag = options.flag || 'w';\r\n\r\n  if (!isArrayBufferView(data)) {\r\n    validateStringAfterArrayBufferView(data, 'data');\r\n    if (typeof data !== 'string') {\r\n      showStringCoercionDeprecation();\r\n    }\r\n    data = Buffer.from(String(data), options.encoding || 'utf8');\r\n  }\r\n\r\n  if (isFd(path)) {\r\n    const isUserFd = true;\r\n    const signal = options.signal;\r\n    writeAll(path, isUserFd, data, 0, data.byteLength, signal, callback);\r\n    return;\r\n  }\r\n\r\n  if (checkAborted(options.signal, callback))\r\n    return;\r\n\r\n  fs.open(path, flag, options.mode, (openErr, fd) => {\r\n    if (openErr) {\r\n      callback(openErr);\r\n    } else {\r\n      const isUserFd = false;\r\n      const signal = options.signal;\r\n      writeAll(fd, isUserFd, data, 0, data.byteLength, signal, callback);\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Synchronously writes data to the file.\r\n * @param {string | Buffer | URL | number} path\r\n * @param {string | Buffer | TypedArray | DataView | object} data\r\n * @param {{\r\n *   encoding?: string | null;\r\n *   mode?: number;\r\n *   flag?: string;\r\n *   } | string} [options]\r\n * @returns {void}\r\n */\r\nfunction writeFileSync(path, data, options) {\r\n  options = getOptions(options, { encoding: 'utf8', mode: 0o666, flag: 'w' });\r\n\r\n  if (!isArrayBufferView(data)) {\r\n    validateStringAfterArrayBufferView(data, 'data');\r\n    if (typeof data !== 'string') {\r\n      showStringCoercionDeprecation();\r\n    }\r\n    data = Buffer.from(String(data), options.encoding || 'utf8');\r\n  }\r\n\r\n  const flag = options.flag || 'w';\r\n\r\n  const isUserFd = isFd(path); // File descriptor ownership\r\n  const fd = isUserFd ? path : fs.openSync(path, flag, options.mode);\r\n\r\n  let offset = 0;\r\n  let length = data.byteLength;\r\n  try {\r\n    while (length > 0) {\r\n      const written = fs.writeSync(fd, data, offset, length);\r\n      offset += written;\r\n      length -= written;\r\n    }\r\n  } finally {\r\n    if (!isUserFd) fs.closeSync(fd);\r\n  }\r\n}\r\n\r\n/**\r\n * Asynchronously appends data to a file.\r\n * @param {string | Buffer | URL | number} path\r\n * @param {string | Buffer} data\r\n * @param {{\r\n *   encoding?: string | null;\r\n *   mode?: number;\r\n *   flag?: string;\r\n *   } | string} [options]\r\n * @param {(err?: Error) => any} callback\r\n * @returns {void}\r\n */\r\nfunction appendFile(path, data, options, callback) {\r\n  callback = maybeCallback(callback || options);\r\n  options = getOptions(options, { encoding: 'utf8', mode: 0o666, flag: 'a' });\r\n\r\n  // Don't make changes directly on options object\r\n  options = copyObject(options);\r\n\r\n  // Force append behavior when using a supplied file descriptor\r\n  if (!options.flag || isFd(path))\r\n    options.flag = 'a';\r\n\r\n  fs.writeFile(path, data, options, callback);\r\n}\r\n\r\n/**\r\n * Synchronously appends data to a file.\r\n * @param {string | Buffer | URL | number} path\r\n * @param {string | Buffer} data\r\n * @param {{\r\n *   encoding?: string | null;\r\n *   mode?: number;\r\n *   flag?: string;\r\n *   } | string} [options]\r\n * @returns {void}\r\n */\r\nfunction appendFileSync(path, data, options) {\r\n  options = getOptions(options, { encoding: 'utf8', mode: 0o666, flag: 'a' });\r\n\r\n  // Don't make changes directly on options object\r\n  options = copyObject(options);\r\n\r\n  // Force append behavior when using a supplied file descriptor\r\n  if (!options.flag || isFd(path))\r\n    options.flag = 'a';\r\n\r\n  fs.writeFileSync(path, data, options);\r\n}\r\n\r\n/**\r\n * Watches for the changes on `filename`.\r\n * @param {string | Buffer | URL} filename\r\n * @param {string | {\r\n *   persistent?: boolean;\r\n *   recursive?: boolean;\r\n *   encoding?: string;\r\n *   signal?: AbortSignal;\r\n *   }} [options]\r\n * @param {(\r\n *   eventType?: string,\r\n *   filename?: string | Buffer\r\n *   ) => any} [listener]\r\n * @returns {watchers.FSWatcher}\r\n */\r\nfunction watch(filename, options, listener) {\r\n  if (typeof options === 'function') {\r\n    listener = options;\r\n  }\r\n  options = getOptions(options);\r\n\r\n  // Don't make changes directly on options object\r\n  options = copyObject(options);\r\n\r\n  if (options.persistent === undefined) options.persistent = true;\r\n  if (options.recursive === undefined) options.recursive = false;\r\n  if (options.recursive && !(isOSX || isWindows))\r\n    throw new ERR_FEATURE_UNAVAILABLE_ON_PLATFORM('watch recursively');\r\n  const watcher = new watchers.FSWatcher();\r\n  watcher[watchers.kFSWatchStart](filename,\r\n                                  options.persistent,\r\n                                  options.recursive,\r\n                                  options.encoding);\r\n\r\n  if (listener) {\r\n    watcher.addListener('change', listener);\r\n  }\r\n  if (options.signal) {\r\n    if (options.signal.aborted) {\r\n      process.nextTick(() => watcher.close());\r\n    } else {\r\n      const listener = () => watcher.close();\r\n      options.signal.addEventListener('abort', listener);\r\n      watcher.once('close', () => {\r\n        options.signal.removeEventListener('abort', listener);\r\n      });\r\n    }\r\n  }\r\n\r\n  return watcher;\r\n}\r\n\r\n\r\nconst statWatchers = new SafeMap();\r\n\r\n/**\r\n * Watches for changes on `filename`.\r\n * @param {string | Buffer | URL} filename\r\n * @param {{\r\n *   bigint?: boolean;\r\n *   persistent?: boolean;\r\n *   interval?: number;\r\n *   }} [options]\r\n * @param {(\r\n *   current?: Stats,\r\n *   previous?: Stats\r\n *   ) => any} listener\r\n * @returns {watchers.StatWatcher}\r\n */\r\nfunction watchFile(filename, options, listener) {\r\n  filename = getValidatedPath(filename);\r\n  filename = pathModule.resolve(filename);\r\n  let stat;\r\n\r\n  if (options === null || typeof options !== 'object') {\r\n    listener = options;\r\n    options = null;\r\n  }\r\n\r\n  options = {\r\n    // Poll interval in milliseconds. 5007 is what libev used to use. It's\r\n    // a little on the slow side but let's stick with it for now to keep\r\n    // behavioral changes to a minimum.\r\n    interval: 5007,\r\n    persistent: true,\r\n    ...options\r\n  };\r\n\r\n  validateFunction(listener, 'listener');\r\n\r\n  stat = statWatchers.get(filename);\r\n\r\n  if (stat === undefined) {\r\n    stat = new watchers.StatWatcher(options.bigint);\r\n    stat[watchers.kFSStatWatcherStart](filename,\r\n                                       options.persistent, options.interval);\r\n    statWatchers.set(filename, stat);\r\n  } else {\r\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('add');\r\n  }\r\n\r\n  stat.addListener('change', listener);\r\n  return stat;\r\n}\r\n\r\n/**\r\n * Stops watching for changes on `filename`.\r\n * @param {string | Buffer | URL} filename\r\n * @param {() => any} [listener]\r\n * @returns {void}\r\n */\r\nfunction unwatchFile(filename, listener) {\r\n  filename = getValidatedPath(filename);\r\n  filename = pathModule.resolve(filename);\r\n  const stat = statWatchers.get(filename);\r\n\r\n  if (stat === undefined) return;\r\n\r\n  if (typeof listener === 'function') {\r\n    const beforeListenerCount = stat.listenerCount('change');\r\n    stat.removeListener('change', listener);\r\n    if (stat.listenerCount('change') < beforeListenerCount)\r\n      stat[watchers.kFSStatWatcherAddOrCleanRef]('clean');\r\n  } else {\r\n    stat.removeAllListeners('change');\r\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('cleanAll');\r\n  }\r\n\r\n  if (stat.listenerCount('change') === 0) {\r\n    stat.stop();\r\n    statWatchers.delete(filename);\r\n  }\r\n}\r\n\r\n\r\nlet splitRoot;\r\nif (isWindows) {\r\n  // Regex to find the device root on Windows (e.g. 'c:\\\\'), including trailing\r\n  // slash.\r\n  const splitRootRe = /^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*/;\r\n  splitRoot = function splitRoot(str) {\r\n    return SideEffectFreeRegExpPrototypeExec(splitRootRe, str)[0];\r\n  };\r\n} else {\r\n  splitRoot = function splitRoot(str) {\r\n    for (let i = 0; i < str.length; ++i) {\r\n      if (StringPrototypeCharCodeAt(str, i) !== CHAR_FORWARD_SLASH)\r\n        return StringPrototypeSlice(str, 0, i);\r\n    }\r\n    return str;\r\n  };\r\n}\r\n\r\nfunction encodeRealpathResult(result, options) {\r\n  if (!options || !options.encoding || options.encoding === 'utf8')\r\n    return result;\r\n  const asBuffer = Buffer.from(result);\r\n  if (options.encoding === 'buffer') {\r\n    return asBuffer;\r\n  }\r\n  return asBuffer.toString(options.encoding);\r\n}\r\n\r\n// Finds the next portion of a (partial) path, up to the next path delimiter\r\nlet nextPart;\r\nif (isWindows) {\r\n  nextPart = function nextPart(p, i) {\r\n    for (; i < p.length; ++i) {\r\n      const ch = StringPrototypeCharCodeAt(p, i);\r\n\r\n      // Check for a separator character\r\n      if (ch === CHAR_BACKWARD_SLASH || ch === CHAR_FORWARD_SLASH)\r\n        return i;\r\n    }\r\n    return -1;\r\n  };\r\n} else {\r\n  nextPart = function nextPart(p, i) {\r\n    return StringPrototypeIndexOf(p, '/', i);\r\n  };\r\n}\r\n\r\n/**\r\n * Returns the resolved pathname.\r\n * @param {string | Buffer | URL} p\r\n * @param {string | { encoding?: string | null; }} [options]\r\n * @returns {string | Buffer}\r\n */\r\nfunction realpathSync(p, options) {\r\n  options = getOptions(options);\r\n  p = toPathIfFileURL(p);\r\n  if (typeof p !== 'string') {\r\n    p += '';\r\n  }\r\n  validatePath(p);\r\n  p = pathModule.resolve(p);\r\n\r\n  const cache = options[realpathCacheKey];\r\n  const maybeCachedResult = cache?.get(p);\r\n  if (maybeCachedResult) {\r\n    return maybeCachedResult;\r\n  }\r\n\r\n  const seenLinks = new SafeMap();\r\n  const knownHard = new SafeSet();\r\n  const original = p;\r\n\r\n  // Current character position in p\r\n  let pos;\r\n  // The partial path so far, including a trailing slash if any\r\n  let current;\r\n  // The partial path without a trailing slash (except when pointing at a root)\r\n  let base;\r\n  // The partial path scanned in the previous round, with slash\r\n  let previous;\r\n\r\n  // Skip over roots\r\n  current = base = splitRoot(p);\r\n  pos = current.length;\r\n\r\n  // On windows, check that the root exists. On unix there is no need.\r\n  if (isWindows) {\r\n    const ctx = { path: base };\r\n    binding.lstat(pathModule.toNamespacedPath(base), false, undefined, ctx);\r\n    handleErrorFromBinding(ctx);\r\n    knownHard.add(base);\r\n  }\r\n\r\n  // Walk down the path, swapping out linked path parts for their real\r\n  // values\r\n  // NB: p.length changes.\r\n  while (pos < p.length) {\r\n    // find the next part\r\n    const result = nextPart(p, pos);\r\n    previous = current;\r\n    if (result === -1) {\r\n      const last = StringPrototypeSlice(p, pos);\r\n      current += last;\r\n      base = previous + last;\r\n      pos = p.length;\r\n    } else {\r\n      current += StringPrototypeSlice(p, pos, result + 1);\r\n      base = previous + StringPrototypeSlice(p, pos, result);\r\n      pos = result + 1;\r\n    }\r\n\r\n    // Continue if not a symlink, break if a pipe/socket\r\n    if (knownHard.has(base) || cache?.get(base) === base) {\r\n      if (isFileType(binding.statValues, S_IFIFO) ||\r\n          isFileType(binding.statValues, S_IFSOCK)) {\r\n        break;\r\n      }\r\n      continue;\r\n    }\r\n\r\n    let resolvedLink;\r\n    const maybeCachedResolved = cache?.get(base);\r\n    if (maybeCachedResolved) {\r\n      resolvedLink = maybeCachedResolved;\r\n    } else {\r\n      // Use stats array directly to avoid creating an fs.Stats instance just\r\n      // for our internal use.\r\n\r\n      const baseLong = pathModule.toNamespacedPath(base);\r\n      const ctx = { path: base };\r\n      const stats = binding.lstat(baseLong, true, undefined, ctx);\r\n      handleErrorFromBinding(ctx);\r\n\r\n      if (!isFileType(stats, S_IFLNK)) {\r\n        knownHard.add(base);\r\n        cache?.set(base, base);\r\n        continue;\r\n      }\r\n\r\n      // Read the link if it wasn't read before\r\n      // dev/ino always return 0 on windows, so skip the check.\r\n      let linkTarget = null;\r\n      let id;\r\n      if (!isWindows) {\r\n        const dev = BigIntPrototypeToString(stats[0], 32);\r\n        const ino = BigIntPrototypeToString(stats[7], 32);\r\n        id = `${dev}:${ino}`;\r\n        if (seenLinks.has(id)) {\r\n          linkTarget = seenLinks.get(id);\r\n        }\r\n      }\r\n      if (linkTarget === null) {\r\n        const ctx = { path: base };\r\n        binding.stat(baseLong, false, undefined, ctx);\r\n        handleErrorFromBinding(ctx);\r\n        linkTarget = binding.readlink(baseLong, undefined, undefined, ctx);\r\n        handleErrorFromBinding(ctx);\r\n      }\r\n      resolvedLink = pathModule.resolve(previous, linkTarget);\r\n\r\n      cache?.set(base, resolvedLink);\r\n      if (!isWindows) seenLinks.set(id, linkTarget);\r\n    }\r\n\r\n    // Resolve the link, then start over\r\n    p = pathModule.resolve(resolvedLink, StringPrototypeSlice(p, pos));\r\n\r\n    // Skip over roots\r\n    current = base = splitRoot(p);\r\n    pos = current.length;\r\n\r\n    // On windows, check that the root exists. On unix there is no need.\r\n    if (isWindows && !knownHard.has(base)) {\r\n      const ctx = { path: base };\r\n      binding.lstat(pathModule.toNamespacedPath(base), false, undefined, ctx);\r\n      handleErrorFromBinding(ctx);\r\n      knownHard.add(base);\r\n    }\r\n  }\r\n\r\n  cache?.set(original, p);\r\n  return encodeRealpathResult(p, options);\r\n}\r\n\r\n/**\r\n * Returns the resolved pathname.\r\n * @param {string | Buffer | URL} path\r\n * @param {string | { encoding?: string; }} [options]\r\n * @returns {string | Buffer}\r\n */\r\nrealpathSync.native = (path, options) => {\r\n  options = getOptions(options);\r\n  path = getValidatedPath(path);\r\n  const ctx = { path };\r\n  const result = binding.realpath(pathModule.toNamespacedPath(path), options.encoding, undefined, ctx);\r\n  handleErrorFromBinding(ctx);\r\n  return result;\r\n};\r\n\r\n/**\r\n * Asynchronously computes the canonical pathname by\r\n * resolving `.`, `..` and symbolic links.\r\n * @param {string | Buffer | URL} p\r\n * @param {string | { encoding?: string; }} [options]\r\n * @param {(\r\n *   err?: Error,\r\n *   resolvedPath?: string | Buffer\r\n *   ) => any} callback\r\n * @returns {void}\r\n */\r\nfunction realpath(p, options, callback) {\r\n  callback = typeof options === 'function' ? options : maybeCallback(callback);\r\n  options = getOptions(options);\r\n  p = toPathIfFileURL(p);\r\n\r\n  if (typeof p !== 'string') {\r\n    p += '';\r\n  }\r\n  validatePath(p);\r\n  p = pathModule.resolve(p);\r\n\r\n  const seenLinks = new SafeMap();\r\n  const knownHard = new SafeSet();\r\n\r\n  // Current character position in p\r\n  let pos;\r\n  // The partial path so far, including a trailing slash if any\r\n  let current;\r\n  // The partial path without a trailing slash (except when pointing at a root)\r\n  let base;\r\n  // The partial path scanned in the previous round, with slash\r\n  let previous;\r\n\r\n  current = base = splitRoot(p);\r\n  pos = current.length;\r\n\r\n  // On windows, check that the root exists. On unix there is no need.\r\n  if (isWindows && !knownHard.has(base)) {\r\n    fs.lstat(base, (err, stats) => {\r\n      if (err) return callback(err);\r\n      knownHard.add(base);\r\n      LOOP();\r\n    });\r\n  } else {\r\n    process.nextTick(LOOP);\r\n  }\r\n\r\n  // Walk down the path, swapping out linked path parts for their real\r\n  // values\r\n  function LOOP() {\r\n    // Stop if scanned past end of path\r\n    if (pos >= p.length) {\r\n      return callback(null, encodeRealpathResult(p, options));\r\n    }\r\n\r\n    // find the next part\r\n    const result = nextPart(p, pos);\r\n    previous = current;\r\n    if (result === -1) {\r\n      const last = StringPrototypeSlice(p, pos);\r\n      current += last;\r\n      base = previous + last;\r\n      pos = p.length;\r\n    } else {\r\n      current += StringPrototypeSlice(p, pos, result + 1);\r\n      base = previous + StringPrototypeSlice(p, pos, result);\r\n      pos = result + 1;\r\n    }\r\n\r\n    // Continue if not a symlink, break if a pipe/socket\r\n    if (knownHard.has(base)) {\r\n      if (isFileType(binding.statValues, S_IFIFO) ||\r\n          isFileType(binding.statValues, S_IFSOCK)) {\r\n        return callback(null, encodeRealpathResult(p, options));\r\n      }\r\n      return process.nextTick(LOOP);\r\n    }\r\n\r\n    return fs.lstat(base, { bigint: true }, gotStat);\r\n  }\r\n\r\n  function gotStat(err, stats) {\r\n    if (err) return callback(err);\r\n\r\n    // If not a symlink, skip to the next path part\r\n    if (!stats.isSymbolicLink()) {\r\n      knownHard.add(base);\r\n      return process.nextTick(LOOP);\r\n    }\r\n\r\n    // Stat & read the link if not read before.\r\n    // Call `gotTarget()` as soon as the link target is known.\r\n    // `dev`/`ino` always return 0 on windows, so skip the check.\r\n    let id;\r\n    if (!isWindows) {\r\n      const dev = BigIntPrototypeToString(stats.dev, 32);\r\n      const ino = BigIntPrototypeToString(stats.ino, 32);\r\n      id = `${dev}:${ino}`;\r\n      if (seenLinks.has(id)) {\r\n        return gotTarget(null, seenLinks.get(id));\r\n      }\r\n    }\r\n    fs.stat(base, (err) => {\r\n      if (err) return callback(err);\r\n\r\n      fs.readlink(base, (err, target) => {\r\n        if (!isWindows) seenLinks.set(id, target);\r\n        gotTarget(err, target);\r\n      });\r\n    });\r\n  }\r\n\r\n  function gotTarget(err, target) {\r\n    if (err) return callback(err);\r\n\r\n    gotResolvedLink(pathModule.resolve(previous, target));\r\n  }\r\n\r\n  function gotResolvedLink(resolvedLink) {\r\n    // Resolve the link, then start over\r\n    p = pathModule.resolve(resolvedLink, StringPrototypeSlice(p, pos));\r\n    current = base = splitRoot(p);\r\n    pos = current.length;\r\n\r\n    // On windows, check that the root exists. On unix there is no need.\r\n    if (isWindows && !knownHard.has(base)) {\r\n      fs.lstat(base, (err) => {\r\n        if (err) return callback(err);\r\n        knownHard.add(base);\r\n        LOOP();\r\n      });\r\n    } else {\r\n      process.nextTick(LOOP);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Asynchronously computes the canonical pathname by\r\n * resolving `.`, `..` and symbolic links.\r\n * @param {string | Buffer | URL} path\r\n * @param {string | { encoding?: string; }} [options]\r\n * @param {(\r\n *   err?: Error,\r\n *   resolvedPath?: string | Buffer\r\n *   ) => any} callback\r\n * @returns {void}\r\n */\r\nrealpath.native = (path, options, callback) => {\r\n  callback = makeCallback(callback || options);\r\n  options = getOptions(options);\r\n  path = getValidatedPath(path);\r\n  const req = new FSReqCallback();\r\n  req.oncomplete = callback;\r\n  return binding.realpath(pathModule.toNamespacedPath(path), options.encoding, req);\r\n};\r\n\r\n/**\r\n * Creates a unique temporary directory.\r\n * @param {string} prefix\r\n * @param {string | { encoding?: string; }} [options]\r\n * @param {(\r\n *   err?: Error,\r\n *   directory?: string\r\n *   ) => any} callback\r\n * @returns {void}\r\n */\r\nfunction mkdtemp(prefix, options, callback) {\r\n  callback = makeCallback(typeof options === 'function' ? options : callback);\r\n  options = getOptions(options);\r\n\r\n  validateString(prefix, 'prefix');\r\n  nullCheck(prefix, 'prefix');\r\n  warnOnNonPortableTemplate(prefix);\r\n  const req = new FSReqCallback();\r\n  req.oncomplete = callback;\r\n  binding.mkdtemp(`${prefix}XXXXXX`, options.encoding, req);\r\n}\r\n\r\n/**\r\n * Synchronously creates a unique temporary directory.\r\n * @param {string} prefix\r\n * @param {string | { encoding?: string; }} [options]\r\n * @returns {string}\r\n */\r\nfunction mkdtempSync(prefix, options) {\r\n  options = getOptions(options);\r\n\r\n  validateString(prefix, 'prefix');\r\n  nullCheck(prefix, 'prefix');\r\n  warnOnNonPortableTemplate(prefix);\r\n  const path = `${prefix}XXXXXX`;\r\n  const ctx = { path };\r\n  const result = binding.mkdtemp(path, options.encoding,\r\n                                 undefined, ctx);\r\n  handleErrorFromBinding(ctx);\r\n  return result;\r\n}\r\n\r\n/**\r\n * Asynchronously copies `src` to `dest`. By\r\n * default, `dest` is overwritten if it already exists.\r\n * @param {string | Buffer | URL} src\r\n * @param {string | Buffer | URL} dest\r\n * @param {number} [mode]\r\n * @param {() => any} callback\r\n * @returns {void}\r\n */\r\nfunction copyFile(src, dest, mode, callback) {\r\n  if (typeof mode === 'function') {\r\n    callback = mode;\r\n    mode = 0;\r\n  }\r\n\r\n  src = getValidatedPath(src, 'src');\r\n  dest = getValidatedPath(dest, 'dest');\r\n\r\n  src = pathModule._makeLong(src);\r\n  dest = pathModule._makeLong(dest);\r\n  mode = getValidMode(mode, 'copyFile');\r\n  callback = makeCallback(callback);\r\n\r\n  const req = new FSReqCallback();\r\n  req.oncomplete = callback;\r\n  binding.copyFile(src, dest, mode, req);\r\n}\r\n\r\n/**\r\n * Synchronously copies `src` to `dest`. By\r\n * default, `dest` is overwritten if it already exists.\r\n * @param {string | Buffer | URL} src\r\n * @param {string | Buffer | URL} dest\r\n * @param {number} [mode]\r\n * @returns {void}\r\n */\r\nfunction copyFileSync(src, dest, mode) {\r\n  src = getValidatedPath(src, 'src');\r\n  dest = getValidatedPath(dest, 'dest');\r\n\r\n  const ctx = { path: src, dest };  // non-prefixed\r\n\r\n  src = pathModule._makeLong(src);\r\n  dest = pathModule._makeLong(dest);\r\n  mode = getValidMode(mode, 'copyFile');\r\n  binding.copyFile(src, dest, mode, undefined, ctx);\r\n  handleErrorFromBinding(ctx);\r\n}\r\n\r\n/**\r\n * Asynchronously copies `src` to `dest`. `src` can be a file, directory, or\r\n * symlink. The contents of directories will be copied recursively.\r\n * @param {string | URL} src\r\n * @param {string | URL} dest\r\n * @param {object} [options]\r\n * @param {() => any} callback\r\n * @returns {void}\r\n */\r\nfunction cp(src, dest, options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = undefined;\r\n  }\r\n  callback = makeCallback(callback);\r\n  options = validateCpOptions(options);\r\n  src = pathModule.toNamespacedPath(getValidatedPath(src, 'src'));\r\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest, 'dest'));\r\n  lazyLoadCp();\r\n  cpFn(src, dest, options, callback);\r\n}\r\n\r\n/**\r\n * Synchronously copies `src` to `dest`. `src` can be a file, directory, or\r\n * symlink. The contents of directories will be copied recursively.\r\n * @param {string | URL} src\r\n * @param {string | URL} dest\r\n * @param {object} [options]\r\n * @returns {void}\r\n */\r\nfunction cpSync(src, dest, options) {\r\n  options = validateCpOptions(options);\r\n  src = pathModule.toNamespacedPath(getValidatedPath(src, 'src'));\r\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest, 'dest'));\r\n  lazyLoadCp();\r\n  cpSyncFn(src, dest, options);\r\n}\r\n\r\nfunction lazyLoadStreams() {\r\n  if (!ReadStream) {\r\n    ({ ReadStream, WriteStream } = require('internal/fs/streams'));\r\n    FileReadStream = ReadStream;\r\n    FileWriteStream = WriteStream;\r\n  }\r\n}\r\n\r\n/**\r\n * Creates a readable stream with a default `highWaterMark`\r\n * of 64 KiB.\r\n * @param {string | Buffer | URL} path\r\n * @param {string | {\r\n *   flags?: string;\r\n *   encoding?: string;\r\n *   fd?: number | FileHandle;\r\n *   mode?: number;\r\n *   autoClose?: boolean;\r\n *   emitClose?: boolean;\r\n *   start: number;\r\n *   end?: number;\r\n *   highWaterMark?: number;\r\n *   fs?: object | null;\r\n *   }} [options]\r\n * @returns {ReadStream}\r\n */\r\nfunction createReadStream(path, options) {\r\n  lazyLoadStreams();\r\n  return new ReadStream(path, options);\r\n}\r\n\r\n/**\r\n * Creates a write stream.\r\n * @param {string | Buffer | URL} path\r\n * @param {string | {\r\n *   flags?: string;\r\n *   encoding?: string;\r\n *   fd?: number | FileHandle;\r\n *   mode?: number;\r\n *   autoClose?: boolean;\r\n *   emitClose?: boolean;\r\n *   start: number;\r\n *   fs?: object | null;\r\n *   }} [options]\r\n * @returns {WriteStream}\r\n */\r\nfunction createWriteStream(path, options) {\r\n  lazyLoadStreams();\r\n  return new WriteStream(path, options);\r\n}\r\n\r\nmodule.exports = fs = {\r\n  appendFile,\r\n  appendFileSync,\r\n  access,\r\n  accessSync,\r\n  chown,\r\n  chownSync,\r\n  chmod,\r\n  chmodSync,\r\n  close,\r\n  closeSync,\r\n  copyFile,\r\n  copyFileSync,\r\n  cp,\r\n  cpSync,\r\n  createReadStream,\r\n  createWriteStream,\r\n  exists,\r\n  existsSync,\r\n  fchown,\r\n  fchownSync,\r\n  fchmod,\r\n  fchmodSync,\r\n  fdatasync,\r\n  fdatasyncSync,\r\n  fstat,\r\n  fstatSync,\r\n  fsync,\r\n  fsyncSync,\r\n  ftruncate,\r\n  ftruncateSync,\r\n  futimes,\r\n  futimesSync,\r\n  lchown,\r\n  lchownSync,\r\n  lchmod: constants.O_SYMLINK !== undefined ? lchmod : undefined,\r\n  lchmodSync: constants.O_SYMLINK !== undefined ? lchmodSync : undefined,\r\n  link,\r\n  linkSync,\r\n  lstat,\r\n  lstatSync,\r\n  lutimes,\r\n  lutimesSync,\r\n  mkdir,\r\n  mkdirSync,\r\n  mkdtemp,\r\n  mkdtempSync,\r\n  open,\r\n  openSync,\r\n  opendir,\r\n  opendirSync,\r\n  readdir,\r\n  readdirSync,\r\n  read,\r\n  readSync,\r\n  readv,\r\n  readvSync,\r\n  readFile,\r\n  readFileSync,\r\n  readlink,\r\n  readlinkSync,\r\n  realpath,\r\n  realpathSync,\r\n  rename,\r\n  renameSync,\r\n  rm,\r\n  rmSync,\r\n  rmdir,\r\n  rmdirSync,\r\n  stat,\r\n  statfs,\r\n  statSync,\r\n  statfsSync,\r\n  symlink,\r\n  symlinkSync,\r\n  truncate,\r\n  truncateSync,\r\n  unwatchFile,\r\n  unlink,\r\n  unlinkSync,\r\n  utimes,\r\n  utimesSync,\r\n  watch,\r\n  watchFile,\r\n  writeFile,\r\n  writeFileSync,\r\n  write,\r\n  writeSync,\r\n  writev,\r\n  writevSync,\r\n  Dir,\r\n  Dirent,\r\n  Stats,\r\n\r\n  get ReadStream() {\r\n    lazyLoadStreams();\r\n    return ReadStream;\r\n  },\r\n\r\n  set ReadStream(val) {\r\n    ReadStream = val;\r\n  },\r\n\r\n  get WriteStream() {\r\n    lazyLoadStreams();\r\n    return WriteStream;\r\n  },\r\n\r\n  set WriteStream(val) {\r\n    WriteStream = val;\r\n  },\r\n\r\n  // Legacy names... these have to be separate because of how graceful-fs\r\n  // (and possibly other) modules monkey patch the values.\r\n  get FileReadStream() {\r\n    lazyLoadStreams();\r\n    return FileReadStream;\r\n  },\r\n\r\n  set FileReadStream(val) {\r\n    FileReadStream = val;\r\n  },\r\n\r\n  get FileWriteStream() {\r\n    lazyLoadStreams();\r\n    return FileWriteStream;\r\n  },\r\n\r\n  set FileWriteStream(val) {\r\n    FileWriteStream = val;\r\n  },\r\n\r\n  // For tests\r\n  _toUnixTimestamp: toUnixTimestamp\r\n};\r\n\r\nObjectDefineProperties(fs, {\r\n  F_OK: { __proto__: null, enumerable: true, value: F_OK || 0 },\r\n  R_OK: { __proto__: null, enumerable: true, value: R_OK || 0 },\r\n  W_OK: { __proto__: null, enumerable: true, value: W_OK || 0 },\r\n  X_OK: { __proto__: null, enumerable: true, value: X_OK || 0 },\r\n  constants: {\r\n    __proto__: null,\r\n    configurable: false,\r\n    enumerable: true,\r\n    value: constants\r\n  },\r\n  promises: {\r\n    __proto__: null,\r\n    configurable: true,\r\n    enumerable: true,\r\n    get() {\r\n      promises ??= require('internal/fs/promises').exports;\r\n      return promises;\r\n    }\r\n  }\r\n});\r\n",
    "name": "node:fs",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 75,
    "sourcePositions": []
  },
  {
    "url": "node:internal/url",
    "source": "'use strict';\r\n\r\nconst {\r\n  Array,\r\n  ArrayPrototypeJoin,\r\n  ArrayPrototypeMap,\r\n  ArrayPrototypePush,\r\n  ArrayPrototypeReduce,\r\n  ArrayPrototypeSlice,\r\n  FunctionPrototypeBind,\r\n  Int8Array,\r\n  IteratorPrototype,\r\n  Number,\r\n  ObjectCreate,\r\n  ObjectDefineProperties,\r\n  ObjectDefineProperty,\r\n  ObjectGetOwnPropertySymbols,\r\n  ObjectGetPrototypeOf,\r\n  ObjectKeys,\r\n  ReflectApply,\r\n  ReflectGetOwnPropertyDescriptor,\r\n  ReflectOwnKeys,\r\n  RegExpPrototypeSymbolReplace,\r\n  String,\r\n  StringPrototypeCharAt,\r\n  StringPrototypeCharCodeAt,\r\n  StringPrototypeCodePointAt,\r\n  StringPrototypeIncludes,\r\n  StringPrototypeIndexOf,\r\n  StringPrototypeSlice,\r\n  StringPrototypeSplit,\r\n  StringPrototypeStartsWith,\r\n  Symbol,\r\n  SymbolIterator,\r\n  SymbolToStringTag,\r\n  decodeURIComponent,\r\n} = primordials;\r\n\r\nconst { inspect } = require('internal/util/inspect');\r\nconst {\r\n  encodeStr,\r\n  hexTable,\r\n  isHexTable\r\n} = require('internal/querystring');\r\n\r\nconst {\r\n  getConstructorOf,\r\n  removeColors,\r\n  toUSVString,\r\n  kEnumerableProperty,\r\n  SideEffectFreeRegExpPrototypeSymbolReplace,\r\n} = require('internal/util');\r\n\r\nconst {\r\n  codes: {\r\n    ERR_ARG_NOT_ITERABLE,\r\n    ERR_INVALID_ARG_TYPE,\r\n    ERR_INVALID_ARG_VALUE,\r\n    ERR_INVALID_FILE_URL_HOST,\r\n    ERR_INVALID_FILE_URL_PATH,\r\n    ERR_INVALID_THIS,\r\n    ERR_INVALID_TUPLE,\r\n    ERR_INVALID_URL,\r\n    ERR_INVALID_URL_SCHEME,\r\n    ERR_MISSING_ARGS,\r\n    ERR_NO_CRYPTO,\r\n  },\r\n} = require('internal/errors');\r\nconst {\r\n  CHAR_AMPERSAND,\r\n  CHAR_BACKWARD_SLASH,\r\n  CHAR_EQUAL,\r\n  CHAR_FORWARD_SLASH,\r\n  CHAR_LOWERCASE_A,\r\n  CHAR_LOWERCASE_Z,\r\n  CHAR_PERCENT,\r\n  CHAR_PLUS\r\n} = require('internal/constants');\r\nconst path = require('path');\r\n\r\nconst {\r\n  validateFunction,\r\n  validateObject,\r\n} = require('internal/validators');\r\n\r\nconst querystring = require('querystring');\r\n\r\nconst { platform } = process;\r\nconst isWindows = platform === 'win32';\r\n\r\nconst {\r\n  domainToASCII: _domainToASCII,\r\n  domainToUnicode: _domainToUnicode,\r\n  encodeAuth,\r\n  parse,\r\n  setURLConstructor,\r\n  URL_FLAGS_CANNOT_BE_BASE,\r\n  URL_FLAGS_HAS_FRAGMENT,\r\n  URL_FLAGS_HAS_HOST,\r\n  URL_FLAGS_HAS_PASSWORD,\r\n  URL_FLAGS_HAS_PATH,\r\n  URL_FLAGS_HAS_QUERY,\r\n  URL_FLAGS_HAS_USERNAME,\r\n  URL_FLAGS_IS_DEFAULT_SCHEME_PORT,\r\n  URL_FLAGS_SPECIAL,\r\n  kFragment,\r\n  kHost,\r\n  kHostname,\r\n  kPathStart,\r\n  kPort,\r\n  kQuery,\r\n  kSchemeStart\r\n} = internalBinding('url');\r\n\r\nconst {\r\n  storeDataObject,\r\n  revokeDataObject,\r\n} = internalBinding('blob');\r\n\r\nconst FORWARD_SLASH = /\\//g;\r\n\r\nconst context = Symbol('context');\r\nconst cannotBeBase = Symbol('cannot-be-base');\r\nconst cannotHaveUsernamePasswordPort =\r\n    Symbol('cannot-have-username-password-port');\r\nconst special = Symbol('special');\r\nconst searchParams = Symbol('query');\r\nconst kFormat = Symbol('format');\r\n\r\nlet blob;\r\nlet cryptoRandom;\r\n\r\nfunction lazyBlob() {\r\n  blob ??= require('internal/blob');\r\n  return blob;\r\n}\r\n\r\nfunction lazyCryptoRandom() {\r\n  try {\r\n    cryptoRandom ??= require('internal/crypto/random');\r\n  } catch {\r\n    // If Node.js built without crypto support, we'll fall\r\n    // through here and handle it later.\r\n  }\r\n  return cryptoRandom;\r\n}\r\n\r\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#concept-origin-opaque\r\nconst kOpaqueOrigin = 'null';\r\n\r\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#ascii-serialisation-of-an-origin\r\nfunction serializeTupleOrigin(scheme, host, port) {\r\n  return `${scheme}//${host}${port === null ? '' : `:${port}`}`;\r\n}\r\n\r\n// This class provides the internal state of a URL object. An instance of this\r\n// class is stored in every URL object and is accessed internally by setters\r\n// and getters. It roughly corresponds to the concept of a URL record in the\r\n// URL Standard, with a few differences. It is also the object transported to\r\n// the C++ binding.\r\n// Refs: https://url.spec.whatwg.org/#concept-url\r\nclass URLContext {\r\n  constructor() {\r\n    this.flags = 0;\r\n    this.scheme = ':';\r\n    this.username = '';\r\n    this.password = '';\r\n    this.host = null;\r\n    this.port = null;\r\n    this.path = [];\r\n    this.query = null;\r\n    this.fragment = null;\r\n  }\r\n}\r\n\r\nfunction isURLSearchParams(self) {\r\n  return self && self[searchParams] && !self[searchParams][searchParams];\r\n}\r\n\r\nclass URLSearchParams {\r\n  // URL Standard says the default value is '', but as undefined and '' have\r\n  // the same result, undefined is used to prevent unnecessary parsing.\r\n  // Default parameter is necessary to keep URLSearchParams.length === 0 in\r\n  // accordance with Web IDL spec.\r\n  constructor(init = undefined) {\r\n    if (init === null || init === undefined) {\r\n      this[searchParams] = [];\r\n    } else if (typeof init === 'object' || typeof init === 'function') {\r\n      const method = init[SymbolIterator];\r\n      if (method === this[SymbolIterator]) {\r\n        // While the spec does not have this branch, we can use it as a\r\n        // shortcut to avoid having to go through the costly generic iterator.\r\n        const childParams = init[searchParams];\r\n        this[searchParams] = childParams.slice();\r\n      } else if (method !== null && method !== undefined) {\r\n        if (typeof method !== 'function') {\r\n          throw new ERR_ARG_NOT_ITERABLE('Query pairs');\r\n        }\r\n\r\n        // Sequence<sequence<USVString>>\r\n        // Note: per spec we have to first exhaust the lists then process them\r\n        const pairs = [];\r\n        for (const pair of init) {\r\n          if ((typeof pair !== 'object' && typeof pair !== 'function') ||\r\n              pair === null ||\r\n              typeof pair[SymbolIterator] !== 'function') {\r\n            throw new ERR_INVALID_TUPLE('Each query pair', '[name, value]');\r\n          }\r\n          const convertedPair = [];\r\n          for (const element of pair)\r\n            ArrayPrototypePush(convertedPair, toUSVString(element));\r\n          ArrayPrototypePush(pairs, convertedPair);\r\n        }\r\n\r\n        this[searchParams] = [];\r\n        for (const pair of pairs) {\r\n          if (pair.length !== 2) {\r\n            throw new ERR_INVALID_TUPLE('Each query pair', '[name, value]');\r\n          }\r\n          ArrayPrototypePush(this[searchParams], pair[0], pair[1]);\r\n        }\r\n      } else {\r\n        // Record<USVString, USVString>\r\n        // Need to use reflection APIs for full spec compliance.\r\n        const visited = {};\r\n        this[searchParams] = [];\r\n        const keys = ReflectOwnKeys(init);\r\n        for (let i = 0; i < keys.length; i++) {\r\n          const key = keys[i];\r\n          const desc = ReflectGetOwnPropertyDescriptor(init, key);\r\n          if (desc !== undefined && desc.enumerable) {\r\n            const typedKey = toUSVString(key);\r\n            const typedValue = toUSVString(init[key]);\r\n\r\n            // Two different key may result same after `toUSVString()`, we only\r\n            // leave the later one. Refers to WPT.\r\n            if (visited[typedKey] !== undefined) {\r\n              this[searchParams][visited[typedKey]] = typedValue;\r\n            } else {\r\n              visited[typedKey] = ArrayPrototypePush(this[searchParams],\r\n                                                     typedKey,\r\n                                                     typedValue) - 1;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      // USVString\r\n      init = toUSVString(init);\r\n      if (init[0] === '?') init = init.slice(1);\r\n      initSearchParams(this, init);\r\n    }\r\n\r\n    // \"associated url object\"\r\n    this[context] = null;\r\n  }\r\n\r\n  [inspect.custom](recurseTimes, ctx) {\r\n    if (!isURLSearchParams(this))\r\n      throw new ERR_INVALID_THIS('URLSearchParams');\r\n\r\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\r\n      return ctx.stylize('[Object]', 'special');\r\n\r\n    const separator = ', ';\r\n    const innerOpts = { ...ctx };\r\n    if (recurseTimes !== null) {\r\n      innerOpts.depth = recurseTimes - 1;\r\n    }\r\n    const innerInspect = (v) => inspect(v, innerOpts);\r\n\r\n    const list = this[searchParams];\r\n    const output = [];\r\n    for (let i = 0; i < list.length; i += 2)\r\n      ArrayPrototypePush(\r\n        output,\r\n        `${innerInspect(list[i])} => ${innerInspect(list[i + 1])}`);\r\n\r\n    const length = ArrayPrototypeReduce(\r\n      output,\r\n      (prev, cur) => prev + removeColors(cur).length + separator.length,\r\n      -separator.length\r\n    );\r\n    if (length > ctx.breakLength) {\r\n      return `${this.constructor.name} {\\n` +\r\n      `  ${ArrayPrototypeJoin(output, ',\\n  ')} }`;\r\n    } else if (output.length) {\r\n      return `${this.constructor.name} { ` +\r\n      `${ArrayPrototypeJoin(output, separator)} }`;\r\n    }\r\n    return `${this.constructor.name} {}`;\r\n  }\r\n\r\n  append(name, value) {\r\n    if (!isURLSearchParams(this))\r\n      throw new ERR_INVALID_THIS('URLSearchParams');\r\n\r\n    if (arguments.length < 2) {\r\n      throw new ERR_MISSING_ARGS('name', 'value');\r\n    }\r\n\r\n    name = toUSVString(name);\r\n    value = toUSVString(value);\r\n    ArrayPrototypePush(this[searchParams], name, value);\r\n    update(this[context], this);\r\n  }\r\n\r\n  delete(name) {\r\n    if (!isURLSearchParams(this))\r\n      throw new ERR_INVALID_THIS('URLSearchParams');\r\n\r\n    if (arguments.length < 1) {\r\n      throw new ERR_MISSING_ARGS('name');\r\n    }\r\n\r\n    const list = this[searchParams];\r\n    name = toUSVString(name);\r\n    for (let i = 0; i < list.length;) {\r\n      const cur = list[i];\r\n      if (cur === name) {\r\n        list.splice(i, 2);\r\n      } else {\r\n        i += 2;\r\n      }\r\n    }\r\n    update(this[context], this);\r\n  }\r\n\r\n  get(name) {\r\n    if (!isURLSearchParams(this))\r\n      throw new ERR_INVALID_THIS('URLSearchParams');\r\n\r\n    if (arguments.length < 1) {\r\n      throw new ERR_MISSING_ARGS('name');\r\n    }\r\n\r\n    const list = this[searchParams];\r\n    name = toUSVString(name);\r\n    for (let i = 0; i < list.length; i += 2) {\r\n      if (list[i] === name) {\r\n        return list[i + 1];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getAll(name) {\r\n    if (!isURLSearchParams(this))\r\n      throw new ERR_INVALID_THIS('URLSearchParams');\r\n\r\n    if (arguments.length < 1) {\r\n      throw new ERR_MISSING_ARGS('name');\r\n    }\r\n\r\n    const list = this[searchParams];\r\n    const values = [];\r\n    name = toUSVString(name);\r\n    for (let i = 0; i < list.length; i += 2) {\r\n      if (list[i] === name) {\r\n        values.push(list[i + 1]);\r\n      }\r\n    }\r\n    return values;\r\n  }\r\n\r\n  has(name) {\r\n    if (!isURLSearchParams(this))\r\n      throw new ERR_INVALID_THIS('URLSearchParams');\r\n\r\n    if (arguments.length < 1) {\r\n      throw new ERR_MISSING_ARGS('name');\r\n    }\r\n\r\n    const list = this[searchParams];\r\n    name = toUSVString(name);\r\n    for (let i = 0; i < list.length; i += 2) {\r\n      if (list[i] === name) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  set(name, value) {\r\n    if (!isURLSearchParams(this))\r\n      throw new ERR_INVALID_THIS('URLSearchParams');\r\n\r\n    if (arguments.length < 2) {\r\n      throw new ERR_MISSING_ARGS('name', 'value');\r\n    }\r\n\r\n    const list = this[searchParams];\r\n    name = toUSVString(name);\r\n    value = toUSVString(value);\r\n\r\n    // If there are any name-value pairs whose name is `name`, in `list`, set\r\n    // the value of the first such name-value pair to `value` and remove the\r\n    // others.\r\n    let found = false;\r\n    for (let i = 0; i < list.length;) {\r\n      const cur = list[i];\r\n      if (cur === name) {\r\n        if (!found) {\r\n          list[i + 1] = value;\r\n          found = true;\r\n          i += 2;\r\n        } else {\r\n          list.splice(i, 2);\r\n        }\r\n      } else {\r\n        i += 2;\r\n      }\r\n    }\r\n\r\n    // Otherwise, append a new name-value pair whose name is `name` and value\r\n    // is `value`, to `list`.\r\n    if (!found) {\r\n      ArrayPrototypePush(list, name, value);\r\n    }\r\n\r\n    update(this[context], this);\r\n  }\r\n\r\n  sort() {\r\n    const a = this[searchParams];\r\n    const len = a.length;\r\n\r\n    if (len <= 2) {\r\n      // Nothing needs to be done.\r\n    } else if (len < 100) {\r\n      // 100 is found through testing.\r\n      // Simple stable in-place insertion sort\r\n      // Derived from v8/src/js/array.js\r\n      for (let i = 2; i < len; i += 2) {\r\n        const curKey = a[i];\r\n        const curVal = a[i + 1];\r\n        let j;\r\n        for (j = i - 2; j >= 0; j -= 2) {\r\n          if (a[j] > curKey) {\r\n            a[j + 2] = a[j];\r\n            a[j + 3] = a[j + 1];\r\n          } else {\r\n            break;\r\n          }\r\n        }\r\n        a[j + 2] = curKey;\r\n        a[j + 3] = curVal;\r\n      }\r\n    } else {\r\n      // Bottom-up iterative stable merge sort\r\n      const lBuffer = new Array(len);\r\n      const rBuffer = new Array(len);\r\n      for (let step = 2; step < len; step *= 2) {\r\n        for (let start = 0; start < len - 2; start += 2 * step) {\r\n          const mid = start + step;\r\n          let end = mid + step;\r\n          end = end < len ? end : len;\r\n          if (mid > end)\r\n            continue;\r\n          merge(a, start, mid, end, lBuffer, rBuffer);\r\n        }\r\n      }\r\n    }\r\n\r\n    update(this[context], this);\r\n  }\r\n\r\n  // https://heycam.github.io/webidl/#es-iterators\r\n  // Define entries here rather than [Symbol.iterator] as the function name\r\n  // must be set to `entries`.\r\n  entries() {\r\n    if (!isURLSearchParams(this))\r\n      throw new ERR_INVALID_THIS('URLSearchParams');\r\n\r\n    return createSearchParamsIterator(this, 'key+value');\r\n  }\r\n\r\n  forEach(callback, thisArg = undefined) {\r\n    if (!isURLSearchParams(this))\r\n      throw new ERR_INVALID_THIS('URLSearchParams');\r\n\r\n    validateFunction(callback, 'callback');\r\n\r\n    let list = this[searchParams];\r\n\r\n    let i = 0;\r\n    while (i < list.length) {\r\n      const key = list[i];\r\n      const value = list[i + 1];\r\n      callback.call(thisArg, value, key, this);\r\n      // In case the URL object's `search` is updated\r\n      list = this[searchParams];\r\n      i += 2;\r\n    }\r\n  }\r\n\r\n  // https://heycam.github.io/webidl/#es-iterable\r\n  keys() {\r\n    if (!isURLSearchParams(this))\r\n      throw new ERR_INVALID_THIS('URLSearchParams');\r\n\r\n    return createSearchParamsIterator(this, 'key');\r\n  }\r\n\r\n  values() {\r\n    if (!isURLSearchParams(this))\r\n      throw new ERR_INVALID_THIS('URLSearchParams');\r\n\r\n    return createSearchParamsIterator(this, 'value');\r\n  }\r\n\r\n  // https://heycam.github.io/webidl/#es-stringifier\r\n  // https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior\r\n  toString() {\r\n    if (!isURLSearchParams(this))\r\n      throw new ERR_INVALID_THIS('URLSearchParams');\r\n\r\n    return serializeParams(this[searchParams]);\r\n  }\r\n}\r\n\r\nObjectDefineProperties(URLSearchParams.prototype, {\r\n  append: kEnumerableProperty,\r\n  delete: kEnumerableProperty,\r\n  get: kEnumerableProperty,\r\n  getAll: kEnumerableProperty,\r\n  has: kEnumerableProperty,\r\n  set: kEnumerableProperty,\r\n  sort: kEnumerableProperty,\r\n  entries: kEnumerableProperty,\r\n  forEach: kEnumerableProperty,\r\n  keys: kEnumerableProperty,\r\n  values: kEnumerableProperty,\r\n  toString: kEnumerableProperty,\r\n  [SymbolToStringTag]: { __proto__: null, configurable: true, value: 'URLSearchParams' },\r\n\r\n  // https://heycam.github.io/webidl/#es-iterable-entries\r\n  [SymbolIterator]: {\r\n    __proto__: null,\r\n    configurable: true,\r\n    writable: true,\r\n    value: URLSearchParams.prototype.entries,\r\n  },\r\n});\r\n\r\nfunction onParseComplete(flags, protocol, username, password,\r\n                         host, port, path, query, fragment) {\r\n  const ctx = this[context];\r\n  ctx.flags = flags;\r\n  ctx.scheme = protocol;\r\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\r\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\r\n  ctx.port = port;\r\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\r\n  ctx.query = query;\r\n  ctx.fragment = fragment;\r\n  ctx.host = host;\r\n  if (!this[searchParams]) { // Invoked from URL constructor\r\n    this[searchParams] = new URLSearchParams();\r\n    this[searchParams][context] = this;\r\n  }\r\n  initSearchParams(this[searchParams], query);\r\n}\r\n\r\nfunction onParseError(input, flags) {\r\n  throw new ERR_INVALID_URL(input);\r\n}\r\n\r\nfunction onParseProtocolComplete(flags, protocol, username, password,\r\n                                 host, port, path, query, fragment) {\r\n  const ctx = this[context];\r\n  if ((flags & URL_FLAGS_SPECIAL) !== 0) {\r\n    ctx.flags |= URL_FLAGS_SPECIAL;\r\n  } else {\r\n    ctx.flags &= ~URL_FLAGS_SPECIAL;\r\n  }\r\n  ctx.scheme = protocol;\r\n  ctx.port = port;\r\n}\r\n\r\nfunction onParseHostnameComplete(flags, protocol, username, password,\r\n                                 host, port, path, query, fragment) {\r\n  const ctx = this[context];\r\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\r\n    ctx.host = host;\r\n    ctx.flags |= URL_FLAGS_HAS_HOST;\r\n  } else {\r\n    ctx.host = null;\r\n    ctx.flags &= ~URL_FLAGS_HAS_HOST;\r\n  }\r\n}\r\n\r\nfunction onParsePortComplete(flags, protocol, username, password,\r\n                             host, port, path, query, fragment) {\r\n  this[context].port = port;\r\n}\r\n\r\nfunction onParseHostComplete(flags, protocol, username, password,\r\n                             host, port, path, query, fragment) {\r\n  ReflectApply(onParseHostnameComplete, this, arguments);\r\n  if (port !== null || ((flags & URL_FLAGS_IS_DEFAULT_SCHEME_PORT) !== 0))\r\n    ReflectApply(onParsePortComplete, this, arguments);\r\n}\r\n\r\nfunction onParsePathComplete(flags, protocol, username, password,\r\n                             host, port, path, query, fragment) {\r\n  const ctx = this[context];\r\n  if ((flags & URL_FLAGS_HAS_PATH) !== 0) {\r\n    ctx.path = path;\r\n    ctx.flags |= URL_FLAGS_HAS_PATH;\r\n  } else {\r\n    ctx.path = [];\r\n    ctx.flags &= ~URL_FLAGS_HAS_PATH;\r\n  }\r\n\r\n  // The C++ binding may set host to empty string.\r\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\r\n    ctx.host = host;\r\n    ctx.flags |= URL_FLAGS_HAS_HOST;\r\n  }\r\n}\r\n\r\nfunction onParseSearchComplete(flags, protocol, username, password,\r\n                               host, port, path, query, fragment) {\r\n  this[context].query = query;\r\n}\r\n\r\nfunction onParseHashComplete(flags, protocol, username, password,\r\n                             host, port, path, query, fragment) {\r\n  this[context].fragment = fragment;\r\n}\r\n\r\nfunction isURLThis(self) {\r\n  return (self !== undefined && self !== null && self[context] !== undefined);\r\n}\r\n\r\nclass URL {\r\n  constructor(input, base = undefined) {\r\n    // toUSVString is not needed.\r\n    input = `${input}`;\r\n    let base_context;\r\n    if (base !== undefined) {\r\n      base_context = new URL(base)[context];\r\n    }\r\n    this[context] = new URLContext();\r\n    parse(input, -1, base_context, undefined,\r\n          FunctionPrototypeBind(onParseComplete, this),\r\n          FunctionPrototypeBind(onParseError, this, input));\r\n  }\r\n\r\n  get [special]() {\r\n    return (this[context].flags & URL_FLAGS_SPECIAL) !== 0;\r\n  }\r\n\r\n  get [cannotBeBase]() {\r\n    return (this[context].flags & URL_FLAGS_CANNOT_BE_BASE) !== 0;\r\n  }\r\n\r\n  // https://url.spec.whatwg.org/#cannot-have-a-username-password-port\r\n  get [cannotHaveUsernamePasswordPort]() {\r\n    const { host, scheme } = this[context];\r\n    return ((host == null || host === '') ||\r\n            this[cannotBeBase] ||\r\n            scheme === 'file:');\r\n  }\r\n\r\n  [inspect.custom](depth, opts) {\r\n    if (this == null ||\r\n        ObjectGetPrototypeOf(this[context]) !== URLContext.prototype) {\r\n      throw new ERR_INVALID_THIS('URL');\r\n    }\r\n\r\n    if (typeof depth === 'number' && depth < 0)\r\n      return this;\r\n\r\n    const constructor = getConstructorOf(this) || URL;\r\n    const obj = ObjectCreate({ constructor });\r\n\r\n    obj.href = this.href;\r\n    obj.origin = this.origin;\r\n    obj.protocol = this.protocol;\r\n    obj.username = this.username;\r\n    obj.password = this.password;\r\n    obj.host = this.host;\r\n    obj.hostname = this.hostname;\r\n    obj.port = this.port;\r\n    obj.pathname = this.pathname;\r\n    obj.search = this.search;\r\n    obj.searchParams = this.searchParams;\r\n    obj.hash = this.hash;\r\n\r\n    if (opts.showHidden) {\r\n      obj.cannotBeBase = this[cannotBeBase];\r\n      obj.special = this[special];\r\n      obj[context] = this[context];\r\n    }\r\n\r\n    return `${constructor.name} ${inspect(obj, opts)}`;\r\n  }\r\n\r\n  [kFormat](options) {\r\n    if (options)\r\n      validateObject(options, 'options');\r\n\r\n    options = {\r\n      fragment: true,\r\n      unicode: false,\r\n      search: true,\r\n      auth: true,\r\n      ...options\r\n    };\r\n    const ctx = this[context];\r\n    // https://url.spec.whatwg.org/#url-serializing\r\n    let ret = ctx.scheme;\r\n    if (ctx.host !== null) {\r\n      ret += '//';\r\n      const has_username = ctx.username !== '';\r\n      const has_password = ctx.password !== '';\r\n      if (options.auth && (has_username || has_password)) {\r\n        if (has_username)\r\n          ret += ctx.username;\r\n        if (has_password)\r\n          ret += `:${ctx.password}`;\r\n        ret += '@';\r\n      }\r\n      ret += options.unicode ?\r\n        domainToUnicode(ctx.host) : ctx.host;\r\n      if (ctx.port !== null)\r\n        ret += `:${ctx.port}`;\r\n    }\r\n    if (this[cannotBeBase]) {\r\n      ret += ctx.path[0];\r\n    } else {\r\n      if (ctx.host === null && ctx.path.length > 1 && ctx.path[0] === '') {\r\n        ret += '/.';\r\n      }\r\n      if (ctx.path.length) {\r\n        ret += '/' + ArrayPrototypeJoin(ctx.path, '/');\r\n      }\r\n    }\r\n    if (options.search && ctx.query !== null)\r\n      ret += `?${ctx.query}`;\r\n    if (options.fragment && ctx.fragment !== null)\r\n      ret += `#${ctx.fragment}`;\r\n    return ret;\r\n  }\r\n\r\n  // https://heycam.github.io/webidl/#es-stringifier\r\n  toString() {\r\n    if (!isURLThis(this))\r\n      throw new ERR_INVALID_THIS('URL');\r\n    return this[kFormat]();\r\n  }\r\n\r\n  get href() {\r\n    if (!isURLThis(this))\r\n      throw new ERR_INVALID_THIS('URL');\r\n    return this[kFormat]();\r\n  }\r\n\r\n  set href(input) {\r\n    if (!isURLThis(this))\r\n      throw new ERR_INVALID_THIS('URL');\r\n    // toUSVString is not needed.\r\n    input = `${input}`;\r\n    parse(input, -1, undefined, undefined,\r\n          FunctionPrototypeBind(onParseComplete, this),\r\n          FunctionPrototypeBind(onParseError, this, input));\r\n  }\r\n\r\n  // readonly\r\n  get origin() {\r\n    if (!isURLThis(this))\r\n      throw new ERR_INVALID_THIS('URL');\r\n    // Refs: https://url.spec.whatwg.org/#concept-url-origin\r\n    const ctx = this[context];\r\n    switch (ctx.scheme) {\r\n      case 'blob:':\r\n        if (ctx.path.length > 0) {\r\n          try {\r\n            return (new URL(ctx.path[0])).origin;\r\n          } catch {\r\n            // Fall through... do nothing\r\n          }\r\n        }\r\n        return kOpaqueOrigin;\r\n      case 'ftp:':\r\n      case 'http:':\r\n      case 'https:':\r\n      case 'ws:':\r\n      case 'wss:':\r\n        return serializeTupleOrigin(ctx.scheme, ctx.host, ctx.port);\r\n    }\r\n    return kOpaqueOrigin;\r\n  }\r\n\r\n  get protocol() {\r\n    if (!isURLThis(this))\r\n      throw new ERR_INVALID_THIS('URL');\r\n    return this[context].scheme;\r\n  }\r\n\r\n  set protocol(scheme) {\r\n    if (!isURLThis(this))\r\n      throw new ERR_INVALID_THIS('URL');\r\n    // toUSVString is not needed.\r\n    scheme = `${scheme}`;\r\n    if (scheme.length === 0)\r\n      return;\r\n    const ctx = this[context];\r\n    parse(scheme, kSchemeStart, null, ctx,\r\n          FunctionPrototypeBind(onParseProtocolComplete, this));\r\n  }\r\n\r\n  get username() {\r\n    if (!isURLThis(this))\r\n      throw new ERR_INVALID_THIS('URL');\r\n    return this[context].username;\r\n  }\r\n\r\n  set username(username) {\r\n    if (!isURLThis(this))\r\n      throw new ERR_INVALID_THIS('URL');\r\n    // toUSVString is not needed.\r\n    username = `${username}`;\r\n    if (this[cannotHaveUsernamePasswordPort])\r\n      return;\r\n    const ctx = this[context];\r\n    if (username === '') {\r\n      ctx.username = '';\r\n      ctx.flags &= ~URL_FLAGS_HAS_USERNAME;\r\n      return;\r\n    }\r\n    ctx.username = encodeAuth(username);\r\n    ctx.flags |= URL_FLAGS_HAS_USERNAME;\r\n  }\r\n\r\n  get password() {\r\n    if (!isURLThis(this))\r\n      throw new ERR_INVALID_THIS('URL');\r\n    return this[context].password;\r\n  }\r\n\r\n  set password(password) {\r\n    if (!isURLThis(this))\r\n      throw new ERR_INVALID_THIS('URL');\r\n    // toUSVString is not needed.\r\n    password = `${password}`;\r\n    if (this[cannotHaveUsernamePasswordPort])\r\n      return;\r\n    const ctx = this[context];\r\n    if (password === '') {\r\n      ctx.password = '';\r\n      ctx.flags &= ~URL_FLAGS_HAS_PASSWORD;\r\n      return;\r\n    }\r\n    ctx.password = encodeAuth(password);\r\n    ctx.flags |= URL_FLAGS_HAS_PASSWORD;\r\n  }\r\n\r\n  get host() {\r\n    if (!isURLThis(this))\r\n      throw new ERR_INVALID_THIS('URL');\r\n    const ctx = this[context];\r\n    let ret = ctx.host || '';\r\n    if (ctx.port !== null)\r\n      ret += `:${ctx.port}`;\r\n    return ret;\r\n  }\r\n\r\n  set host(host) {\r\n    if (!isURLThis(this))\r\n      throw new ERR_INVALID_THIS('URL');\r\n    const ctx = this[context];\r\n    // toUSVString is not needed.\r\n    host = `${host}`;\r\n    if (this[cannotBeBase]) {\r\n      // Cannot set the host if cannot-be-base is set\r\n      return;\r\n    }\r\n    parse(host, kHost, null, ctx,\r\n          FunctionPrototypeBind(onParseHostComplete, this));\r\n  }\r\n\r\n  get hostname() {\r\n    if (!isURLThis(this))\r\n      throw new ERR_INVALID_THIS('URL');\r\n    return this[context].host || '';\r\n  }\r\n\r\n  set hostname(host) {\r\n    if (!isURLThis(this))\r\n      throw new ERR_INVALID_THIS('URL');\r\n    const ctx = this[context];\r\n    // toUSVString is not needed.\r\n    host = `${host}`;\r\n    if (this[cannotBeBase]) {\r\n      // Cannot set the host if cannot-be-base is set\r\n      return;\r\n    }\r\n    parse(host, kHostname, null, ctx, onParseHostnameComplete.bind(this));\r\n  }\r\n\r\n  get port() {\r\n    if (!isURLThis(this))\r\n      throw new ERR_INVALID_THIS('URL');\r\n    const port = this[context].port;\r\n    return port === null ? '' : String(port);\r\n  }\r\n\r\n  set port(port) {\r\n    if (!isURLThis(this))\r\n      throw new ERR_INVALID_THIS('URL');\r\n    // toUSVString is not needed.\r\n    port = `${port}`;\r\n    if (this[cannotHaveUsernamePasswordPort])\r\n      return;\r\n    const ctx = this[context];\r\n    if (port === '') {\r\n      ctx.port = null;\r\n      return;\r\n    }\r\n    parse(port, kPort, null, ctx,\r\n          FunctionPrototypeBind(onParsePortComplete, this));\r\n  }\r\n\r\n  get pathname() {\r\n    if (!isURLThis(this))\r\n      throw new ERR_INVALID_THIS('URL');\r\n    const ctx = this[context];\r\n    if (this[cannotBeBase])\r\n      return ctx.path[0];\r\n    if (ctx.path.length === 0)\r\n      return '';\r\n    return `/${ArrayPrototypeJoin(ctx.path, '/')}`;\r\n  }\r\n\r\n  set pathname(path) {\r\n    if (!isURLThis(this))\r\n      throw new ERR_INVALID_THIS('URL');\r\n    // toUSVString is not needed.\r\n    path = `${path}`;\r\n    if (this[cannotBeBase])\r\n      return;\r\n    parse(path, kPathStart, null, this[context],\r\n          onParsePathComplete.bind(this));\r\n  }\r\n\r\n  get search() {\r\n    if (!isURLThis(this))\r\n      throw new ERR_INVALID_THIS('URL');\r\n    const { query } = this[context];\r\n    if (query === null || query === '')\r\n      return '';\r\n    return `?${query}`;\r\n  }\r\n\r\n  set search(search) {\r\n    if (!isURLThis(this))\r\n      throw new ERR_INVALID_THIS('URL');\r\n    const ctx = this[context];\r\n    search = toUSVString(search);\r\n    if (search === '') {\r\n      ctx.query = null;\r\n      ctx.flags &= ~URL_FLAGS_HAS_QUERY;\r\n    } else {\r\n      if (search[0] === '?') search = StringPrototypeSlice(search, 1);\r\n      ctx.query = '';\r\n      ctx.flags |= URL_FLAGS_HAS_QUERY;\r\n      if (search) {\r\n        parse(search, kQuery, null, ctx,\r\n              FunctionPrototypeBind(onParseSearchComplete, this));\r\n      }\r\n    }\r\n    initSearchParams(this[searchParams], search);\r\n  }\r\n\r\n  // readonly\r\n  get searchParams() {\r\n    if (!isURLThis(this))\r\n      throw new ERR_INVALID_THIS('URL');\r\n    return this[searchParams];\r\n  }\r\n\r\n  get hash() {\r\n    if (!isURLThis(this))\r\n      throw new ERR_INVALID_THIS('URL');\r\n    const { fragment } = this[context];\r\n    if (fragment === null || fragment === '')\r\n      return '';\r\n    return `#${fragment}`;\r\n  }\r\n\r\n  set hash(hash) {\r\n    if (!isURLThis(this))\r\n      throw new ERR_INVALID_THIS('URL');\r\n    const ctx = this[context];\r\n    // toUSVString is not needed.\r\n    hash = `${hash}`;\r\n    if (!hash) {\r\n      ctx.fragment = null;\r\n      ctx.flags &= ~URL_FLAGS_HAS_FRAGMENT;\r\n      return;\r\n    }\r\n    if (hash[0] === '#') hash = StringPrototypeSlice(hash, 1);\r\n    ctx.fragment = '';\r\n    ctx.flags |= URL_FLAGS_HAS_FRAGMENT;\r\n    parse(hash, kFragment, null, ctx,\r\n          FunctionPrototypeBind(onParseHashComplete, this));\r\n  }\r\n\r\n  toJSON() {\r\n    if (!isURLThis(this))\r\n      throw new ERR_INVALID_THIS('URL');\r\n    return this[kFormat]();\r\n  }\r\n\r\n  static createObjectURL(obj) {\r\n    const cryptoRandom = lazyCryptoRandom();\r\n    if (cryptoRandom === undefined)\r\n      throw new ERR_NO_CRYPTO();\r\n\r\n    // Yes, lazy loading is annoying but because of circular\r\n    // references between the url, internal/blob, and buffer\r\n    // modules, lazy loading here makes sure that things work.\r\n    const blob = lazyBlob();\r\n    if (!blob.isBlob(obj))\r\n      throw new ERR_INVALID_ARG_TYPE('obj', 'Blob', obj);\r\n\r\n    const id = cryptoRandom.randomUUID();\r\n\r\n    storeDataObject(id, obj[blob.kHandle], obj.size, obj.type);\r\n\r\n    return `blob:nodedata:${id}`;\r\n  }\r\n\r\n  static revokeObjectURL(url) {\r\n    url = `${url}`;\r\n    try {\r\n      const parsed = new URL(url);\r\n      const split = StringPrototypeSplit(parsed.pathname, ':');\r\n      if (split.length === 2)\r\n        revokeDataObject(split[1]);\r\n    } catch {\r\n      // If there's an error, it's ignored.\r\n    }\r\n  }\r\n}\r\n\r\nObjectDefineProperties(URL.prototype, {\r\n  [kFormat]: { __proto__: null, configurable: false, writable: false },\r\n  [SymbolToStringTag]: { __proto__: null, configurable: true, value: 'URL' },\r\n  toString: kEnumerableProperty,\r\n  href: kEnumerableProperty,\r\n  origin: kEnumerableProperty,\r\n  protocol: kEnumerableProperty,\r\n  username: kEnumerableProperty,\r\n  password: kEnumerableProperty,\r\n  host: kEnumerableProperty,\r\n  hostname: kEnumerableProperty,\r\n  port: kEnumerableProperty,\r\n  pathname: kEnumerableProperty,\r\n  search: kEnumerableProperty,\r\n  searchParams: kEnumerableProperty,\r\n  hash: kEnumerableProperty,\r\n  toJSON: kEnumerableProperty,\r\n});\r\n\r\nObjectDefineProperties(URL, {\r\n  createObjectURL: kEnumerableProperty,\r\n  revokeObjectURL: kEnumerableProperty,\r\n});\r\n\r\nfunction update(url, params) {\r\n  if (!url)\r\n    return;\r\n\r\n  const ctx = url[context];\r\n  const serializedParams = params.toString();\r\n  if (serializedParams) {\r\n    ctx.query = serializedParams;\r\n    ctx.flags |= URL_FLAGS_HAS_QUERY;\r\n  } else {\r\n    ctx.query = null;\r\n    ctx.flags &= ~URL_FLAGS_HAS_QUERY;\r\n  }\r\n}\r\n\r\nfunction initSearchParams(url, init) {\r\n  if (!init) {\r\n    url[searchParams] = [];\r\n    return;\r\n  }\r\n  url[searchParams] = parseParams(init);\r\n}\r\n\r\n// application/x-www-form-urlencoded parser\r\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-parser\r\nfunction parseParams(qs) {\r\n  const out = [];\r\n  let pairStart = 0;\r\n  let lastPos = 0;\r\n  let seenSep = false;\r\n  let buf = '';\r\n  let encoded = false;\r\n  let encodeCheck = 0;\r\n  let i;\r\n  for (i = 0; i < qs.length; ++i) {\r\n    const code = StringPrototypeCharCodeAt(qs, i);\r\n\r\n    // Try matching key/value pair separator\r\n    if (code === CHAR_AMPERSAND) {\r\n      if (pairStart === i) {\r\n        // We saw an empty substring between pair separators\r\n        lastPos = pairStart = i + 1;\r\n        continue;\r\n      }\r\n\r\n      if (lastPos < i)\r\n        buf += qs.slice(lastPos, i);\r\n      if (encoded)\r\n        buf = querystring.unescape(buf);\r\n      out.push(buf);\r\n\r\n      // If `buf` is the key, add an empty value.\r\n      if (!seenSep)\r\n        out.push('');\r\n\r\n      seenSep = false;\r\n      buf = '';\r\n      encoded = false;\r\n      encodeCheck = 0;\r\n      lastPos = pairStart = i + 1;\r\n      continue;\r\n    }\r\n\r\n    // Try matching key/value separator (e.g. '=') if we haven't already\r\n    if (!seenSep && code === CHAR_EQUAL) {\r\n      // Key/value separator match!\r\n      if (lastPos < i)\r\n        buf += qs.slice(lastPos, i);\r\n      if (encoded)\r\n        buf = querystring.unescape(buf);\r\n      out.push(buf);\r\n\r\n      seenSep = true;\r\n      buf = '';\r\n      encoded = false;\r\n      encodeCheck = 0;\r\n      lastPos = i + 1;\r\n      continue;\r\n    }\r\n\r\n    // Handle + and percent decoding.\r\n    if (code === CHAR_PLUS) {\r\n      if (lastPos < i)\r\n        buf += StringPrototypeSlice(qs, lastPos, i);\r\n      buf += ' ';\r\n      lastPos = i + 1;\r\n    } else if (!encoded) {\r\n      // Try to match an (valid) encoded byte (once) to minimize unnecessary\r\n      // calls to string decoding functions\r\n      if (code === CHAR_PERCENT) {\r\n        encodeCheck = 1;\r\n      } else if (encodeCheck > 0) {\r\n        if (isHexTable[code] === 1) {\r\n          if (++encodeCheck === 3) {\r\n            encoded = true;\r\n          }\r\n        } else {\r\n          encodeCheck = 0;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Deal with any leftover key or value data\r\n\r\n  // There is a trailing &. No more processing is needed.\r\n  if (pairStart === i)\r\n    return out;\r\n\r\n  if (lastPos < i)\r\n    buf += StringPrototypeSlice(qs, lastPos, i);\r\n  if (encoded)\r\n    buf = querystring.unescape(buf);\r\n  ArrayPrototypePush(out, buf);\r\n\r\n  // If `buf` is the key, add an empty value.\r\n  if (!seenSep)\r\n    ArrayPrototypePush(out, '');\r\n\r\n  return out;\r\n}\r\n\r\n// Adapted from querystring's implementation.\r\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-byte-serializer\r\nconst noEscape = new Int8Array([\r\n/*\r\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F\r\n*/\r\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 0x00 - 0x0F\r\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 0x10 - 0x1F\r\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, // 0x20 - 0x2F\r\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, // 0x30 - 0x3F\r\n  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 0x40 - 0x4F\r\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, // 0x50 - 0x5F\r\n  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 0x60 - 0x6F\r\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,  // 0x70 - 0x7F\r\n]);\r\n\r\n// Special version of hexTable that uses `+` for U+0020 SPACE.\r\nconst paramHexTable = hexTable.slice();\r\nparamHexTable[0x20] = '+';\r\n\r\n// application/x-www-form-urlencoded serializer\r\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-serializer\r\nfunction serializeParams(array) {\r\n  const len = array.length;\r\n  if (len === 0)\r\n    return '';\r\n\r\n  const firstEncodedParam = encodeStr(array[0], noEscape, paramHexTable);\r\n  const firstEncodedValue = encodeStr(array[1], noEscape, paramHexTable);\r\n  let output = `${firstEncodedParam}=${firstEncodedValue}`;\r\n\r\n  for (let i = 2; i < len; i += 2) {\r\n    const encodedParam = encodeStr(array[i], noEscape, paramHexTable);\r\n    const encodedValue = encodeStr(array[i + 1], noEscape, paramHexTable);\r\n    output += `&${encodedParam}=${encodedValue}`;\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\n// Mainly to mitigate func-name-matching ESLint rule\r\nfunction defineIDLClass(proto, classStr, obj) {\r\n  // https://heycam.github.io/webidl/#dfn-class-string\r\n  ObjectDefineProperty(proto, SymbolToStringTag, {\r\n    __proto__: null,\r\n    writable: false,\r\n    enumerable: false,\r\n    configurable: true,\r\n    value: classStr\r\n  });\r\n\r\n  // https://heycam.github.io/webidl/#es-operations\r\n  for (const key of ObjectKeys(obj)) {\r\n    ObjectDefineProperty(proto, key, {\r\n      __proto__: null,\r\n      writable: true,\r\n      enumerable: true,\r\n      configurable: true,\r\n      value: obj[key]\r\n    });\r\n  }\r\n  for (const key of ObjectGetOwnPropertySymbols(obj)) {\r\n    ObjectDefineProperty(proto, key, {\r\n      __proto__: null,\r\n      writable: true,\r\n      enumerable: false,\r\n      configurable: true,\r\n      value: obj[key]\r\n    });\r\n  }\r\n}\r\n\r\n// for merge sort\r\nfunction merge(out, start, mid, end, lBuffer, rBuffer) {\r\n  const sizeLeft = mid - start;\r\n  const sizeRight = end - mid;\r\n  let l, r, o;\r\n\r\n  for (l = 0; l < sizeLeft; l++)\r\n    lBuffer[l] = out[start + l];\r\n  for (r = 0; r < sizeRight; r++)\r\n    rBuffer[r] = out[mid + r];\r\n\r\n  l = 0;\r\n  r = 0;\r\n  o = start;\r\n  while (l < sizeLeft && r < sizeRight) {\r\n    if (lBuffer[l] <= rBuffer[r]) {\r\n      out[o++] = lBuffer[l++];\r\n      out[o++] = lBuffer[l++];\r\n    } else {\r\n      out[o++] = rBuffer[r++];\r\n      out[o++] = rBuffer[r++];\r\n    }\r\n  }\r\n  while (l < sizeLeft)\r\n    out[o++] = lBuffer[l++];\r\n  while (r < sizeRight)\r\n    out[o++] = rBuffer[r++];\r\n}\r\n\r\n// https://heycam.github.io/webidl/#dfn-default-iterator-object\r\nfunction createSearchParamsIterator(target, kind) {\r\n  const iterator = ObjectCreate(URLSearchParamsIteratorPrototype);\r\n  iterator[context] = {\r\n    target,\r\n    kind,\r\n    index: 0\r\n  };\r\n  return iterator;\r\n}\r\n\r\n// https://heycam.github.io/webidl/#dfn-iterator-prototype-object\r\nconst URLSearchParamsIteratorPrototype = ObjectCreate(IteratorPrototype);\r\n\r\ndefineIDLClass(URLSearchParamsIteratorPrototype, 'URLSearchParams Iterator', {\r\n  next() {\r\n    if (!this ||\r\n        ObjectGetPrototypeOf(this) !== URLSearchParamsIteratorPrototype) {\r\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\r\n    }\r\n\r\n    const {\r\n      target,\r\n      kind,\r\n      index\r\n    } = this[context];\r\n    const values = target[searchParams];\r\n    const len = values.length;\r\n    if (index >= len) {\r\n      return {\r\n        value: undefined,\r\n        done: true\r\n      };\r\n    }\r\n\r\n    const name = values[index];\r\n    const value = values[index + 1];\r\n    this[context].index = index + 2;\r\n\r\n    let result;\r\n    if (kind === 'key') {\r\n      result = name;\r\n    } else if (kind === 'value') {\r\n      result = value;\r\n    } else {\r\n      result = [name, value];\r\n    }\r\n\r\n    return {\r\n      value: result,\r\n      done: false\r\n    };\r\n  },\r\n  [inspect.custom](recurseTimes, ctx) {\r\n    if (this == null || this[context] == null || this[context].target == null)\r\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\r\n\r\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\r\n      return ctx.stylize('[Object]', 'special');\r\n\r\n    const innerOpts = { ...ctx };\r\n    if (recurseTimes !== null) {\r\n      innerOpts.depth = recurseTimes - 1;\r\n    }\r\n    const {\r\n      target,\r\n      kind,\r\n      index\r\n    } = this[context];\r\n    const output = ArrayPrototypeReduce(\r\n      ArrayPrototypeSlice(target[searchParams], index),\r\n      (prev, cur, i) => {\r\n        const key = i % 2 === 0;\r\n        if (kind === 'key' && key) {\r\n          ArrayPrototypePush(prev, cur);\r\n        } else if (kind === 'value' && !key) {\r\n          ArrayPrototypePush(prev, cur);\r\n        } else if (kind === 'key+value' && !key) {\r\n          ArrayPrototypePush(prev, [target[searchParams][index + i - 1], cur]);\r\n        }\r\n        return prev;\r\n      },\r\n      []\r\n    );\r\n    const breakLn = StringPrototypeIncludes(inspect(output, innerOpts), '\\n');\r\n    const outputStrs = ArrayPrototypeMap(output, (p) => inspect(p, innerOpts));\r\n    let outputStr;\r\n    if (breakLn) {\r\n      outputStr = `\\n  ${ArrayPrototypeJoin(outputStrs, ',\\n  ')}`;\r\n    } else {\r\n      outputStr = ` ${ArrayPrototypeJoin(outputStrs, ', ')}`;\r\n    }\r\n    return `${this[SymbolToStringTag]} {${outputStr} }`;\r\n  }\r\n});\r\n\r\nfunction domainToASCII(domain) {\r\n  if (arguments.length < 1)\r\n    throw new ERR_MISSING_ARGS('domain');\r\n\r\n  // toUSVString is not needed.\r\n  return _domainToASCII(`${domain}`);\r\n}\r\n\r\nfunction domainToUnicode(domain) {\r\n  if (arguments.length < 1)\r\n    throw new ERR_MISSING_ARGS('domain');\r\n\r\n  // toUSVString is not needed.\r\n  return _domainToUnicode(`${domain}`);\r\n}\r\n\r\n// Utility function that converts a URL object into an ordinary\r\n// options object as expected by the http.request and https.request\r\n// APIs.\r\nfunction urlToHttpOptions(url) {\r\n  const options = {\r\n    protocol: url.protocol,\r\n    hostname: typeof url.hostname === 'string' &&\r\n              StringPrototypeStartsWith(url.hostname, '[') ?\r\n      StringPrototypeSlice(url.hostname, 1, -1) :\r\n      url.hostname,\r\n    hash: url.hash,\r\n    search: url.search,\r\n    pathname: url.pathname,\r\n    path: `${url.pathname || ''}${url.search || ''}`,\r\n    href: url.href\r\n  };\r\n  if (url.port !== '') {\r\n    options.port = Number(url.port);\r\n  }\r\n  if (url.username || url.password) {\r\n    options.auth = `${decodeURIComponent(url.username)}:${decodeURIComponent(url.password)}`;\r\n  }\r\n  return options;\r\n}\r\n\r\nfunction getPathFromURLWin32(url) {\r\n  const hostname = url.hostname;\r\n  let pathname = url.pathname;\r\n  for (let n = 0; n < pathname.length; n++) {\r\n    if (pathname[n] === '%') {\r\n      const third = StringPrototypeCodePointAt(pathname, n + 2) | 0x20;\r\n      if ((pathname[n + 1] === '2' && third === 102) || // 2f 2F /\r\n          (pathname[n + 1] === '5' && third === 99)) {  // 5c 5C \\\r\n        throw new ERR_INVALID_FILE_URL_PATH(\r\n          'must not include encoded \\\\ or / characters'\r\n        );\r\n      }\r\n    }\r\n  }\r\n  pathname = SideEffectFreeRegExpPrototypeSymbolReplace(FORWARD_SLASH, pathname, '\\\\');\r\n  pathname = decodeURIComponent(pathname);\r\n  if (hostname !== '') {\r\n    // If hostname is set, then we have a UNC path\r\n    // Pass the hostname through domainToUnicode just in case\r\n    // it is an IDN using punycode encoding. We do not need to worry\r\n    // about percent encoding because the URL parser will have\r\n    // already taken care of that for us. Note that this only\r\n    // causes IDNs with an appropriate `xn--` prefix to be decoded.\r\n    return `\\\\\\\\${domainToUnicode(hostname)}${pathname}`;\r\n  }\r\n  // Otherwise, it's a local path that requires a drive letter\r\n  const letter = StringPrototypeCodePointAt(pathname, 1) | 0x20;\r\n  const sep = StringPrototypeCharAt(pathname, 2);\r\n  if (letter < CHAR_LOWERCASE_A || letter > CHAR_LOWERCASE_Z ||   // a..z A..Z\r\n      (sep !== ':')) {\r\n    throw new ERR_INVALID_FILE_URL_PATH('must be absolute');\r\n  }\r\n  return StringPrototypeSlice(pathname, 1);\r\n}\r\n\r\nfunction getPathFromURLPosix(url) {\r\n  if (url.hostname !== '') {\r\n    throw new ERR_INVALID_FILE_URL_HOST(platform);\r\n  }\r\n  const pathname = url.pathname;\r\n  for (let n = 0; n < pathname.length; n++) {\r\n    if (pathname[n] === '%') {\r\n      const third = StringPrototypeCodePointAt(pathname, n + 2) | 0x20;\r\n      if (pathname[n + 1] === '2' && third === 102) {\r\n        throw new ERR_INVALID_FILE_URL_PATH(\r\n          'must not include encoded / characters'\r\n        );\r\n      }\r\n    }\r\n  }\r\n  return decodeURIComponent(pathname);\r\n}\r\n\r\nfunction fileURLToPath(path) {\r\n  if (typeof path === 'string')\r\n    path = new URL(path);\r\n  else if (!isURLInstance(path))\r\n    throw new ERR_INVALID_ARG_TYPE('path', ['string', 'URL'], path);\r\n  if (path.protocol !== 'file:')\r\n    throw new ERR_INVALID_URL_SCHEME('file');\r\n  return isWindows ? getPathFromURLWin32(path) : getPathFromURLPosix(path);\r\n}\r\n\r\n// The following characters are percent-encoded when converting from file path\r\n// to URL:\r\n// - %: The percent character is the only character not encoded by the\r\n//        `pathname` setter.\r\n// - \\: Backslash is encoded on non-windows platforms since it's a valid\r\n//      character but the `pathname` setters replaces it by a forward slash.\r\n// - LF: The newline character is stripped out by the `pathname` setter.\r\n//       (See whatwg/url#419)\r\n// - CR: The carriage return character is also stripped out by the `pathname`\r\n//       setter.\r\n// - TAB: The tab character is also stripped out by the `pathname` setter.\r\nconst percentRegEx = /%/g;\r\nconst backslashRegEx = /\\\\/g;\r\nconst newlineRegEx = /\\n/g;\r\nconst carriageReturnRegEx = /\\r/g;\r\nconst tabRegEx = /\\t/g;\r\n\r\nfunction encodePathChars(filepath) {\r\n  if (StringPrototypeIncludes(filepath, '%'))\r\n    filepath = RegExpPrototypeSymbolReplace(percentRegEx, filepath, '%25');\r\n  // In posix, backslash is a valid character in paths:\r\n  if (!isWindows && StringPrototypeIncludes(filepath, '\\\\'))\r\n    filepath = RegExpPrototypeSymbolReplace(backslashRegEx, filepath, '%5C');\r\n  if (StringPrototypeIncludes(filepath, '\\n'))\r\n    filepath = RegExpPrototypeSymbolReplace(newlineRegEx, filepath, '%0A');\r\n  if (StringPrototypeIncludes(filepath, '\\r'))\r\n    filepath = RegExpPrototypeSymbolReplace(carriageReturnRegEx, filepath, '%0D');\r\n  if (StringPrototypeIncludes(filepath, '\\t'))\r\n    filepath = RegExpPrototypeSymbolReplace(tabRegEx, filepath, '%09');\r\n  return filepath;\r\n}\r\n\r\nfunction pathToFileURL(filepath) {\r\n  const outURL = new URL('file://');\r\n  if (isWindows && StringPrototypeStartsWith(filepath, '\\\\\\\\')) {\r\n    // UNC path format: \\\\server\\share\\resource\r\n    const hostnameEndIndex = StringPrototypeIndexOf(filepath, '\\\\', 2);\r\n    if (hostnameEndIndex === -1) {\r\n      throw new ERR_INVALID_ARG_VALUE(\r\n        'filepath',\r\n        filepath,\r\n        'Missing UNC resource path'\r\n      );\r\n    }\r\n    if (hostnameEndIndex === 2) {\r\n      throw new ERR_INVALID_ARG_VALUE(\r\n        'filepath',\r\n        filepath,\r\n        'Empty UNC servername'\r\n      );\r\n    }\r\n    const hostname = StringPrototypeSlice(filepath, 2, hostnameEndIndex);\r\n    outURL.hostname = domainToASCII(hostname);\r\n    outURL.pathname = encodePathChars(\r\n      RegExpPrototypeSymbolReplace(backslashRegEx, StringPrototypeSlice(filepath, hostnameEndIndex), '/'));\r\n  } else {\r\n    let resolved = path.resolve(filepath);\r\n    // path.resolve strips trailing slashes so we must add them back\r\n    const filePathLast = StringPrototypeCharCodeAt(filepath,\r\n                                                   filepath.length - 1);\r\n    if ((filePathLast === CHAR_FORWARD_SLASH ||\r\n         (isWindows && filePathLast === CHAR_BACKWARD_SLASH)) &&\r\n        resolved[resolved.length - 1] !== path.sep)\r\n      resolved += '/';\r\n    outURL.pathname = encodePathChars(resolved);\r\n  }\r\n  return outURL;\r\n}\r\n\r\nfunction isURLInstance(fileURLOrPath) {\r\n  return fileURLOrPath != null && fileURLOrPath.href && fileURLOrPath.origin;\r\n}\r\n\r\nfunction toPathIfFileURL(fileURLOrPath) {\r\n  if (!isURLInstance(fileURLOrPath))\r\n    return fileURLOrPath;\r\n  return fileURLToPath(fileURLOrPath);\r\n}\r\n\r\nfunction constructUrl(flags, protocol, username, password,\r\n                      host, port, path, query, fragment) {\r\n  const ctx = new URLContext();\r\n  ctx.flags = flags;\r\n  ctx.scheme = protocol;\r\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\r\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\r\n  ctx.port = port;\r\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\r\n  ctx.query = query;\r\n  ctx.fragment = fragment;\r\n  ctx.host = host;\r\n\r\n  const url = ObjectCreate(URL.prototype);\r\n  url[context] = ctx;\r\n  const params = new URLSearchParams();\r\n  url[searchParams] = params;\r\n  params[context] = url;\r\n  initSearchParams(params, query);\r\n  return url;\r\n}\r\nsetURLConstructor(constructUrl);\r\n\r\nmodule.exports = {\r\n  toUSVString,\r\n  fileURLToPath,\r\n  pathToFileURL,\r\n  toPathIfFileURL,\r\n  isURLInstance,\r\n  URL,\r\n  URLSearchParams,\r\n  domainToASCII,\r\n  domainToUnicode,\r\n  urlToHttpOptions,\r\n  formatSymbol: kFormat,\r\n  searchParamsSymbol: searchParams,\r\n  encodeStr\r\n};\r\n",
    "name": "url",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 76,
    "sourcePositions": []
  },
  null,
  null,
  {
    "url": "node:internal/fs/utils",
    "source": "'use strict';\r\n\r\nconst {\r\n  ArrayIsArray,\r\n  BigInt,\r\n  Date,\r\n  DateNow,\r\n  DatePrototypeGetTime,\r\n  ErrorCaptureStackTrace,\r\n  FunctionPrototypeCall,\r\n  Number,\r\n  NumberIsFinite,\r\n  MathMin,\r\n  MathRound,\r\n  ObjectIs,\r\n  ObjectPrototypeHasOwnProperty,\r\n  ObjectSetPrototypeOf,\r\n  ReflectApply,\r\n  ReflectOwnKeys,\r\n  RegExpPrototypeSymbolReplace,\r\n  StringPrototypeEndsWith,\r\n  StringPrototypeIncludes,\r\n  Symbol,\r\n  TypedArrayPrototypeIncludes,\r\n} = primordials;\r\n\r\nconst { Buffer } = require('buffer');\r\nconst {\r\n  codes: {\r\n    ERR_FS_EISDIR,\r\n    ERR_FS_INVALID_SYMLINK_TYPE,\r\n    ERR_INCOMPATIBLE_OPTION_PAIR,\r\n    ERR_INVALID_ARG_TYPE,\r\n    ERR_INVALID_ARG_VALUE,\r\n    ERR_OUT_OF_RANGE\r\n  },\r\n  hideStackFrames,\r\n  uvException\r\n} = require('internal/errors');\r\nconst {\r\n  isArrayBufferView,\r\n  isBigInt64Array,\r\n  isDate,\r\n  isUint8Array,\r\n} = require('internal/util/types');\r\nconst {\r\n  kEmptyObject,\r\n  once,\r\n} = require('internal/util');\r\nconst { toPathIfFileURL } = require('internal/url');\r\nconst {\r\n  validateAbortSignal,\r\n  validateBoolean,\r\n  validateFunction,\r\n  validateInt32,\r\n  validateInteger,\r\n  validateObject,\r\n  validateUint32,\r\n} = require('internal/validators');\r\nconst pathModule = require('path');\r\nconst kType = Symbol('type');\r\nconst kStats = Symbol('stats');\r\nconst assert = require('internal/assert');\r\n\r\nconst {\r\n  fs: {\r\n    F_OK = 0,\r\n    W_OK = 0,\r\n    R_OK = 0,\r\n    X_OK = 0,\r\n    COPYFILE_EXCL,\r\n    COPYFILE_FICLONE,\r\n    COPYFILE_FICLONE_FORCE,\r\n    O_APPEND,\r\n    O_CREAT,\r\n    O_EXCL,\r\n    O_RDONLY,\r\n    O_RDWR,\r\n    O_SYNC,\r\n    O_TRUNC,\r\n    O_WRONLY,\r\n    S_IFBLK,\r\n    S_IFCHR,\r\n    S_IFDIR,\r\n    S_IFIFO,\r\n    S_IFLNK,\r\n    S_IFMT,\r\n    S_IFREG,\r\n    S_IFSOCK,\r\n    UV_FS_SYMLINK_DIR,\r\n    UV_FS_SYMLINK_JUNCTION,\r\n    UV_DIRENT_UNKNOWN,\r\n    UV_DIRENT_FILE,\r\n    UV_DIRENT_DIR,\r\n    UV_DIRENT_LINK,\r\n    UV_DIRENT_FIFO,\r\n    UV_DIRENT_SOCKET,\r\n    UV_DIRENT_CHAR,\r\n    UV_DIRENT_BLOCK\r\n  },\r\n  os: {\r\n    errno: {\r\n      EISDIR\r\n    }\r\n  }\r\n} = internalBinding('constants');\r\n\r\n// The access modes can be any of F_OK, R_OK, W_OK or X_OK. Some might not be\r\n// available on specific systems. They can be used in combination as well\r\n// (F_OK | R_OK | W_OK | X_OK).\r\nconst kMinimumAccessMode = MathMin(F_OK, W_OK, R_OK, X_OK);\r\nconst kMaximumAccessMode = F_OK | W_OK | R_OK | X_OK;\r\n\r\nconst kDefaultCopyMode = 0;\r\n// The copy modes can be any of COPYFILE_EXCL, COPYFILE_FICLONE or\r\n// COPYFILE_FICLONE_FORCE. They can be used in combination as well\r\n// (COPYFILE_EXCL | COPYFILE_FICLONE | COPYFILE_FICLONE_FORCE).\r\nconst kMinimumCopyMode = MathMin(\r\n  kDefaultCopyMode,\r\n  COPYFILE_EXCL,\r\n  COPYFILE_FICLONE,\r\n  COPYFILE_FICLONE_FORCE\r\n);\r\nconst kMaximumCopyMode = COPYFILE_EXCL |\r\n                         COPYFILE_FICLONE |\r\n                         COPYFILE_FICLONE_FORCE;\r\n\r\n// Most platforms don't allow reads or writes >= 2 GiB.\r\n// See https://github.com/libuv/libuv/pull/1501.\r\nconst kIoMaxLength = 2 ** 31 - 1;\r\n\r\n// Use 64kb in case the file type is not a regular file and thus do not know the\r\n// actual file size. Increasing the value further results in more frequent over\r\n// allocation for small files and consumes CPU time and memory that should be\r\n// used else wise.\r\n// Use up to 512kb per read otherwise to partition reading big files to prevent\r\n// blocking other threads in case the available threads are all in use.\r\nconst kReadFileUnknownBufferLength = 64 * 1024;\r\nconst kReadFileBufferLength = 512 * 1024;\r\n\r\nconst kWriteFileMaxChunkSize = 512 * 1024;\r\n\r\nconst kMaxUserId = 2 ** 32 - 1;\r\n\r\nconst isWindows = process.platform === 'win32';\r\n\r\nlet fs;\r\nfunction lazyLoadFs() {\r\n  if (!fs) {\r\n    fs = require('fs');\r\n  }\r\n  return fs;\r\n}\r\n\r\nfunction assertEncoding(encoding) {\r\n  if (encoding && !Buffer.isEncoding(encoding)) {\r\n    const reason = 'is invalid encoding';\r\n    throw new ERR_INVALID_ARG_VALUE(encoding, 'encoding', reason);\r\n  }\r\n}\r\n\r\nclass Dirent {\r\n  constructor(name, type) {\r\n    this.name = name;\r\n    this[kType] = type;\r\n  }\r\n\r\n  isDirectory() {\r\n    return this[kType] === UV_DIRENT_DIR;\r\n  }\r\n\r\n  isFile() {\r\n    return this[kType] === UV_DIRENT_FILE;\r\n  }\r\n\r\n  isBlockDevice() {\r\n    return this[kType] === UV_DIRENT_BLOCK;\r\n  }\r\n\r\n  isCharacterDevice() {\r\n    return this[kType] === UV_DIRENT_CHAR;\r\n  }\r\n\r\n  isSymbolicLink() {\r\n    return this[kType] === UV_DIRENT_LINK;\r\n  }\r\n\r\n  isFIFO() {\r\n    return this[kType] === UV_DIRENT_FIFO;\r\n  }\r\n\r\n  isSocket() {\r\n    return this[kType] === UV_DIRENT_SOCKET;\r\n  }\r\n}\r\n\r\nclass DirentFromStats extends Dirent {\r\n  constructor(name, stats) {\r\n    super(name, null);\r\n    this[kStats] = stats;\r\n  }\r\n}\r\n\r\nfor (const name of ReflectOwnKeys(Dirent.prototype)) {\r\n  if (name === 'constructor') {\r\n    continue;\r\n  }\r\n  DirentFromStats.prototype[name] = function() {\r\n    return this[kStats][name]();\r\n  };\r\n}\r\n\r\nfunction copyObject(source) {\r\n  const target = {};\r\n  for (const key in source)\r\n    target[key] = source[key];\r\n  return target;\r\n}\r\n\r\nconst bufferSep = Buffer.from(pathModule.sep);\r\n\r\nfunction join(path, name) {\r\n  if ((typeof path === 'string' || isUint8Array(path)) &&\r\n      name === undefined) {\r\n    return path;\r\n  }\r\n\r\n  if (typeof path === 'string' && isUint8Array(name)) {\r\n    const pathBuffer = Buffer.from(pathModule.join(path, pathModule.sep));\r\n    return Buffer.concat([pathBuffer, name]);\r\n  }\r\n\r\n  if (typeof path === 'string' && typeof name === 'string') {\r\n    return pathModule.join(path, name);\r\n  }\r\n\r\n  if (isUint8Array(path) && isUint8Array(name)) {\r\n    return Buffer.concat([path, bufferSep, name]);\r\n  }\r\n\r\n  throw new ERR_INVALID_ARG_TYPE(\r\n    'path', ['string', 'Buffer'], path);\r\n}\r\n\r\nfunction getDirents(path, { 0: names, 1: types }, callback) {\r\n  let i;\r\n  if (typeof callback === 'function') {\r\n    const len = names.length;\r\n    let toFinish = 0;\r\n    callback = once(callback);\r\n    for (i = 0; i < len; i++) {\r\n      const type = types[i];\r\n      if (type === UV_DIRENT_UNKNOWN) {\r\n        const name = names[i];\r\n        const idx = i;\r\n        toFinish++;\r\n        let filepath;\r\n        try {\r\n          filepath = join(path, name);\r\n        } catch (err) {\r\n          callback(err);\r\n          return;\r\n        }\r\n        lazyLoadFs().lstat(filepath, (err, stats) => {\r\n          if (err) {\r\n            callback(err);\r\n            return;\r\n          }\r\n          names[idx] = new DirentFromStats(name, stats);\r\n          if (--toFinish === 0) {\r\n            callback(null, names);\r\n          }\r\n        });\r\n      } else {\r\n        names[i] = new Dirent(names[i], types[i]);\r\n      }\r\n    }\r\n    if (toFinish === 0) {\r\n      callback(null, names);\r\n    }\r\n  } else {\r\n    const len = names.length;\r\n    for (i = 0; i < len; i++) {\r\n      names[i] = getDirent(path, names[i], types[i]);\r\n    }\r\n    return names;\r\n  }\r\n}\r\n\r\nfunction getDirent(path, name, type, callback) {\r\n  if (typeof callback === 'function') {\r\n    if (type === UV_DIRENT_UNKNOWN) {\r\n      let filepath;\r\n      try {\r\n        filepath = join(path, name);\r\n      } catch (err) {\r\n        callback(err);\r\n        return;\r\n      }\r\n      lazyLoadFs().lstat(filepath, (err, stats) => {\r\n        if (err) {\r\n          callback(err);\r\n          return;\r\n        }\r\n        callback(null, new DirentFromStats(name, stats));\r\n      });\r\n    } else {\r\n      callback(null, new Dirent(name, type));\r\n    }\r\n  } else if (type === UV_DIRENT_UNKNOWN) {\r\n    const stats = lazyLoadFs().lstatSync(join(path, name));\r\n    return new DirentFromStats(name, stats);\r\n  } else {\r\n    return new Dirent(name, type);\r\n  }\r\n}\r\n\r\nfunction getOptions(options, defaultOptions = kEmptyObject) {\r\n  if (options == null || typeof options === 'function') {\r\n    return defaultOptions;\r\n  }\r\n\r\n  if (typeof options === 'string') {\r\n    defaultOptions = { ...defaultOptions };\r\n    defaultOptions.encoding = options;\r\n    options = defaultOptions;\r\n  } else if (typeof options !== 'object') {\r\n    throw new ERR_INVALID_ARG_TYPE('options', ['string', 'Object'], options);\r\n  }\r\n\r\n  if (options.encoding !== 'buffer')\r\n    assertEncoding(options.encoding);\r\n\r\n  if (options.signal !== undefined) {\r\n    validateAbortSignal(options.signal, 'options.signal');\r\n  }\r\n  return options;\r\n}\r\n\r\n/**\r\n * @param {InternalFSBinding.FSSyncContext} ctx\r\n */\r\nfunction handleErrorFromBinding(ctx) {\r\n  if (ctx.errno !== undefined) {  // libuv error numbers\r\n    const err = uvException(ctx);\r\n    ErrorCaptureStackTrace(err, handleErrorFromBinding);\r\n    throw err;\r\n  }\r\n  if (ctx.error !== undefined) {  // Errors created in C++ land.\r\n    // TODO(joyeecheung): currently, ctx.error are encoding errors\r\n    // usually caused by memory problems. We need to figure out proper error\r\n    // code(s) for this.\r\n    ErrorCaptureStackTrace(ctx.error, handleErrorFromBinding);\r\n    throw ctx.error;\r\n  }\r\n}\r\n\r\n// Check if the path contains null types if it is a string nor Uint8Array,\r\n// otherwise return silently.\r\nconst nullCheck = hideStackFrames((path, propName, throwError = true) => {\r\n  const pathIsString = typeof path === 'string';\r\n  const pathIsUint8Array = isUint8Array(path);\r\n\r\n  // We can only perform meaningful checks on strings and Uint8Arrays.\r\n  if ((!pathIsString && !pathIsUint8Array) ||\r\n      (pathIsString && !StringPrototypeIncludes(path, '\\u0000')) ||\r\n      (pathIsUint8Array && !TypedArrayPrototypeIncludes(path, 0))) {\r\n    return;\r\n  }\r\n\r\n  const err = new ERR_INVALID_ARG_VALUE(\r\n    propName,\r\n    path,\r\n    'must be a string or Uint8Array without null bytes'\r\n  );\r\n  if (throwError) {\r\n    throw err;\r\n  }\r\n  return err;\r\n});\r\n\r\nfunction preprocessSymlinkDestination(path, type, linkPath) {\r\n  if (!isWindows) {\r\n    // No preprocessing is needed on Unix.\r\n    return path;\r\n  }\r\n  path = '' + path;\r\n  if (type === 'junction') {\r\n    // Junctions paths need to be absolute and \\\\?\\-prefixed.\r\n    // A relative target is relative to the link's parent directory.\r\n    path = pathModule.resolve(linkPath, '..', path);\r\n    return pathModule.toNamespacedPath(path);\r\n  }\r\n  if (pathModule.isAbsolute(path)) {\r\n    // If the path is absolute, use the \\\\?\\-prefix to enable long filenames\r\n    return pathModule.toNamespacedPath(path);\r\n  }\r\n  // Windows symlinks don't tolerate forward slashes.\r\n  return RegExpPrototypeSymbolReplace(/\\//g, path, '\\\\');\r\n}\r\n\r\n// Constructor for file stats.\r\nfunction StatsBase(dev, mode, nlink, uid, gid, rdev, blksize,\r\n                   ino, size, blocks) {\r\n  this.dev = dev;\r\n  this.mode = mode;\r\n  this.nlink = nlink;\r\n  this.uid = uid;\r\n  this.gid = gid;\r\n  this.rdev = rdev;\r\n  this.blksize = blksize;\r\n  this.ino = ino;\r\n  this.size = size;\r\n  this.blocks = blocks;\r\n}\r\n\r\nStatsBase.prototype.isDirectory = function() {\r\n  return this._checkModeProperty(S_IFDIR);\r\n};\r\n\r\nStatsBase.prototype.isFile = function() {\r\n  return this._checkModeProperty(S_IFREG);\r\n};\r\n\r\nStatsBase.prototype.isBlockDevice = function() {\r\n  return this._checkModeProperty(S_IFBLK);\r\n};\r\n\r\nStatsBase.prototype.isCharacterDevice = function() {\r\n  return this._checkModeProperty(S_IFCHR);\r\n};\r\n\r\nStatsBase.prototype.isSymbolicLink = function() {\r\n  return this._checkModeProperty(S_IFLNK);\r\n};\r\n\r\nStatsBase.prototype.isFIFO = function() {\r\n  return this._checkModeProperty(S_IFIFO);\r\n};\r\n\r\nStatsBase.prototype.isSocket = function() {\r\n  return this._checkModeProperty(S_IFSOCK);\r\n};\r\n\r\nconst kNsPerMsBigInt = 10n ** 6n;\r\nconst kNsPerSecBigInt = 10n ** 9n;\r\nconst kMsPerSec = 10 ** 3;\r\nconst kNsPerMs = 10 ** 6;\r\nfunction msFromTimeSpec(sec, nsec) {\r\n  return sec * kMsPerSec + nsec / kNsPerMs;\r\n}\r\n\r\nfunction nsFromTimeSpecBigInt(sec, nsec) {\r\n  return sec * kNsPerSecBigInt + nsec;\r\n}\r\n\r\n// The Date constructor performs Math.floor() on the absolute value\r\n// of the timestamp: https://tc39.es/ecma262/#sec-timeclip\r\n// Since there may be a precision loss when the timestamp is\r\n// converted to a floating point number, we manually round\r\n// the timestamp here before passing it to Date().\r\n// Refs: https://github.com/nodejs/node/pull/12607\r\n// Refs: https://github.com/nodejs/node/pull/43714\r\nfunction dateFromMs(ms) {\r\n  // Coercing to number, ms can be bigint\r\n  return new Date(MathRound(Number(ms)));\r\n}\r\n\r\nfunction BigIntStats(dev, mode, nlink, uid, gid, rdev, blksize,\r\n                     ino, size, blocks,\r\n                     atimeNs, mtimeNs, ctimeNs, birthtimeNs) {\r\n  ReflectApply(StatsBase, this, [dev, mode, nlink, uid, gid, rdev, blksize,\r\n                                 ino, size, blocks]);\r\n\r\n  this.atimeMs = atimeNs / kNsPerMsBigInt;\r\n  this.mtimeMs = mtimeNs / kNsPerMsBigInt;\r\n  this.ctimeMs = ctimeNs / kNsPerMsBigInt;\r\n  this.birthtimeMs = birthtimeNs / kNsPerMsBigInt;\r\n  this.atimeNs = atimeNs;\r\n  this.mtimeNs = mtimeNs;\r\n  this.ctimeNs = ctimeNs;\r\n  this.birthtimeNs = birthtimeNs;\r\n  this.atime = dateFromMs(this.atimeMs);\r\n  this.mtime = dateFromMs(this.mtimeMs);\r\n  this.ctime = dateFromMs(this.ctimeMs);\r\n  this.birthtime = dateFromMs(this.birthtimeMs);\r\n}\r\n\r\nObjectSetPrototypeOf(BigIntStats.prototype, StatsBase.prototype);\r\nObjectSetPrototypeOf(BigIntStats, StatsBase);\r\n\r\nBigIntStats.prototype._checkModeProperty = function(property) {\r\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\r\n    property === S_IFSOCK)) {\r\n    return false;  // Some types are not available on Windows\r\n  }\r\n  return (this.mode & BigInt(S_IFMT)) === BigInt(property);\r\n};\r\n\r\nfunction Stats(dev, mode, nlink, uid, gid, rdev, blksize,\r\n               ino, size, blocks,\r\n               atimeMs, mtimeMs, ctimeMs, birthtimeMs) {\r\n  FunctionPrototypeCall(StatsBase, this, dev, mode, nlink, uid, gid, rdev,\r\n                        blksize, ino, size, blocks);\r\n  this.atimeMs = atimeMs;\r\n  this.mtimeMs = mtimeMs;\r\n  this.ctimeMs = ctimeMs;\r\n  this.birthtimeMs = birthtimeMs;\r\n  this.atime = dateFromMs(atimeMs);\r\n  this.mtime = dateFromMs(mtimeMs);\r\n  this.ctime = dateFromMs(ctimeMs);\r\n  this.birthtime = dateFromMs(birthtimeMs);\r\n}\r\n\r\nObjectSetPrototypeOf(Stats.prototype, StatsBase.prototype);\r\nObjectSetPrototypeOf(Stats, StatsBase);\r\n\r\n// HACK: Workaround for https://github.com/standard-things/esm/issues/821.\r\n// TODO(ronag): Remove this as soon as `esm` publishes a fixed version.\r\nStats.prototype.isFile = StatsBase.prototype.isFile;\r\n\r\nStats.prototype._checkModeProperty = function(property) {\r\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\r\n    property === S_IFSOCK)) {\r\n    return false;  // Some types are not available on Windows\r\n  }\r\n  return (this.mode & S_IFMT) === property;\r\n};\r\n\r\n/**\r\n * @param {Float64Array | BigInt64Array} stats\r\n * @param {number} offset\r\n * @returns {BigIntStats | Stats}\r\n */\r\nfunction getStatsFromBinding(stats, offset = 0) {\r\n  if (isBigInt64Array(stats)) {\r\n    return new BigIntStats(\r\n      stats[0 + offset], stats[1 + offset], stats[2 + offset],\r\n      stats[3 + offset], stats[4 + offset], stats[5 + offset],\r\n      stats[6 + offset], stats[7 + offset], stats[8 + offset],\r\n      stats[9 + offset],\r\n      nsFromTimeSpecBigInt(stats[10 + offset], stats[11 + offset]),\r\n      nsFromTimeSpecBigInt(stats[12 + offset], stats[13 + offset]),\r\n      nsFromTimeSpecBigInt(stats[14 + offset], stats[15 + offset]),\r\n      nsFromTimeSpecBigInt(stats[16 + offset], stats[17 + offset])\r\n    );\r\n  }\r\n  return new Stats(\r\n    stats[0 + offset], stats[1 + offset], stats[2 + offset],\r\n    stats[3 + offset], stats[4 + offset], stats[5 + offset],\r\n    stats[6 + offset], stats[7 + offset], stats[8 + offset],\r\n    stats[9 + offset],\r\n    msFromTimeSpec(stats[10 + offset], stats[11 + offset]),\r\n    msFromTimeSpec(stats[12 + offset], stats[13 + offset]),\r\n    msFromTimeSpec(stats[14 + offset], stats[15 + offset]),\r\n    msFromTimeSpec(stats[16 + offset], stats[17 + offset])\r\n  );\r\n}\r\n\r\nclass StatFs {\r\n  constructor(type, bsize, blocks, bfree, bavail, files, ffree) {\r\n    this.type = type;\r\n    this.bsize = bsize;\r\n    this.blocks = blocks;\r\n    this.bfree = bfree;\r\n    this.bavail = bavail;\r\n    this.files = files;\r\n    this.ffree = ffree;\r\n  }\r\n}\r\n\r\nfunction getStatFsFromBinding(stats) {\r\n  return new StatFs(\r\n    stats[0], stats[1], stats[2], stats[3], stats[4], stats[5], stats[6]\r\n  );\r\n}\r\n\r\nfunction stringToFlags(flags, name = 'flags') {\r\n  if (typeof flags === 'number') {\r\n    validateInt32(flags, name);\r\n    return flags;\r\n  }\r\n\r\n  if (flags == null) {\r\n    return O_RDONLY;\r\n  }\r\n\r\n  switch (flags) {\r\n    case 'r' : return O_RDONLY;\r\n    case 'rs' : // Fall through.\r\n    case 'sr' : return O_RDONLY | O_SYNC;\r\n    case 'r+' : return O_RDWR;\r\n    case 'rs+' : // Fall through.\r\n    case 'sr+' : return O_RDWR | O_SYNC;\r\n\r\n    case 'w' : return O_TRUNC | O_CREAT | O_WRONLY;\r\n    case 'wx' : // Fall through.\r\n    case 'xw' : return O_TRUNC | O_CREAT | O_WRONLY | O_EXCL;\r\n\r\n    case 'w+' : return O_TRUNC | O_CREAT | O_RDWR;\r\n    case 'wx+': // Fall through.\r\n    case 'xw+': return O_TRUNC | O_CREAT | O_RDWR | O_EXCL;\r\n\r\n    case 'a' : return O_APPEND | O_CREAT | O_WRONLY;\r\n    case 'ax' : // Fall through.\r\n    case 'xa' : return O_APPEND | O_CREAT | O_WRONLY | O_EXCL;\r\n    case 'as' : // Fall through.\r\n    case 'sa' : return O_APPEND | O_CREAT | O_WRONLY | O_SYNC;\r\n\r\n    case 'a+' : return O_APPEND | O_CREAT | O_RDWR;\r\n    case 'ax+': // Fall through.\r\n    case 'xa+': return O_APPEND | O_CREAT | O_RDWR | O_EXCL;\r\n    case 'as+': // Fall through.\r\n    case 'sa+': return O_APPEND | O_CREAT | O_RDWR | O_SYNC;\r\n  }\r\n\r\n  throw new ERR_INVALID_ARG_VALUE('flags', flags);\r\n}\r\n\r\nconst stringToSymlinkType = hideStackFrames((type) => {\r\n  let flags = 0;\r\n  if (typeof type === 'string') {\r\n    switch (type) {\r\n      case 'dir':\r\n        flags |= UV_FS_SYMLINK_DIR;\r\n        break;\r\n      case 'junction':\r\n        flags |= UV_FS_SYMLINK_JUNCTION;\r\n        break;\r\n      case 'file':\r\n        break;\r\n      default:\r\n        throw new ERR_FS_INVALID_SYMLINK_TYPE(type);\r\n    }\r\n  }\r\n  return flags;\r\n});\r\n\r\n// converts Date or number to a fractional UNIX timestamp\r\nfunction toUnixTimestamp(time, name = 'time') {\r\n  // eslint-disable-next-line eqeqeq\r\n  if (typeof time === 'string' && +time == time) {\r\n    return +time;\r\n  }\r\n  if (NumberIsFinite(time)) {\r\n    if (time < 0) {\r\n      return DateNow() / 1000;\r\n    }\r\n    return time;\r\n  }\r\n  if (isDate(time)) {\r\n    // Convert to 123.456 UNIX timestamp\r\n    return DatePrototypeGetTime(time) / 1000;\r\n  }\r\n  throw new ERR_INVALID_ARG_TYPE(name, ['Date', 'Time in seconds'], time);\r\n}\r\n\r\nconst validateOffsetLengthRead = hideStackFrames(\r\n  (offset, length, bufferLength) => {\r\n    if (offset < 0) {\r\n      throw new ERR_OUT_OF_RANGE('offset', '>= 0', offset);\r\n    }\r\n    if (length < 0) {\r\n      throw new ERR_OUT_OF_RANGE('length', '>= 0', length);\r\n    }\r\n    if (offset + length > bufferLength) {\r\n      throw new ERR_OUT_OF_RANGE('length',\r\n                                 `<= ${bufferLength - offset}`, length);\r\n    }\r\n  }\r\n);\r\n\r\nconst validateOffsetLengthWrite = hideStackFrames(\r\n  (offset, length, byteLength) => {\r\n    if (offset > byteLength) {\r\n      throw new ERR_OUT_OF_RANGE('offset', `<= ${byteLength}`, offset);\r\n    }\r\n\r\n    if (length > byteLength - offset) {\r\n      throw new ERR_OUT_OF_RANGE('length', `<= ${byteLength - offset}`, length);\r\n    }\r\n\r\n    if (length < 0) {\r\n      throw new ERR_OUT_OF_RANGE('length', '>= 0', length);\r\n    }\r\n\r\n    validateInt32(length, 'length', 0);\r\n  }\r\n);\r\n\r\nconst validatePath = hideStackFrames((path, propName = 'path') => {\r\n  if (typeof path !== 'string' && !isUint8Array(path)) {\r\n    throw new ERR_INVALID_ARG_TYPE(propName, ['string', 'Buffer', 'URL'], path);\r\n  }\r\n\r\n  const err = nullCheck(path, propName, false);\r\n\r\n  if (err !== undefined) {\r\n    throw err;\r\n  }\r\n});\r\n\r\nconst getValidatedPath = hideStackFrames((fileURLOrPath, propName = 'path') => {\r\n  const path = toPathIfFileURL(fileURLOrPath);\r\n  validatePath(path, propName);\r\n  return path;\r\n});\r\n\r\nconst getValidatedFd = hideStackFrames((fd, propName = 'fd') => {\r\n  if (ObjectIs(fd, -0)) {\r\n    return 0;\r\n  }\r\n\r\n  validateInt32(fd, propName, 0);\r\n\r\n  return fd;\r\n});\r\n\r\nconst validateBufferArray = hideStackFrames((buffers, propName = 'buffers') => {\r\n  if (!ArrayIsArray(buffers))\r\n    throw new ERR_INVALID_ARG_TYPE(propName, 'ArrayBufferView[]', buffers);\r\n\r\n  for (let i = 0; i < buffers.length; i++) {\r\n    if (!isArrayBufferView(buffers[i]))\r\n      throw new ERR_INVALID_ARG_TYPE(propName, 'ArrayBufferView[]', buffers);\r\n  }\r\n\r\n  return buffers;\r\n});\r\n\r\nlet nonPortableTemplateWarn = true;\r\n\r\nfunction warnOnNonPortableTemplate(template) {\r\n  // Template strings passed to the mkdtemp() family of functions should not\r\n  // end with 'X' because they are handled inconsistently across platforms.\r\n  if (nonPortableTemplateWarn && StringPrototypeEndsWith(template, 'X')) {\r\n    process.emitWarning('mkdtemp() templates ending with X are not portable. ' +\r\n                        'For details see: https://nodejs.org/api/fs.html');\r\n    nonPortableTemplateWarn = false;\r\n  }\r\n}\r\n\r\nconst defaultCpOptions = {\r\n  dereference: false,\r\n  errorOnExist: false,\r\n  filter: undefined,\r\n  force: true,\r\n  preserveTimestamps: false,\r\n  recursive: false,\r\n  verbatimSymlinks: false,\r\n};\r\n\r\nconst defaultRmOptions = {\r\n  recursive: false,\r\n  force: false,\r\n  retryDelay: 100,\r\n  maxRetries: 0\r\n};\r\n\r\nconst defaultRmdirOptions = {\r\n  retryDelay: 100,\r\n  maxRetries: 0,\r\n  recursive: false,\r\n};\r\n\r\nconst validateCpOptions = hideStackFrames((options) => {\r\n  if (options === undefined)\r\n    return { ...defaultCpOptions };\r\n  validateObject(options, 'options');\r\n  options = { ...defaultCpOptions, ...options };\r\n  validateBoolean(options.dereference, 'options.dereference');\r\n  validateBoolean(options.errorOnExist, 'options.errorOnExist');\r\n  validateBoolean(options.force, 'options.force');\r\n  validateBoolean(options.preserveTimestamps, 'options.preserveTimestamps');\r\n  validateBoolean(options.recursive, 'options.recursive');\r\n  validateBoolean(options.verbatimSymlinks, 'options.verbatimSymlinks');\r\n  if (options.dereference === true && options.verbatimSymlinks === true) {\r\n    throw new ERR_INCOMPATIBLE_OPTION_PAIR('dereference', 'verbatimSymlinks');\r\n  }\r\n  if (options.filter !== undefined) {\r\n    validateFunction(options.filter, 'options.filter');\r\n  }\r\n  return options;\r\n});\r\n\r\nconst validateRmOptions = hideStackFrames((path, options, expectDir, cb) => {\r\n  options = validateRmdirOptions(options, defaultRmOptions);\r\n  validateBoolean(options.force, 'options.force');\r\n\r\n  lazyLoadFs().lstat(path, (err, stats) => {\r\n    if (err) {\r\n      if (options.force && err.code === 'ENOENT') {\r\n        return cb(null, options);\r\n      }\r\n      return cb(err, options);\r\n    }\r\n\r\n    if (expectDir && !stats.isDirectory()) {\r\n      return cb(false);\r\n    }\r\n\r\n    if (stats.isDirectory() && !options.recursive) {\r\n      return cb(new ERR_FS_EISDIR({\r\n        code: 'EISDIR',\r\n        message: 'is a directory',\r\n        path,\r\n        syscall: 'rm',\r\n        errno: EISDIR\r\n      }));\r\n    }\r\n    return cb(null, options);\r\n  });\r\n});\r\n\r\nconst validateRmOptionsSync = hideStackFrames((path, options, expectDir) => {\r\n  options = validateRmdirOptions(options, defaultRmOptions);\r\n  validateBoolean(options.force, 'options.force');\r\n\r\n  if (!options.force || expectDir || !options.recursive) {\r\n    const isDirectory = lazyLoadFs()\r\n      .lstatSync(path, { throwIfNoEntry: !options.force })?.isDirectory();\r\n\r\n    if (expectDir && !isDirectory) {\r\n      return false;\r\n    }\r\n\r\n    if (isDirectory && !options.recursive) {\r\n      throw new ERR_FS_EISDIR({\r\n        code: 'EISDIR',\r\n        message: 'is a directory',\r\n        path,\r\n        syscall: 'rm',\r\n        errno: EISDIR\r\n      });\r\n    }\r\n  }\r\n\r\n  return options;\r\n});\r\n\r\nlet recursiveRmdirWarned = process.noDeprecation;\r\nfunction emitRecursiveRmdirWarning() {\r\n  if (!recursiveRmdirWarned) {\r\n    process.emitWarning(\r\n      'In future versions of Node.js, fs.rmdir(path, { recursive: true }) ' +\r\n      'will be removed. Use fs.rm(path, { recursive: true }) instead',\r\n      'DeprecationWarning',\r\n      'DEP0147'\r\n    );\r\n    recursiveRmdirWarned = true;\r\n  }\r\n}\r\n\r\nconst validateRmdirOptions = hideStackFrames(\r\n  (options, defaults = defaultRmdirOptions) => {\r\n    if (options === undefined)\r\n      return defaults;\r\n    validateObject(options, 'options');\r\n\r\n    options = { ...defaults, ...options };\r\n\r\n    validateBoolean(options.recursive, 'options.recursive');\r\n    validateInt32(options.retryDelay, 'options.retryDelay', 0);\r\n    validateUint32(options.maxRetries, 'options.maxRetries');\r\n\r\n    return options;\r\n  });\r\n\r\nconst getValidMode = hideStackFrames((mode, type) => {\r\n  let min = kMinimumAccessMode;\r\n  let max = kMaximumAccessMode;\r\n  let def = F_OK;\r\n  if (type === 'copyFile') {\r\n    min = kMinimumCopyMode;\r\n    max = kMaximumCopyMode;\r\n    def = mode || kDefaultCopyMode;\r\n  } else {\r\n    assert(type === 'access');\r\n  }\r\n  if (mode == null) {\r\n    return def;\r\n  }\r\n  validateInteger(mode, 'mode', min, max);\r\n  return mode;\r\n});\r\n\r\nconst validateStringAfterArrayBufferView = hideStackFrames((buffer, name) => {\r\n  if (typeof buffer === 'string') {\r\n    return;\r\n  }\r\n\r\n  if (\r\n    typeof buffer === 'object' &&\r\n    buffer !== null &&\r\n    typeof buffer.toString === 'function' &&\r\n    ObjectPrototypeHasOwnProperty(buffer, 'toString')\r\n  ) {\r\n    return;\r\n  }\r\n\r\n  throw new ERR_INVALID_ARG_TYPE(\r\n    name,\r\n    ['string', 'Buffer', 'TypedArray', 'DataView'],\r\n    buffer\r\n  );\r\n});\r\n\r\nconst validatePrimitiveStringAfterArrayBufferView = hideStackFrames((buffer, name) => {\r\n  if (typeof buffer !== 'string') {\r\n    throw new ERR_INVALID_ARG_TYPE(\r\n      name,\r\n      ['string', 'Buffer', 'TypedArray', 'DataView'],\r\n      buffer\r\n    );\r\n  }\r\n});\r\n\r\nconst validatePosition = hideStackFrames((position, name) => {\r\n  if (typeof position === 'number') {\r\n    validateInteger(position, name);\r\n  } else if (typeof position === 'bigint') {\r\n    if (!(position >= -(2n ** 63n) && position <= 2n ** 63n - 1n)) {\r\n      throw new ERR_OUT_OF_RANGE(name,\r\n                                 `>= ${-(2n ** 63n)} && <= ${2n ** 63n - 1n}`,\r\n                                 position);\r\n    }\r\n  } else {\r\n    throw new ERR_INVALID_ARG_TYPE(name, ['integer', 'bigint'], position);\r\n  }\r\n});\r\n\r\nmodule.exports = {\r\n  constants: {\r\n    kIoMaxLength,\r\n    kMaxUserId,\r\n    kReadFileBufferLength,\r\n    kReadFileUnknownBufferLength,\r\n    kWriteFileMaxChunkSize,\r\n  },\r\n  assertEncoding,\r\n  BigIntStats,  // for testing\r\n  copyObject,\r\n  Dirent,\r\n  emitRecursiveRmdirWarning,\r\n  getDirent,\r\n  getDirents,\r\n  getOptions,\r\n  getValidatedFd,\r\n  getValidatedPath,\r\n  getValidMode,\r\n  handleErrorFromBinding,\r\n  nullCheck,\r\n  preprocessSymlinkDestination,\r\n  realpathCacheKey: Symbol('realpathCacheKey'),\r\n  getStatFsFromBinding,\r\n  getStatsFromBinding,\r\n  stringToFlags,\r\n  stringToSymlinkType,\r\n  Stats,\r\n  toUnixTimestamp,\r\n  validateBufferArray,\r\n  validateCpOptions,\r\n  validateOffsetLengthRead,\r\n  validateOffsetLengthWrite,\r\n  validatePath,\r\n  validatePosition,\r\n  validateRmOptions,\r\n  validateRmOptionsSync,\r\n  validateRmdirOptions,\r\n  validateStringAfterArrayBufferView,\r\n  validatePrimitiveStringAfterArrayBufferView,\r\n  warnOnNonPortableTemplate\r\n};\r\n",
    "name": "node:internal/cluster/utils",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 79,
    "sourcePositions": []
  },
  null,
  null,
  null,
  null,
  {
    "url": "node:internal/v8/startup_snapshot",
    "source": "'use strict';\r\n\r\nconst {\r\n  validateFunction,\r\n} = require('internal/validators');\r\nconst {\r\n  ERR_NOT_BUILDING_SNAPSHOT,\r\n  ERR_DUPLICATE_STARTUP_SNAPSHOT_MAIN_FUNCTION\r\n} = require('internal/errors');\r\n\r\nconst {\r\n  setSerializeCallback,\r\n  setDeserializeCallback,\r\n  setDeserializeMainFunction: _setDeserializeMainFunction,\r\n} = internalBinding('mksnapshot');\r\n\r\nfunction isBuildingSnapshot() {\r\n  // For now this is the only way to build a snapshot.\r\n  return require('internal/options').getOptionValue('--build-snapshot');\r\n}\r\n\r\nfunction throwIfNotBuildingSnapshot() {\r\n  if (!isBuildingSnapshot()) {\r\n    throw new ERR_NOT_BUILDING_SNAPSHOT();\r\n  }\r\n}\r\n\r\nconst deserializeCallbacks = [];\r\nlet deserializeCallbackIsSet = false;\r\nfunction runDeserializeCallbacks() {\r\n  while (deserializeCallbacks.length > 0) {\r\n    const { 0: callback, 1: data } = deserializeCallbacks.shift();\r\n    callback(data);\r\n  }\r\n}\r\n\r\nfunction addDeserializeCallback(callback, data) {\r\n  throwIfNotBuildingSnapshot();\r\n  validateFunction(callback, 'callback');\r\n  if (!deserializeCallbackIsSet) {\r\n    // TODO(joyeecheung): when the main function handling is done in JS,\r\n    // the deserialize callbacks can always be invoked. For now only\r\n    // store it in C++ when it's actually used to avoid unnecessary\r\n    // C++ -> JS costs.\r\n    setDeserializeCallback(runDeserializeCallbacks);\r\n    deserializeCallbackIsSet = true;\r\n  }\r\n  deserializeCallbacks.push([callback, data]);\r\n}\r\n\r\nconst serializeCallbacks = [];\r\nfunction runSerializeCallbacks() {\r\n  while (serializeCallbacks.length > 0) {\r\n    const { 0: callback, 1: data } = serializeCallbacks.shift();\r\n    callback(data);\r\n  }\r\n}\r\n\r\nfunction addSerializeCallback(callback, data) {\r\n  throwIfNotBuildingSnapshot();\r\n  validateFunction(callback, 'callback');\r\n  serializeCallbacks.push([callback, data]);\r\n}\r\n\r\nfunction initializeCallbacks() {\r\n  // Only run the serialize callbacks in snapshot building mode, otherwise\r\n  // they throw.\r\n  if (isBuildingSnapshot()) {\r\n    setSerializeCallback(runSerializeCallbacks);\r\n  }\r\n}\r\n\r\nlet deserializeMainIsSet = false;\r\nfunction setDeserializeMainFunction(callback, data) {\r\n  throwIfNotBuildingSnapshot();\r\n  // TODO(joyeecheung): In lib/internal/bootstrap/node.js, create a default\r\n  // main function to run the lib/internal/main scripts and make sure that\r\n  // the main function set in the snapshot building process takes precedence.\r\n  validateFunction(callback, 'callback');\r\n  if (deserializeMainIsSet) {\r\n    throw new ERR_DUPLICATE_STARTUP_SNAPSHOT_MAIN_FUNCTION();\r\n  }\r\n  deserializeMainIsSet = true;\r\n\r\n  _setDeserializeMainFunction(function deserializeMain() {\r\n    const {\r\n      prepareMainThreadExecution,\r\n      markBootstrapComplete\r\n    } = require('internal/process/pre_execution');\r\n\r\n    // This should be in sync with run_main_module.js until we make that\r\n    // a built-in main function.\r\n    prepareMainThreadExecution(true);\r\n    markBootstrapComplete();\r\n    callback(data);\r\n  });\r\n}\r\n\r\nmodule.exports = {\r\n  initializeCallbacks,\r\n  runDeserializeCallbacks,\r\n  // Exposed to require('v8').startupSnapshot\r\n  namespace: {\r\n    addDeserializeCallback,\r\n    addSerializeCallback,\r\n    setDeserializeMainFunction,\r\n    isBuildingSnapshot\r\n  }\r\n};\r\n",
    "name": "startup_snapshot",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 84,
    "sourcePositions": []
  },
  null,
  null,
  {
    "url": "node:internal/options",
    "source": "'use strict';\r\n\r\nconst {\r\n  getCLIOptions,\r\n  getEmbedderOptions: getEmbedderOptionsFromBinding,\r\n} = internalBinding('options');\r\n\r\nlet warnOnAllowUnauthorized = true;\r\n\r\nlet optionsMap;\r\nlet aliasesMap;\r\nlet embedderOptions;\r\n\r\n// getCLIOptions() would serialize the option values from C++ land.\r\n// It would error if the values are queried before bootstrap is\r\n// complete so that we don't accidentally include runtime-dependent\r\n// states into a runtime-independent snapshot.\r\nfunction getCLIOptionsFromBinding() {\r\n  if (!optionsMap) {\r\n    ({ options: optionsMap } = getCLIOptions());\r\n  }\r\n  return optionsMap;\r\n}\r\n\r\nfunction getAliasesFromBinding() {\r\n  if (!aliasesMap) {\r\n    ({ aliases: aliasesMap } = getCLIOptions());\r\n  }\r\n  return aliasesMap;\r\n}\r\n\r\nfunction getEmbedderOptions() {\r\n  if (!embedderOptions) {\r\n    embedderOptions = getEmbedderOptionsFromBinding();\r\n  }\r\n  return embedderOptions;\r\n}\r\n\r\nfunction refreshOptions() {\r\n  optionsMap = undefined;\r\n  aliasesMap = undefined;\r\n}\r\n\r\nfunction getOptionValue(optionName) {\r\n  const options = getCLIOptionsFromBinding();\r\n  if (optionName.startsWith('--no-')) {\r\n    const option = options.get('--' + optionName.slice(5));\r\n    return option && !option.value;\r\n  }\r\n  return options.get(optionName)?.value;\r\n}\r\n\r\nfunction getAllowUnauthorized() {\r\n  const allowUnauthorized = process.env.NODE_TLS_REJECT_UNAUTHORIZED === '0';\r\n\r\n  if (allowUnauthorized && warnOnAllowUnauthorized) {\r\n    warnOnAllowUnauthorized = false;\r\n    process.emitWarning(\r\n      'Setting the NODE_TLS_REJECT_UNAUTHORIZED ' +\r\n      'environment variable to \\'0\\' makes TLS connections ' +\r\n      'and HTTPS requests insecure by disabling ' +\r\n      'certificate verification.');\r\n  }\r\n  return allowUnauthorized;\r\n}\r\n\r\nmodule.exports = {\r\n  get options() {\r\n    return getCLIOptionsFromBinding();\r\n  },\r\n  get aliases() {\r\n    return getAliasesFromBinding();\r\n  },\r\n  getOptionValue,\r\n  getAllowUnauthorized,\r\n  getEmbedderOptions,\r\n  refreshOptions\r\n};\r\n",
    "name": "options",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 87,
    "sourcePositions": []
  },
  {
    "url": "node:vm",
    "source": "// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n'use strict';\r\n\r\nconst {\r\n  ArrayPrototypeForEach,\r\n  Symbol,\r\n  PromiseReject,\r\n  ReflectApply,\r\n} = primordials;\r\n\r\nconst {\r\n  ContextifyScript,\r\n  MicrotaskQueue,\r\n  makeContext,\r\n  constants,\r\n  measureMemory: _measureMemory,\r\n} = internalBinding('contextify');\r\nconst {\r\n  ERR_CONTEXT_NOT_INITIALIZED,\r\n  ERR_INVALID_ARG_TYPE,\r\n} = require('internal/errors').codes;\r\nconst {\r\n  isArrayBufferView,\r\n} = require('internal/util/types');\r\nconst {\r\n  validateBoolean,\r\n  validateFunction,\r\n  validateInt32,\r\n  validateObject,\r\n  validateOneOf,\r\n  validateString,\r\n  validateUint32,\r\n} = require('internal/validators');\r\nconst {\r\n  emitExperimentalWarning,\r\n  kEmptyObject,\r\n  kVmBreakFirstLineSymbol,\r\n} = require('internal/util');\r\nconst {\r\n  internalCompileFunction,\r\n  isContext,\r\n} = require('internal/vm');\r\nconst kParsingContext = Symbol('script parsing context');\r\n\r\nclass Script extends ContextifyScript {\r\n  constructor(code, options = kEmptyObject) {\r\n    code = `${code}`;\r\n    if (typeof options === 'string') {\r\n      options = { filename: options };\r\n    } else {\r\n      validateObject(options, 'options');\r\n    }\r\n\r\n    const {\r\n      filename = 'evalmachine.<anonymous>',\r\n      lineOffset = 0,\r\n      columnOffset = 0,\r\n      cachedData,\r\n      produceCachedData = false,\r\n      importModuleDynamically,\r\n      [kParsingContext]: parsingContext,\r\n    } = options;\r\n\r\n    validateString(filename, 'options.filename');\r\n    validateInt32(lineOffset, 'options.lineOffset');\r\n    validateInt32(columnOffset, 'options.columnOffset');\r\n    if (cachedData !== undefined && !isArrayBufferView(cachedData)) {\r\n      throw new ERR_INVALID_ARG_TYPE(\r\n        'options.cachedData',\r\n        ['Buffer', 'TypedArray', 'DataView'],\r\n        cachedData\r\n      );\r\n    }\r\n    validateBoolean(produceCachedData, 'options.produceCachedData');\r\n\r\n    // Calling `ReThrow()` on a native TryCatch does not generate a new\r\n    // abort-on-uncaught-exception check. A dummy try/catch in JS land\r\n    // protects against that.\r\n    try { // eslint-disable-line no-useless-catch\r\n      super(code,\r\n            filename,\r\n            lineOffset,\r\n            columnOffset,\r\n            cachedData,\r\n            produceCachedData,\r\n            parsingContext);\r\n    } catch (e) {\r\n      throw e; /* node-do-not-add-exception-line */\r\n    }\r\n\r\n    if (importModuleDynamically !== undefined) {\r\n      validateFunction(importModuleDynamically,\r\n                       'options.importModuleDynamically');\r\n      const { importModuleDynamicallyWrap } =\r\n        require('internal/vm/module');\r\n      const { callbackMap } = internalBinding('module_wrap');\r\n      callbackMap.set(this, {\r\n        importModuleDynamically:\r\n          importModuleDynamicallyWrap(importModuleDynamically),\r\n      });\r\n    }\r\n  }\r\n\r\n  runInThisContext(options) {\r\n    const { breakOnSigint, args } = getRunInContextArgs(null, options);\r\n    if (breakOnSigint && process.listenerCount('SIGINT') > 0) {\r\n      return sigintHandlersWrap(super.runInContext, this, args);\r\n    }\r\n    return ReflectApply(super.runInContext, this, args);\r\n  }\r\n\r\n  runInContext(contextifiedObject, options) {\r\n    validateContext(contextifiedObject);\r\n    const { breakOnSigint, args } = getRunInContextArgs(\r\n      contextifiedObject,\r\n      options,\r\n    );\r\n    if (breakOnSigint && process.listenerCount('SIGINT') > 0) {\r\n      return sigintHandlersWrap(super.runInContext, this, args);\r\n    }\r\n    return ReflectApply(super.runInContext, this, args);\r\n  }\r\n\r\n  runInNewContext(contextObject, options) {\r\n    const context = createContext(contextObject, getContextOptions(options));\r\n    return this.runInContext(context, options);\r\n  }\r\n}\r\n\r\nfunction validateContext(contextifiedObject) {\r\n  if (!isContext(contextifiedObject)) {\r\n    throw new ERR_INVALID_ARG_TYPE('contextifiedObject', 'vm.Context',\r\n                                   contextifiedObject);\r\n  }\r\n}\r\n\r\nfunction getRunInContextArgs(contextifiedObject, options = kEmptyObject) {\r\n  validateObject(options, 'options');\r\n\r\n  let timeout = options.timeout;\r\n  if (timeout === undefined) {\r\n    timeout = -1;\r\n  } else {\r\n    validateUint32(timeout, 'options.timeout', true);\r\n  }\r\n\r\n  const {\r\n    displayErrors = true,\r\n    breakOnSigint = false,\r\n    [kVmBreakFirstLineSymbol]: breakFirstLine = false,\r\n  } = options;\r\n\r\n  validateBoolean(displayErrors, 'options.displayErrors');\r\n  validateBoolean(breakOnSigint, 'options.breakOnSigint');\r\n\r\n  return {\r\n    breakOnSigint,\r\n    args: [\r\n      contextifiedObject,\r\n      timeout,\r\n      displayErrors,\r\n      breakOnSigint,\r\n      breakFirstLine,\r\n    ],\r\n  };\r\n}\r\n\r\nfunction getContextOptions(options) {\r\n  if (!options)\r\n    return {};\r\n  const contextOptions = {\r\n    name: options.contextName,\r\n    origin: options.contextOrigin,\r\n    codeGeneration: undefined,\r\n    microtaskMode: options.microtaskMode,\r\n  };\r\n  if (contextOptions.name !== undefined)\r\n    validateString(contextOptions.name, 'options.contextName');\r\n  if (contextOptions.origin !== undefined)\r\n    validateString(contextOptions.origin, 'options.contextOrigin');\r\n  if (options.contextCodeGeneration !== undefined) {\r\n    validateObject(options.contextCodeGeneration,\r\n                   'options.contextCodeGeneration');\r\n    const { strings, wasm } = options.contextCodeGeneration;\r\n    if (strings !== undefined)\r\n      validateBoolean(strings, 'options.contextCodeGeneration.strings');\r\n    if (wasm !== undefined)\r\n      validateBoolean(wasm, 'options.contextCodeGeneration.wasm');\r\n    contextOptions.codeGeneration = { strings, wasm };\r\n  }\r\n  if (options.microtaskMode !== undefined)\r\n    validateString(options.microtaskMode, 'options.microtaskMode');\r\n  return contextOptions;\r\n}\r\n\r\nlet defaultContextNameIndex = 1;\r\nfunction createContext(contextObject = {}, options = kEmptyObject) {\r\n  if (isContext(contextObject)) {\r\n    return contextObject;\r\n  }\r\n\r\n  validateObject(options, 'options');\r\n\r\n  const {\r\n    name = `VM Context ${defaultContextNameIndex++}`,\r\n    origin,\r\n    codeGeneration,\r\n    microtaskMode\r\n  } = options;\r\n\r\n  validateString(name, 'options.name');\r\n  if (origin !== undefined)\r\n    validateString(origin, 'options.origin');\r\n  if (codeGeneration !== undefined)\r\n    validateObject(codeGeneration, 'options.codeGeneration');\r\n\r\n  let strings = true;\r\n  let wasm = true;\r\n  if (codeGeneration !== undefined) {\r\n    ({ strings = true, wasm = true } = codeGeneration);\r\n    validateBoolean(strings, 'options.codeGeneration.strings');\r\n    validateBoolean(wasm, 'options.codeGeneration.wasm');\r\n  }\r\n\r\n  let microtaskQueue = null;\r\n  if (microtaskMode !== undefined) {\r\n    validateOneOf(microtaskMode, 'options.microtaskMode',\r\n                  ['afterEvaluate', undefined]);\r\n\r\n    if (microtaskMode === 'afterEvaluate')\r\n      microtaskQueue = new MicrotaskQueue();\r\n  }\r\n\r\n  makeContext(contextObject, name, origin, strings, wasm, microtaskQueue);\r\n  return contextObject;\r\n}\r\n\r\nfunction createScript(code, options) {\r\n  return new Script(code, options);\r\n}\r\n\r\n// Remove all SIGINT listeners and re-attach them after the wrapped function\r\n// has executed, so that caught SIGINT are handled by the listeners again.\r\nfunction sigintHandlersWrap(fn, thisArg, argsArray) {\r\n  const sigintListeners = process.rawListeners('SIGINT');\r\n\r\n  process.removeAllListeners('SIGINT');\r\n\r\n  try {\r\n    return ReflectApply(fn, thisArg, argsArray);\r\n  } finally {\r\n    // Add using the public methods so that the `newListener` handler of\r\n    // process can re-attach the listeners.\r\n    ArrayPrototypeForEach(sigintListeners, (listener) => {\r\n      process.addListener('SIGINT', listener);\r\n    });\r\n  }\r\n}\r\n\r\nfunction runInContext(code, contextifiedObject, options) {\r\n  validateContext(contextifiedObject);\r\n  if (typeof options === 'string') {\r\n    options = {\r\n      filename: options,\r\n      [kParsingContext]: contextifiedObject\r\n    };\r\n  } else {\r\n    options = { ...options, [kParsingContext]: contextifiedObject };\r\n  }\r\n  return createScript(code, options)\r\n    .runInContext(contextifiedObject, options);\r\n}\r\n\r\nfunction runInNewContext(code, contextObject, options) {\r\n  if (typeof options === 'string') {\r\n    options = { filename: options };\r\n  }\r\n  contextObject = createContext(contextObject, getContextOptions(options));\r\n  options = { ...options, [kParsingContext]: contextObject };\r\n  return createScript(code, options).runInNewContext(contextObject, options);\r\n}\r\n\r\nfunction runInThisContext(code, options) {\r\n  if (typeof options === 'string') {\r\n    options = { filename: options };\r\n  }\r\n  return createScript(code, options).runInThisContext(options);\r\n}\r\n\r\nfunction compileFunction(code, params, options = kEmptyObject) {\r\n  return internalCompileFunction(code, params, options).function;\r\n}\r\n\r\nconst measureMemoryModes = {\r\n  summary: constants.measureMemory.mode.SUMMARY,\r\n  detailed: constants.measureMemory.mode.DETAILED,\r\n};\r\n\r\nconst measureMemoryExecutions = {\r\n  default: constants.measureMemory.execution.DEFAULT,\r\n  eager: constants.measureMemory.execution.EAGER,\r\n};\r\n\r\nfunction measureMemory(options = kEmptyObject) {\r\n  emitExperimentalWarning('vm.measureMemory');\r\n  validateObject(options, 'options');\r\n  const { mode = 'summary', execution = 'default' } = options;\r\n  validateOneOf(mode, 'options.mode', ['summary', 'detailed']);\r\n  validateOneOf(execution, 'options.execution', ['default', 'eager']);\r\n  const result = _measureMemory(measureMemoryModes[mode],\r\n                                measureMemoryExecutions[execution]);\r\n  if (result === undefined) {\r\n    return PromiseReject(new ERR_CONTEXT_NOT_INITIALIZED());\r\n  }\r\n  return result;\r\n}\r\n\r\nmodule.exports = {\r\n  Script,\r\n  createContext,\r\n  createScript,\r\n  runInContext,\r\n  runInNewContext,\r\n  runInThisContext,\r\n  isContext,\r\n  compileFunction,\r\n  measureMemory,\r\n};\r\n\r\n// The vm module is patched to include vm.Module, vm.SourceTextModule\r\n// and vm.SyntheticModule in the pre-execution phase when\r\n// --experimental-vm-modules is on.\r\n",
    "name": "node:vm",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 88,
    "sourcePositions": []
  },
  {
    "url": "node:internal/vm",
    "source": "'use strict';\r\n\r\nconst {\r\n  ArrayPrototypeForEach,\r\n} = primordials;\r\n\r\nconst {\r\n  compileFunction,\r\n  isContext: _isContext,\r\n} = internalBinding('contextify');\r\nconst {\r\n  validateArray,\r\n  validateBoolean,\r\n  validateBuffer,\r\n  validateFunction,\r\n  validateObject,\r\n  validateString,\r\n  validateStringArray,\r\n  validateUint32,\r\n} = require('internal/validators');\r\nconst {\r\n  ERR_INVALID_ARG_TYPE,\r\n} = require('internal/errors').codes;\r\n\r\nfunction isContext(object) {\r\n  validateObject(object, 'object', { __proto__: null, allowArray: true });\r\n\r\n  return _isContext(object);\r\n}\r\n\r\nfunction internalCompileFunction(code, params, options) {\r\n  validateString(code, 'code');\r\n  if (params !== undefined) {\r\n    validateStringArray(params, 'params');\r\n  }\r\n\r\n  const {\r\n    filename = '',\r\n    columnOffset = 0,\r\n    lineOffset = 0,\r\n    cachedData = undefined,\r\n    produceCachedData = false,\r\n    parsingContext = undefined,\r\n    contextExtensions = [],\r\n    importModuleDynamically,\r\n  } = options;\r\n\r\n  validateString(filename, 'options.filename');\r\n  validateUint32(columnOffset, 'options.columnOffset');\r\n  validateUint32(lineOffset, 'options.lineOffset');\r\n  if (cachedData !== undefined)\r\n    validateBuffer(cachedData, 'options.cachedData');\r\n  validateBoolean(produceCachedData, 'options.produceCachedData');\r\n  if (parsingContext !== undefined) {\r\n    if (\r\n      typeof parsingContext !== 'object' ||\r\n      parsingContext === null ||\r\n      !isContext(parsingContext)\r\n    ) {\r\n      throw new ERR_INVALID_ARG_TYPE(\r\n        'options.parsingContext',\r\n        'Context',\r\n        parsingContext\r\n      );\r\n    }\r\n  }\r\n  validateArray(contextExtensions, 'options.contextExtensions');\r\n  ArrayPrototypeForEach(contextExtensions, (extension, i) => {\r\n    const name = `options.contextExtensions[${i}]`;\r\n    validateObject(extension, name, { __proto__: null, nullable: true });\r\n  });\r\n\r\n  const result = compileFunction(\r\n    code,\r\n    filename,\r\n    lineOffset,\r\n    columnOffset,\r\n    cachedData,\r\n    produceCachedData,\r\n    parsingContext,\r\n    contextExtensions,\r\n    params\r\n  );\r\n\r\n  if (produceCachedData) {\r\n    result.function.cachedDataProduced = result.cachedDataProduced;\r\n  }\r\n\r\n  if (result.cachedData) {\r\n    result.function.cachedData = result.cachedData;\r\n  }\r\n\r\n  if (typeof result.cachedDataRejected === 'boolean') {\r\n    result.function.cachedDataRejected = result.cachedDataRejected;\r\n  }\r\n\r\n  if (importModuleDynamically !== undefined) {\r\n    validateFunction(importModuleDynamically,\r\n                     'options.importModuleDynamically');\r\n    const { importModuleDynamicallyWrap } =\r\n      require('internal/vm/module');\r\n    const { callbackMap } = internalBinding('module_wrap');\r\n    const wrapped = importModuleDynamicallyWrap(importModuleDynamically);\r\n    const func = result.function;\r\n    callbackMap.set(result.cacheKey, {\r\n      importModuleDynamically: (s, _k, i) => wrapped(s, func, i),\r\n    });\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nmodule.exports = {\r\n  internalCompileFunction,\r\n  isContext,\r\n};\r\n",
    "name": "vm",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 89,
    "sourcePositions": []
  },
  null,
  null,
  {
    "url": "node:crypto",
    "source": "// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n// Note: In 0.8 and before, crypto functions all defaulted to using\r\n// binary-encoded strings rather than buffers.\r\n\r\n'use strict';\r\n\r\nconst {\r\n  ObjectDefineProperty,\r\n  ObjectDefineProperties,\r\n} = primordials;\r\n\r\nconst {\r\n  assertCrypto,\r\n  deprecate\r\n} = require('internal/util');\r\nassertCrypto();\r\n\r\nconst {\r\n  ERR_CRYPTO_FIPS_FORCED,\r\n} = require('internal/errors').codes;\r\nconst constants = internalBinding('constants').crypto;\r\nconst { getOptionValue } = require('internal/options');\r\nconst {\r\n  getFipsCrypto,\r\n  setFipsCrypto,\r\n  timingSafeEqual,\r\n} = internalBinding('crypto');\r\nconst {\r\n  checkPrime,\r\n  checkPrimeSync,\r\n  generatePrime,\r\n  generatePrimeSync,\r\n  randomBytes,\r\n  randomFill,\r\n  randomFillSync,\r\n  randomInt,\r\n  randomUUID,\r\n} = require('internal/crypto/random');\r\nconst {\r\n  pbkdf2,\r\n  pbkdf2Sync\r\n} = require('internal/crypto/pbkdf2');\r\nconst {\r\n  scrypt,\r\n  scryptSync\r\n} = require('internal/crypto/scrypt');\r\nconst {\r\n  hkdf,\r\n  hkdfSync\r\n} = require('internal/crypto/hkdf');\r\nconst {\r\n  generateKeyPair,\r\n  generateKeyPairSync,\r\n  generateKey,\r\n  generateKeySync,\r\n} = require('internal/crypto/keygen');\r\nconst {\r\n  createSecretKey,\r\n  createPublicKey,\r\n  createPrivateKey,\r\n  KeyObject,\r\n} = require('internal/crypto/keys');\r\nconst {\r\n  DiffieHellman,\r\n  DiffieHellmanGroup,\r\n  ECDH,\r\n  diffieHellman\r\n} = require('internal/crypto/diffiehellman');\r\nconst {\r\n  Cipher,\r\n  Cipheriv,\r\n  Decipher,\r\n  Decipheriv,\r\n  privateDecrypt,\r\n  privateEncrypt,\r\n  publicDecrypt,\r\n  publicEncrypt,\r\n  getCipherInfo,\r\n} = require('internal/crypto/cipher');\r\nconst {\r\n  Sign,\r\n  signOneShot,\r\n  Verify,\r\n  verifyOneShot\r\n} = require('internal/crypto/sig');\r\nconst {\r\n  Hash,\r\n  Hmac\r\n} = require('internal/crypto/hash');\r\nconst {\r\n  X509Certificate\r\n} = require('internal/crypto/x509');\r\nconst {\r\n  getCiphers,\r\n  getCurves,\r\n  getDefaultEncoding,\r\n  getHashes,\r\n  setDefaultEncoding,\r\n  setEngine,\r\n  secureHeapUsed,\r\n} = require('internal/crypto/util');\r\nconst Certificate = require('internal/crypto/certificate');\r\n\r\nlet webcrypto;\r\nfunction lazyWebCrypto() {\r\n  webcrypto ??= require('internal/crypto/webcrypto');\r\n  return webcrypto;\r\n}\r\n\r\n// These helper functions are needed because the constructors can\r\n// use new, in which case V8 cannot inline the recursive constructor call\r\nfunction createHash(algorithm, options) {\r\n  return new Hash(algorithm, options);\r\n}\r\n\r\nfunction createCipher(cipher, password, options) {\r\n  return new Cipher(cipher, password, options);\r\n}\r\n\r\nfunction createCipheriv(cipher, key, iv, options) {\r\n  return new Cipheriv(cipher, key, iv, options);\r\n}\r\n\r\nfunction createDecipher(cipher, password, options) {\r\n  return new Decipher(cipher, password, options);\r\n}\r\n\r\nfunction createDecipheriv(cipher, key, iv, options) {\r\n  return new Decipheriv(cipher, key, iv, options);\r\n}\r\n\r\nfunction createDiffieHellman(sizeOrKey, keyEncoding, generator, genEncoding) {\r\n  return new DiffieHellman(sizeOrKey, keyEncoding, generator, genEncoding);\r\n}\r\n\r\nfunction createDiffieHellmanGroup(name) {\r\n  return new DiffieHellmanGroup(name);\r\n}\r\n\r\nfunction createECDH(curve) {\r\n  return new ECDH(curve);\r\n}\r\n\r\nfunction createHmac(hmac, key, options) {\r\n  return new Hmac(hmac, key, options);\r\n}\r\n\r\nfunction createSign(algorithm, options) {\r\n  return new Sign(algorithm, options);\r\n}\r\n\r\nfunction createVerify(algorithm, options) {\r\n  return new Verify(algorithm, options);\r\n}\r\n\r\nmodule.exports = {\r\n  // Methods\r\n  checkPrime,\r\n  checkPrimeSync,\r\n  createCipheriv,\r\n  createDecipheriv,\r\n  createDiffieHellman,\r\n  createDiffieHellmanGroup,\r\n  createECDH,\r\n  createHash,\r\n  createHmac,\r\n  createPrivateKey,\r\n  createPublicKey,\r\n  createSecretKey,\r\n  createSign,\r\n  createVerify,\r\n  diffieHellman,\r\n  generatePrime,\r\n  generatePrimeSync,\r\n  getCiphers,\r\n  getCipherInfo,\r\n  getCurves,\r\n  getDiffieHellman: createDiffieHellmanGroup,\r\n  getHashes,\r\n  hkdf,\r\n  hkdfSync,\r\n  pbkdf2,\r\n  pbkdf2Sync,\r\n  generateKeyPair,\r\n  generateKeyPairSync,\r\n  generateKey,\r\n  generateKeySync,\r\n  privateDecrypt,\r\n  privateEncrypt,\r\n  publicDecrypt,\r\n  publicEncrypt,\r\n  randomBytes,\r\n  randomFill,\r\n  randomFillSync,\r\n  randomInt,\r\n  randomUUID,\r\n  scrypt,\r\n  scryptSync,\r\n  sign: signOneShot,\r\n  setEngine,\r\n  timingSafeEqual,\r\n  getFips,\r\n  setFips,\r\n  verify: verifyOneShot,\r\n\r\n  // Classes\r\n  Certificate,\r\n  Cipher,\r\n  Cipheriv,\r\n  Decipher,\r\n  Decipheriv,\r\n  DiffieHellman,\r\n  DiffieHellmanGroup,\r\n  ECDH,\r\n  Hash,\r\n  Hmac,\r\n  KeyObject,\r\n  Sign,\r\n  Verify,\r\n  X509Certificate,\r\n  secureHeapUsed,\r\n};\r\n\r\nfunction getFips() {\r\n  return getOptionValue('--force-fips') ? 1 : getFipsCrypto();\r\n}\r\n\r\nfunction setFips(val) {\r\n  if (getOptionValue('--force-fips')) {\r\n    if (val) return;\r\n    throw new ERR_CRYPTO_FIPS_FORCED();\r\n  } else {\r\n    setFipsCrypto(val);\r\n  }\r\n}\r\n\r\nfunction getRandomValues(array) {\r\n  return lazyWebCrypto().crypto.getRandomValues(array);\r\n}\r\n\r\nObjectDefineProperty(constants, 'defaultCipherList', {\r\n  __proto__: null,\r\n  get() {\r\n    const value = getOptionValue('--tls-cipher-list');\r\n    ObjectDefineProperty(this, 'defaultCipherList', {\r\n      __proto__: null,\r\n      writable: true,\r\n      configurable: true,\r\n      enumerable: true,\r\n      value\r\n    });\r\n    return value;\r\n  },\r\n  set(val) {\r\n    ObjectDefineProperty(this, 'defaultCipherList', {\r\n      __proto__: null,\r\n      writable: true,\r\n      configurable: true,\r\n      enumerable: true,\r\n      value: val\r\n    });\r\n  },\r\n  configurable: true,\r\n  enumerable: true,\r\n});\r\n\r\nfunction getRandomBytesAlias(key) {\r\n  return {\r\n    enumerable: false,\r\n    configurable: true,\r\n    get() {\r\n      let value;\r\n      if (getOptionValue('--pending-deprecation')) {\r\n        value = deprecate(\r\n          randomBytes,\r\n          `crypto.${key} is deprecated.`,\r\n          'DEP0115');\r\n      } else {\r\n        value = randomBytes;\r\n      }\r\n      ObjectDefineProperty(\r\n        this,\r\n        key,\r\n        {\r\n          __proto__: null,\r\n          enumerable: false,\r\n          configurable: true,\r\n          writable: true,\r\n          value: value\r\n        }\r\n      );\r\n      return value;\r\n    },\r\n    set(value) {\r\n      ObjectDefineProperty(\r\n        this,\r\n        key,\r\n        {\r\n          __proto__: null,\r\n          enumerable: true,\r\n          configurable: true,\r\n          writable: true,\r\n          value\r\n        }\r\n      );\r\n    }\r\n  };\r\n}\r\n\r\nObjectDefineProperties(module.exports, {\r\n  createCipher: {\r\n    __proto__: null,\r\n    enumerable: false,\r\n    value: deprecate(createCipher,\r\n                     'crypto.createCipher is deprecated.', 'DEP0106')\r\n  },\r\n  createDecipher: {\r\n    __proto__: null,\r\n    enumerable: false,\r\n    value: deprecate(createDecipher,\r\n                     'crypto.createDecipher is deprecated.', 'DEP0106')\r\n  },\r\n  // crypto.fips is deprecated. DEP0093. Use crypto.getFips()/crypto.setFips()\r\n  fips: {\r\n    __proto__: null,\r\n    get: getFips,\r\n    set: setFips,\r\n  },\r\n  DEFAULT_ENCODING: {\r\n    __proto__: null,\r\n    enumerable: false,\r\n    configurable: true,\r\n    get: deprecate(getDefaultEncoding,\r\n                   'crypto.DEFAULT_ENCODING is deprecated.', 'DEP0091'),\r\n    set: deprecate(setDefaultEncoding,\r\n                   'crypto.DEFAULT_ENCODING is deprecated.', 'DEP0091')\r\n  },\r\n  constants: {\r\n    __proto__: null,\r\n    configurable: false,\r\n    enumerable: true,\r\n    value: constants\r\n  },\r\n\r\n  webcrypto: {\r\n    __proto__: null,\r\n    configurable: false,\r\n    enumerable: true,\r\n    get() { return lazyWebCrypto().crypto; },\r\n    set: undefined,\r\n  },\r\n\r\n  subtle: {\r\n    __proto__: null,\r\n    configurable: false,\r\n    enumerable: true,\r\n    get() { return lazyWebCrypto().crypto.subtle; },\r\n    set: undefined,\r\n  },\r\n\r\n  getRandomValues: {\r\n    __proto__: null,\r\n    configurable: false,\r\n    enumerable: true,\r\n    get: () => getRandomValues,\r\n    set: undefined,\r\n  },\r\n\r\n  // Aliases for randomBytes are deprecated.\r\n  // The ecosystem needs those to exist for backwards compatibility.\r\n  prng: getRandomBytesAlias('prng'),\r\n  pseudoRandomBytes: getRandomBytesAlias('pseudoRandomBytes'),\r\n  rng: getRandomBytesAlias('rng')\r\n});\r\n",
    "name": "node:crypto",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 92,
    "sourcePositions": []
  },
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  {
    "url": "node:internal/console/constructor",
    "source": "'use strict';\r\n\r\n// The Console constructor is not actually used to construct the global\r\n// console. It's exported for backwards compatibility.\r\n\r\nconst {\r\n  ArrayFrom,\r\n  ArrayIsArray,\r\n  ArrayPrototypeForEach,\r\n  ArrayPrototypePush,\r\n  ArrayPrototypeUnshift,\r\n  Boolean,\r\n  ErrorCaptureStackTrace,\r\n  FunctionPrototypeBind,\r\n  MathFloor,\r\n  Number,\r\n  NumberPrototypeToFixed,\r\n  ObjectCreate,\r\n  ObjectDefineProperties,\r\n  ObjectDefineProperty,\r\n  ObjectKeys,\r\n  ObjectPrototypeHasOwnProperty,\r\n  ObjectValues,\r\n  ReflectApply,\r\n  ReflectConstruct,\r\n  ReflectOwnKeys,\r\n  RegExpPrototypeSymbolReplace,\r\n  SafeArrayIterator,\r\n  SafeMap,\r\n  SafeWeakMap,\r\n  SafeSet,\r\n  StringPrototypeIncludes,\r\n  StringPrototypePadStart,\r\n  StringPrototypeRepeat,\r\n  StringPrototypeSlice,\r\n  StringPrototypeSplit,\r\n  Symbol,\r\n  SymbolHasInstance,\r\n  SymbolToStringTag,\r\n} = primordials;\r\n\r\nconst { trace } = internalBinding('trace_events');\r\nconst {\r\n  isStackOverflowError,\r\n  codes: {\r\n    ERR_CONSOLE_WRITABLE_STREAM,\r\n    ERR_INVALID_ARG_VALUE,\r\n    ERR_INCOMPATIBLE_OPTION_PAIR,\r\n  },\r\n} = require('internal/errors');\r\nconst {\r\n  validateArray,\r\n  validateInteger,\r\n  validateObject,\r\n} = require('internal/validators');\r\nconst { previewEntries } = internalBinding('util');\r\nconst { Buffer: { isBuffer } } = require('buffer');\r\nconst {\r\n  inspect,\r\n  formatWithOptions\r\n} = require('internal/util/inspect');\r\nconst {\r\n  isTypedArray, isSet, isMap, isSetIterator, isMapIterator,\r\n} = require('internal/util/types');\r\nconst {\r\n  CHAR_LOWERCASE_B: kTraceBegin,\r\n  CHAR_LOWERCASE_E: kTraceEnd,\r\n  CHAR_LOWERCASE_N: kTraceInstant,\r\n  CHAR_UPPERCASE_C: kTraceCount,\r\n} = require('internal/constants');\r\nconst kCounts = Symbol('counts');\r\n\r\nconst kTraceConsoleCategory = 'node,node.console';\r\n\r\nconst kSecond = 1000;\r\nconst kMinute = 60 * kSecond;\r\nconst kHour = 60 * kMinute;\r\nconst kMaxGroupIndentation = 1000;\r\n\r\n// Lazy loaded for startup performance.\r\nlet cliTable;\r\n\r\n// Track amount of indentation required via `console.group()`.\r\nconst kGroupIndent = Symbol('kGroupIndent');\r\nconst kGroupIndentationWidth = Symbol('kGroupIndentWidth');\r\nconst kFormatForStderr = Symbol('kFormatForStderr');\r\nconst kFormatForStdout = Symbol('kFormatForStdout');\r\nconst kGetInspectOptions = Symbol('kGetInspectOptions');\r\nconst kColorMode = Symbol('kColorMode');\r\nconst kIsConsole = Symbol('kIsConsole');\r\nconst kWriteToConsole = Symbol('kWriteToConsole');\r\nconst kBindProperties = Symbol('kBindProperties');\r\nconst kBindStreamsEager = Symbol('kBindStreamsEager');\r\nconst kBindStreamsLazy = Symbol('kBindStreamsLazy');\r\nconst kUseStdout = Symbol('kUseStdout');\r\nconst kUseStderr = Symbol('kUseStderr');\r\n\r\nconst optionsMap = new SafeWeakMap();\r\n\r\nfunction Console(options /* or: stdout, stderr, ignoreErrors = true */) {\r\n  // We have to test new.target here to see if this function is called\r\n  // with new, because we need to define a custom instanceof to accommodate\r\n  // the global console.\r\n  if (new.target === undefined) {\r\n    return ReflectConstruct(Console, arguments);\r\n  }\r\n\r\n  if (!options || typeof options.write === 'function') {\r\n    options = {\r\n      stdout: options,\r\n      stderr: arguments[1],\r\n      ignoreErrors: arguments[2]\r\n    };\r\n  }\r\n\r\n  const {\r\n    stdout,\r\n    stderr = stdout,\r\n    ignoreErrors = true,\r\n    colorMode = 'auto',\r\n    inspectOptions,\r\n    groupIndentation,\r\n  } = options;\r\n\r\n  if (!stdout || typeof stdout.write !== 'function') {\r\n    throw new ERR_CONSOLE_WRITABLE_STREAM('stdout');\r\n  }\r\n  if (!stderr || typeof stderr.write !== 'function') {\r\n    throw new ERR_CONSOLE_WRITABLE_STREAM('stderr');\r\n  }\r\n\r\n  if (typeof colorMode !== 'boolean' && colorMode !== 'auto')\r\n    throw new ERR_INVALID_ARG_VALUE('colorMode', colorMode);\r\n\r\n  if (groupIndentation !== undefined) {\r\n    validateInteger(groupIndentation, 'groupIndentation',\r\n                    0, kMaxGroupIndentation);\r\n  }\r\n\r\n  if (inspectOptions !== undefined) {\r\n    validateObject(inspectOptions, 'options.inspectOptions');\r\n\r\n    if (inspectOptions.colors !== undefined &&\r\n        options.colorMode !== undefined) {\r\n      throw new ERR_INCOMPATIBLE_OPTION_PAIR(\r\n        'options.inspectOptions.color', 'colorMode');\r\n    }\r\n    optionsMap.set(this, inspectOptions);\r\n  }\r\n\r\n  // Bind the prototype functions to this Console instance\r\n  ArrayPrototypeForEach(ObjectKeys(Console.prototype), (key) => {\r\n    // We have to bind the methods grabbed from the instance instead of from\r\n    // the prototype so that users extending the Console can override them\r\n    // from the prototype chain of the subclass.\r\n    this[key] = FunctionPrototypeBind(this[key], this);\r\n    ObjectDefineProperty(this[key], 'name', {\r\n      __proto__: null,\r\n      value: key\r\n    });\r\n  });\r\n\r\n  this[kBindStreamsEager](stdout, stderr);\r\n  this[kBindProperties](ignoreErrors, colorMode, groupIndentation);\r\n}\r\n\r\nconst consolePropAttributes = {\r\n  writable: true,\r\n  enumerable: false,\r\n  configurable: true\r\n};\r\n\r\n// Fixup global.console instanceof global.console.Console\r\nObjectDefineProperty(Console, SymbolHasInstance, {\r\n  __proto__: null,\r\n  value(instance) {\r\n    return instance[kIsConsole];\r\n  }\r\n});\r\n\r\nconst kColorInspectOptions = { colors: true };\r\nconst kNoColorInspectOptions = {};\r\n\r\nObjectDefineProperties(Console.prototype, {\r\n  [kBindStreamsEager]: {\r\n    __proto__: null,\r\n    ...consolePropAttributes,\r\n    // Eager version for the Console constructor\r\n    value: function(stdout, stderr) {\r\n      ObjectDefineProperties(this, {\r\n        '_stdout': { __proto__: null, ...consolePropAttributes, value: stdout },\r\n        '_stderr': { __proto__: null, ...consolePropAttributes, value: stderr },\r\n      });\r\n    }\r\n  },\r\n  [kBindStreamsLazy]: {\r\n    __proto__: null,\r\n    ...consolePropAttributes,\r\n    // Lazily load the stdout and stderr from an object so we don't\r\n    // create the stdio streams when they are not even accessed\r\n    value: function(object) {\r\n      let stdout;\r\n      let stderr;\r\n      ObjectDefineProperties(this, {\r\n        '_stdout': {\r\n          __proto__: null,\r\n          enumerable: false,\r\n          configurable: true,\r\n          get() {\r\n            if (!stdout) stdout = object.stdout;\r\n            return stdout;\r\n          },\r\n          set(value) { stdout = value; }\r\n        },\r\n        '_stderr': {\r\n          __proto__: null,\r\n          enumerable: false,\r\n          configurable: true,\r\n          get() {\r\n            if (!stderr) { stderr = object.stderr; }\r\n            return stderr;\r\n          },\r\n          set(value) { stderr = value; }\r\n        }\r\n      });\r\n    }\r\n  },\r\n  [kBindProperties]: {\r\n    __proto__: null,\r\n    ...consolePropAttributes,\r\n    value: function(ignoreErrors, colorMode, groupIndentation = 2) {\r\n      ObjectDefineProperties(this, {\r\n        '_stdoutErrorHandler': {\r\n          __proto__: null,\r\n          ...consolePropAttributes,\r\n          value: createWriteErrorHandler(this, kUseStdout)\r\n        },\r\n        '_stderrErrorHandler': {\r\n          ...consolePropAttributes,\r\n          __proto__: null,\r\n          value: createWriteErrorHandler(this, kUseStderr)\r\n        },\r\n        '_ignoreErrors': {\r\n          __proto__: null,\r\n          ...consolePropAttributes,\r\n          value: Boolean(ignoreErrors)\r\n        },\r\n        '_times': { __proto__: null, ...consolePropAttributes, value: new SafeMap() },\r\n        // Corresponds to https://console.spec.whatwg.org/#count-map\r\n        [kCounts]: { __proto__: null, ...consolePropAttributes, value: new SafeMap() },\r\n        [kColorMode]: { __proto__: null, ...consolePropAttributes, value: colorMode },\r\n        [kIsConsole]: { __proto__: null, ...consolePropAttributes, value: true },\r\n        [kGroupIndent]: { __proto__: null, ...consolePropAttributes, value: '' },\r\n        [kGroupIndentationWidth]: {\r\n          __proto__: null,\r\n          ...consolePropAttributes,\r\n          value: groupIndentation\r\n        },\r\n        [SymbolToStringTag]: {\r\n          __proto__: null,\r\n          writable: false,\r\n          enumerable: false,\r\n          configurable: true,\r\n          value: 'console'\r\n        }\r\n      });\r\n    }\r\n  },\r\n  [kWriteToConsole]: {\r\n    __proto__: null,\r\n    ...consolePropAttributes,\r\n    value: function(streamSymbol, string) {\r\n      const ignoreErrors = this._ignoreErrors;\r\n      const groupIndent = this[kGroupIndent];\r\n\r\n      const useStdout = streamSymbol === kUseStdout;\r\n      const stream = useStdout ? this._stdout : this._stderr;\r\n      const errorHandler = useStdout ?\r\n        this._stdoutErrorHandler : this._stderrErrorHandler;\r\n\r\n      if (groupIndent.length !== 0) {\r\n        if (StringPrototypeIncludes(string, '\\n')) {\r\n          string = RegExpPrototypeSymbolReplace(/\\n/g, string, `\\n${groupIndent}`);\r\n        }\r\n        string = groupIndent + string;\r\n      }\r\n      string += '\\n';\r\n\r\n      if (ignoreErrors === false) return stream.write(string);\r\n\r\n      // There may be an error occurring synchronously (e.g. for files or TTYs\r\n      // on POSIX systems) or asynchronously (e.g. pipes on POSIX systems), so\r\n      // handle both situations.\r\n      try {\r\n        // Add and later remove a noop error handler to catch synchronous\r\n        // errors.\r\n        if (stream.listenerCount('error') === 0)\r\n          stream.once('error', noop);\r\n\r\n        stream.write(string, errorHandler);\r\n      } catch (e) {\r\n        // Console is a debugging utility, so it swallowing errors is not\r\n        // desirable even in edge cases such as low stack space.\r\n        if (isStackOverflowError(e))\r\n          throw e;\r\n        // Sorry, there's no proper way to pass along the error here.\r\n      } finally {\r\n        stream.removeListener('error', noop);\r\n      }\r\n    }\r\n  },\r\n  [kGetInspectOptions]: {\r\n    __proto__: null,\r\n    ...consolePropAttributes,\r\n    value: function(stream) {\r\n      let color = this[kColorMode];\r\n      if (color === 'auto') {\r\n        color = stream.isTTY && (\r\n          typeof stream.getColorDepth === 'function' ?\r\n            stream.getColorDepth() > 2 : true);\r\n      }\r\n\r\n      const options = optionsMap.get(this);\r\n      if (options) {\r\n        if (options.colors === undefined) {\r\n          options.colors = color;\r\n        }\r\n        return options;\r\n      }\r\n\r\n      return color ? kColorInspectOptions : kNoColorInspectOptions;\r\n    }\r\n  },\r\n  [kFormatForStdout]: {\r\n    __proto__: null,\r\n    ...consolePropAttributes,\r\n    value: function(args) {\r\n      const opts = this[kGetInspectOptions](this._stdout);\r\n      ArrayPrototypeUnshift(args, opts);\r\n      return ReflectApply(formatWithOptions, null, args);\r\n    }\r\n  },\r\n  [kFormatForStderr]: {\r\n    __proto__: null,\r\n    ...consolePropAttributes,\r\n    value: function(args) {\r\n      const opts = this[kGetInspectOptions](this._stderr);\r\n      ArrayPrototypeUnshift(args, opts);\r\n      return ReflectApply(formatWithOptions, null, args);\r\n    }\r\n  },\r\n});\r\n\r\n// Make a function that can serve as the callback passed to `stream.write()`.\r\nfunction createWriteErrorHandler(instance, streamSymbol) {\r\n  return (err) => {\r\n    // This conditional evaluates to true if and only if there was an error\r\n    // that was not already emitted (which happens when the _write callback\r\n    // is invoked asynchronously).\r\n    const stream = streamSymbol === kUseStdout ?\r\n      instance._stdout : instance._stderr;\r\n    if (err !== null && !stream._writableState.errorEmitted) {\r\n      // If there was an error, it will be emitted on `stream` as\r\n      // an `error` event. Adding a `once` listener will keep that error\r\n      // from becoming an uncaught exception, but since the handler is\r\n      // removed after the event, non-console.* writes won't be affected.\r\n      // we are only adding noop if there is no one else listening for 'error'\r\n      if (stream.listenerCount('error') === 0) {\r\n        stream.once('error', noop);\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nconst consoleMethods = {\r\n  log(...args) {\r\n    this[kWriteToConsole](kUseStdout, this[kFormatForStdout](args));\r\n  },\r\n\r\n\r\n  warn(...args) {\r\n    this[kWriteToConsole](kUseStderr, this[kFormatForStderr](args));\r\n  },\r\n\r\n\r\n  dir(object, options) {\r\n    this[kWriteToConsole](kUseStdout, inspect(object, {\r\n      customInspect: false,\r\n      ...this[kGetInspectOptions](this._stdout),\r\n      ...options\r\n    }));\r\n  },\r\n\r\n  time(label = 'default') {\r\n    // Coerces everything other than Symbol to a string\r\n    label = `${label}`;\r\n    if (this._times.has(label)) {\r\n      process.emitWarning(`Label '${label}' already exists for console.time()`);\r\n      return;\r\n    }\r\n    trace(kTraceBegin, kTraceConsoleCategory, `time::${label}`, 0);\r\n    this._times.set(label, process.hrtime());\r\n  },\r\n\r\n  timeEnd(label = 'default') {\r\n    // Coerces everything other than Symbol to a string\r\n    label = `${label}`;\r\n    const found = timeLogImpl(this, 'timeEnd', label);\r\n    trace(kTraceEnd, kTraceConsoleCategory, `time::${label}`, 0);\r\n    if (found) {\r\n      this._times.delete(label);\r\n    }\r\n  },\r\n\r\n  timeLog(label = 'default', ...data) {\r\n    // Coerces everything other than Symbol to a string\r\n    label = `${label}`;\r\n    timeLogImpl(this, 'timeLog', label, data);\r\n    trace(kTraceInstant, kTraceConsoleCategory, `time::${label}`, 0);\r\n  },\r\n\r\n  trace: function trace(...args) {\r\n    const err = {\r\n      name: 'Trace',\r\n      message: this[kFormatForStderr](args)\r\n    };\r\n    ErrorCaptureStackTrace(err, trace);\r\n    this.error(err.stack);\r\n  },\r\n\r\n  assert(expression, ...args) {\r\n    if (!expression) {\r\n      args[0] = `Assertion failed${args.length === 0 ? '' : `: ${args[0]}`}`;\r\n      // The arguments will be formatted in warn() again\r\n      ReflectApply(this.warn, this, args);\r\n    }\r\n  },\r\n\r\n  // Defined by: https://console.spec.whatwg.org/#clear\r\n  clear() {\r\n    // It only makes sense to clear if _stdout is a TTY.\r\n    // Otherwise, do nothing.\r\n    if (this._stdout.isTTY && process.env.TERM !== 'dumb') {\r\n      // The require is here intentionally to avoid readline being\r\n      // required too early when console is first loaded.\r\n      const {\r\n        cursorTo,\r\n        clearScreenDown,\r\n      } = require('internal/readline/callbacks');\r\n      cursorTo(this._stdout, 0, 0);\r\n      clearScreenDown(this._stdout);\r\n    }\r\n  },\r\n\r\n  // Defined by: https://console.spec.whatwg.org/#count\r\n  count(label = 'default') {\r\n    // Ensures that label is a string, and only things that can be\r\n    // coerced to strings. e.g. Symbol is not allowed\r\n    label = `${label}`;\r\n    const counts = this[kCounts];\r\n    let count = counts.get(label);\r\n    if (count === undefined)\r\n      count = 1;\r\n    else\r\n      count++;\r\n    counts.set(label, count);\r\n    trace(kTraceCount, kTraceConsoleCategory, `count::${label}`, 0, count);\r\n    this.log(`${label}: ${count}`);\r\n  },\r\n\r\n  // Defined by: https://console.spec.whatwg.org/#countreset\r\n  countReset(label = 'default') {\r\n    const counts = this[kCounts];\r\n    if (!counts.has(label)) {\r\n      process.emitWarning(`Count for '${label}' does not exist`);\r\n      return;\r\n    }\r\n    trace(kTraceCount, kTraceConsoleCategory, `count::${label}`, 0, 0);\r\n    counts.delete(`${label}`);\r\n  },\r\n\r\n  group(...data) {\r\n    if (data.length > 0) {\r\n      ReflectApply(this.log, this, data);\r\n    }\r\n    this[kGroupIndent] +=\r\n      StringPrototypeRepeat(' ', this[kGroupIndentationWidth]);\r\n  },\r\n\r\n  groupEnd() {\r\n    this[kGroupIndent] = StringPrototypeSlice(\r\n      this[kGroupIndent],\r\n      0,\r\n      this[kGroupIndent].length - this[kGroupIndentationWidth]\r\n    );\r\n  },\r\n\r\n  // https://console.spec.whatwg.org/#table\r\n  table(tabularData, properties) {\r\n    if (properties !== undefined)\r\n      validateArray(properties, 'properties');\r\n\r\n    if (tabularData === null || typeof tabularData !== 'object')\r\n      return this.log(tabularData);\r\n\r\n    cliTable ??= require('internal/cli_table');\r\n    const final = (k, v) => this.log(cliTable(k, v));\r\n\r\n    const _inspect = (v) => {\r\n      const depth = v !== null &&\r\n                    typeof v === 'object' &&\r\n                    !isArray(v) &&\r\n                    ObjectKeys(v).length > 2 ? -1 : 0;\r\n      const opt = {\r\n        depth,\r\n        maxArrayLength: 3,\r\n        breakLength: Infinity,\r\n        ...this[kGetInspectOptions](this._stdout)\r\n      };\r\n      return inspect(v, opt);\r\n    };\r\n    const getIndexArray = (length) => ArrayFrom(\r\n      { length }, (_, i) => _inspect(i));\r\n\r\n    const mapIter = isMapIterator(tabularData);\r\n    let isKeyValue = false;\r\n    let i = 0;\r\n    if (mapIter) {\r\n      const res = previewEntries(tabularData, true);\r\n      tabularData = res[0];\r\n      isKeyValue = res[1];\r\n    }\r\n\r\n    if (isKeyValue || isMap(tabularData)) {\r\n      const keys = [];\r\n      const values = [];\r\n      let length = 0;\r\n      if (mapIter) {\r\n        for (; i < tabularData.length / 2; ++i) {\r\n          ArrayPrototypePush(keys, _inspect(tabularData[i * 2]));\r\n          ArrayPrototypePush(values, _inspect(tabularData[i * 2 + 1]));\r\n          length++;\r\n        }\r\n      } else {\r\n        for (const { 0: k, 1: v } of tabularData) {\r\n          ArrayPrototypePush(keys, _inspect(k));\r\n          ArrayPrototypePush(values, _inspect(v));\r\n          length++;\r\n        }\r\n      }\r\n      return final([\r\n        iterKey, keyKey, valuesKey,\r\n      ], [\r\n        getIndexArray(length),\r\n        keys,\r\n        values,\r\n      ]);\r\n    }\r\n\r\n    const setIter = isSetIterator(tabularData);\r\n    if (setIter)\r\n      tabularData = previewEntries(tabularData);\r\n\r\n    const setlike = setIter || mapIter || isSet(tabularData);\r\n    if (setlike) {\r\n      const values = [];\r\n      let length = 0;\r\n      for (const v of tabularData) {\r\n        ArrayPrototypePush(values, _inspect(v));\r\n        length++;\r\n      }\r\n      return final([iterKey, valuesKey], [getIndexArray(length), values]);\r\n    }\r\n\r\n    const map = ObjectCreate(null);\r\n    let hasPrimitives = false;\r\n    const valuesKeyArray = [];\r\n    const indexKeyArray = ObjectKeys(tabularData);\r\n\r\n    for (; i < indexKeyArray.length; i++) {\r\n      const item = tabularData[indexKeyArray[i]];\r\n      const primitive = item === null ||\r\n          (typeof item !== 'function' && typeof item !== 'object');\r\n      if (properties === undefined && primitive) {\r\n        hasPrimitives = true;\r\n        valuesKeyArray[i] = _inspect(item);\r\n      } else {\r\n        const keys = properties || ObjectKeys(item);\r\n        for (const key of keys) {\r\n          map[key] ??= [];\r\n          if ((primitive && properties) ||\r\n               !ObjectPrototypeHasOwnProperty(item, key))\r\n            map[key][i] = '';\r\n          else\r\n            map[key][i] = _inspect(item[key]);\r\n        }\r\n      }\r\n    }\r\n\r\n    const keys = ObjectKeys(map);\r\n    const values = ObjectValues(map);\r\n    if (hasPrimitives) {\r\n      ArrayPrototypePush(keys, valuesKey);\r\n      ArrayPrototypePush(values, valuesKeyArray);\r\n    }\r\n    ArrayPrototypeUnshift(keys, indexKey);\r\n    ArrayPrototypeUnshift(values, indexKeyArray);\r\n\r\n    return final(keys, values);\r\n  },\r\n};\r\n\r\n// Returns true if label was found\r\nfunction timeLogImpl(self, name, label, data) {\r\n  const time = self._times.get(label);\r\n  if (time === undefined) {\r\n    process.emitWarning(`No such label '${label}' for console.${name}()`);\r\n    return false;\r\n  }\r\n  const duration = process.hrtime(time);\r\n  const ms = duration[0] * 1000 + duration[1] / 1e6;\r\n\r\n  const formatted = formatTime(ms);\r\n\r\n  if (data === undefined) {\r\n    self.log('%s: %s', label, formatted);\r\n  } else {\r\n    self.log('%s: %s', label, formatted, ...new SafeArrayIterator(data));\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction pad(value) {\r\n  return StringPrototypePadStart(`${value}`, 2, '0');\r\n}\r\n\r\nfunction formatTime(ms) {\r\n  let hours = 0;\r\n  let minutes = 0;\r\n  let seconds = 0;\r\n\r\n  if (ms >= kSecond) {\r\n    if (ms >= kMinute) {\r\n      if (ms >= kHour) {\r\n        hours = MathFloor(ms / kHour);\r\n        ms = ms % kHour;\r\n      }\r\n      minutes = MathFloor(ms / kMinute);\r\n      ms = ms % kMinute;\r\n    }\r\n    seconds = ms / kSecond;\r\n  }\r\n\r\n  if (hours !== 0 || minutes !== 0) {\r\n    ({ 0: seconds, 1: ms } = StringPrototypeSplit(\r\n      NumberPrototypeToFixed(seconds, 3),\r\n      '.'\r\n    ));\r\n    const res = hours !== 0 ? `${hours}:${pad(minutes)}` : minutes;\r\n    return `${res}:${pad(seconds)}.${ms} (${hours !== 0 ? 'h:m' : ''}m:ss.mmm)`;\r\n  }\r\n\r\n  if (seconds !== 0) {\r\n    return `${NumberPrototypeToFixed(seconds, 3)}s`;\r\n  }\r\n\r\n  return `${Number(NumberPrototypeToFixed(ms, 3))}ms`;\r\n}\r\n\r\nconst keyKey = 'Key';\r\nconst valuesKey = 'Values';\r\nconst indexKey = '(index)';\r\nconst iterKey = '(iteration index)';\r\n\r\nconst isArray = (v) => ArrayIsArray(v) || isTypedArray(v) || isBuffer(v);\r\n\r\nfunction noop() {}\r\n\r\nfor (const method of ReflectOwnKeys(consoleMethods))\r\n  Console.prototype[method] = consoleMethods[method];\r\n\r\nConsole.prototype.debug = Console.prototype.log;\r\nConsole.prototype.info = Console.prototype.log;\r\nConsole.prototype.dirxml = Console.prototype.log;\r\nConsole.prototype.error = Console.prototype.warn;\r\nConsole.prototype.groupCollapsed = Console.prototype.group;\r\n\r\nfunction initializeGlobalConsole(globalConsole) {\r\n  globalConsole[kBindStreamsLazy](process);\r\n  globalConsole[kBindProperties](true, 'auto');\r\n\r\n  const {\r\n    addSerializeCallback,\r\n    isBuildingSnapshot,\r\n  } = require('v8').startupSnapshot;\r\n\r\n  if (!internalBinding('config').hasInspector || !isBuildingSnapshot()) {\r\n    return;\r\n  }\r\n  const { console: consoleFromVM } = internalBinding('inspector');\r\n  const nodeConsoleKeys = ObjectKeys(Console.prototype);\r\n  const vmConsoleKeys = ObjectKeys(consoleFromVM);\r\n  const originalKeys = new SafeSet(vmConsoleKeys.concat(nodeConsoleKeys));\r\n  const inspectorConsoleKeys = new SafeSet();\r\n  for (const key of ObjectKeys(globalConsole)) {\r\n    if (!originalKeys.has(key)) {\r\n      inspectorConsoleKeys.add(key);\r\n    }\r\n  }\r\n  // During deserialization these should be reinstalled to console by\r\n  // V8 when the inspector client is created.\r\n  addSerializeCallback(() => {\r\n    for (const key of inspectorConsoleKeys) {\r\n      globalConsole[key] = undefined;\r\n    }\r\n  });\r\n}\r\n\r\nmodule.exports = {\r\n  Console,\r\n  kBindStreamsLazy,\r\n  kBindProperties,\r\n  initializeGlobalConsole,\r\n  formatTime // exported for tests\r\n};\r\n",
    "name": "constructor",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 110,
    "sourcePositions": []
  },
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  {
    "url": "node:internal/perf/performance",
    "source": "'use strict';\r\n\r\nconst {\r\n  ObjectDefineProperty,\r\n  ObjectDefineProperties,\r\n  ObjectSetPrototypeOf,\r\n} = primordials;\r\n\r\nconst {\r\n  codes: {\r\n    ERR_ILLEGAL_CONSTRUCTOR,\r\n    ERR_MISSING_ARGS\r\n  }\r\n} = require('internal/errors');\r\n\r\nconst {\r\n  EventTarget,\r\n  Event,\r\n  kTrustEvent,\r\n} = require('internal/event_target');\r\n\r\nconst { now } = require('internal/perf/utils');\r\n\r\nconst { markResourceTiming } = require('internal/perf/resource_timing');\r\n\r\nconst {\r\n  mark,\r\n  measure,\r\n  clearMarkTimings,\r\n} = require('internal/perf/usertiming');\r\nconst {\r\n  clearEntriesFromBuffer,\r\n  filterBufferMapByNameAndType,\r\n  setResourceTimingBufferSize,\r\n  setDispatchBufferFull,\r\n} = require('internal/perf/observe');\r\n\r\nconst eventLoopUtilization = require('internal/perf/event_loop_utilization');\r\nconst nodeTiming = require('internal/perf/nodetiming');\r\nconst timerify = require('internal/perf/timerify');\r\nconst { customInspectSymbol: kInspect } = require('internal/util');\r\nconst { inspect } = require('util');\r\n\r\nconst {\r\n  getTimeOriginTimestamp\r\n} = internalBinding('performance');\r\n\r\nclass Performance extends EventTarget {\r\n  constructor() {\r\n    throw new ERR_ILLEGAL_CONSTRUCTOR();\r\n  }\r\n\r\n  [kInspect](depth, options) {\r\n    if (depth < 0) return this;\r\n\r\n    const opts = {\r\n      ...options,\r\n      depth: options.depth == null ? null : options.depth - 1\r\n    };\r\n\r\n    return `Performance ${inspect({\r\n      nodeTiming: this.nodeTiming,\r\n      timeOrigin: this.timeOrigin,\r\n    }, opts)}`;\r\n  }\r\n}\r\n\r\nfunction toJSON() {\r\n  return {\r\n    nodeTiming: this.nodeTiming,\r\n    timeOrigin: this.timeOrigin,\r\n    eventLoopUtilization: this.eventLoopUtilization()\r\n  };\r\n}\r\n\r\nfunction clearMarks(name) {\r\n  if (name !== undefined) {\r\n    name = `${name}`;\r\n  }\r\n  clearMarkTimings(name);\r\n  clearEntriesFromBuffer('mark', name);\r\n}\r\n\r\nfunction clearMeasures(name) {\r\n  if (name !== undefined) {\r\n    name = `${name}`;\r\n  }\r\n  clearEntriesFromBuffer('measure', name);\r\n}\r\n\r\nfunction clearResourceTimings(name) {\r\n  if (name !== undefined) {\r\n    name = `${name}`;\r\n  }\r\n  clearEntriesFromBuffer('resource', name);\r\n}\r\n\r\nfunction getEntries() {\r\n  return filterBufferMapByNameAndType();\r\n}\r\n\r\nfunction getEntriesByName(name) {\r\n  if (arguments.length === 0) {\r\n    throw new ERR_MISSING_ARGS('name');\r\n  }\r\n  name = `${name}`;\r\n  return filterBufferMapByNameAndType(name, undefined);\r\n}\r\n\r\nfunction getEntriesByType(type) {\r\n  if (arguments.length === 0) {\r\n    throw new ERR_MISSING_ARGS('type');\r\n  }\r\n  type = `${type}`;\r\n  return filterBufferMapByNameAndType(undefined, type);\r\n}\r\n\r\nclass InternalPerformance extends EventTarget {}\r\nInternalPerformance.prototype.constructor = Performance.prototype.constructor;\r\nObjectSetPrototypeOf(InternalPerformance.prototype, Performance.prototype);\r\n\r\nObjectDefineProperties(Performance.prototype, {\r\n  clearMarks: {\r\n    __proto__: null,\r\n    configurable: true,\r\n    enumerable: false,\r\n    value: clearMarks,\r\n  },\r\n  clearMeasures: {\r\n    __proto__: null,\r\n    configurable: true,\r\n    enumerable: false,\r\n    value: clearMeasures,\r\n  },\r\n  clearResourceTimings: {\r\n    __proto__: null,\r\n    configurable: true,\r\n    enumerable: false,\r\n    value: clearResourceTimings,\r\n  },\r\n  eventLoopUtilization: {\r\n    __proto__: null,\r\n    configurable: true,\r\n    enumerable: false,\r\n    value: eventLoopUtilization,\r\n  },\r\n  getEntries: {\r\n    __proto__: null,\r\n    configurable: true,\r\n    enumerable: false,\r\n    value: getEntries,\r\n  },\r\n  getEntriesByName: {\r\n    __proto__: null,\r\n    configurable: true,\r\n    enumerable: false,\r\n    value: getEntriesByName,\r\n  },\r\n  getEntriesByType: {\r\n    __proto__: null,\r\n    configurable: true,\r\n    enumerable: false,\r\n    value: getEntriesByType,\r\n  },\r\n  mark: {\r\n    __proto__: null,\r\n    configurable: true,\r\n    enumerable: false,\r\n    value: mark,\r\n  },\r\n  measure: {\r\n    __proto__: null,\r\n    configurable: true,\r\n    enumerable: false,\r\n    value: measure,\r\n  },\r\n  nodeTiming: {\r\n    __proto__: null,\r\n    configurable: true,\r\n    enumerable: false,\r\n    value: nodeTiming,\r\n  },\r\n  // In the browser, this function is not public.  However, it must be used inside fetch\r\n  // which is a Node.js dependency, not a internal module\r\n  markResourceTiming: {\r\n    __proto__: null,\r\n    configurable: true,\r\n    enumerable: false,\r\n    value: markResourceTiming,\r\n  },\r\n  now: {\r\n    __proto__: null,\r\n    configurable: true,\r\n    enumerable: false,\r\n    value: now,\r\n  },\r\n  setResourceTimingBufferSize: {\r\n    __proto__: null,\r\n    configurable: true,\r\n    enumerable: false,\r\n    value: setResourceTimingBufferSize\r\n  },\r\n  timerify: {\r\n    __proto__: null,\r\n    configurable: true,\r\n    enumerable: false,\r\n    value: timerify,\r\n  },\r\n  // This would be updated during pre-execution in case\r\n  // the process is launched from a snapshot.\r\n  // TODO(joyeecheung): we may want to warn about access to\r\n  // this during snapshot building.\r\n  timeOrigin: {\r\n    __proto__: null,\r\n    configurable: true,\r\n    enumerable: true,\r\n    value: getTimeOriginTimestamp(),\r\n  },\r\n  toJSON: {\r\n    __proto__: null,\r\n    configurable: true,\r\n    enumerable: true,\r\n    value: toJSON,\r\n  }\r\n});\r\n\r\nfunction refreshTimeOrigin() {\r\n  ObjectDefineProperty(Performance.prototype, 'timeOrigin', {\r\n    __proto__: null,\r\n    configurable: true,\r\n    enumerable: true,\r\n    value: getTimeOriginTimestamp(),\r\n  });\r\n}\r\n\r\nconst performance = new InternalPerformance();\r\n\r\nfunction dispatchBufferFull(type) {\r\n  const event = new Event(type, {\r\n    [kTrustEvent]: true\r\n  });\r\n  performance.dispatchEvent(event);\r\n}\r\nsetDispatchBufferFull(dispatchBufferFull);\r\n\r\nmodule.exports = {\r\n  Performance,\r\n  performance,\r\n  refreshTimeOrigin\r\n};\r\n",
    "name": "performance",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 118,
    "sourcePositions": []
  },
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  {
    "url": "node:internal/bootstrap/switches/is_main_thread",
    "source": "'use strict';\r\n\r\nconst { ObjectDefineProperty } = primordials;\r\nconst rawMethods = internalBinding('process_methods');\r\nconst {\r\n  addSerializeCallback,\r\n  isBuildingSnapshot\r\n} = require('v8').startupSnapshot;\r\n// TODO(joyeecheung): deprecate and remove these underscore methods\r\nprocess._debugProcess = rawMethods._debugProcess;\r\nprocess._debugEnd = rawMethods._debugEnd;\r\n\r\n// See the discussion in https://github.com/nodejs/node/issues/19009 and\r\n// https://github.com/nodejs/node/pull/34010 for why these are no-ops.\r\n// Five word summary: they were broken beyond repair.\r\nprocess._startProfilerIdleNotifier = () => {};\r\nprocess._stopProfilerIdleNotifier = () => {};\r\n\r\nfunction defineStream(name, getter) {\r\n  ObjectDefineProperty(process, name, {\r\n    __proto__: null,\r\n    configurable: true,\r\n    enumerable: true,\r\n    get: getter\r\n  });\r\n}\r\n\r\ndefineStream('stdout', getStdout);\r\ndefineStream('stdin', getStdin);\r\ndefineStream('stderr', getStderr);\r\n\r\n// Worker threads don't receive signals.\r\nconst {\r\n  startListeningIfSignal,\r\n  stopListeningIfSignal\r\n} = require('internal/process/signal');\r\nprocess.on('newListener', startListeningIfSignal);\r\nprocess.on('removeListener', stopListeningIfSignal);\r\n\r\n// ---- keep the attachment of the wrappers above so that it's easier to ----\r\n// ----              compare the setups side-by-side                    -----\r\n\r\nconst { guessHandleType } = internalBinding('util');\r\n\r\nfunction createWritableStdioStream(fd) {\r\n  let stream;\r\n  // Note stream._type is used for test-module-load-list.js\r\n  switch (guessHandleType(fd)) {\r\n    case 'TTY': {\r\n      const tty = require('tty');\r\n      stream = new tty.WriteStream(fd);\r\n      stream._type = 'tty';\r\n      break;\r\n    }\r\n\r\n    case 'FILE': {\r\n      const SyncWriteStream = require('internal/fs/sync_write_stream');\r\n      stream = new SyncWriteStream(fd, { autoClose: false });\r\n      stream._type = 'fs';\r\n      break;\r\n    }\r\n\r\n    case 'PIPE':\r\n    case 'TCP': {\r\n      const net = require('net');\r\n\r\n      // If fd is already being used for the IPC channel, libuv will return\r\n      // an error when trying to use it again. In that case, create the socket\r\n      // using the existing handle instead of the fd.\r\n      if (process.channel && process.channel.fd === fd) {\r\n        const { kChannelHandle } = require('internal/child_process');\r\n        stream = new net.Socket({\r\n          handle: process[kChannelHandle],\r\n          readable: false,\r\n          writable: true\r\n        });\r\n      } else {\r\n        stream = new net.Socket({\r\n          fd,\r\n          readable: false,\r\n          writable: true\r\n        });\r\n      }\r\n\r\n      stream._type = 'pipe';\r\n      break;\r\n    }\r\n\r\n    default: {\r\n      // Provide a dummy black-hole output for e.g. non-console\r\n      // Windows applications.\r\n      const { Writable } = require('stream');\r\n      stream = new Writable({\r\n        write(buf, enc, cb) {\r\n          cb();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // For supporting legacy API we put the FD here.\r\n  stream.fd = fd;\r\n\r\n  stream._isStdio = true;\r\n\r\n  return stream;\r\n}\r\n\r\nfunction dummyDestroy(err, cb) {\r\n  cb(err);\r\n  this._undestroy();\r\n\r\n  // We need to emit 'close' anyway so that the closing\r\n  // of the stream is observable. We just make sure we\r\n  // are not going to do it twice.\r\n  // The 'close' event is needed so that finished and\r\n  // pipeline work correctly.\r\n  if (!this._writableState.emitClose) {\r\n    process.nextTick(() => {\r\n      this.emit('close');\r\n    });\r\n  }\r\n}\r\n\r\nlet stdin;\r\nlet stdout;\r\nlet stderr;\r\n\r\nlet stdoutDestroy;\r\nlet stderrDestroy;\r\n\r\nfunction refreshStdoutOnSigWinch() {\r\n  stdout._refreshSize();\r\n}\r\n\r\nfunction refreshStderrOnSigWinch() {\r\n  stderr._refreshSize();\r\n}\r\n\r\nfunction addCleanup(fn) {\r\n  if (isBuildingSnapshot()) {\r\n    addSerializeCallback(fn);\r\n  }\r\n}\r\n\r\nfunction getStdout() {\r\n  if (stdout) return stdout;\r\n  stdout = createWritableStdioStream(1);\r\n  stdout.destroySoon = stdout.destroy;\r\n  // Override _destroy so that the fd is never actually closed.\r\n  stdoutDestroy = stdout._destroy;\r\n  stdout._destroy = dummyDestroy;\r\n  if (stdout.isTTY) {\r\n    process.on('SIGWINCH', refreshStdoutOnSigWinch);\r\n  }\r\n\r\n  addCleanup(function cleanupStdout() {\r\n    stdout._destroy = stdoutDestroy;\r\n    stdout.destroy();\r\n    process.removeListener('SIGWINCH', refreshStdoutOnSigWinch);\r\n    stdout = undefined;\r\n  });\r\n  // No need to add deserialize callback because stdout = undefined above\r\n  // causes the stream to be lazily initialized again later.\r\n  return stdout;\r\n}\r\n\r\nfunction getStderr() {\r\n  if (stderr) return stderr;\r\n  stderr = createWritableStdioStream(2);\r\n  stderr.destroySoon = stderr.destroy;\r\n  stderrDestroy = stderr._destroy;\r\n  // Override _destroy so that the fd is never actually closed.\r\n  stderr._destroy = dummyDestroy;\r\n  if (stderr.isTTY) {\r\n    process.on('SIGWINCH', refreshStderrOnSigWinch);\r\n  }\r\n  addCleanup(function cleanupStderr() {\r\n    stderr._destroy = stderrDestroy;\r\n    stderr.destroy();\r\n    process.removeListener('SIGWINCH', refreshStderrOnSigWinch);\r\n    stderr = undefined;\r\n  });\r\n  // No need to add deserialize callback because stderr = undefined above\r\n  // causes the stream to be lazily initialized again later.\r\n  return stderr;\r\n}\r\n\r\nfunction getStdin() {\r\n  if (stdin) return stdin;\r\n  const fd = 0;\r\n\r\n  switch (guessHandleType(fd)) {\r\n    case 'TTY': {\r\n      const tty = require('tty');\r\n      stdin = new tty.ReadStream(fd);\r\n      break;\r\n    }\r\n\r\n    case 'FILE': {\r\n      const fs = require('fs');\r\n      stdin = new fs.ReadStream(null, { fd: fd, autoClose: false });\r\n      break;\r\n    }\r\n\r\n    case 'PIPE':\r\n    case 'TCP': {\r\n      const net = require('net');\r\n\r\n      // It could be that process has been started with an IPC channel\r\n      // sitting on fd=0, in such case the pipe for this fd is already\r\n      // present and creating a new one will lead to the assertion failure\r\n      // in libuv.\r\n      if (process.channel && process.channel.fd === fd) {\r\n        stdin = new net.Socket({\r\n          handle: process.channel,\r\n          readable: true,\r\n          writable: false,\r\n          manualStart: true\r\n        });\r\n      } else {\r\n        stdin = new net.Socket({\r\n          fd: fd,\r\n          readable: true,\r\n          writable: false,\r\n          manualStart: true\r\n        });\r\n      }\r\n      // Make sure the stdin can't be `.end()`-ed\r\n      stdin._writableState.ended = true;\r\n      break;\r\n    }\r\n\r\n    default: {\r\n      // Provide a dummy contentless input for e.g. non-console\r\n      // Windows applications.\r\n      const { Readable } = require('stream');\r\n      stdin = new Readable({ read() {} });\r\n      stdin.push(null);\r\n    }\r\n  }\r\n\r\n  // For supporting legacy API we put the FD here.\r\n  stdin.fd = fd;\r\n\r\n  // `stdin` starts out life in a paused state, but node doesn't\r\n  // know yet. Explicitly to readStop() it to put it in the\r\n  // not-reading state.\r\n  if (stdin._handle && stdin._handle.readStop) {\r\n    stdin._handle.reading = false;\r\n    stdin._readableState.reading = false;\r\n    stdin._handle.readStop();\r\n  }\r\n\r\n  // If the user calls stdin.pause(), then we need to stop reading\r\n  // once the stream implementation does so (one nextTick later),\r\n  // so that the process can close down.\r\n  stdin.on('pause', () => {\r\n    process.nextTick(onpause);\r\n  });\r\n\r\n  function onpause() {\r\n    if (!stdin._handle)\r\n      return;\r\n    if (stdin._handle.reading && !stdin.readableFlowing) {\r\n      stdin._readableState.reading = false;\r\n      stdin._handle.reading = false;\r\n      stdin._handle.readStop();\r\n    }\r\n  }\r\n\r\n  addCleanup(function cleanupStdin() {\r\n    stdin.destroy();\r\n    stdin = undefined;\r\n  });\r\n  // No need to add deserialize callback because stdin = undefined above\r\n  // causes the stream to be lazily initialized again later.\r\n  return stdin;\r\n}\r\n\r\n// Used by internal tests.\r\nrawMethods.resetStdioForTesting = function() {\r\n  stdin = undefined;\r\n  stdout = undefined;\r\n  stderr = undefined;\r\n};\r\n",
    "name": "is_main_thread",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 131,
    "sourcePositions": []
  },
  null,
  {
    "url": "node:internal/bootstrap/switches/does_own_process_state",
    "source": "'use strict';\r\n\r\nconst credentials = internalBinding('credentials');\r\nconst rawMethods = internalBinding('process_methods');\r\n\r\nprocess.abort = rawMethods.abort;\r\nprocess.umask = wrappedUmask;\r\nprocess.chdir = wrappedChdir;\r\nprocess.cwd = wrappedCwd;\r\n\r\nif (credentials.implementsPosixCredentials) {\r\n  const wrapped = wrapPosixCredentialSetters(credentials);\r\n\r\n  process.initgroups = wrapped.initgroups;\r\n  process.setgroups = wrapped.setgroups;\r\n  process.setegid = wrapped.setegid;\r\n  process.seteuid = wrapped.seteuid;\r\n  process.setgid = wrapped.setgid;\r\n  process.setuid = wrapped.setuid;\r\n}\r\n\r\n// ---- keep the attachment of the wrappers above so that it's easier to ----\r\n// ----              compare the setups side-by-side                    -----\r\n\r\nconst {\r\n  parseFileMode,\r\n  validateArray,\r\n  validateString\r\n} = require('internal/validators');\r\n\r\nfunction wrapPosixCredentialSetters(credentials) {\r\n  const {\r\n    codes: {\r\n      ERR_INVALID_ARG_TYPE,\r\n      ERR_UNKNOWN_CREDENTIAL\r\n    }\r\n  } = require('internal/errors');\r\n  const {\r\n    validateUint32\r\n  } = require('internal/validators');\r\n\r\n  const {\r\n    initgroups: _initgroups,\r\n    setgroups: _setgroups,\r\n    setegid: _setegid,\r\n    seteuid: _seteuid,\r\n    setgid: _setgid,\r\n    setuid: _setuid\r\n  } = credentials;\r\n\r\n  function initgroups(user, extraGroup) {\r\n    validateId(user, 'user');\r\n    validateId(extraGroup, 'extraGroup');\r\n    // Result is 0 on success, 1 if user is unknown, 2 if group is unknown.\r\n    const result = _initgroups(user, extraGroup);\r\n    if (result === 1) {\r\n      throw new ERR_UNKNOWN_CREDENTIAL('User', user);\r\n    } else if (result === 2) {\r\n      throw new ERR_UNKNOWN_CREDENTIAL('Group', extraGroup);\r\n    }\r\n  }\r\n\r\n  function setgroups(groups) {\r\n    validateArray(groups, 'groups');\r\n    for (let i = 0; i < groups.length; i++) {\r\n      validateId(groups[i], `groups[${i}]`);\r\n    }\r\n    // Result is 0 on success. A positive integer indicates that the\r\n    // corresponding group was not found.\r\n    const result = _setgroups(groups);\r\n    if (result > 0) {\r\n      throw new ERR_UNKNOWN_CREDENTIAL('Group', groups[result - 1]);\r\n    }\r\n  }\r\n\r\n  function wrapIdSetter(type, method) {\r\n    return function(id) {\r\n      validateId(id, 'id');\r\n      if (typeof id === 'number') id >>>= 0;\r\n      // Result is 0 on success, 1 if credential is unknown.\r\n      const result = method(id);\r\n      if (result === 1) {\r\n        throw new ERR_UNKNOWN_CREDENTIAL(type, id);\r\n      }\r\n    };\r\n  }\r\n\r\n  function validateId(id, name) {\r\n    if (typeof id === 'number') {\r\n      validateUint32(id, name);\r\n    } else if (typeof id !== 'string') {\r\n      throw new ERR_INVALID_ARG_TYPE(name, ['number', 'string'], id);\r\n    }\r\n  }\r\n\r\n  return {\r\n    initgroups,\r\n    setgroups,\r\n    setegid: wrapIdSetter('Group', _setegid),\r\n    seteuid: wrapIdSetter('User', _seteuid),\r\n    setgid: wrapIdSetter('Group', _setgid),\r\n    setuid: wrapIdSetter('User', _setuid)\r\n  };\r\n}\r\n\r\n// Cache the working directory to prevent lots of lookups. If the working\r\n// directory is changed by `chdir`, it'll be updated.\r\nlet cachedCwd = '';\r\n\r\nfunction wrappedChdir(directory) {\r\n  validateString(directory, 'directory');\r\n  rawMethods.chdir(directory);\r\n  // Mark cache that it requires an update.\r\n  cachedCwd = '';\r\n}\r\n\r\nfunction wrappedUmask(mask) {\r\n  if (mask !== undefined) {\r\n    mask = parseFileMode(mask, 'mask');\r\n  }\r\n  return rawMethods.umask(mask);\r\n}\r\n\r\nfunction wrappedCwd() {\r\n  if (cachedCwd === '')\r\n    cachedCwd = rawMethods.cwd();\r\n  return cachedCwd;\r\n}\r\n",
    "name": "does_own_process_state",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 133,
    "sourcePositions": []
  },
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  {
    "url": "node:internal/main/run_main_module",
    "source": "'use strict';\r\n\r\nconst { RegExpPrototypeExec } = primordials;\r\n\r\nconst {\r\n  prepareMainThreadExecution,\r\n  markBootstrapComplete\r\n} = require('internal/process/pre_execution');\r\n\r\nprepareMainThreadExecution(true);\r\n\r\nmarkBootstrapComplete();\r\n\r\n// Necessary to reset RegExp statics before user code runs.\r\nRegExpPrototypeExec(/^/, '');\r\n\r\n// Note: this loads the module through the ESM loader if the module is\r\n// determined to be an ES module. This hangs from the CJS module loader\r\n// because we currently allow monkey-patching of the module loaders\r\n// in the preloaded scripts through require('module').\r\n// runMain here might be monkey-patched by users in --require.\r\n// XXX: the monkey-patchability here should probably be deprecated.\r\nrequire('internal/modules/cjs/loader').Module.runMain(process.argv[1]);\r\n",
    "name": "run_main_module",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 442,
    "sourcePositions": []
  },
  {
    "url": "node:internal/process/pre_execution",
    "source": "'use strict';\r\n\r\nconst {\r\n  NumberParseInt,\r\n  ObjectDefineProperties,\r\n  ObjectDefineProperty,\r\n  ObjectGetOwnPropertyDescriptor,\r\n  SafeMap,\r\n  SafeWeakMap,\r\n  StringPrototypeStartsWith,\r\n  globalThis,\r\n} = primordials;\r\n\r\nconst {\r\n  getOptionValue,\r\n  getEmbedderOptions,\r\n  refreshOptions,\r\n} = require('internal/options');\r\nconst { reconnectZeroFillToggle } = require('internal/buffer');\r\nconst {\r\n  defineOperation,\r\n  exposeInterface,\r\n  setupCoverageHooks,\r\n} = require('internal/util');\r\n\r\nconst {\r\n  ERR_MANIFEST_ASSERT_INTEGRITY,\r\n} = require('internal/errors').codes;\r\nconst assert = require('internal/assert');\r\n\r\nconst {\r\n  addSerializeCallback,\r\n  isBuildingSnapshot,\r\n} = require('v8').startupSnapshot;\r\n\r\nfunction prepareMainThreadExecution(expandArgv1 = false, initializeModules = true) {\r\n  prepareExecution({\r\n    expandArgv1,\r\n    initializeModules,\r\n    isMainThread: true\r\n  });\r\n}\r\n\r\nfunction prepareWorkerThreadExecution() {\r\n  prepareExecution({\r\n    expandArgv1: false,\r\n    initializeModules: false,  // Will need to initialize it after policy setup\r\n    isMainThread: false\r\n  });\r\n}\r\n\r\nfunction prepareExecution(options) {\r\n  const { expandArgv1, initializeModules, isMainThread } = options;\r\n\r\n  refreshRuntimeOptions();\r\n  reconnectZeroFillToggle();\r\n\r\n  // Patch the process object with legacy properties and normalizations\r\n  patchProcessObject(expandArgv1);\r\n  setupTraceCategoryState();\r\n  setupPerfHooks();\r\n  setupInspectorHooks();\r\n  setupWarningHandler();\r\n  setupFetch();\r\n  setupWebCrypto();\r\n  setupCustomEvent();\r\n  setupCodeCoverage();\r\n  setupDebugEnv();\r\n  // Process initial diagnostic reporting configuration, if present.\r\n  initializeReport();\r\n  initializeSourceMapsHandlers();\r\n  initializeDeprecations();\r\n  initializeWASI();\r\n  require('internal/dns/utils').initializeDns();\r\n\r\n  if (isMainThread) {\r\n    assert(internalBinding('worker').isMainThread);\r\n    // Worker threads will get the manifest in the message handler.\r\n    const policy = readPolicyFromDisk();\r\n    if (policy) {\r\n      require('internal/process/policy')\r\n        .setup(policy.manifestSrc, policy.manifestURL);\r\n    }\r\n\r\n    // Print stack trace on `SIGINT` if option `--trace-sigint` presents.\r\n    setupStacktracePrinterOnSigint();\r\n    initializeReportSignalHandlers();  // Main-thread-only.\r\n    initializeHeapSnapshotSignalHandlers();\r\n    // If the process is spawned with env NODE_CHANNEL_FD, it's probably\r\n    // spawned by our child_process module, then initialize IPC.\r\n    // This attaches some internal event listeners and creates:\r\n    // process.send(), process.channel, process.connected,\r\n    // process.disconnect().\r\n    setupChildProcessIpcChannel();\r\n    // If this is a worker in cluster mode, start up the communication\r\n    // channel. This needs to be done before any user code gets executed\r\n    // (including preload modules).\r\n    initializeClusterIPC();\r\n\r\n    // TODO(joyeecheung): do this for worker threads as well.\r\n    require('internal/v8/startup_snapshot').runDeserializeCallbacks();\r\n  } else {\r\n    assert(!internalBinding('worker').isMainThread);\r\n    // The setup should be called in LOAD_SCRIPT message handler.\r\n    assert(!initializeModules);\r\n  }\r\n\r\n  if (initializeModules) {\r\n    setupUserModules();\r\n  }\r\n}\r\n\r\nfunction setupUserModules() {\r\n  initializeCJSLoader();\r\n  initializeESMLoader();\r\n  const CJSLoader = require('internal/modules/cjs/loader');\r\n  assert(!CJSLoader.hasLoadedAnyUserCJSModule);\r\n  loadPreloadModules();\r\n  // Need to be done after --require setup.\r\n  initializeFrozenIntrinsics();\r\n}\r\n\r\nfunction refreshRuntimeOptions() {\r\n  refreshOptions();\r\n}\r\n\r\nfunction patchProcessObject(expandArgv1) {\r\n  const binding = internalBinding('process_methods');\r\n  binding.patchProcessObject(process);\r\n\r\n  require('internal/process/per_thread').refreshHrtimeBuffer();\r\n\r\n  ObjectDefineProperty(process, 'argv0', {\r\n    __proto__: null,\r\n    enumerable: true,\r\n    // Only set it to true during snapshot building.\r\n    configurable: getOptionValue('--build-snapshot'),\r\n    value: process.argv[0]\r\n  });\r\n\r\n  process.exitCode = undefined;\r\n  process._exiting = false;\r\n  process.argv[0] = process.execPath;\r\n\r\n  if (expandArgv1 && process.argv[1] &&\r\n      !StringPrototypeStartsWith(process.argv[1], '-')) {\r\n    // Expand process.argv[1] into a full path.\r\n    const path = require('path');\r\n    try {\r\n      process.argv[1] = path.resolve(process.argv[1]);\r\n    } catch {\r\n      // Continue regardless of error.\r\n    }\r\n  }\r\n\r\n  // We need to initialize the global console here again with process.stdout\r\n  // and friends for snapshot deserialization.\r\n  const globalConsole = require('internal/console/global');\r\n  const { initializeGlobalConsole } = require('internal/console/constructor');\r\n  initializeGlobalConsole(globalConsole);\r\n\r\n  // TODO(joyeecheung): most of these should be deprecated and removed,\r\n  // except some that we need to be able to mutate during run time.\r\n  addReadOnlyProcessAlias('_eval', '--eval');\r\n  addReadOnlyProcessAlias('_print_eval', '--print');\r\n  addReadOnlyProcessAlias('_syntax_check_only', '--check');\r\n  addReadOnlyProcessAlias('_forceRepl', '--interactive');\r\n  addReadOnlyProcessAlias('_preload_modules', '--require');\r\n  addReadOnlyProcessAlias('noDeprecation', '--no-deprecation');\r\n  addReadOnlyProcessAlias('noProcessWarnings', '--no-warnings');\r\n  addReadOnlyProcessAlias('traceProcessWarnings', '--trace-warnings');\r\n  addReadOnlyProcessAlias('throwDeprecation', '--throw-deprecation');\r\n  addReadOnlyProcessAlias('profProcess', '--prof-process');\r\n  addReadOnlyProcessAlias('traceDeprecation', '--trace-deprecation');\r\n  addReadOnlyProcessAlias('_breakFirstLine', '--inspect-brk', false);\r\n  addReadOnlyProcessAlias('_breakNodeFirstLine', '--inspect-brk-node', false);\r\n}\r\n\r\nfunction addReadOnlyProcessAlias(name, option, enumerable = true) {\r\n  const value = getOptionValue(option);\r\n  if (value) {\r\n    ObjectDefineProperty(process, name, {\r\n      __proto__: null,\r\n      writable: false,\r\n      configurable: true,\r\n      enumerable,\r\n      value\r\n    });\r\n  }\r\n}\r\n\r\nfunction setupWarningHandler() {\r\n  const {\r\n    onWarning,\r\n    resetForSerialization\r\n  } = require('internal/process/warning');\r\n  if (getOptionValue('--warnings') &&\r\n    process.env.NODE_NO_WARNINGS !== '1') {\r\n    process.on('warning', onWarning);\r\n\r\n    // The code above would add the listener back during deserialization,\r\n    // if applicable.\r\n    if (isBuildingSnapshot()) {\r\n      addSerializeCallback(() => {\r\n        process.removeListener('warning', onWarning);\r\n        resetForSerialization();\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n// https://fetch.spec.whatwg.org/\r\nfunction setupFetch() {\r\n  if (process.config.variables.node_no_browser_globals ||\r\n      getOptionValue('--no-experimental-fetch')) {\r\n    return;\r\n  }\r\n\r\n  let undici;\r\n  function lazyUndici() {\r\n    if (undici) {\r\n      return undici;\r\n    }\r\n\r\n    undici = require('internal/deps/undici/undici');\r\n    return undici;\r\n  }\r\n\r\n  async function fetch(input, init = undefined) {\r\n    return lazyUndici().fetch(input, init);\r\n  }\r\n\r\n  defineOperation(globalThis, 'fetch', fetch);\r\n\r\n  function lazyInterface(name) {\r\n    return {\r\n      configurable: true,\r\n      enumerable: false,\r\n      get() {\r\n        return lazyUndici()[name];\r\n      },\r\n      set(value) {\r\n        exposeInterface(globalThis, name, value);\r\n      }\r\n    };\r\n  }\r\n\r\n  ObjectDefineProperties(globalThis, {\r\n    FormData: lazyInterface('FormData'),\r\n    Headers: lazyInterface('Headers'),\r\n    Request: lazyInterface('Request'),\r\n    Response: lazyInterface('Response'),\r\n  });\r\n\r\n  // The WebAssembly Web API: https://webassembly.github.io/spec/web-api\r\n  const { wasmStreamingCallback } = require('internal/wasm_web_api');\r\n  internalBinding('wasm_web_api').setImplementation(wasmStreamingCallback);\r\n}\r\n\r\n// TODO(aduh95): move this to internal/bootstrap/browser when the CLI flag is\r\n//               removed.\r\nfunction setupWebCrypto() {\r\n  if (process.config.variables.node_no_browser_globals ||\r\n      !getOptionValue('--experimental-global-webcrypto')) {\r\n    return;\r\n  }\r\n\r\n  let webcrypto;\r\n  ObjectDefineProperty(globalThis, 'crypto',\r\n                       { __proto__: null, ...ObjectGetOwnPropertyDescriptor({\r\n                         get crypto() {\r\n                           webcrypto ??= require('internal/crypto/webcrypto');\r\n                           return webcrypto.crypto;\r\n                         }\r\n                       }, 'crypto') });\r\n  if (internalBinding('config').hasOpenSSL) {\r\n    webcrypto ??= require('internal/crypto/webcrypto');\r\n    exposeInterface(globalThis, 'Crypto', webcrypto.Crypto);\r\n    exposeInterface(globalThis, 'CryptoKey', webcrypto.CryptoKey);\r\n    exposeInterface(globalThis, 'SubtleCrypto', webcrypto.SubtleCrypto);\r\n  }\r\n}\r\n\r\nfunction setupCodeCoverage() {\r\n  // Resolve the coverage directory to an absolute path, and\r\n  // overwrite process.env so that the original path gets passed\r\n  // to child processes even when they switch cwd. Don't do anything if the\r\n  // --experimental-test-coverage flag is present, as the test runner will\r\n  // handle coverage.\r\n  if (process.env.NODE_V8_COVERAGE &&\r\n      !getOptionValue('--experimental-test-coverage')) {\r\n    process.env.NODE_V8_COVERAGE =\r\n      setupCoverageHooks(process.env.NODE_V8_COVERAGE);\r\n  }\r\n}\r\n\r\n// TODO(daeyeon): move this to internal/bootstrap/browser when the CLI flag is\r\n//                removed.\r\nfunction setupCustomEvent() {\r\n  if (process.config.variables.node_no_browser_globals ||\r\n      !getOptionValue('--experimental-global-customevent')) {\r\n    return;\r\n  }\r\n  const { CustomEvent } = require('internal/event_target');\r\n  exposeInterface(globalThis, 'CustomEvent', CustomEvent);\r\n}\r\n\r\nfunction setupStacktracePrinterOnSigint() {\r\n  if (!getOptionValue('--trace-sigint')) {\r\n    return;\r\n  }\r\n  const { SigintWatchdog } = require('internal/watchdog');\r\n\r\n  const watchdog = new SigintWatchdog();\r\n  watchdog.start();\r\n}\r\n\r\nfunction initializeReport() {\r\n  const { report } = require('internal/process/report');\r\n  ObjectDefineProperty(process, 'report', {\r\n    __proto__: null,\r\n    enumerable: true,\r\n    configurable: true,\r\n    get() {\r\n      return report;\r\n    }\r\n  });\r\n}\r\n\r\nfunction setupDebugEnv() {\r\n  require('internal/util/debuglog').initializeDebugEnv(process.env.NODE_DEBUG);\r\n  if (getOptionValue('--expose-internals')) {\r\n    require('internal/bootstrap/loaders').BuiltinModule.exposeInternals();\r\n  }\r\n}\r\n\r\n// This has to be called after initializeReport() is called\r\nfunction initializeReportSignalHandlers() {\r\n  const { addSignalHandler } = require('internal/process/report');\r\n\r\n  addSignalHandler();\r\n}\r\n\r\nfunction initializeHeapSnapshotSignalHandlers() {\r\n  const signal = getOptionValue('--heapsnapshot-signal');\r\n\r\n  if (!signal)\r\n    return;\r\n\r\n  require('internal/validators').validateSignalName(signal);\r\n  const { writeHeapSnapshot } = require('v8');\r\n\r\n  function doWriteHeapSnapshot() {\r\n    writeHeapSnapshot();\r\n  }\r\n  process.on(signal, doWriteHeapSnapshot);\r\n\r\n  // The code above would add the listener back during deserialization,\r\n  // if applicable.\r\n  if (isBuildingSnapshot()) {\r\n    addSerializeCallback(() => {\r\n      process.removeListener(signal, doWriteHeapSnapshot);\r\n    });\r\n  }\r\n}\r\n\r\nfunction setupTraceCategoryState() {\r\n  const { isTraceCategoryEnabled } = internalBinding('trace_events');\r\n  const { toggleTraceCategoryState } = require('internal/process/per_thread');\r\n  toggleTraceCategoryState(isTraceCategoryEnabled('node.async_hooks'));\r\n}\r\n\r\nfunction setupPerfHooks() {\r\n  require('internal/perf/performance').refreshTimeOrigin();\r\n  require('internal/perf/utils').refreshTimeOrigin();\r\n}\r\n\r\nfunction setupInspectorHooks() {\r\n  // If Debugger.setAsyncCallStackDepth is sent during bootstrap,\r\n  // we cannot immediately call into JS to enable the hooks, which could\r\n  // interrupt the JS execution of bootstrap. So instead we save the\r\n  // notification in the inspector agent if it's sent in the middle of\r\n  // bootstrap, and process the notification later here.\r\n  if (internalBinding('config').hasInspector) {\r\n    const {\r\n      enable,\r\n      disable\r\n    } = require('internal/inspector_async_hook');\r\n    internalBinding('inspector').registerAsyncHook(enable, disable);\r\n  }\r\n}\r\n\r\n// In general deprecations are initialized wherever the APIs are implemented,\r\n// this is used to deprecate APIs implemented in C++ where the deprecation\r\n// utilities are not easily accessible.\r\nfunction initializeDeprecations() {\r\n  const { deprecate } = require('internal/util');\r\n  const pendingDeprecation = getOptionValue('--pending-deprecation');\r\n\r\n  // DEP0103: access to `process.binding('util').isX` type checkers\r\n  // TODO(addaleax): Turn into a full runtime deprecation.\r\n  const utilBinding = internalBinding('util');\r\n  const types = require('internal/util/types');\r\n  for (const name of [\r\n    'isArrayBuffer',\r\n    'isArrayBufferView',\r\n    'isAsyncFunction',\r\n    'isDataView',\r\n    'isDate',\r\n    'isExternal',\r\n    'isMap',\r\n    'isMapIterator',\r\n    'isNativeError',\r\n    'isPromise',\r\n    'isRegExp',\r\n    'isSet',\r\n    'isSetIterator',\r\n    'isTypedArray',\r\n    'isUint8Array',\r\n    'isAnyArrayBuffer',\r\n  ]) {\r\n    utilBinding[name] = pendingDeprecation ?\r\n      deprecate(types[name],\r\n                'Accessing native typechecking bindings of Node ' +\r\n                'directly is deprecated. ' +\r\n                `Please use \\`util.types.${name}\\` instead.`,\r\n                'DEP0103') :\r\n      types[name];\r\n  }\r\n\r\n  // TODO(joyeecheung): this is a legacy property exposed to process.\r\n  // Now that we use the config binding to carry this information, remove\r\n  // it from the process. We may consider exposing it properly in\r\n  // process.features.\r\n  const { noBrowserGlobals } = internalBinding('config');\r\n  if (noBrowserGlobals) {\r\n    ObjectDefineProperty(process, '_noBrowserGlobals', {\r\n      __proto__: null,\r\n      writable: false,\r\n      enumerable: true,\r\n      configurable: true,\r\n      value: noBrowserGlobals\r\n    });\r\n  }\r\n\r\n  if (pendingDeprecation) {\r\n    process.binding = deprecate(process.binding,\r\n                                'process.binding() is deprecated. ' +\r\n                                'Please use public APIs instead.', 'DEP0111');\r\n\r\n    process._tickCallback = deprecate(process._tickCallback,\r\n                                      'process._tickCallback() is deprecated',\r\n                                      'DEP0134');\r\n  }\r\n}\r\n\r\nfunction setupChildProcessIpcChannel() {\r\n  if (process.env.NODE_CHANNEL_FD) {\r\n    const assert = require('internal/assert');\r\n\r\n    const fd = NumberParseInt(process.env.NODE_CHANNEL_FD, 10);\r\n    assert(fd >= 0);\r\n\r\n    // Make sure it's not accidentally inherited by child processes.\r\n    delete process.env.NODE_CHANNEL_FD;\r\n\r\n    const serializationMode =\r\n      process.env.NODE_CHANNEL_SERIALIZATION_MODE || 'json';\r\n    delete process.env.NODE_CHANNEL_SERIALIZATION_MODE;\r\n\r\n    require('child_process')._forkChild(fd, serializationMode);\r\n    assert(process.send);\r\n  }\r\n}\r\n\r\nfunction initializeClusterIPC() {\r\n  if (process.argv[1] && process.env.NODE_UNIQUE_ID) {\r\n    const cluster = require('cluster');\r\n    cluster._setupWorker();\r\n    // Make sure it's not accidentally inherited by child processes.\r\n    delete process.env.NODE_UNIQUE_ID;\r\n  }\r\n}\r\n\r\nfunction readPolicyFromDisk() {\r\n  const experimentalPolicy = getOptionValue('--experimental-policy');\r\n  if (experimentalPolicy) {\r\n    process.emitWarning('Policies are experimental.',\r\n                        'ExperimentalWarning');\r\n    const { pathToFileURL, URL } = require('internal/url');\r\n    // URL here as it is slightly different parsing\r\n    // no bare specifiers for now\r\n    let manifestURL;\r\n    if (require('path').isAbsolute(experimentalPolicy)) {\r\n      manifestURL = new URL(`file://${experimentalPolicy}`);\r\n    } else {\r\n      const cwdURL = pathToFileURL(process.cwd());\r\n      cwdURL.pathname += '/';\r\n      manifestURL = new URL(experimentalPolicy, cwdURL);\r\n    }\r\n    const fs = require('fs');\r\n    const src = fs.readFileSync(manifestURL, 'utf8');\r\n    const experimentalPolicyIntegrity = getOptionValue('--policy-integrity');\r\n    if (experimentalPolicyIntegrity) {\r\n      const SRI = require('internal/policy/sri');\r\n      const { createHash, timingSafeEqual } = require('crypto');\r\n      const realIntegrities = new SafeMap();\r\n      const integrityEntries = SRI.parse(experimentalPolicyIntegrity);\r\n      let foundMatch = false;\r\n      for (let i = 0; i < integrityEntries.length; i++) {\r\n        const {\r\n          algorithm,\r\n          value: expected\r\n        } = integrityEntries[i];\r\n        const hash = createHash(algorithm);\r\n        hash.update(src);\r\n        const digest = hash.digest();\r\n        if (digest.length === expected.length &&\r\n          timingSafeEqual(digest, expected)) {\r\n          foundMatch = true;\r\n          break;\r\n        }\r\n        realIntegrities.set(algorithm, digest.toString('base64'));\r\n      }\r\n      if (!foundMatch) {\r\n        throw new ERR_MANIFEST_ASSERT_INTEGRITY(manifestURL, realIntegrities);\r\n      }\r\n    }\r\n    return {\r\n      manifestSrc: src, manifestURL: manifestURL.href\r\n    };\r\n  }\r\n}\r\n\r\nfunction initializeWASI() {\r\n  const { BuiltinModule } = require('internal/bootstrap/loaders');\r\n  const mod = BuiltinModule.map.get('wasi');\r\n  mod.canBeRequiredByUsers =\r\n    getOptionValue('--experimental-wasi-unstable-preview1');\r\n}\r\n\r\nfunction initializeCJSLoader() {\r\n  const CJSLoader = require('internal/modules/cjs/loader');\r\n  if (!getEmbedderOptions().noGlobalSearchPaths) {\r\n    CJSLoader.Module._initPaths();\r\n  }\r\n  // TODO(joyeecheung): deprecate this in favor of a proper hook?\r\n  CJSLoader.Module.runMain =\r\n    require('internal/modules/run_main').executeUserEntryPoint;\r\n}\r\n\r\nfunction initializeESMLoader() {\r\n  // Create this WeakMap in js-land because V8 has no C++ API for WeakMap.\r\n  internalBinding('module_wrap').callbackMap = new SafeWeakMap();\r\n\r\n  if (getEmbedderOptions().shouldNotRegisterESMLoader) return;\r\n\r\n  const {\r\n    setImportModuleDynamicallyCallback,\r\n    setInitializeImportMetaObjectCallback\r\n  } = internalBinding('module_wrap');\r\n  const esm = require('internal/process/esm_loader');\r\n  // Setup per-isolate callbacks that locate data or callbacks that we keep\r\n  // track of for different ESM modules.\r\n  setInitializeImportMetaObjectCallback(esm.initializeImportMetaObject);\r\n  setImportModuleDynamicallyCallback(esm.importModuleDynamicallyCallback);\r\n\r\n  // Patch the vm module when --experimental-vm-modules is on.\r\n  // Please update the comments in vm.js when this block changes.\r\n  if (getOptionValue('--experimental-vm-modules')) {\r\n    const {\r\n      Module, SourceTextModule, SyntheticModule,\r\n    } = require('internal/vm/module');\r\n    const vm = require('vm');\r\n    vm.Module = Module;\r\n    vm.SourceTextModule = SourceTextModule;\r\n    vm.SyntheticModule = SyntheticModule;\r\n  }\r\n}\r\n\r\nfunction initializeSourceMapsHandlers() {\r\n  const { setSourceMapsEnabled, getSourceMapsEnabled } =\r\n    require('internal/source_map/source_map_cache');\r\n  process.setSourceMapsEnabled = setSourceMapsEnabled;\r\n  // Initialize the environment flag of source maps.\r\n  getSourceMapsEnabled();\r\n}\r\n\r\nfunction initializeFrozenIntrinsics() {\r\n  if (getOptionValue('--frozen-intrinsics')) {\r\n    process.emitWarning('The --frozen-intrinsics flag is experimental',\r\n                        'ExperimentalWarning');\r\n    require('internal/freeze_intrinsics')();\r\n  }\r\n}\r\n\r\nfunction loadPreloadModules() {\r\n  // For user code, we preload modules if `-r` is passed\r\n  const preloadModules = getOptionValue('--require');\r\n  if (preloadModules && preloadModules.length > 0) {\r\n    const {\r\n      Module: {\r\n        _preloadModules\r\n      },\r\n    } = require('internal/modules/cjs/loader');\r\n    _preloadModules(preloadModules);\r\n  }\r\n}\r\n\r\nfunction markBootstrapComplete() {\r\n  internalBinding('performance').markBootstrapComplete();\r\n}\r\n\r\nmodule.exports = {\r\n  setupUserModules,\r\n  prepareMainThreadExecution,\r\n  prepareWorkerThreadExecution,\r\n  markBootstrapComplete\r\n};\r\n",
    "name": "pre_execution",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 443,
    "sourcePositions": []
  },
  {
    "url": "node:internal/inspector_async_hook",
    "source": "'use strict';\r\n\r\nlet hook;\r\nlet config;\r\n\r\nconst {\r\n  SafeSet,\r\n} = primordials;\r\n\r\nfunction lazyHookCreation() {\r\n  const inspector = internalBinding('inspector');\r\n  const { createHook } = require('async_hooks');\r\n  config = internalBinding('config');\r\n\r\n  hook = createHook({\r\n    init(asyncId, type, triggerAsyncId, resource) {\r\n    // It's difficult to tell which tasks will be recurring and which won't,\r\n    // therefore we mark all tasks as recurring. Based on the discussion\r\n    // in https://github.com/nodejs/node/pull/13870#discussion_r124515293,\r\n    // this should be fine as long as we call asyncTaskCanceled() too.\r\n      const recurring = true;\r\n      if (type === 'PROMISE')\r\n        this.promiseIds.add(asyncId);\r\n      else\r\n        inspector.asyncTaskScheduled(type, asyncId, recurring);\r\n    },\r\n\r\n    before(asyncId) {\r\n      if (this.promiseIds.has(asyncId))\r\n        return;\r\n      inspector.asyncTaskStarted(asyncId);\r\n    },\r\n\r\n    after(asyncId) {\r\n      if (this.promiseIds.has(asyncId))\r\n        return;\r\n      inspector.asyncTaskFinished(asyncId);\r\n    },\r\n\r\n    destroy(asyncId) {\r\n      if (this.promiseIds.has(asyncId))\r\n        return this.promiseIds.delete(asyncId);\r\n      inspector.asyncTaskCanceled(asyncId);\r\n    },\r\n  });\r\n\r\n  hook.promiseIds = new SafeSet();\r\n}\r\n\r\nfunction enable() {\r\n  if (hook === undefined) lazyHookCreation();\r\n  if (config.bits < 64) {\r\n    // V8 Inspector stores task ids as (void*) pointers.\r\n    // async_hooks store ids as 64bit numbers.\r\n    // As a result, we cannot reliably translate async_hook ids to V8 async_task\r\n    // ids on 32bit platforms.\r\n    process.emitWarning(\r\n      'Warning: Async stack traces in debugger are not available ' +\r\n      `on ${config.bits}bit platforms. The feature is disabled.`,\r\n      {\r\n        code: 'INSPECTOR_ASYNC_STACK_TRACES_NOT_AVAILABLE',\r\n      });\r\n  } else {\r\n    hook.enable();\r\n  }\r\n}\r\n\r\nfunction disable() {\r\n  if (hook === undefined) lazyHookCreation();\r\n  hook.disable();\r\n}\r\n\r\nmodule.exports = {\r\n  enable,\r\n  disable\r\n};\r\n",
    "name": "inspector_async_hook",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 444,
    "sourcePositions": []
  },
  {
    "url": "node:internal/wasm_web_api",
    "source": "'use strict';\r\n\r\nconst {\r\n  PromiseResolve,\r\n} = primordials;\r\nconst {\r\n  ERR_INVALID_ARG_TYPE,\r\n  ERR_WEBASSEMBLY_RESPONSE,\r\n} = require('internal/errors').codes;\r\n\r\nlet undici;\r\nfunction lazyUndici() {\r\n  return undici ??= require('internal/deps/undici/undici');\r\n}\r\n\r\n// This is essentially an implementation of a v8::WasmStreamingCallback, except\r\n// that it is implemented in JavaScript because the fetch() implementation is\r\n// difficult to use from C++. See lib/internal/process/pre_execution.js and\r\n// src/node_wasm_web_api.cc that interact with this function.\r\nfunction wasmStreamingCallback(streamState, source) {\r\n  (async () => {\r\n    const response = await PromiseResolve(source);\r\n    if (!(response instanceof lazyUndici().Response)) {\r\n      throw new ERR_INVALID_ARG_TYPE(\r\n        'source', ['Response', 'Promise resolving to Response'], response);\r\n    }\r\n\r\n    const contentType = response.headers.get('Content-Type');\r\n    if (contentType !== 'application/wasm') {\r\n      throw new ERR_WEBASSEMBLY_RESPONSE(\r\n        `has unsupported MIME type '${contentType}'`);\r\n    }\r\n\r\n    if (!response.ok) {\r\n      throw new ERR_WEBASSEMBLY_RESPONSE(\r\n        `has status code ${response.status}`);\r\n    }\r\n\r\n    if (response.bodyUsed !== false) {\r\n      throw new ERR_WEBASSEMBLY_RESPONSE('body has already been used');\r\n    }\r\n\r\n    if (response.url) {\r\n      streamState.setURL(response.url);\r\n    }\r\n\r\n    // Pass all data from the response body to the WebAssembly compiler.\r\n    const { body } = response;\r\n    if (body != null) {\r\n      for await (const chunk of body) {\r\n        streamState.push(chunk);\r\n      }\r\n    }\r\n  })().then(() => {\r\n    // No error occurred. Tell the implementation that the stream has ended.\r\n    streamState.finish();\r\n  }, (err) => {\r\n    // An error occurred, either because the given object was not a valid\r\n    // and usable Response or because a network error occurred.\r\n    streamState.abort(err);\r\n  });\r\n}\r\n\r\nmodule.exports = {\r\n  wasmStreamingCallback\r\n};\r\n",
    "name": "wasm_web_api",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 445,
    "sourcePositions": []
  },
  {
    "url": "node:internal/process/report",
    "source": "'use strict';\r\nconst {\r\n  ERR_SYNTHETIC\r\n} = require('internal/errors').codes;\r\nconst {\r\n  validateBoolean,\r\n  validateObject,\r\n  validateSignalName,\r\n  validateString,\r\n} = require('internal/validators');\r\nconst nr = internalBinding('report');\r\nconst {\r\n  JSONParse,\r\n} = primordials;\r\nconst report = {\r\n  writeReport(file, err) {\r\n    if (typeof file === 'object' && file !== null) {\r\n      err = file;\r\n      file = undefined;\r\n    } else if (file !== undefined) {\r\n      validateString(file, 'file');\r\n    }\r\n\r\n    if (err === undefined) {\r\n      err = new ERR_SYNTHETIC();\r\n    } else {\r\n      validateObject(err, 'err');\r\n    }\r\n\r\n    return nr.writeReport('JavaScript API', 'API', file, err);\r\n  },\r\n  getReport(err) {\r\n    if (err === undefined)\r\n      err = new ERR_SYNTHETIC();\r\n    else\r\n      validateObject(err, 'err');\r\n\r\n    return JSONParse(nr.getReport(err));\r\n  },\r\n  get directory() {\r\n    return nr.getDirectory();\r\n  },\r\n  set directory(dir) {\r\n    validateString(dir, 'directory');\r\n    nr.setDirectory(dir);\r\n  },\r\n  get filename() {\r\n    return nr.getFilename();\r\n  },\r\n  set filename(name) {\r\n    validateString(name, 'filename');\r\n    nr.setFilename(name);\r\n  },\r\n  get compact() {\r\n    return nr.getCompact();\r\n  },\r\n  set compact(b) {\r\n    validateBoolean(b, 'compact');\r\n    nr.setCompact(b);\r\n  },\r\n  get signal() {\r\n    return nr.getSignal();\r\n  },\r\n  set signal(sig) {\r\n    validateSignalName(sig, 'signal');\r\n    removeSignalHandler();\r\n    addSignalHandler(sig);\r\n    nr.setSignal(sig);\r\n  },\r\n  get reportOnFatalError() {\r\n    return nr.shouldReportOnFatalError();\r\n  },\r\n  set reportOnFatalError(trigger) {\r\n    validateBoolean(trigger, 'trigger');\r\n\r\n    nr.setReportOnFatalError(trigger);\r\n  },\r\n  get reportOnSignal() {\r\n    return nr.shouldReportOnSignal();\r\n  },\r\n  set reportOnSignal(trigger) {\r\n    validateBoolean(trigger, 'trigger');\r\n\r\n    nr.setReportOnSignal(trigger);\r\n    removeSignalHandler();\r\n    addSignalHandler();\r\n  },\r\n  get reportOnUncaughtException() {\r\n    return nr.shouldReportOnUncaughtException();\r\n  },\r\n  set reportOnUncaughtException(trigger) {\r\n    validateBoolean(trigger, 'trigger');\r\n\r\n    nr.setReportOnUncaughtException(trigger);\r\n  }\r\n};\r\n\r\nfunction addSignalHandler(sig) {\r\n  if (nr.shouldReportOnSignal()) {\r\n    if (typeof sig !== 'string')\r\n      sig = nr.getSignal();\r\n\r\n    process.on(sig, signalHandler);\r\n  }\r\n}\r\n\r\nfunction removeSignalHandler() {\r\n  const sig = nr.getSignal();\r\n\r\n  if (sig)\r\n    process.removeListener(sig, signalHandler);\r\n}\r\n\r\nfunction signalHandler(sig) {\r\n  nr.writeReport(sig, 'Signal', null, '');\r\n}\r\n\r\nmodule.exports = {\r\n  addSignalHandler,\r\n  report\r\n};\r\n",
    "name": "report",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 446,
    "sourcePositions": []
  },
  {
    "url": "node:internal/source_map/source_map_cache",
    "source": "'use strict';\r\n\r\nconst {\r\n  ArrayPrototypeMap,\r\n  JSONParse,\r\n  ObjectCreate,\r\n  ObjectKeys,\r\n  ObjectGetOwnPropertyDescriptor,\r\n  ObjectPrototypeHasOwnProperty,\r\n  RegExpPrototypeExec,\r\n  RegExpPrototypeSymbolSplit,\r\n  SafeMap,\r\n  StringPrototypeSplit,\r\n} = primordials;\r\n\r\nfunction ObjectGetValueSafe(obj, key) {\r\n  const desc = ObjectGetOwnPropertyDescriptor(obj, key);\r\n  return ObjectPrototypeHasOwnProperty(desc, 'value') ? desc.value : undefined;\r\n}\r\n\r\n// See https://sourcemaps.info/spec.html for SourceMap V3 specification.\r\nconst { Buffer } = require('buffer');\r\nlet debug = require('internal/util/debuglog').debuglog('source_map', (fn) => {\r\n  debug = fn;\r\n});\r\nconst fs = require('fs');\r\nconst { getOptionValue } = require('internal/options');\r\nconst { IterableWeakMap } = require('internal/util/iterable_weak_map');\r\nconst {\r\n  normalizeReferrerURL,\r\n} = require('internal/modules/cjs/helpers');\r\nconst { validateBoolean } = require('internal/validators');\r\nconst { setMaybeCacheGeneratedSourceMap } = internalBinding('errors');\r\n\r\n// Since the CJS module cache is mutable, which leads to memory leaks when\r\n// modules are deleted, we use a WeakMap so that the source map cache will\r\n// be purged automatically:\r\nconst cjsSourceMapCache = new IterableWeakMap();\r\n// The esm cache is not mutable, so we can use a Map without memory concerns:\r\nconst esmSourceMapCache = new SafeMap();\r\n// The generated sources is not mutable, so we can use a Map without memory concerns:\r\nconst generatedSourceMapCache = new SafeMap();\r\nconst kLeadingProtocol = /^\\w+:\\/\\//;\r\nconst kSourceMappingURLMagicComment = /\\/[*/]#\\s+sourceMappingURL=(?<sourceMappingURL>[^\\s]+)/g;\r\nconst kSourceURLMagicComment = /\\/[*/]#\\s+sourceURL=(?<sourceURL>[^\\s]+)/g;\r\n\r\nconst { fileURLToPath, pathToFileURL, URL } = require('internal/url');\r\nlet SourceMap;\r\n\r\nlet sourceMapsEnabled;\r\nfunction getSourceMapsEnabled() {\r\n  if (sourceMapsEnabled === undefined) {\r\n    setSourceMapsEnabled(getOptionValue('--enable-source-maps'));\r\n  }\r\n  return sourceMapsEnabled;\r\n}\r\n\r\nfunction setSourceMapsEnabled(val) {\r\n  validateBoolean(val, 'val');\r\n\r\n  const {\r\n    setSourceMapsEnabled,\r\n    setPrepareStackTraceCallback\r\n  } = internalBinding('errors');\r\n  setSourceMapsEnabled(val);\r\n  if (val) {\r\n    const {\r\n      prepareStackTrace\r\n    } = require('internal/source_map/prepare_stack_trace');\r\n    setPrepareStackTraceCallback(prepareStackTrace);\r\n  } else if (sourceMapsEnabled !== undefined) {\r\n    // Reset prepare stack trace callback only when disabling source maps.\r\n    const {\r\n      prepareStackTrace,\r\n    } = require('internal/errors');\r\n    setPrepareStackTraceCallback(prepareStackTrace);\r\n  }\r\n\r\n  sourceMapsEnabled = val;\r\n}\r\n\r\nfunction extractSourceURLMagicComment(content) {\r\n  let match;\r\n  let matchSourceURL;\r\n  // A while loop is used here to get the last occurrence of sourceURL.\r\n  // This is needed so that we don't match sourceURL in string literals.\r\n  while ((match = RegExpPrototypeExec(kSourceURLMagicComment, content))) {\r\n    matchSourceURL = match;\r\n  }\r\n  if (matchSourceURL == null) {\r\n    return null;\r\n  }\r\n  let sourceURL = matchSourceURL.groups.sourceURL;\r\n  if (sourceURL != null && RegExpPrototypeExec(kLeadingProtocol, sourceURL) === null) {\r\n    sourceURL = pathToFileURL(sourceURL).href;\r\n  }\r\n  return sourceURL;\r\n}\r\n\r\nfunction extractSourceMapURLMagicComment(content) {\r\n  let match;\r\n  let lastMatch;\r\n  // A while loop is used here to get the last occurrence of sourceMappingURL.\r\n  // This is needed so that we don't match sourceMappingURL in string literals.\r\n  while ((match = RegExpPrototypeExec(kSourceMappingURLMagicComment, content))) {\r\n    lastMatch = match;\r\n  }\r\n  if (lastMatch == null) {\r\n    return null;\r\n  }\r\n  return lastMatch.groups.sourceMappingURL;\r\n}\r\n\r\nfunction maybeCacheSourceMap(filename, content, cjsModuleInstance, isGeneratedSource, sourceURL, sourceMapURL) {\r\n  const sourceMapsEnabled = getSourceMapsEnabled();\r\n  if (!(process.env.NODE_V8_COVERAGE || sourceMapsEnabled)) return;\r\n  try {\r\n    filename = normalizeReferrerURL(filename);\r\n  } catch (err) {\r\n    // This is most likely an invalid filename in sourceURL of [eval]-wrapper.\r\n    debug(err);\r\n    return;\r\n  }\r\n\r\n  if (sourceMapURL === undefined) {\r\n    sourceMapURL = extractSourceMapURLMagicComment(content);\r\n  }\r\n\r\n  // Bail out when there is no source map url.\r\n  if (typeof sourceMapURL !== 'string') {\r\n    return;\r\n  }\r\n\r\n  if (sourceURL === undefined) {\r\n    sourceURL = extractSourceURLMagicComment(content);\r\n  }\r\n\r\n  const data = dataFromUrl(filename, sourceMapURL);\r\n  const url = data ? null : sourceMapURL;\r\n  if (cjsModuleInstance) {\r\n    cjsSourceMapCache.set(cjsModuleInstance, {\r\n      filename,\r\n      lineLengths: lineLengths(content),\r\n      data,\r\n      url,\r\n      sourceURL,\r\n    });\r\n  } else if (isGeneratedSource) {\r\n    const entry = {\r\n      lineLengths: lineLengths(content),\r\n      data,\r\n      url,\r\n      sourceURL\r\n    };\r\n    generatedSourceMapCache.set(filename, entry);\r\n    if (sourceURL) {\r\n      generatedSourceMapCache.set(sourceURL, entry);\r\n    }\r\n  } else {\r\n    // If there is no cjsModuleInstance and is not generated source assume we are in a\r\n    // \"modules/esm\" context.\r\n    const entry = {\r\n      lineLengths: lineLengths(content),\r\n      data,\r\n      url,\r\n      sourceURL,\r\n    };\r\n    esmSourceMapCache.set(filename, entry);\r\n    if (sourceURL) {\r\n      esmSourceMapCache.set(sourceURL, entry);\r\n    }\r\n  }\r\n}\r\n\r\nfunction maybeCacheGeneratedSourceMap(content) {\r\n  const sourceMapsEnabled = getSourceMapsEnabled();\r\n  if (!(process.env.NODE_V8_COVERAGE || sourceMapsEnabled)) return;\r\n\r\n  const sourceURL = extractSourceURLMagicComment(content);\r\n  if (sourceURL === null) {\r\n    return;\r\n  }\r\n  try {\r\n    maybeCacheSourceMap(sourceURL, content, null, true, sourceURL);\r\n  } catch (err) {\r\n    // This can happen if the filename is not a valid URL.\r\n    // If we fail to cache the source map, we should not fail the whole process.\r\n    debug(err);\r\n  }\r\n}\r\nsetMaybeCacheGeneratedSourceMap(maybeCacheGeneratedSourceMap);\r\n\r\nfunction dataFromUrl(sourceURL, sourceMappingURL) {\r\n  try {\r\n    const url = new URL(sourceMappingURL);\r\n    switch (url.protocol) {\r\n      case 'data:':\r\n        return sourceMapFromDataUrl(sourceURL, url.pathname);\r\n      default:\r\n        debug(`unknown protocol ${url.protocol}`);\r\n        return null;\r\n    }\r\n  } catch (err) {\r\n    debug(err);\r\n    // If no scheme is present, we assume we are dealing with a file path.\r\n    const mapURL = new URL(sourceMappingURL, sourceURL).href;\r\n    return sourceMapFromFile(mapURL);\r\n  }\r\n}\r\n\r\n// Cache the length of each line in the file that a source map was extracted\r\n// from. This allows translation from byte offset V8 coverage reports,\r\n// to line/column offset Source Map V3.\r\nfunction lineLengths(content) {\r\n  // We purposefully keep \\r as part of the line-length calculation, in\r\n  // cases where there is a \\r\\n separator, so that this can be taken into\r\n  // account in coverage calculations.\r\n  return ArrayPrototypeMap(RegExpPrototypeSymbolSplit(/\\n|\\u2028|\\u2029/, content), (line) => {\r\n    return line.length;\r\n  });\r\n}\r\n\r\nfunction sourceMapFromFile(mapURL) {\r\n  try {\r\n    const content = fs.readFileSync(fileURLToPath(mapURL), 'utf8');\r\n    const data = JSONParse(content);\r\n    return sourcesToAbsolute(mapURL, data);\r\n  } catch (err) {\r\n    debug(err);\r\n    return null;\r\n  }\r\n}\r\n\r\n// data:[<mediatype>][;base64],<data> see:\r\n// https://tools.ietf.org/html/rfc2397#section-2\r\nfunction sourceMapFromDataUrl(sourceURL, url) {\r\n  const { 0: format, 1: data } = StringPrototypeSplit(url, ',');\r\n  const splitFormat = StringPrototypeSplit(format, ';');\r\n  const contentType = splitFormat[0];\r\n  const base64 = splitFormat[splitFormat.length - 1] === 'base64';\r\n  if (contentType === 'application/json') {\r\n    const decodedData = base64 ?\r\n      Buffer.from(data, 'base64').toString('utf8') : data;\r\n    try {\r\n      const parsedData = JSONParse(decodedData);\r\n      return sourcesToAbsolute(sourceURL, parsedData);\r\n    } catch (err) {\r\n      debug(err);\r\n      return null;\r\n    }\r\n  } else {\r\n    debug(`unknown content-type ${contentType}`);\r\n    return null;\r\n  }\r\n}\r\n\r\n// If the sources are not absolute URLs after prepending of the \"sourceRoot\",\r\n// the sources are resolved relative to the SourceMap (like resolving script\r\n// src in a html document).\r\nfunction sourcesToAbsolute(baseURL, data) {\r\n  data.sources = data.sources.map((source) => {\r\n    source = (data.sourceRoot || '') + source;\r\n    return new URL(source, baseURL).href;\r\n  });\r\n  // The sources array is now resolved to absolute URLs, sourceRoot should\r\n  // be updated to noop.\r\n  data.sourceRoot = '';\r\n  return data;\r\n}\r\n\r\n// WARNING: The `sourceMapCacheToObject` and `appendCJSCache` run during\r\n// shutdown. In particular, they also run when Workers are terminated, making\r\n// it important that they do not call out to any user-provided code, including\r\n// built-in prototypes that might have been tampered with.\r\n\r\n// Get serialized representation of source-map cache, this is used\r\n// to persist a cache of source-maps to disk when NODE_V8_COVERAGE is enabled.\r\nfunction sourceMapCacheToObject() {\r\n  const obj = ObjectCreate(null);\r\n\r\n  for (const { 0: k, 1: v } of esmSourceMapCache) {\r\n    obj[k] = v;\r\n  }\r\n\r\n  appendCJSCache(obj);\r\n\r\n  if (ObjectKeys(obj).length === 0) {\r\n    return undefined;\r\n  }\r\n  return obj;\r\n}\r\n\r\nfunction appendCJSCache(obj) {\r\n  for (const value of cjsSourceMapCache) {\r\n    obj[ObjectGetValueSafe(value, 'filename')] = {\r\n      lineLengths: ObjectGetValueSafe(value, 'lineLengths'),\r\n      data: ObjectGetValueSafe(value, 'data'),\r\n      url: ObjectGetValueSafe(value, 'url')\r\n    };\r\n  }\r\n}\r\n\r\nfunction findSourceMap(sourceURL) {\r\n  if (RegExpPrototypeExec(kLeadingProtocol, sourceURL) === null) {\r\n    sourceURL = pathToFileURL(sourceURL).href;\r\n  }\r\n  if (!SourceMap) {\r\n    SourceMap = require('internal/source_map/source_map').SourceMap;\r\n  }\r\n  let sourceMap = esmSourceMapCache.get(sourceURL) ?? generatedSourceMapCache.get(sourceURL);\r\n  if (sourceMap === undefined) {\r\n    for (const value of cjsSourceMapCache) {\r\n      const filename = ObjectGetValueSafe(value, 'filename');\r\n      const cachedSourceURL = ObjectGetValueSafe(value, 'sourceURL');\r\n      if (sourceURL === filename || sourceURL === cachedSourceURL) {\r\n        sourceMap = {\r\n          data: ObjectGetValueSafe(value, 'data')\r\n        };\r\n      }\r\n    }\r\n  }\r\n  if (sourceMap && sourceMap.data) {\r\n    return new SourceMap(sourceMap.data);\r\n  }\r\n  return undefined;\r\n}\r\n\r\nmodule.exports = {\r\n  findSourceMap,\r\n  getSourceMapsEnabled,\r\n  setSourceMapsEnabled,\r\n  maybeCacheSourceMap,\r\n  sourceMapCacheToObject,\r\n};\r\n",
    "name": "source_map_cache",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 447,
    "sourcePositions": []
  },
  {
    "url": "node:internal/util/iterable_weak_map",
    "source": "'use strict';\r\n\r\nconst {\r\n  ObjectFreeze,\r\n  SafeFinalizationRegistry,\r\n  SafeSet,\r\n  SafeWeakMap,\r\n  SafeWeakRef,\r\n  SymbolIterator,\r\n} = primordials;\r\n\r\n// This class is modified from the example code in the WeakRefs specification:\r\n// https://github.com/tc39/proposal-weakrefs\r\n// Licensed under ECMA's MIT-style license, see:\r\n// https://github.com/tc39/ecma262/blob/HEAD/LICENSE.md\r\nclass IterableWeakMap {\r\n  #weakMap = new SafeWeakMap();\r\n  #refSet = new SafeSet();\r\n  #finalizationGroup = new SafeFinalizationRegistry(cleanup);\r\n\r\n  set(key, value) {\r\n    const entry = this.#weakMap.get(key);\r\n    if (entry) {\r\n      // If there's already an entry for the object represented by \"key\",\r\n      // the value can be updated without creating a new WeakRef:\r\n      this.#weakMap.set(key, { value, ref: entry.ref });\r\n    } else {\r\n      const ref = new SafeWeakRef(key);\r\n      this.#weakMap.set(key, { value, ref });\r\n      this.#refSet.add(ref);\r\n      this.#finalizationGroup.register(key, {\r\n        set: this.#refSet,\r\n        ref\r\n      }, ref);\r\n    }\r\n  }\r\n\r\n  get(key) {\r\n    return this.#weakMap.get(key)?.value;\r\n  }\r\n\r\n  has(key) {\r\n    return this.#weakMap.has(key);\r\n  }\r\n\r\n  delete(key) {\r\n    const entry = this.#weakMap.get(key);\r\n    if (!entry) {\r\n      return false;\r\n    }\r\n    this.#weakMap.delete(key);\r\n    this.#refSet.delete(entry.ref);\r\n    this.#finalizationGroup.unregister(entry.ref);\r\n    return true;\r\n  }\r\n\r\n  [SymbolIterator]() {\r\n    const iterator = this.#refSet[SymbolIterator]();\r\n\r\n    const next = () => {\r\n      const result = iterator.next();\r\n      if (result.done) return result;\r\n      const key = result.value.deref();\r\n      if (key == null) return next();\r\n      const { value } = this.#weakMap.get(key);\r\n      return { done: false, value };\r\n    };\r\n\r\n    return {\r\n      [SymbolIterator]() { return this; },\r\n      next,\r\n    };\r\n  }\r\n}\r\n\r\nfunction cleanup({ set, ref }) {\r\n  set.delete(ref);\r\n}\r\n\r\nObjectFreeze(IterableWeakMap.prototype);\r\n\r\nmodule.exports = {\r\n  IterableWeakMap,\r\n};\r\n",
    "name": "iterable_weak_map",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 448,
    "sourcePositions": []
  },
  {
    "url": "node:internal/modules/cjs/helpers",
    "source": "'use strict';\r\n\r\nconst {\r\n  ArrayPrototypeForEach,\r\n  ArrayPrototypeJoin,\r\n  ArrayPrototypeSome,\r\n  ObjectDefineProperty,\r\n  ObjectPrototypeHasOwnProperty,\r\n  SafeMap,\r\n  SafeSet,\r\n  StringPrototypeCharCodeAt,\r\n  StringPrototypeIncludes,\r\n  StringPrototypeSlice,\r\n  StringPrototypeStartsWith,\r\n} = primordials;\r\nconst {\r\n  ERR_MANIFEST_DEPENDENCY_MISSING,\r\n  ERR_UNKNOWN_BUILTIN_MODULE\r\n} = require('internal/errors').codes;\r\nconst { BuiltinModule } = require('internal/bootstrap/loaders');\r\n\r\nconst { validateString } = require('internal/validators');\r\nconst path = require('path');\r\nconst { pathToFileURL, fileURLToPath, URL } = require('internal/url');\r\n\r\nconst { getOptionValue } = require('internal/options');\r\nconst { setOwnProperty } = require('internal/util');\r\nconst userConditions = getOptionValue('--conditions');\r\n\r\nconst {\r\n  privateSymbols: {\r\n    require_private_symbol,\r\n  },\r\n} = internalBinding('util');\r\n\r\nlet debug = require('internal/util/debuglog').debuglog('module', (fn) => {\r\n  debug = fn;\r\n});\r\n\r\nconst noAddons = getOptionValue('--no-addons');\r\nconst addonConditions = noAddons ? [] : ['node-addons'];\r\n\r\n// TODO: Use this set when resolving pkg#exports conditions in loader.js.\r\nconst cjsConditions = new SafeSet([\r\n  'require',\r\n  'node',\r\n  ...addonConditions,\r\n  ...userConditions,\r\n]);\r\n\r\nfunction loadBuiltinModule(filename, request) {\r\n  const mod = BuiltinModule.map.get(filename);\r\n  if (mod?.canBeRequiredByUsers) {\r\n    debug('load built-in module %s', request);\r\n    // compileForPublicLoader() throws if mod.canBeRequiredByUsers is false:\r\n    mod.compileForPublicLoader();\r\n    return mod;\r\n  }\r\n}\r\n\r\n// Invoke with makeRequireFunction(module) where |module| is the Module object\r\n// to use as the context for the require() function.\r\n// Use redirects to set up a mapping from a policy and restrict dependencies\r\nconst urlToFileCache = new SafeMap();\r\nfunction makeRequireFunction(mod, redirects) {\r\n  const Module = mod.constructor;\r\n\r\n  let require;\r\n  if (redirects) {\r\n    const id = mod.filename || mod.id;\r\n    const conditions = cjsConditions;\r\n    const { resolve, reaction } = redirects;\r\n    require = function require(specifier) {\r\n      let missing = true;\r\n      const destination = resolve(specifier, conditions);\r\n      if (destination === true) {\r\n        missing = false;\r\n      } else if (destination) {\r\n        const href = destination.href;\r\n        if (destination.protocol === 'node:') {\r\n          const specifier = destination.pathname;\r\n          const mod = loadBuiltinModule(specifier, href);\r\n          if (mod && mod.canBeRequiredByUsers) {\r\n            return mod.exports;\r\n          }\r\n          throw new ERR_UNKNOWN_BUILTIN_MODULE(specifier);\r\n        } else if (destination.protocol === 'file:') {\r\n          let filepath;\r\n          if (urlToFileCache.has(href)) {\r\n            filepath = urlToFileCache.get(href);\r\n          } else {\r\n            filepath = fileURLToPath(destination);\r\n            urlToFileCache.set(href, filepath);\r\n          }\r\n          return mod[require_private_symbol](mod, filepath);\r\n        }\r\n      }\r\n      if (missing) {\r\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\r\n          id,\r\n          specifier,\r\n          ArrayPrototypeJoin([...conditions], ', ')\r\n        ));\r\n      }\r\n      return mod[require_private_symbol](mod, specifier);\r\n    };\r\n  } else {\r\n    require = function require(path) {\r\n      // When no policy manifest, the original prototype.require is sustained\r\n      return mod.require(path);\r\n    };\r\n  }\r\n\r\n  function resolve(request, options) {\r\n    validateString(request, 'request');\r\n    return Module._resolveFilename(request, mod, false, options);\r\n  }\r\n\r\n  require.resolve = resolve;\r\n\r\n  function paths(request) {\r\n    validateString(request, 'request');\r\n    return Module._resolveLookupPaths(request, mod);\r\n  }\r\n\r\n  resolve.paths = paths;\r\n\r\n  setOwnProperty(require, 'main', process.mainModule);\r\n\r\n  // Enable support to add extra extension types.\r\n  require.extensions = Module._extensions;\r\n\r\n  require.cache = Module._cache;\r\n\r\n  return require;\r\n}\r\n\r\n/**\r\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\r\n * because the buffer-to-string conversion in `fs.readFileSync()`\r\n * translates it to FEFF, the UTF-16 BOM.\r\n */\r\nfunction stripBOM(content) {\r\n  if (StringPrototypeCharCodeAt(content) === 0xFEFF) {\r\n    content = StringPrototypeSlice(content, 1);\r\n  }\r\n  return content;\r\n}\r\n\r\nfunction addBuiltinLibsToObject(object, dummyModuleName) {\r\n  // Make built-in modules available directly (loaded lazily).\r\n  const Module = require('internal/modules/cjs/loader').Module;\r\n  const { builtinModules } = Module;\r\n\r\n  // To require built-in modules in user-land and ignore modules whose\r\n  // `canBeRequiredByUsers` is false. So we create a dummy module object and not\r\n  // use `require()` directly.\r\n  const dummyModule = new Module(dummyModuleName);\r\n\r\n  ArrayPrototypeForEach(builtinModules, (name) => {\r\n    // Neither add underscored modules, nor ones that contain slashes (e.g.,\r\n    // 'fs/promises') or ones that are already defined.\r\n    if (StringPrototypeStartsWith(name, '_') ||\r\n        StringPrototypeIncludes(name, '/') ||\r\n        ObjectPrototypeHasOwnProperty(object, name)) {\r\n      return;\r\n    }\r\n    // Goals of this mechanism are:\r\n    // - Lazy loading of built-in modules\r\n    // - Having all built-in modules available as non-enumerable properties\r\n    // - Allowing the user to re-assign these variables as if there were no\r\n    //   pre-existing globals with the same name.\r\n\r\n    const setReal = (val) => {\r\n      // Deleting the property before re-assigning it disables the\r\n      // getter/setter mechanism.\r\n      delete object[name];\r\n      object[name] = val;\r\n    };\r\n\r\n    ObjectDefineProperty(object, name, {\r\n      __proto__: null,\r\n      get: () => {\r\n        const lib = dummyModule.require(name);\r\n\r\n        try {\r\n          // Override the current getter/setter and set up a new\r\n          // non-enumerable property.\r\n          ObjectDefineProperty(object, name, {\r\n            __proto__: null,\r\n            get: () => lib,\r\n            set: setReal,\r\n            configurable: true,\r\n            enumerable: false,\r\n          });\r\n        } catch {\r\n          // If the property is no longer configurable, ignore the error.\r\n        }\r\n\r\n        return lib;\r\n      },\r\n      set: setReal,\r\n      configurable: true,\r\n      enumerable: false\r\n    });\r\n  });\r\n}\r\n\r\n/**\r\n *\r\n * @param {string | URL} referrer\r\n * @returns {string}\r\n */\r\nfunction normalizeReferrerURL(referrer) {\r\n  if (typeof referrer === 'string' && path.isAbsolute(referrer)) {\r\n    return pathToFileURL(referrer).href;\r\n  }\r\n  return new URL(referrer).href;\r\n}\r\n\r\n// For error messages only - used to check if ESM syntax is in use.\r\nfunction hasEsmSyntax(code) {\r\n  debug('Checking for ESM syntax');\r\n  const parser = require('internal/deps/acorn/acorn/dist/acorn').Parser;\r\n  let root;\r\n  try {\r\n    root = parser.parse(code, { sourceType: 'module', ecmaVersion: 'latest' });\r\n  } catch {\r\n    return false;\r\n  }\r\n\r\n  return ArrayPrototypeSome(root.body, (stmt) =>\r\n    stmt.type === 'ExportDefaultDeclaration' ||\r\n    stmt.type === 'ExportNamedDeclaration' ||\r\n    stmt.type === 'ImportDeclaration' ||\r\n    stmt.type === 'ExportAllDeclaration');\r\n}\r\n\r\nmodule.exports = {\r\n  addBuiltinLibsToObject,\r\n  cjsConditions,\r\n  hasEsmSyntax,\r\n  loadBuiltinModule,\r\n  makeRequireFunction,\r\n  normalizeReferrerURL,\r\n  stripBOM,\r\n};\r\n",
    "name": "helpers",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 449,
    "sourcePositions": []
  },
  {
    "url": "node:internal/dns/utils",
    "source": "'use strict';\r\n\r\nconst {\r\n  ArrayPrototypeForEach,\r\n  ArrayPrototypeJoin,\r\n  ArrayPrototypeMap,\r\n  ArrayPrototypePush,\r\n  FunctionPrototypeBind,\r\n  NumberParseInt,\r\n  RegExpPrototypeExec,\r\n  RegExpPrototypeSymbolReplace,\r\n  ObjectCreate,\r\n  Symbol,\r\n} = primordials;\r\n\r\nconst errors = require('internal/errors');\r\nconst { isIP } = require('internal/net');\r\nconst { getOptionValue } = require('internal/options');\r\nconst {\r\n  validateArray,\r\n  validateInt32,\r\n  validateOneOf,\r\n  validateString,\r\n} = require('internal/validators');\r\nlet binding;\r\nfunction lazyBinding() {\r\n  binding ??= internalBinding('cares_wrap');\r\n  return binding;\r\n}\r\nconst IANA_DNS_PORT = 53;\r\nconst IPv6RE = /^\\[([^[\\]]*)\\]/;\r\nconst addrSplitRE = /(^.+?)(?::(\\d+))?$/;\r\nconst {\r\n  ERR_DNS_SET_SERVERS_FAILED,\r\n  ERR_INVALID_ARG_VALUE,\r\n  ERR_INVALID_IP_ADDRESS,\r\n} = errors.codes;\r\n\r\nconst {\r\n  addSerializeCallback,\r\n  addDeserializeCallback,\r\n  isBuildingSnapshot,\r\n} = require('v8').startupSnapshot;\r\n\r\nfunction validateTimeout(options) {\r\n  const { timeout = -1 } = { ...options };\r\n  validateInt32(timeout, 'options.timeout', -1);\r\n  return timeout;\r\n}\r\n\r\nfunction validateTries(options) {\r\n  const { tries = 4 } = { ...options };\r\n  validateInt32(tries, 'options.tries', 1);\r\n  return tries;\r\n}\r\n\r\nconst kSerializeResolver = Symbol('dns:resolver:serialize');\r\nconst kDeserializeResolver = Symbol('dns:resolver:deserialize');\r\nconst kSnapshotStates = Symbol('dns:resolver:config');\r\nconst kInitializeHandle = Symbol('dns:resolver:initializeHandle');\r\nconst kSetServersInteral = Symbol('dns:resolver:setServers');\r\n\r\n// Resolver instances correspond 1:1 to c-ares channels.\r\n\r\nclass ResolverBase {\r\n  constructor(options = undefined) {\r\n    const timeout = validateTimeout(options);\r\n    const tries = validateTries(options);\r\n    // If we are building snapshot, save the states of the resolver along\r\n    // the way.\r\n    if (isBuildingSnapshot()) {\r\n      this[kSnapshotStates] = { timeout, tries };\r\n    }\r\n    this[kInitializeHandle](timeout, tries);\r\n  }\r\n\r\n  [kInitializeHandle](timeout, tries) {\r\n    const { ChannelWrap } = lazyBinding();\r\n    this._handle = new ChannelWrap(timeout, tries);\r\n  }\r\n\r\n  cancel() {\r\n    this._handle.cancel();\r\n  }\r\n\r\n  getServers() {\r\n    return ArrayPrototypeMap(this._handle.getServers() || [], (val) => {\r\n      if (!val[1] || val[1] === IANA_DNS_PORT)\r\n        return val[0];\r\n\r\n      const host = isIP(val[0]) === 6 ? `[${val[0]}]` : val[0];\r\n      return `${host}:${val[1]}`;\r\n    });\r\n  }\r\n\r\n  setServers(servers) {\r\n    validateArray(servers, 'servers');\r\n\r\n    // Cache the original servers because in the event of an error while\r\n    // setting the servers, c-ares won't have any servers available for\r\n    // resolution.\r\n    const newSet = [];\r\n    ArrayPrototypeForEach(servers, (serv, index) => {\r\n      validateString(serv, `servers[${index}]`);\r\n      let ipVersion = isIP(serv);\r\n\r\n      if (ipVersion !== 0)\r\n        return ArrayPrototypePush(newSet, [ipVersion, serv, IANA_DNS_PORT]);\r\n\r\n      const match = RegExpPrototypeExec(IPv6RE, serv);\r\n\r\n      // Check for an IPv6 in brackets.\r\n      if (match) {\r\n        ipVersion = isIP(match[1]);\r\n\r\n        if (ipVersion !== 0) {\r\n          const port = NumberParseInt(\r\n            RegExpPrototypeSymbolReplace(addrSplitRE, serv, '$2')) || IANA_DNS_PORT;\r\n          return ArrayPrototypePush(newSet, [ipVersion, match[1], port]);\r\n        }\r\n      }\r\n\r\n      // addr::port\r\n      const addrSplitMatch = RegExpPrototypeExec(addrSplitRE, serv);\r\n\r\n      if (addrSplitMatch) {\r\n        const hostIP = addrSplitMatch[1];\r\n        const port = addrSplitMatch[2] || IANA_DNS_PORT;\r\n\r\n        ipVersion = isIP(hostIP);\r\n\r\n        if (ipVersion !== 0) {\r\n          return ArrayPrototypePush(\r\n            newSet, [ipVersion, hostIP, NumberParseInt(port)]);\r\n        }\r\n      }\r\n\r\n      throw new ERR_INVALID_IP_ADDRESS(serv);\r\n    });\r\n\r\n    this[kSetServersInteral](newSet, servers);\r\n  }\r\n\r\n  [kSetServersInteral](newSet, servers) {\r\n    const orig = this._handle.getServers() || [];\r\n    const errorNumber = this._handle.setServers(newSet);\r\n\r\n    if (errorNumber !== 0) {\r\n      // Reset the servers to the old servers, because ares probably unset them.\r\n      this._handle.setServers(ArrayPrototypeJoin(orig, ','));\r\n      const { strerror } = lazyBinding();\r\n      const err = strerror(errorNumber);\r\n      throw new ERR_DNS_SET_SERVERS_FAILED(err, servers);\r\n    }\r\n\r\n    if (isBuildingSnapshot()) {\r\n      this[kSnapshotStates].servers = newSet;\r\n    }\r\n  }\r\n\r\n\r\n  setLocalAddress(ipv4, ipv6) {\r\n    validateString(ipv4, 'ipv4');\r\n\r\n    if (ipv6 !== undefined) {\r\n      validateString(ipv6, 'ipv6');\r\n    }\r\n\r\n    this._handle.setLocalAddress(ipv4, ipv6);\r\n\r\n    if (isBuildingSnapshot()) {\r\n      this[kSnapshotStates].localAddress = { ipv4, ipv6 };\r\n    }\r\n  }\r\n\r\n  // TODO(joyeecheung): consider exposing this if custom DNS resolvers\r\n  // end up being useful for snapshot users.\r\n  [kSerializeResolver]() {\r\n    this._handle = null;  // We'll restore it during deserialization.\r\n    addDeserializeCallback(function deserializeResolver(resolver) {\r\n      resolver[kDeserializeResolver]();\r\n    }, this);\r\n  }\r\n\r\n  [kDeserializeResolver]() {\r\n    const { timeout, tries, localAddress, servers } = this[kSnapshotStates];\r\n    this[kInitializeHandle](timeout, tries);\r\n    if (localAddress) {\r\n      const { ipv4, ipv6 } = localAddress;\r\n      this._handle.setLocalAddress(ipv4, ipv6);\r\n    }\r\n    if (servers) {\r\n      this[kSetServersInteral](servers, servers);\r\n    }\r\n  }\r\n}\r\n\r\nlet defaultResolver;\r\nlet dnsOrder;\r\n\r\nfunction initializeDns() {\r\n  const orderFromCLI = getOptionValue('--dns-result-order');\r\n  if (!orderFromCLI) {\r\n    dnsOrder ??= 'verbatim';\r\n  } else {\r\n    // Allow the deserialized application to override order from CLI.\r\n    dnsOrder = orderFromCLI;\r\n  }\r\n\r\n  if (!isBuildingSnapshot()) {\r\n    return;\r\n  }\r\n\r\n  addSerializeCallback(() => {\r\n    defaultResolver?.[kSerializeResolver]();\r\n  });\r\n}\r\n\r\nconst resolverKeys = [\r\n  'getServers',\r\n  'resolve',\r\n  'resolve4',\r\n  'resolve6',\r\n  'resolveAny',\r\n  'resolveCaa',\r\n  'resolveCname',\r\n  'resolveMx',\r\n  'resolveNaptr',\r\n  'resolveNs',\r\n  'resolvePtr',\r\n  'resolveSoa',\r\n  'resolveSrv',\r\n  'resolveTxt',\r\n  'reverse',\r\n];\r\n\r\nfunction getDefaultResolver() {\r\n  // We do this here instead of pre-execution so that the default resolver is\r\n  // only ever created when the user loads any dns module.\r\n  if (defaultResolver === undefined) {\r\n    defaultResolver = new ResolverBase();\r\n  }\r\n  return defaultResolver;\r\n}\r\n\r\nfunction setDefaultResolver(resolver) {\r\n  defaultResolver = resolver;\r\n}\r\n\r\nfunction bindDefaultResolver(target, source) {\r\n  const defaultResolver = getDefaultResolver();\r\n  ArrayPrototypeForEach(resolverKeys, (key) => {\r\n    target[key] = FunctionPrototypeBind(source[key], defaultResolver);\r\n  });\r\n}\r\n\r\nfunction validateHints(hints) {\r\n  const { AI_ADDRCONFIG, AI_ALL, AI_V4MAPPED } = lazyBinding();\r\n  if ((hints & ~(AI_ADDRCONFIG | AI_ALL | AI_V4MAPPED)) !== 0) {\r\n    throw new ERR_INVALID_ARG_VALUE('hints', hints);\r\n  }\r\n}\r\n\r\nlet invalidHostnameWarningEmitted = false;\r\nfunction emitInvalidHostnameWarning(hostname) {\r\n  if (!invalidHostnameWarningEmitted) {\r\n    process.emitWarning(\r\n      `The provided hostname \"${hostname}\" is not a valid ` +\r\n      'hostname, and is supported in the dns module solely for compatibility.',\r\n      'DeprecationWarning',\r\n      'DEP0118'\r\n    );\r\n    invalidHostnameWarningEmitted = true;\r\n  }\r\n}\r\n\r\nfunction getDefaultVerbatim() {\r\n  return dnsOrder !== 'ipv4first';\r\n}\r\n\r\nfunction setDefaultResultOrder(value) {\r\n  validateOneOf(value, 'dnsOrder', ['verbatim', 'ipv4first']);\r\n  dnsOrder = value;\r\n}\r\n\r\nfunction createResolverClass(resolver) {\r\n  const resolveMap = ObjectCreate(null);\r\n\r\n  class Resolver extends ResolverBase {}\r\n\r\n  Resolver.prototype.resolveAny = resolveMap.ANY = resolver('queryAny');\r\n  Resolver.prototype.resolve4 = resolveMap.A = resolver('queryA');\r\n  Resolver.prototype.resolve6 = resolveMap.AAAA = resolver('queryAaaa');\r\n  Resolver.prototype.resolveCaa = resolveMap.CAA = resolver('queryCaa');\r\n  Resolver.prototype.resolveCname = resolveMap.CNAME = resolver('queryCname');\r\n  Resolver.prototype.resolveMx = resolveMap.MX = resolver('queryMx');\r\n  Resolver.prototype.resolveNs = resolveMap.NS = resolver('queryNs');\r\n  Resolver.prototype.resolveTxt = resolveMap.TXT = resolver('queryTxt');\r\n  Resolver.prototype.resolveSrv = resolveMap.SRV = resolver('querySrv');\r\n  Resolver.prototype.resolvePtr = resolveMap.PTR = resolver('queryPtr');\r\n  Resolver.prototype.resolveNaptr = resolveMap.NAPTR = resolver('queryNaptr');\r\n  Resolver.prototype.resolveSoa = resolveMap.SOA = resolver('querySoa');\r\n  Resolver.prototype.reverse = resolver('getHostByAddr');\r\n\r\n  return {\r\n    resolveMap,\r\n    Resolver\r\n  };\r\n}\r\n\r\n// ERROR CODES\r\nconst errorCodes = {\r\n  NODATA: 'ENODATA',\r\n  FORMERR: 'EFORMERR',\r\n  SERVFAIL: 'ESERVFAIL',\r\n  NOTFOUND: 'ENOTFOUND',\r\n  NOTIMP: 'ENOTIMP',\r\n  REFUSED: 'EREFUSED',\r\n  BADQUERY: 'EBADQUERY',\r\n  BADNAME: 'EBADNAME',\r\n  BADFAMILY: 'EBADFAMILY',\r\n  BADRESP: 'EBADRESP',\r\n  CONNREFUSED: 'ECONNREFUSED',\r\n  TIMEOUT: 'ETIMEOUT',\r\n  EOF: 'EOF',\r\n  FILE: 'EFILE',\r\n  NOMEM: 'ENOMEM',\r\n  DESTRUCTION: 'EDESTRUCTION',\r\n  BADSTR: 'EBADSTR',\r\n  BADFLAGS: 'EBADFLAGS',\r\n  NONAME: 'ENONAME',\r\n  BADHINTS: 'EBADHINTS',\r\n  NOTINITIALIZED: 'ENOTINITIALIZED',\r\n  LOADIPHLPAPI: 'ELOADIPHLPAPI',\r\n  ADDRGETNETWORKPARAMS: 'EADDRGETNETWORKPARAMS',\r\n  CANCELLED: 'ECANCELLED',\r\n};\r\n\r\nmodule.exports = {\r\n  bindDefaultResolver,\r\n  getDefaultResolver,\r\n  setDefaultResolver,\r\n  validateHints,\r\n  validateTimeout,\r\n  validateTries,\r\n  emitInvalidHostnameWarning,\r\n  getDefaultVerbatim,\r\n  setDefaultResultOrder,\r\n  errorCodes,\r\n  createResolverClass,\r\n  initializeDns\r\n};\r\n",
    "name": "node:internal/cluster/utils",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 450,
    "sourcePositions": []
  },
  {
    "url": "node:internal/net",
    "source": "'use strict';\r\n\r\nconst {\r\n  RegExp,\r\n  RegExpPrototypeTest,\r\n  Symbol,\r\n} = primordials;\r\n\r\nconst Buffer = require('buffer').Buffer;\r\nconst { writeBuffer } = internalBinding('fs');\r\nconst errors = require('internal/errors');\r\n\r\n// IPv4 Segment\r\nconst v4Seg = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';\r\nconst v4Str = `(${v4Seg}[.]){3}${v4Seg}`;\r\nconst IPv4Reg = new RegExp(`^${v4Str}$`);\r\n\r\n// IPv6 Segment\r\nconst v6Seg = '(?:[0-9a-fA-F]{1,4})';\r\nconst IPv6Reg = new RegExp('^(' +\r\n  `(?:${v6Seg}:){7}(?:${v6Seg}|:)|` +\r\n  `(?:${v6Seg}:){6}(?:${v4Str}|:${v6Seg}|:)|` +\r\n  `(?:${v6Seg}:){5}(?::${v4Str}|(:${v6Seg}){1,2}|:)|` +\r\n  `(?:${v6Seg}:){4}(?:(:${v6Seg}){0,1}:${v4Str}|(:${v6Seg}){1,3}|:)|` +\r\n  `(?:${v6Seg}:){3}(?:(:${v6Seg}){0,2}:${v4Str}|(:${v6Seg}){1,4}|:)|` +\r\n  `(?:${v6Seg}:){2}(?:(:${v6Seg}){0,3}:${v4Str}|(:${v6Seg}){1,5}|:)|` +\r\n  `(?:${v6Seg}:){1}(?:(:${v6Seg}){0,4}:${v4Str}|(:${v6Seg}){1,6}|:)|` +\r\n  `(?::((?::${v6Seg}){0,5}:${v4Str}|(?::${v6Seg}){1,7}|:))` +\r\n')(%[0-9a-zA-Z-.:]{1,})?$');\r\n\r\nfunction isIPv4(s) {\r\n  // TODO(aduh95): Replace RegExpPrototypeTest with RegExpPrototypeExec when it\r\n  // no longer creates a perf regression in the dns benchmark.\r\n  // eslint-disable-next-line node-core/avoid-prototype-pollution\r\n  return RegExpPrototypeTest(IPv4Reg, s);\r\n}\r\n\r\nfunction isIPv6(s) {\r\n  // TODO(aduh95): Replace RegExpPrototypeTest with RegExpPrototypeExec when it\r\n  // no longer creates a perf regression in the dns benchmark.\r\n  // eslint-disable-next-line node-core/avoid-prototype-pollution\r\n  return RegExpPrototypeTest(IPv6Reg, s);\r\n}\r\n\r\nfunction isIP(s) {\r\n  if (isIPv4(s)) return 4;\r\n  if (isIPv6(s)) return 6;\r\n  return 0;\r\n}\r\n\r\nfunction makeSyncWrite(fd) {\r\n  return function(chunk, enc, cb) {\r\n    if (enc !== 'buffer')\r\n      chunk = Buffer.from(chunk, enc);\r\n\r\n    this._handle.bytesWritten += chunk.length;\r\n\r\n    const ctx = {};\r\n    writeBuffer(fd, chunk, 0, chunk.length, null, undefined, ctx);\r\n    if (ctx.errno !== undefined) {\r\n      const ex = errors.uvException(ctx);\r\n      ex.errno = ctx.errno;\r\n      return cb(ex);\r\n    }\r\n    cb();\r\n  };\r\n}\r\n\r\nmodule.exports = {\r\n  kWrapConnectedHandle: Symbol('wrapConnectedHandle'),\r\n  isIP,\r\n  isIPv4,\r\n  isIPv6,\r\n  makeSyncWrite,\r\n  normalizedArgsSymbol: Symbol('normalizedArgs')\r\n};\r\n",
    "name": "net",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 451,
    "sourcePositions": []
  },
  {
    "url": "node:internal/modules/cjs/loader",
    "source": "// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n'use strict';\r\n\r\nconst {\r\n  ArrayIsArray,\r\n  ArrayPrototypeFilter,\r\n  ArrayPrototypeIncludes,\r\n  ArrayPrototypeIndexOf,\r\n  ArrayPrototypeJoin,\r\n  ArrayPrototypeMap,\r\n  ArrayPrototypePush,\r\n  ArrayPrototypePushApply,\r\n  ArrayPrototypeSlice,\r\n  ArrayPrototypeSplice,\r\n  ArrayPrototypeUnshift,\r\n  ArrayPrototypeUnshiftApply,\r\n  ArrayPrototypeFlatMap,\r\n  Boolean,\r\n  Error,\r\n  JSONParse,\r\n  ObjectCreate,\r\n  ObjectDefineProperty,\r\n  ObjectFreeze,\r\n  ObjectGetOwnPropertyDescriptor,\r\n  ObjectGetPrototypeOf,\r\n  ObjectKeys,\r\n  ObjectPrototype,\r\n  ObjectPrototypeHasOwnProperty,\r\n  ObjectSetPrototypeOf,\r\n  Proxy,\r\n  ReflectApply,\r\n  ReflectSet,\r\n  RegExpPrototypeExec,\r\n  SafeMap,\r\n  SafeSet,\r\n  SafeWeakMap,\r\n  String,\r\n  StringPrototypeCharAt,\r\n  StringPrototypeCharCodeAt,\r\n  StringPrototypeEndsWith,\r\n  StringPrototypeLastIndexOf,\r\n  StringPrototypeIndexOf,\r\n  StringPrototypeRepeat,\r\n  StringPrototypeSlice,\r\n  StringPrototypeSplit,\r\n  StringPrototypeStartsWith,\r\n} = primordials;\r\n\r\n// Map used to store CJS parsing data.\r\nconst cjsParseCache = new SafeWeakMap();\r\n\r\n// Set first due to cycle with ESM loader functions.\r\nmodule.exports = {\r\n  wrapSafe, Module, toRealPath, readPackageScope, cjsParseCache,\r\n  get hasLoadedAnyUserCJSModule() { return hasLoadedAnyUserCJSModule; }\r\n};\r\n\r\nconst { BuiltinModule } = require('internal/bootstrap/loaders');\r\nconst {\r\n  maybeCacheSourceMap,\r\n} = require('internal/source_map/source_map_cache');\r\nconst { pathToFileURL, fileURLToPath, isURLInstance } = require('internal/url');\r\nconst {\r\n  deprecate,\r\n  emitExperimentalWarning,\r\n  kEmptyObject,\r\n  filterOwnProperties,\r\n  setOwnProperty,\r\n} = require('internal/util');\r\nconst { Script } = require('vm');\r\nconst { internalCompileFunction } = require('internal/vm');\r\nconst assert = require('internal/assert');\r\nconst fs = require('fs');\r\nconst internalFS = require('internal/fs/utils');\r\nconst path = require('path');\r\nconst { sep } = path;\r\nconst { internalModuleStat } = internalBinding('fs');\r\nconst packageJsonReader = require('internal/modules/package_json_reader');\r\nconst { safeGetenv } = internalBinding('credentials');\r\nconst {\r\n  privateSymbols: {\r\n    require_private_symbol,\r\n  },\r\n} = internalBinding('util');\r\nconst {\r\n  cjsConditions,\r\n  hasEsmSyntax,\r\n  loadBuiltinModule,\r\n  makeRequireFunction,\r\n  normalizeReferrerURL,\r\n  stripBOM,\r\n} = require('internal/modules/cjs/helpers');\r\nconst { getOptionValue } = require('internal/options');\r\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\r\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\r\nconst shouldReportRequiredModules = process.env.WATCH_REPORT_DEPENDENCIES;\r\n// Do not eagerly grab .manifest, it may be in TDZ\r\nconst policy = getOptionValue('--experimental-policy') ?\r\n  require('internal/process/policy') :\r\n  null;\r\n\r\n// Whether any user-provided CJS modules had been loaded (executed).\r\n// Used for internal assertions.\r\nlet hasLoadedAnyUserCJSModule = false;\r\n\r\nconst {\r\n  codes: {\r\n    ERR_INVALID_ARG_VALUE,\r\n    ERR_INVALID_MODULE_SPECIFIER,\r\n    ERR_REQUIRE_ESM,\r\n    ERR_UNKNOWN_BUILTIN_MODULE,\r\n  },\r\n  setArrowMessage,\r\n} = require('internal/errors');\r\nconst { validateString } = require('internal/validators');\r\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\r\n\r\nconst {\r\n  CHAR_BACKWARD_SLASH,\r\n  CHAR_COLON,\r\n  CHAR_DOT,\r\n  CHAR_FORWARD_SLASH,\r\n} = require('internal/constants');\r\n\r\nconst {\r\n  isProxy\r\n} = require('internal/util/types');\r\n\r\nconst asyncESM = require('internal/process/esm_loader');\r\nconst { enrichCJSError } = require('internal/modules/esm/translators');\r\nconst { kEvaluated } = internalBinding('module_wrap');\r\nconst {\r\n  encodedSepRegEx,\r\n  packageExportsResolve,\r\n  packageImportsResolve\r\n} = require('internal/modules/esm/resolve');\r\n\r\nconst isWindows = process.platform === 'win32';\r\n\r\nconst relativeResolveCache = ObjectCreate(null);\r\n\r\nlet requireDepth = 0;\r\nlet statCache = null;\r\nlet isPreloading = false;\r\n\r\nfunction internalRequire(module, id) {\r\n  validateString(id, 'id');\r\n  if (id === '') {\r\n    throw new ERR_INVALID_ARG_VALUE('id', id,\r\n                                    'must be a non-empty string');\r\n  }\r\n  requireDepth++;\r\n  try {\r\n    return Module._load(id, module, /* isMain */ false);\r\n  } finally {\r\n    requireDepth--;\r\n  }\r\n}\r\n\r\nfunction stat(filename) {\r\n  filename = path.toNamespacedPath(filename);\r\n  if (statCache !== null) {\r\n    const result = statCache.get(filename);\r\n    if (result !== undefined) return result;\r\n  }\r\n  const result = internalModuleStat(filename);\r\n  if (statCache !== null && result >= 0) {\r\n    // Only set cache when `internalModuleStat(filename)` succeeds.\r\n    statCache.set(filename, result);\r\n  }\r\n  return result;\r\n}\r\n\r\nlet _stat = stat;\r\nObjectDefineProperty(Module, '_stat', {\r\n  __proto__: null,\r\n  get() { return _stat; },\r\n  set(stat) {\r\n    emitExperimentalWarning('Module._stat');\r\n    _stat = stat;\r\n    return true;\r\n  },\r\n  configurable: true,\r\n});\r\n\r\nfunction updateChildren(parent, child, scan) {\r\n  const children = parent?.children;\r\n  if (children && !(scan && ArrayPrototypeIncludes(children, child)))\r\n    ArrayPrototypePush(children, child);\r\n}\r\n\r\nfunction reportModuleToWatchMode(filename) {\r\n  if (shouldReportRequiredModules && process.send) {\r\n    process.send({ 'watch:require': [filename] });\r\n  }\r\n}\r\n\r\nfunction reportModuleNotFoundToWatchMode(basePath, extensions) {\r\n  if (shouldReportRequiredModules && process.send) {\r\n    process.send({ 'watch:require': ArrayPrototypeMap(extensions, (ext) => path.resolve(`${basePath}${ext}`)) });\r\n  }\r\n}\r\n\r\nconst moduleParentCache = new SafeWeakMap();\r\nfunction Module(id = '', parent) {\r\n  this.id = id;\r\n  this.path = path.dirname(id);\r\n  setOwnProperty(this, 'exports', {});\r\n  moduleParentCache.set(this, parent);\r\n  updateChildren(parent, this, false);\r\n  this.filename = null;\r\n  this.loaded = false;\r\n  this.children = [];\r\n  let redirects;\r\n  if (policy?.manifest) {\r\n    const moduleURL = pathToFileURL(id);\r\n    redirects = policy.manifest.getDependencyMapper(moduleURL);\r\n    // TODO(rafaelgss): remove the necessity of this branch\r\n    setOwnProperty(this, 'require', makeRequireFunction(this, redirects));\r\n  }\r\n  this[require_private_symbol] = internalRequire;\r\n}\r\n\r\nconst builtinModules = [];\r\nfor (const { 0: id, 1: mod } of BuiltinModule.map) {\r\n  if (mod.canBeRequiredByUsers &&\r\n    BuiltinModule.canBeRequiredWithoutScheme(id)) {\r\n    ArrayPrototypePush(builtinModules, id);\r\n  }\r\n}\r\n\r\nconst allBuiltins = new SafeSet(\r\n  ArrayPrototypeFlatMap(builtinModules, (bm) => [bm, `node:${bm}`])\r\n);\r\nBuiltinModule.getSchemeOnlyModuleNames().forEach((builtin) => allBuiltins.add(`node:${builtin}`));\r\n\r\nObjectFreeze(builtinModules);\r\nModule.builtinModules = builtinModules;\r\n\r\nModule._cache = ObjectCreate(null);\r\nModule._pathCache = ObjectCreate(null);\r\nModule._extensions = ObjectCreate(null);\r\nlet modulePaths = [];\r\nModule.globalPaths = [];\r\n\r\nlet patched = false;\r\n\r\n// eslint-disable-next-line func-style\r\nlet wrap = function(script) {\r\n  return Module.wrapper[0] + script + Module.wrapper[1];\r\n};\r\n\r\nconst wrapper = [\r\n  '(function (exports, require, module, __filename, __dirname) { ',\r\n  '\\n});',\r\n];\r\n\r\nlet wrapperProxy = new Proxy(wrapper, {\r\n  __proto__: null,\r\n\r\n  set(target, property, value, receiver) {\r\n    patched = true;\r\n    return ReflectSet(target, property, value, receiver);\r\n  },\r\n\r\n  defineProperty(target, property, descriptor) {\r\n    patched = true;\r\n    return ObjectDefineProperty(target, property, descriptor);\r\n  }\r\n});\r\n\r\nObjectDefineProperty(Module, 'wrap', {\r\n  __proto__: null,\r\n  get() {\r\n    return wrap;\r\n  },\r\n\r\n  set(value) {\r\n    patched = true;\r\n    wrap = value;\r\n  }\r\n});\r\n\r\nObjectDefineProperty(Module, 'wrapper', {\r\n  __proto__: null,\r\n  get() {\r\n    return wrapperProxy;\r\n  },\r\n\r\n  set(value) {\r\n    patched = true;\r\n    wrapperProxy = value;\r\n  }\r\n});\r\n\r\nconst isPreloadingDesc = { get() { return isPreloading; } };\r\nObjectDefineProperty(Module.prototype, 'isPreloading', isPreloadingDesc);\r\nObjectDefineProperty(BuiltinModule.prototype, 'isPreloading', isPreloadingDesc);\r\n\r\nfunction getModuleParent() {\r\n  return moduleParentCache.get(this);\r\n}\r\n\r\nfunction setModuleParent(value) {\r\n  moduleParentCache.set(this, value);\r\n}\r\n\r\nObjectDefineProperty(Module.prototype, 'parent', {\r\n  __proto__: null,\r\n  get: pendingDeprecation ? deprecate(\r\n    getModuleParent,\r\n    'module.parent is deprecated due to accuracy issues. Please use ' +\r\n      'require.main to find program entry point instead.',\r\n    'DEP0144'\r\n  ) : getModuleParent,\r\n  set: pendingDeprecation ? deprecate(\r\n    setModuleParent,\r\n    'module.parent is deprecated due to accuracy issues. Please use ' +\r\n      'require.main to find program entry point instead.',\r\n    'DEP0144'\r\n  ) : setModuleParent,\r\n});\r\n\r\nlet debug = require('internal/util/debuglog').debuglog('module', (fn) => {\r\n  debug = fn;\r\n});\r\nModule._debug = deprecate(debug, 'Module._debug is deprecated.', 'DEP0077');\r\n\r\n// Given a module name, and a list of paths to test, returns the first\r\n// matching file in the following precedence.\r\n//\r\n// require(\"a.<ext>\")\r\n//   -> a.<ext>\r\n//\r\n// require(\"a\")\r\n//   -> a\r\n//   -> a.<ext>\r\n//   -> a/index.<ext>\r\n\r\nconst packageJsonCache = new SafeMap();\r\n\r\nfunction readPackage(requestPath) {\r\n  const jsonPath = path.resolve(requestPath, 'package.json');\r\n\r\n  const existing = packageJsonCache.get(jsonPath);\r\n  if (existing !== undefined) return existing;\r\n\r\n  const result = packageJsonReader.read(jsonPath);\r\n  const json = result.containsKeys === false ? '{}' : result.string;\r\n  if (json === undefined) {\r\n    packageJsonCache.set(jsonPath, false);\r\n    return false;\r\n  }\r\n\r\n  try {\r\n    const filtered = filterOwnProperties(JSONParse(json), [\r\n      'name',\r\n      'main',\r\n      'exports',\r\n      'imports',\r\n      'type',\r\n    ]);\r\n    packageJsonCache.set(jsonPath, filtered);\r\n    return filtered;\r\n  } catch (e) {\r\n    e.path = jsonPath;\r\n    e.message = 'Error parsing ' + jsonPath + ': ' + e.message;\r\n    throw e;\r\n  }\r\n}\r\n\r\nlet _readPackage = readPackage;\r\nObjectDefineProperty(Module, '_readPackage', {\r\n  __proto__: null,\r\n  get() { return _readPackage; },\r\n  set(readPackage) {\r\n    emitExperimentalWarning('Module._readPackage');\r\n    _readPackage = readPackage;\r\n    return true;\r\n  },\r\n  configurable: true,\r\n});\r\n\r\nfunction readPackageScope(checkPath) {\r\n  const rootSeparatorIndex = StringPrototypeIndexOf(checkPath, sep);\r\n  let separatorIndex;\r\n  do {\r\n    separatorIndex = StringPrototypeLastIndexOf(checkPath, sep);\r\n    checkPath = StringPrototypeSlice(checkPath, 0, separatorIndex);\r\n    if (StringPrototypeEndsWith(checkPath, sep + 'node_modules'))\r\n      return false;\r\n    const pjson = _readPackage(checkPath + sep);\r\n    if (pjson) return {\r\n      data: pjson,\r\n      path: checkPath,\r\n    };\r\n  } while (separatorIndex > rootSeparatorIndex);\r\n  return false;\r\n}\r\n\r\nfunction tryPackage(requestPath, exts, isMain, originalPath) {\r\n  const pkg = _readPackage(requestPath)?.main;\r\n\r\n  if (!pkg) {\r\n    return tryExtensions(path.resolve(requestPath, 'index'), exts, isMain);\r\n  }\r\n\r\n  const filename = path.resolve(requestPath, pkg);\r\n  let actual = tryFile(filename, isMain) ||\r\n    tryExtensions(filename, exts, isMain) ||\r\n    tryExtensions(path.resolve(filename, 'index'), exts, isMain);\r\n  if (actual === false) {\r\n    actual = tryExtensions(path.resolve(requestPath, 'index'), exts, isMain);\r\n    if (!actual) {\r\n      // eslint-disable-next-line no-restricted-syntax\r\n      const err = new Error(\r\n        `Cannot find module '${filename}'. ` +\r\n        'Please verify that the package.json has a valid \"main\" entry'\r\n      );\r\n      err.code = 'MODULE_NOT_FOUND';\r\n      err.path = path.resolve(requestPath, 'package.json');\r\n      err.requestPath = originalPath;\r\n      // TODO(BridgeAR): Add the requireStack as well.\r\n      throw err;\r\n    } else {\r\n      const jsonPath = path.resolve(requestPath, 'package.json');\r\n      process.emitWarning(\r\n        `Invalid 'main' field in '${jsonPath}' of '${pkg}'. ` +\r\n          'Please either fix that or report it to the module author',\r\n        'DeprecationWarning',\r\n        'DEP0128'\r\n      );\r\n    }\r\n  }\r\n  return actual;\r\n}\r\n\r\n// In order to minimize unnecessary lstat() calls,\r\n// this cache is a list of known-real paths.\r\n// Set to an empty Map to reset.\r\nconst realpathCache = new SafeMap();\r\n\r\n// Check if the file exists and is not a directory\r\n// if using --preserve-symlinks and isMain is false,\r\n// keep symlinks intact, otherwise resolve to the\r\n// absolute realpath.\r\nfunction tryFile(requestPath, isMain) {\r\n  const rc = _stat(requestPath);\r\n  if (rc !== 0) return;\r\n  if (preserveSymlinks && !isMain) {\r\n    return path.resolve(requestPath);\r\n  }\r\n  return toRealPath(requestPath);\r\n}\r\n\r\nfunction toRealPath(requestPath) {\r\n  return fs.realpathSync(requestPath, {\r\n    [internalFS.realpathCacheKey]: realpathCache\r\n  });\r\n}\r\n\r\n// Given a path, check if the file exists with any of the set extensions\r\nfunction tryExtensions(p, exts, isMain) {\r\n  for (let i = 0; i < exts.length; i++) {\r\n    const filename = tryFile(p + exts[i], isMain);\r\n\r\n    if (filename) {\r\n      return filename;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\n// Find the longest (possibly multi-dot) extension registered in\r\n// Module._extensions\r\nfunction findLongestRegisteredExtension(filename) {\r\n  const name = path.basename(filename);\r\n  let currentExtension;\r\n  let index;\r\n  let startIndex = 0;\r\n  while ((index = StringPrototypeIndexOf(name, '.', startIndex)) !== -1) {\r\n    startIndex = index + 1;\r\n    if (index === 0) continue; // Skip dotfiles like .gitignore\r\n    currentExtension = StringPrototypeSlice(name, index);\r\n    if (Module._extensions[currentExtension]) return currentExtension;\r\n  }\r\n  return '.js';\r\n}\r\n\r\nfunction trySelfParentPath(parent) {\r\n  if (!parent) return false;\r\n\r\n  if (parent.filename) {\r\n    return parent.filename;\r\n  } else if (parent.id === '<repl>' || parent.id === 'internal/preload') {\r\n    try {\r\n      return process.cwd() + path.sep;\r\n    } catch {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\nfunction trySelf(parentPath, request) {\r\n  if (!parentPath) return false;\r\n\r\n  const { data: pkg, path: pkgPath } = readPackageScope(parentPath) || {};\r\n  if (!pkg || pkg.exports === undefined) return false;\r\n  if (typeof pkg.name !== 'string') return false;\r\n\r\n  let expansion;\r\n  if (request === pkg.name) {\r\n    expansion = '.';\r\n  } else if (StringPrototypeStartsWith(request, `${pkg.name}/`)) {\r\n    expansion = '.' + StringPrototypeSlice(request, pkg.name.length);\r\n  } else {\r\n    return false;\r\n  }\r\n\r\n  try {\r\n    return finalizeEsmResolution(packageExportsResolve(\r\n      pathToFileURL(pkgPath + '/package.json'), expansion, pkg,\r\n      pathToFileURL(parentPath), cjsConditions), parentPath, pkgPath);\r\n  } catch (e) {\r\n    if (e.code === 'ERR_MODULE_NOT_FOUND')\r\n      throw createEsmNotFoundErr(request, pkgPath + '/package.json');\r\n    throw e;\r\n  }\r\n}\r\n\r\n// This only applies to requests of a specific form:\r\n// 1. name/.*\r\n// 2. @scope/name/.*\r\nconst EXPORTS_PATTERN = /^((?:@[^/\\\\%]+\\/)?[^./\\\\%][^/\\\\%]*)(\\/.*)?$/;\r\nfunction resolveExports(nmPath, request) {\r\n  // The implementation's behavior is meant to mirror resolution in ESM.\r\n  const { 1: name, 2: expansion = '' } =\r\n    RegExpPrototypeExec(EXPORTS_PATTERN, request) || kEmptyObject;\r\n  if (!name)\r\n    return;\r\n  const pkgPath = path.resolve(nmPath, name);\r\n  const pkg = _readPackage(pkgPath);\r\n  if (pkg?.exports != null) {\r\n    try {\r\n      return finalizeEsmResolution(packageExportsResolve(\r\n        pathToFileURL(pkgPath + '/package.json'), '.' + expansion, pkg, null,\r\n        cjsConditions), null, pkgPath);\r\n    } catch (e) {\r\n      if (e.code === 'ERR_MODULE_NOT_FOUND')\r\n        throw createEsmNotFoundErr(request, pkgPath + '/package.json');\r\n      throw e;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @param {string} request a relative or absolute file path\r\n * @param {Array<string>} paths file system directories to search as file paths\r\n * @param {boolean} isMain if the request is the main app entry point\r\n * @returns {string | false}\r\n */\r\nModule._findPath = function(request, paths, isMain) {\r\n  const absoluteRequest = path.isAbsolute(request);\r\n  if (absoluteRequest) {\r\n    paths = [''];\r\n  } else if (!paths || paths.length === 0) {\r\n    return false;\r\n  }\r\n\r\n  const cacheKey = request + '\\x00' + ArrayPrototypeJoin(paths, '\\x00');\r\n  const entry = Module._pathCache[cacheKey];\r\n  if (entry)\r\n    return entry;\r\n\r\n  let exts;\r\n  const trailingSlash = request.length > 0 &&\r\n    (StringPrototypeCharCodeAt(request, request.length - 1) === CHAR_FORWARD_SLASH || (\r\n      StringPrototypeCharCodeAt(request, request.length - 1) === CHAR_DOT &&\r\n      (\r\n        request.length === 1 ||\r\n        StringPrototypeCharCodeAt(request, request.length - 2) === CHAR_FORWARD_SLASH ||\r\n        (StringPrototypeCharCodeAt(request, request.length - 2) === CHAR_DOT && (\r\n          request.length === 2 ||\r\n          StringPrototypeCharCodeAt(request, request.length - 3) === CHAR_FORWARD_SLASH\r\n        ))\r\n      )\r\n    ));\r\n\r\n  const isRelative = StringPrototypeCharCodeAt(request, 0) === CHAR_DOT &&\r\n    (\r\n      request.length === 1 ||\r\n      StringPrototypeCharCodeAt(request, 1) === CHAR_FORWARD_SLASH ||\r\n      (isWindows && StringPrototypeCharCodeAt(request, 1) === CHAR_BACKWARD_SLASH) ||\r\n      (StringPrototypeCharCodeAt(request, 1) === CHAR_DOT && ((\r\n        request.length === 2 ||\r\n        StringPrototypeCharCodeAt(request, 2) === CHAR_FORWARD_SLASH) ||\r\n        (isWindows && StringPrototypeCharCodeAt(request, 2) === CHAR_BACKWARD_SLASH)))\r\n    );\r\n  let insidePath = true;\r\n  if (isRelative) {\r\n    const normalizedRequest = path.normalize(request);\r\n    if (StringPrototypeStartsWith(normalizedRequest, '..')) {\r\n      insidePath = false;\r\n    }\r\n  }\r\n\r\n  // For each path\r\n  for (let i = 0; i < paths.length; i++) {\r\n    // Don't search further if path doesn't exist and request is inside the path\r\n    const curPath = paths[i];\r\n    if (insidePath && curPath && _stat(curPath) < 1) continue;\r\n\r\n    if (!absoluteRequest) {\r\n      const exportsResolved = resolveExports(curPath, request);\r\n      if (exportsResolved)\r\n        return exportsResolved;\r\n    }\r\n\r\n    const basePath = path.resolve(curPath, request);\r\n    let filename;\r\n\r\n    const rc = _stat(basePath);\r\n    if (!trailingSlash) {\r\n      if (rc === 0) {  // File.\r\n        if (!isMain) {\r\n          if (preserveSymlinks) {\r\n            filename = path.resolve(basePath);\r\n          } else {\r\n            filename = toRealPath(basePath);\r\n          }\r\n        } else if (preserveSymlinksMain) {\r\n          // For the main module, we use the preserveSymlinksMain flag instead\r\n          // mainly for backward compatibility, as the preserveSymlinks flag\r\n          // historically has not applied to the main module.  Most likely this\r\n          // was intended to keep .bin/ binaries working, as following those\r\n          // symlinks is usually required for the imports in the corresponding\r\n          // files to resolve; that said, in some use cases following symlinks\r\n          // causes bigger problems which is why the preserveSymlinksMain option\r\n          // is needed.\r\n          filename = path.resolve(basePath);\r\n        } else {\r\n          filename = toRealPath(basePath);\r\n        }\r\n      }\r\n\r\n      if (!filename) {\r\n        // Try it with each of the extensions\r\n        if (exts === undefined)\r\n          exts = ObjectKeys(Module._extensions);\r\n        filename = tryExtensions(basePath, exts, isMain);\r\n      }\r\n    }\r\n\r\n    if (!filename && rc === 1) {  // Directory.\r\n      // try it with each of the extensions at \"index\"\r\n      if (exts === undefined)\r\n        exts = ObjectKeys(Module._extensions);\r\n      filename = tryPackage(basePath, exts, isMain, request);\r\n    }\r\n\r\n    if (filename) {\r\n      Module._pathCache[cacheKey] = filename;\r\n      return filename;\r\n    }\r\n\r\n    const extensions = [''];\r\n    if (exts !== undefined) {\r\n      ArrayPrototypePushApply(extensions, exts);\r\n    }\r\n    reportModuleNotFoundToWatchMode(basePath, extensions);\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\n// 'node_modules' character codes reversed\r\nconst nmChars = [ 115, 101, 108, 117, 100, 111, 109, 95, 101, 100, 111, 110 ];\r\nconst nmLen = nmChars.length;\r\nif (isWindows) {\r\n  // 'from' is the __dirname of the module.\r\n  Module._nodeModulePaths = function(from) {\r\n    // Guarantee that 'from' is absolute.\r\n    from = path.resolve(from);\r\n\r\n    // note: this approach *only* works when the path is guaranteed\r\n    // to be absolute.  Doing a fully-edge-case-correct path.split\r\n    // that works on both Windows and Posix is non-trivial.\r\n\r\n    // return root node_modules when path is 'D:\\\\'.\r\n    // path.resolve will make sure from.length >=3 in Windows.\r\n    if (StringPrototypeCharCodeAt(from, from.length - 1) ===\r\n          CHAR_BACKWARD_SLASH &&\r\n        StringPrototypeCharCodeAt(from, from.length - 2) === CHAR_COLON)\r\n      return [from + 'node_modules'];\r\n\r\n    const paths = [];\r\n    for (let i = from.length - 1, p = 0, last = from.length; i >= 0; --i) {\r\n      const code = StringPrototypeCharCodeAt(from, i);\r\n      // The path segment separator check ('\\' and '/') was used to get\r\n      // node_modules path for every path segment.\r\n      // Use colon as an extra condition since we can get node_modules\r\n      // path for drive root like 'C:\\node_modules' and don't need to\r\n      // parse drive name.\r\n      if (code === CHAR_BACKWARD_SLASH ||\r\n          code === CHAR_FORWARD_SLASH ||\r\n          code === CHAR_COLON) {\r\n        if (p !== nmLen)\r\n          ArrayPrototypePush(\r\n            paths,\r\n            StringPrototypeSlice(from, 0, last) + '\\\\node_modules'\r\n          );\r\n        last = i;\r\n        p = 0;\r\n      } else if (p !== -1) {\r\n        if (nmChars[p] === code) {\r\n          ++p;\r\n        } else {\r\n          p = -1;\r\n        }\r\n      }\r\n    }\r\n\r\n    return paths;\r\n  };\r\n} else { // posix\r\n  // 'from' is the __dirname of the module.\r\n  Module._nodeModulePaths = function(from) {\r\n    // Guarantee that 'from' is absolute.\r\n    from = path.resolve(from);\r\n    // Return early not only to avoid unnecessary work, but to *avoid* returning\r\n    // an array of two items for a root: [ '//node_modules', '/node_modules' ]\r\n    if (from === '/')\r\n      return ['/node_modules'];\r\n\r\n    // note: this approach *only* works when the path is guaranteed\r\n    // to be absolute.  Doing a fully-edge-case-correct path.split\r\n    // that works on both Windows and Posix is non-trivial.\r\n    const paths = [];\r\n    for (let i = from.length - 1, p = 0, last = from.length; i >= 0; --i) {\r\n      const code = StringPrototypeCharCodeAt(from, i);\r\n      if (code === CHAR_FORWARD_SLASH) {\r\n        if (p !== nmLen)\r\n          ArrayPrototypePush(\r\n            paths,\r\n            StringPrototypeSlice(from, 0, last) + '/node_modules'\r\n          );\r\n        last = i;\r\n        p = 0;\r\n      } else if (p !== -1) {\r\n        if (nmChars[p] === code) {\r\n          ++p;\r\n        } else {\r\n          p = -1;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Append /node_modules to handle root paths.\r\n    ArrayPrototypePush(paths, '/node_modules');\r\n\r\n    return paths;\r\n  };\r\n}\r\n\r\nModule._resolveLookupPaths = function(request, parent) {\r\n  if ((\r\n    StringPrototypeStartsWith(request, 'node:') &&\r\n    BuiltinModule.canBeRequiredByUsers(StringPrototypeSlice(request, 5))\r\n  ) || (\r\n    BuiltinModule.canBeRequiredByUsers(request) &&\r\n    BuiltinModule.canBeRequiredWithoutScheme(request)\r\n  )) {\r\n    debug('looking for %j in []', request);\r\n    return null;\r\n  }\r\n\r\n  // Check for node modules paths.\r\n  if (StringPrototypeCharAt(request, 0) !== '.' ||\r\n      (request.length > 1 &&\r\n      StringPrototypeCharAt(request, 1) !== '.' &&\r\n      StringPrototypeCharAt(request, 1) !== '/' &&\r\n      (!isWindows || StringPrototypeCharAt(request, 1) !== '\\\\'))) {\r\n\r\n    let paths;\r\n    if (parent?.paths?.length) {\r\n      paths = ArrayPrototypeSlice(modulePaths);\r\n      ArrayPrototypeUnshiftApply(paths, parent.paths);\r\n    } else {\r\n      paths = modulePaths;\r\n    }\r\n\r\n    debug('looking for %j in %j', request, paths);\r\n    return paths.length > 0 ? paths : null;\r\n  }\r\n\r\n  // In REPL, parent.filename is null.\r\n  if (!parent || !parent.id || !parent.filename) {\r\n    // Make require('./path/to/foo') work - normally the path is taken\r\n    // from realpath(__filename) but in REPL there is no filename\r\n    const mainPaths = ['.'];\r\n\r\n    debug('looking for %j in %j', request, mainPaths);\r\n    return mainPaths;\r\n  }\r\n\r\n  debug('RELATIVE: requested: %s from parent.id %s', request, parent.id);\r\n\r\n  const parentDir = [path.dirname(parent.filename)];\r\n  debug('looking for %j', parentDir);\r\n  return parentDir;\r\n};\r\n\r\nfunction emitCircularRequireWarning(prop) {\r\n  process.emitWarning(\r\n    `Accessing non-existent property '${String(prop)}' of module exports ` +\r\n    'inside circular dependency'\r\n  );\r\n}\r\n\r\n// A Proxy that can be used as the prototype of a module.exports object and\r\n// warns when non-existent properties are accessed.\r\nconst CircularRequirePrototypeWarningProxy = new Proxy({}, {\r\n  __proto__: null,\r\n\r\n  get(target, prop) {\r\n    // Allow __esModule access in any case because it is used in the output\r\n    // of transpiled code to determine whether something comes from an\r\n    // ES module, and is not used as a regular key of `module.exports`.\r\n    if (prop in target || prop === '__esModule') return target[prop];\r\n    emitCircularRequireWarning(prop);\r\n    return undefined;\r\n  },\r\n\r\n  getOwnPropertyDescriptor(target, prop) {\r\n    if (ObjectPrototypeHasOwnProperty(target, prop) || prop === '__esModule')\r\n      return ObjectGetOwnPropertyDescriptor(target, prop);\r\n    emitCircularRequireWarning(prop);\r\n    return undefined;\r\n  }\r\n});\r\n\r\nfunction getExportsForCircularRequire(module) {\r\n  if (module.exports &&\r\n      !isProxy(module.exports) &&\r\n      ObjectGetPrototypeOf(module.exports) === ObjectPrototype &&\r\n      // Exclude transpiled ES6 modules / TypeScript code because those may\r\n      // employ unusual patterns for accessing 'module.exports'. That should\r\n      // be okay because ES6 modules have a different approach to circular\r\n      // dependencies anyway.\r\n      !module.exports.__esModule) {\r\n    // This is later unset once the module is done loading.\r\n    ObjectSetPrototypeOf(\r\n      module.exports, CircularRequirePrototypeWarningProxy);\r\n  }\r\n\r\n  return module.exports;\r\n}\r\n\r\n// Check the cache for the requested file.\r\n// 1. If a module already exists in the cache: return its exports object.\r\n// 2. If the module is native: call\r\n//    `BuiltinModule.prototype.compileForPublicLoader()` and return the exports.\r\n// 3. Otherwise, create a new module for the file and save it to the cache.\r\n//    Then have it load  the file contents before returning its exports\r\n//    object.\r\nModule._load = function(request, parent, isMain) {\r\n  let relResolveCacheIdentifier;\r\n  if (parent) {\r\n    debug('Module._load REQUEST %s parent: %s', request, parent.id);\r\n    // Fast path for (lazy loaded) modules in the same directory. The indirect\r\n    // caching is required to allow cache invalidation without changing the old\r\n    // cache key names.\r\n    relResolveCacheIdentifier = `${parent.path}\\x00${request}`;\r\n    const filename = relativeResolveCache[relResolveCacheIdentifier];\r\n    reportModuleToWatchMode(filename);\r\n    if (filename !== undefined) {\r\n      const cachedModule = Module._cache[filename];\r\n      if (cachedModule !== undefined) {\r\n        updateChildren(parent, cachedModule, true);\r\n        if (!cachedModule.loaded)\r\n          return getExportsForCircularRequire(cachedModule);\r\n        return cachedModule.exports;\r\n      }\r\n      delete relativeResolveCache[relResolveCacheIdentifier];\r\n    }\r\n  }\r\n\r\n  if (StringPrototypeStartsWith(request, 'node:')) {\r\n    // Slice 'node:' prefix\r\n    const id = StringPrototypeSlice(request, 5);\r\n\r\n    const module = loadBuiltinModule(id, request);\r\n    if (!module?.canBeRequiredByUsers) {\r\n      throw new ERR_UNKNOWN_BUILTIN_MODULE(request);\r\n    }\r\n\r\n    return module.exports;\r\n  }\r\n\r\n  const filename = Module._resolveFilename(request, parent, isMain);\r\n  const cachedModule = Module._cache[filename];\r\n  if (cachedModule !== undefined) {\r\n    updateChildren(parent, cachedModule, true);\r\n    if (!cachedModule.loaded) {\r\n      const parseCachedModule = cjsParseCache.get(cachedModule);\r\n      if (!parseCachedModule || parseCachedModule.loaded)\r\n        return getExportsForCircularRequire(cachedModule);\r\n      parseCachedModule.loaded = true;\r\n    } else {\r\n      return cachedModule.exports;\r\n    }\r\n  }\r\n\r\n  const mod = loadBuiltinModule(filename, request);\r\n  if (mod?.canBeRequiredByUsers &&\r\n      BuiltinModule.canBeRequiredWithoutScheme(filename)) {\r\n    return mod.exports;\r\n  }\r\n\r\n  // Don't call updateChildren(), Module constructor already does.\r\n  const module = cachedModule || new Module(filename, parent);\r\n\r\n  if (isMain) {\r\n    process.mainModule = module;\r\n    setOwnProperty(module.require, 'main', process.mainModule);\r\n    module.id = '.';\r\n  }\r\n\r\n  reportModuleToWatchMode(filename);\r\n\r\n  Module._cache[filename] = module;\r\n  if (parent !== undefined) {\r\n    relativeResolveCache[relResolveCacheIdentifier] = filename;\r\n  }\r\n\r\n  let threw = true;\r\n  try {\r\n    module.load(filename);\r\n    threw = false;\r\n  } finally {\r\n    if (threw) {\r\n      delete Module._cache[filename];\r\n      if (parent !== undefined) {\r\n        delete relativeResolveCache[relResolveCacheIdentifier];\r\n        const children = parent?.children;\r\n        if (ArrayIsArray(children)) {\r\n          const index = ArrayPrototypeIndexOf(children, module);\r\n          if (index !== -1) {\r\n            ArrayPrototypeSplice(children, index, 1);\r\n          }\r\n        }\r\n      }\r\n    } else if (module.exports &&\r\n               !isProxy(module.exports) &&\r\n               ObjectGetPrototypeOf(module.exports) ===\r\n                 CircularRequirePrototypeWarningProxy) {\r\n      ObjectSetPrototypeOf(module.exports, ObjectPrototype);\r\n    }\r\n  }\r\n\r\n  return module.exports;\r\n};\r\n\r\nModule._resolveFilename = function(request, parent, isMain, options) {\r\n  if (\r\n    (\r\n      StringPrototypeStartsWith(request, 'node:') &&\r\n      BuiltinModule.canBeRequiredByUsers(StringPrototypeSlice(request, 5))\r\n    ) || (\r\n      BuiltinModule.canBeRequiredByUsers(request) &&\r\n      BuiltinModule.canBeRequiredWithoutScheme(request)\r\n    )\r\n  ) {\r\n    return request;\r\n  }\r\n\r\n  let paths;\r\n\r\n  if (typeof options === 'object' && options !== null) {\r\n    if (ArrayIsArray(options.paths)) {\r\n      const isRelative = StringPrototypeStartsWith(request, './') ||\r\n          StringPrototypeStartsWith(request, '../') ||\r\n          ((isWindows && StringPrototypeStartsWith(request, '.\\\\')) ||\r\n          StringPrototypeStartsWith(request, '..\\\\'));\r\n\r\n      if (isRelative) {\r\n        paths = options.paths;\r\n      } else {\r\n        const fakeParent = new Module('', null);\r\n\r\n        paths = [];\r\n\r\n        for (let i = 0; i < options.paths.length; i++) {\r\n          const path = options.paths[i];\r\n          fakeParent.paths = Module._nodeModulePaths(path);\r\n          const lookupPaths = Module._resolveLookupPaths(request, fakeParent);\r\n\r\n          for (let j = 0; j < lookupPaths.length; j++) {\r\n            if (!ArrayPrototypeIncludes(paths, lookupPaths[j]))\r\n              ArrayPrototypePush(paths, lookupPaths[j]);\r\n          }\r\n        }\r\n      }\r\n    } else if (options.paths === undefined) {\r\n      paths = Module._resolveLookupPaths(request, parent);\r\n    } else {\r\n      throw new ERR_INVALID_ARG_VALUE('options.paths', options.paths);\r\n    }\r\n  } else {\r\n    paths = Module._resolveLookupPaths(request, parent);\r\n  }\r\n\r\n  if (request[0] === '#' && (parent?.filename || parent?.id === '<repl>')) {\r\n    const parentPath = parent?.filename ?? process.cwd() + path.sep;\r\n    const pkg = readPackageScope(parentPath) || {};\r\n    if (pkg.data?.imports != null) {\r\n      try {\r\n        return finalizeEsmResolution(\r\n          packageImportsResolve(request, pathToFileURL(parentPath),\r\n                                cjsConditions), parentPath,\r\n          pkg.path);\r\n      } catch (e) {\r\n        if (e.code === 'ERR_MODULE_NOT_FOUND')\r\n          throw createEsmNotFoundErr(request);\r\n        throw e;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Try module self resolution first\r\n  const parentPath = trySelfParentPath(parent);\r\n  const selfResolved = trySelf(parentPath, request);\r\n  if (selfResolved) {\r\n    const cacheKey = request + '\\x00' +\r\n         (paths.length === 1 ? paths[0] : ArrayPrototypeJoin(paths, '\\x00'));\r\n    Module._pathCache[cacheKey] = selfResolved;\r\n    return selfResolved;\r\n  }\r\n\r\n  // Look up the filename first, since that's the cache key.\r\n  const filename = Module._findPath(request, paths, isMain, false);\r\n  if (filename) return filename;\r\n  const requireStack = [];\r\n  for (let cursor = parent;\r\n    cursor;\r\n    cursor = moduleParentCache.get(cursor)) {\r\n    ArrayPrototypePush(requireStack, cursor.filename || cursor.id);\r\n  }\r\n  let message = `Cannot find module '${request}'`;\r\n  if (requireStack.length > 0) {\r\n    message = message + '\\nRequire stack:\\n- ' +\r\n              ArrayPrototypeJoin(requireStack, '\\n- ');\r\n  }\r\n  // eslint-disable-next-line no-restricted-syntax\r\n  const err = new Error(message);\r\n  err.code = 'MODULE_NOT_FOUND';\r\n  err.requireStack = requireStack;\r\n  throw err;\r\n};\r\n\r\nfunction finalizeEsmResolution(resolved, parentPath, pkgPath) {\r\n  if (RegExpPrototypeExec(encodedSepRegEx, resolved) !== null)\r\n    throw new ERR_INVALID_MODULE_SPECIFIER(\r\n      resolved, 'must not include encoded \"/\" or \"\\\\\" characters', parentPath);\r\n  const filename = fileURLToPath(resolved);\r\n  const actual = tryFile(filename);\r\n  if (actual)\r\n    return actual;\r\n  const err = createEsmNotFoundErr(filename,\r\n                                   path.resolve(pkgPath, 'package.json'));\r\n  throw err;\r\n}\r\n\r\nfunction createEsmNotFoundErr(request, path) {\r\n  // eslint-disable-next-line no-restricted-syntax\r\n  const err = new Error(`Cannot find module '${request}'`);\r\n  err.code = 'MODULE_NOT_FOUND';\r\n  if (path)\r\n    err.path = path;\r\n  // TODO(BridgeAR): Add the requireStack as well.\r\n  return err;\r\n}\r\n\r\n// Given a file name, pass it to the proper extension handler.\r\nModule.prototype.load = function(filename) {\r\n  debug('load %j for module %j', filename, this.id);\r\n\r\n  assert(!this.loaded);\r\n  this.filename = filename;\r\n  this.paths = Module._nodeModulePaths(path.dirname(filename));\r\n\r\n  const extension = findLongestRegisteredExtension(filename);\r\n  // allow .mjs to be overridden\r\n  if (StringPrototypeEndsWith(filename, '.mjs') && !Module._extensions['.mjs'])\r\n    throw new ERR_REQUIRE_ESM(filename, true);\r\n\r\n  Module._extensions[extension](this, filename);\r\n  this.loaded = true;\r\n\r\n  const esmLoader = asyncESM.esmLoader;\r\n  // Create module entry at load time to snapshot exports correctly\r\n  const exports = this.exports;\r\n  // Preemptively cache\r\n  if ((module?.module === undefined ||\r\n       module.module.getStatus() < kEvaluated) &&\r\n      !esmLoader.cjsCache.has(this))\r\n    esmLoader.cjsCache.set(this, exports);\r\n};\r\n\r\n// Loads a module at the given file path. Returns that module's\r\n// `exports` property.\r\n// Note: when using the experimental policy mechanism this function is overridden\r\nModule.prototype.require = function(id) {\r\n  validateString(id, 'id');\r\n  if (id === '') {\r\n    throw new ERR_INVALID_ARG_VALUE('id', id,\r\n                                    'must be a non-empty string');\r\n  }\r\n  requireDepth++;\r\n  try {\r\n    return Module._load(id, this, /* isMain */ false);\r\n  } finally {\r\n    requireDepth--;\r\n  }\r\n};\r\n\r\n// Resolved path to process.argv[1] will be lazily placed here\r\n// (needed for setting breakpoint when called with --inspect-brk)\r\nlet resolvedArgv;\r\nlet hasPausedEntry = false;\r\n\r\nfunction wrapSafe(filename, content, cjsModuleInstance) {\r\n  if (patched) {\r\n    const wrapper = Module.wrap(content);\r\n    const script = new Script(wrapper, {\r\n      filename,\r\n      lineOffset: 0,\r\n      importModuleDynamically: async (specifier, _, importAssertions) => {\r\n        const loader = asyncESM.esmLoader;\r\n        return loader.import(specifier, normalizeReferrerURL(filename),\r\n                             importAssertions);\r\n      },\r\n    });\r\n\r\n    // Cache the source map for the module if present.\r\n    if (script.sourceMapURL) {\r\n      maybeCacheSourceMap(filename, content, this, false, undefined, script.sourceMapURL);\r\n    }\r\n\r\n    return script.runInThisContext({\r\n      displayErrors: true,\r\n    });\r\n  }\r\n\r\n  try {\r\n    const result = internalCompileFunction(content, [\r\n      'exports',\r\n      'require',\r\n      'module',\r\n      '__filename',\r\n      '__dirname',\r\n    ], {\r\n      filename,\r\n      importModuleDynamically(specifier, _, importAssertions) {\r\n        const loader = asyncESM.esmLoader;\r\n        return loader.import(specifier, normalizeReferrerURL(filename),\r\n                             importAssertions);\r\n      },\r\n    });\r\n\r\n    // Cache the source map for the module if present.\r\n    if (result.sourceMapURL) {\r\n      maybeCacheSourceMap(filename, content, this, false, undefined, result.sourceMapURL);\r\n    }\r\n\r\n    return result.function;\r\n  } catch (err) {\r\n    if (process.mainModule === cjsModuleInstance)\r\n      enrichCJSError(err, content);\r\n    throw err;\r\n  }\r\n}\r\n\r\n// Run the file contents in the correct scope or sandbox. Expose\r\n// the correct helper variables (require, module, exports) to\r\n// the file.\r\n// Returns exception, if any.\r\nModule.prototype._compile = function(content, filename) {\r\n  let moduleURL;\r\n  let redirects;\r\n  const manifest = policy?.manifest;\r\n  if (manifest) {\r\n    moduleURL = pathToFileURL(filename);\r\n    redirects = manifest.getDependencyMapper(moduleURL);\r\n    manifest.assertIntegrity(moduleURL, content);\r\n  }\r\n\r\n  const compiledWrapper = wrapSafe(filename, content, this);\r\n\r\n  let inspectorWrapper = null;\r\n  if (getOptionValue('--inspect-brk') && process._eval == null) {\r\n    if (!resolvedArgv) {\r\n      // We enter the repl if we're not given a filename argument.\r\n      if (process.argv[1]) {\r\n        try {\r\n          resolvedArgv = Module._resolveFilename(process.argv[1], null, false);\r\n        } catch {\r\n          // We only expect this codepath to be reached in the case of a\r\n          // preloaded module (it will fail earlier with the main entry)\r\n          assert(ArrayIsArray(getOptionValue('--require')));\r\n        }\r\n      } else {\r\n        resolvedArgv = 'repl';\r\n      }\r\n    }\r\n\r\n    // Set breakpoint on module start\r\n    if (resolvedArgv && !hasPausedEntry && filename === resolvedArgv) {\r\n      hasPausedEntry = true;\r\n      inspectorWrapper = internalBinding('inspector').callAndPauseOnStart;\r\n    }\r\n  }\r\n  const dirname = path.dirname(filename);\r\n  const require = makeRequireFunction(this, redirects);\r\n  let result;\r\n  const exports = this.exports;\r\n  const thisValue = exports;\r\n  const module = this;\r\n  if (requireDepth === 0) statCache = new SafeMap();\r\n  if (inspectorWrapper) {\r\n    result = inspectorWrapper(compiledWrapper, thisValue, exports,\r\n                              require, module, filename, dirname);\r\n  } else {\r\n    result = ReflectApply(compiledWrapper, thisValue,\r\n                          [exports, require, module, filename, dirname]);\r\n  }\r\n  hasLoadedAnyUserCJSModule = true;\r\n  if (requireDepth === 0) statCache = null;\r\n  return result;\r\n};\r\n\r\n// Native extension for .js\r\nModule._extensions['.js'] = function(module, filename) {\r\n  // If already analyzed the source, then it will be cached.\r\n  const cached = cjsParseCache.get(module);\r\n  let content;\r\n  if (cached?.source) {\r\n    content = cached.source;\r\n    cached.source = undefined;\r\n  } else {\r\n    content = fs.readFileSync(filename, 'utf8');\r\n  }\r\n  if (StringPrototypeEndsWith(filename, '.js')) {\r\n    const pkg = readPackageScope(filename);\r\n    // Function require shouldn't be used in ES modules.\r\n    if (pkg?.data?.type === 'module') {\r\n      const parent = moduleParentCache.get(module);\r\n      const parentPath = parent?.filename;\r\n      const packageJsonPath = path.resolve(pkg.path, 'package.json');\r\n      const usesEsm = hasEsmSyntax(content);\r\n      const err = new ERR_REQUIRE_ESM(filename, usesEsm, parentPath,\r\n                                      packageJsonPath);\r\n      // Attempt to reconstruct the parent require frame.\r\n      if (Module._cache[parentPath]) {\r\n        let parentSource;\r\n        try {\r\n          parentSource = fs.readFileSync(parentPath, 'utf8');\r\n        } catch {\r\n          // Continue regardless of error.\r\n        }\r\n        if (parentSource) {\r\n          const errLine = StringPrototypeSplit(\r\n            StringPrototypeSlice(err.stack, StringPrototypeIndexOf(\r\n              err.stack, '    at ')), '\\n', 1)[0];\r\n          const { 1: line, 2: col } =\r\n              RegExpPrototypeExec(/(\\d+):(\\d+)\\)/, errLine) || [];\r\n          if (line && col) {\r\n            const srcLine = StringPrototypeSplit(parentSource, '\\n')[line - 1];\r\n            const frame = `${parentPath}:${line}\\n${srcLine}\\n${\r\n              StringPrototypeRepeat(' ', col - 1)}^\\n`;\r\n            setArrowMessage(err, frame);\r\n          }\r\n        }\r\n      }\r\n      throw err;\r\n    }\r\n  }\r\n  module._compile(content, filename);\r\n};\r\n\r\n\r\n// Native extension for .json\r\nModule._extensions['.json'] = function(module, filename) {\r\n  const content = fs.readFileSync(filename, 'utf8');\r\n\r\n  if (policy?.manifest) {\r\n    const moduleURL = pathToFileURL(filename);\r\n    policy.manifest.assertIntegrity(moduleURL, content);\r\n  }\r\n\r\n  try {\r\n    setOwnProperty(module, 'exports', JSONParse(stripBOM(content)));\r\n  } catch (err) {\r\n    err.message = filename + ': ' + err.message;\r\n    throw err;\r\n  }\r\n};\r\n\r\n\r\n// Native extension for .node\r\nModule._extensions['.node'] = function(module, filename) {\r\n  if (policy?.manifest) {\r\n    const content = fs.readFileSync(filename);\r\n    const moduleURL = pathToFileURL(filename);\r\n    policy.manifest.assertIntegrity(moduleURL, content);\r\n  }\r\n  // Be aware this doesn't use `content`\r\n  return process.dlopen(module, path.toNamespacedPath(filename));\r\n};\r\n\r\nfunction createRequireFromPath(filename) {\r\n  // Allow a directory to be passed as the filename\r\n  const trailingSlash =\r\n    StringPrototypeEndsWith(filename, '/') ||\r\n    (isWindows && StringPrototypeEndsWith(filename, '\\\\'));\r\n\r\n  const proxyPath = trailingSlash ?\r\n    path.join(filename, 'noop.js') :\r\n    filename;\r\n\r\n  const m = new Module(proxyPath);\r\n  m.filename = proxyPath;\r\n\r\n  m.paths = Module._nodeModulePaths(m.path);\r\n  return makeRequireFunction(m, null);\r\n}\r\n\r\nconst createRequireError = 'must be a file URL object, file URL string, or ' +\r\n  'absolute path string';\r\n\r\nfunction createRequire(filename) {\r\n  let filepath;\r\n\r\n  if (isURLInstance(filename) ||\r\n      (typeof filename === 'string' && !path.isAbsolute(filename))) {\r\n    try {\r\n      filepath = fileURLToPath(filename);\r\n    } catch {\r\n      throw new ERR_INVALID_ARG_VALUE('filename', filename,\r\n                                      createRequireError);\r\n    }\r\n  } else if (typeof filename !== 'string') {\r\n    throw new ERR_INVALID_ARG_VALUE('filename', filename, createRequireError);\r\n  } else {\r\n    filepath = filename;\r\n  }\r\n  return createRequireFromPath(filepath);\r\n}\r\n\r\nModule.createRequire = createRequire;\r\n\r\nModule._initPaths = function() {\r\n  const homeDir = isWindows ? process.env.USERPROFILE : safeGetenv('HOME');\r\n  const nodePath = isWindows ? process.env.NODE_PATH : safeGetenv('NODE_PATH');\r\n\r\n  // process.execPath is $PREFIX/bin/node except on Windows where it is\r\n  // $PREFIX\\node.exe where $PREFIX is the root of the Node.js installation.\r\n  const prefixDir = isWindows ?\r\n    path.resolve(process.execPath, '..') :\r\n    path.resolve(process.execPath, '..', '..');\r\n\r\n  const paths = [path.resolve(prefixDir, 'lib', 'node')];\r\n\r\n  if (homeDir) {\r\n    ArrayPrototypeUnshift(paths, path.resolve(homeDir, '.node_libraries'));\r\n    ArrayPrototypeUnshift(paths, path.resolve(homeDir, '.node_modules'));\r\n  }\r\n\r\n  if (nodePath) {\r\n    ArrayPrototypeUnshiftApply(paths, ArrayPrototypeFilter(\r\n      StringPrototypeSplit(nodePath, path.delimiter),\r\n      Boolean\r\n    ));\r\n  }\r\n\r\n  modulePaths = paths;\r\n\r\n  // Clone as a shallow copy, for introspection.\r\n  Module.globalPaths = ArrayPrototypeSlice(modulePaths);\r\n};\r\n\r\nModule._preloadModules = function(requests) {\r\n  if (!ArrayIsArray(requests))\r\n    return;\r\n\r\n  isPreloading = true;\r\n\r\n  // Preloaded modules have a dummy parent module which is deemed to exist\r\n  // in the current working directory. This seeds the search path for\r\n  // preloaded modules.\r\n  const parent = new Module('internal/preload', null);\r\n  try {\r\n    parent.paths = Module._nodeModulePaths(process.cwd());\r\n  } catch (e) {\r\n    if (e.code !== 'ENOENT') {\r\n      isPreloading = false;\r\n      throw e;\r\n    }\r\n  }\r\n  for (let n = 0; n < requests.length; n++)\r\n    internalRequire(parent, requests[n]);\r\n  isPreloading = false;\r\n};\r\n\r\nModule.syncBuiltinESMExports = function syncBuiltinESMExports() {\r\n  for (const mod of BuiltinModule.map.values()) {\r\n    if (mod.canBeRequiredByUsers &&\r\n        BuiltinModule.canBeRequiredWithoutScheme(mod.id)) {\r\n      mod.syncExports();\r\n    }\r\n  }\r\n};\r\n\r\nModule.isBuiltin = function isBuiltin(moduleName) {\r\n  return allBuiltins.has(moduleName);\r\n};\r\n\r\n// Backwards compatibility\r\nModule.Module = Module;\r\n",
    "name": "node:internal/modules/esm/loader",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 452,
    "sourcePositions": []
  },
  {
    "url": "node:internal/modules/package_json_reader",
    "source": "'use strict';\r\n\r\nconst { SafeMap } = primordials;\r\nconst { internalModuleReadJSON } = internalBinding('fs');\r\nconst { pathToFileURL } = require('url');\r\nconst { toNamespacedPath } = require('path');\r\n\r\nconst cache = new SafeMap();\r\n\r\nlet manifest;\r\n\r\n/**\r\n *\r\n * @param {string} jsonPath\r\n */\r\nfunction read(jsonPath) {\r\n  if (cache.has(jsonPath)) {\r\n    return cache.get(jsonPath);\r\n  }\r\n\r\n  const { 0: string, 1: containsKeys } = internalModuleReadJSON(\r\n    toNamespacedPath(jsonPath)\r\n  );\r\n  const result = { string, containsKeys };\r\n  const { getOptionValue } = require('internal/options');\r\n  if (string !== undefined) {\r\n    if (manifest === undefined) {\r\n      manifest = getOptionValue('--experimental-policy') ?\r\n        require('internal/process/policy').manifest :\r\n        null;\r\n    }\r\n    if (manifest !== null) {\r\n      const jsonURL = pathToFileURL(jsonPath);\r\n      manifest.assertIntegrity(jsonURL, string);\r\n    }\r\n  }\r\n  cache.set(jsonPath, result);\r\n  return result;\r\n}\r\n\r\nmodule.exports = { read };\r\n",
    "name": "package_json_reader",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 453,
    "sourcePositions": []
  },
  {
    "url": "node:internal/process/esm_loader",
    "source": "'use strict';\r\n\r\nconst {\r\n  ObjectCreate,\r\n} = primordials;\r\n\r\nconst {\r\n  ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING,\r\n} = require('internal/errors').codes;\r\nconst { ESMLoader } = require('internal/modules/esm/loader');\r\nconst {\r\n  hasUncaughtExceptionCaptureCallback,\r\n} = require('internal/process/execution');\r\nconst { pathToFileURL } = require('internal/url');\r\nconst {\r\n  getModuleFromWrap,\r\n} = require('internal/vm/module');\r\n\r\nexports.initializeImportMetaObject = function(wrap, meta) {\r\n  const { callbackMap } = internalBinding('module_wrap');\r\n  if (callbackMap.has(wrap)) {\r\n    const { initializeImportMeta } = callbackMap.get(wrap);\r\n    if (initializeImportMeta !== undefined) {\r\n      initializeImportMeta(meta, getModuleFromWrap(wrap) || wrap);\r\n    }\r\n  }\r\n};\r\n\r\nexports.importModuleDynamicallyCallback =\r\nasync function importModuleDynamicallyCallback(wrap, specifier, assertions) {\r\n  const { callbackMap } = internalBinding('module_wrap');\r\n  if (callbackMap.has(wrap)) {\r\n    const { importModuleDynamically } = callbackMap.get(wrap);\r\n    if (importModuleDynamically !== undefined) {\r\n      return importModuleDynamically(\r\n        specifier, getModuleFromWrap(wrap) || wrap, assertions);\r\n    }\r\n  }\r\n  throw new ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING();\r\n};\r\n\r\nconst esmLoader = new ESMLoader();\r\nexports.esmLoader = esmLoader;\r\n\r\n// Module.runMain() causes loadESM() to re-run (which it should do); however, this should NOT cause\r\n// ESM to be re-initialised; doing so causes duplicate custom loaders to be added to the public\r\n// esmLoader.\r\nlet isESMInitialized = false;\r\n\r\n/**\r\n * Causes side-effects: user-defined loader hooks are added to esmLoader.\r\n * @returns {void}\r\n */\r\nasync function initializeLoader() {\r\n  if (isESMInitialized) { return; }\r\n\r\n  const { getOptionValue } = require('internal/options');\r\n  const customLoaders = getOptionValue('--experimental-loader');\r\n\r\n  if (customLoaders.length === 0) return;\r\n\r\n  let cwd;\r\n  try {\r\n    cwd = process.cwd() + '/';\r\n  } catch {\r\n    cwd = 'file:///';\r\n  }\r\n\r\n  // A separate loader instance is necessary to avoid cross-contamination\r\n  // between internal Node.js and userland. For example, a module with internal\r\n  // state (such as a counter) should be independent.\r\n  const internalEsmLoader = new ESMLoader();\r\n\r\n  // Importation must be handled by internal loader to avoid poluting userland\r\n  const keyedExportsList = await internalEsmLoader.import(\r\n    customLoaders,\r\n    pathToFileURL(cwd).href,\r\n    ObjectCreate(null),\r\n  );\r\n\r\n  // Hooks must then be added to external/public loader\r\n  // (so they're triggered in userland)\r\n  await esmLoader.addCustomLoaders(keyedExportsList);\r\n\r\n  isESMInitialized = true;\r\n}\r\n\r\nexports.loadESM = async function loadESM(callback) {\r\n  try {\r\n    await initializeLoader();\r\n    await callback(esmLoader);\r\n  } catch (err) {\r\n    if (hasUncaughtExceptionCaptureCallback()) {\r\n      process._fatalException(err);\r\n      return;\r\n    }\r\n    internalBinding('errors').triggerUncaughtException(\r\n      err,\r\n      true /* fromPromise */\r\n    );\r\n  }\r\n};\r\n",
    "name": "esm_loader",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 454,
    "sourcePositions": []
  },
  {
    "url": "node:internal/modules/esm/loader",
    "source": "'use strict';\r\n\r\n// This is needed to avoid cycles in esm/resolve <-> cjs/loader\r\nrequire('internal/modules/cjs/loader');\r\n\r\nconst {\r\n  Array,\r\n  ArrayIsArray,\r\n  ArrayPrototypeJoin,\r\n  ArrayPrototypePush,\r\n  FunctionPrototypeCall,\r\n  ObjectAssign,\r\n  ObjectCreate,\r\n  ObjectDefineProperty,\r\n  ObjectSetPrototypeOf,\r\n  RegExpPrototypeExec,\r\n  SafePromiseAllReturnArrayLike,\r\n  SafeWeakMap,\r\n  StringPrototypeSlice,\r\n  StringPrototypeToUpperCase,\r\n  globalThis,\r\n} = primordials;\r\nconst { MessageChannel } = require('internal/worker/io');\r\n\r\nconst {\r\n  ERR_LOADER_CHAIN_INCOMPLETE,\r\n  ERR_INTERNAL_ASSERTION,\r\n  ERR_INVALID_ARG_TYPE,\r\n  ERR_INVALID_ARG_VALUE,\r\n  ERR_INVALID_RETURN_PROPERTY_VALUE,\r\n  ERR_INVALID_RETURN_VALUE,\r\n  ERR_UNKNOWN_MODULE_FORMAT,\r\n} = require('internal/errors').codes;\r\nconst { pathToFileURL, isURLInstance, URL } = require('internal/url');\r\nconst { emitExperimentalWarning } = require('internal/util');\r\nconst {\r\n  isAnyArrayBuffer,\r\n  isArrayBufferView,\r\n} = require('internal/util/types');\r\nconst {\r\n  validateObject,\r\n  validateString,\r\n} = require('internal/validators');\r\nconst ModuleMap = require('internal/modules/esm/module_map');\r\nconst ModuleJob = require('internal/modules/esm/module_job');\r\n\r\nconst {\r\n  defaultResolve,\r\n  DEFAULT_CONDITIONS,\r\n} = require('internal/modules/esm/resolve');\r\nconst {\r\n  initializeImportMeta\r\n} = require('internal/modules/esm/initialize_import_meta');\r\nconst { defaultLoad } = require('internal/modules/esm/load');\r\nconst { translators } = require(\r\n  'internal/modules/esm/translators');\r\nconst { getOptionValue } = require('internal/options');\r\n\r\n/**\r\n * @typedef {object} ExportedHooks\r\n * @property {Function} globalPreload Global preload hook.\r\n * @property {Function} resolve Resolve hook.\r\n * @property {Function} load Load hook.\r\n */\r\n\r\n/**\r\n * @typedef {Record<string, any>} ModuleExports\r\n */\r\n\r\n/**\r\n * @typedef {object} KeyedExports\r\n * @property {ModuleExports} exports The contents of the module.\r\n * @property {URL['href']} url The URL of the module.\r\n */\r\n\r\n/**\r\n * @typedef {object} KeyedHook\r\n * @property {Function} fn The hook function.\r\n * @property {URL['href']} url The URL of the module.\r\n */\r\n\r\n/**\r\n * @typedef {'builtin'|'commonjs'|'json'|'module'|'wasm'} ModuleFormat\r\n */\r\n\r\n/**\r\n * @typedef {ArrayBuffer|TypedArray|string} ModuleSource\r\n */\r\n\r\n// [2] `validate...()`s throw the wrong error\r\n\r\nlet emittedSpecifierResolutionWarning = false;\r\n\r\n/**\r\n * A utility function to iterate through a hook chain, track advancement in the\r\n * chain, and generate and supply the `next<HookName>` argument to the custom\r\n * hook.\r\n * @param {KeyedHook[]} chain The whole hook chain.\r\n * @param {object} meta Properties that change as the current hook advances\r\n * along the chain.\r\n * @param {boolean} meta.chainFinished Whether the end of the chain has been\r\n * reached AND invoked.\r\n * @param {string} meta.hookErrIdentifier A user-facing identifier to help\r\n *  pinpoint where an error occurred. Ex \"file:///foo.mjs 'resolve'\".\r\n * @param {number} meta.hookIndex A non-negative integer tracking the current\r\n * position in the hook chain.\r\n * @param {string} meta.hookName The kind of hook the chain is (ex 'resolve')\r\n * @param {boolean} meta.shortCircuited Whether a hook signaled a short-circuit.\r\n * @param {(hookErrIdentifier, hookArgs) => void} validate A wrapper function\r\n *  containing all validation of a custom loader hook's intermediary output. Any\r\n *  validation within MUST throw.\r\n * @returns {function next<HookName>(...hookArgs)} The next hook in the chain.\r\n */\r\nfunction nextHookFactory(chain, meta, { validateArgs, validateOutput }) {\r\n  // First, prepare the current\r\n  const { hookName } = meta;\r\n  const {\r\n    fn: hook,\r\n    url: hookFilePath,\r\n  } = chain[meta.hookIndex];\r\n\r\n  // ex 'nextResolve'\r\n  const nextHookName = `next${\r\n    StringPrototypeToUpperCase(hookName[0]) +\r\n    StringPrototypeSlice(hookName, 1)\r\n  }`;\r\n\r\n  // When hookIndex is 0, it's reached the default, which does not call next()\r\n  // so feed it a noop that blows up if called, so the problem is obvious.\r\n  const generatedHookIndex = meta.hookIndex;\r\n  let nextNextHook;\r\n  if (meta.hookIndex > 0) {\r\n    // Now, prepare the next: decrement the pointer so the next call to the\r\n    // factory generates the next link in the chain.\r\n    meta.hookIndex--;\r\n\r\n    nextNextHook = nextHookFactory(chain, meta, { validateArgs, validateOutput });\r\n  } else {\r\n    // eslint-disable-next-line func-name-matching\r\n    nextNextHook = function chainAdvancedTooFar() {\r\n      throw new ERR_INTERNAL_ASSERTION(\r\n        `ESM custom loader '${hookName}' advanced beyond the end of the chain.`\r\n      );\r\n    };\r\n  }\r\n\r\n  return ObjectDefineProperty(\r\n    async (arg0 = undefined, context) => {\r\n      // Update only when hook is invoked to avoid fingering the wrong filePath\r\n      meta.hookErrIdentifier = `${hookFilePath} '${hookName}'`;\r\n\r\n      validateArgs(`${meta.hookErrIdentifier} hook's ${nextHookName}()`, arg0, context);\r\n\r\n      const outputErrIdentifier = `${chain[generatedHookIndex].url} '${hookName}' hook's ${nextHookName}()`;\r\n\r\n      // Set when next<HookName> is actually called, not just generated.\r\n      if (generatedHookIndex === 0) { meta.chainFinished = true; }\r\n\r\n      if (context) { // `context` has already been validated, so no fancy check needed.\r\n        ObjectAssign(meta.context, context);\r\n      }\r\n\r\n      const output = await hook(arg0, meta.context, nextNextHook);\r\n\r\n      validateOutput(outputErrIdentifier, output);\r\n\r\n      if (output?.shortCircuit === true) { meta.shortCircuited = true; }\r\n      return output;\r\n\r\n    },\r\n    'name',\r\n    { __proto__: null, value: nextHookName },\r\n  );\r\n}\r\n\r\n/**\r\n * An ESMLoader instance is used as the main entry point for loading ES modules.\r\n * Currently, this is a singleton -- there is only one used for loading\r\n * the main module and everything in its dependency graph.\r\n */\r\nclass ESMLoader {\r\n  #hooks = {\r\n    /**\r\n     * Prior to ESM loading. These are called once before any modules are started.\r\n     * @private\r\n     * @property {KeyedHook[]} globalPreload Last-in-first-out list of preload hooks.\r\n     */\r\n    globalPreload: [],\r\n\r\n    /**\r\n     * Phase 2 of 2 in ESM loading (phase 1 is below).\r\n     * @private\r\n     * @property {KeyedHook[]} load Last-in-first-out collection of loader hooks.\r\n     */\r\n    load: [\r\n      {\r\n        fn: defaultLoad,\r\n        url: 'node:internal/modules/esm/load',\r\n      },\r\n    ],\r\n\r\n    /**\r\n     * Phase 1 of 2 in ESM loading.\r\n     * @private\r\n     * @property {KeyedHook[]} resolve Last-in-first-out collection of resolve hooks.\r\n     */\r\n    resolve: [\r\n      {\r\n        fn: defaultResolve,\r\n        url: 'node:internal/modules/esm/resolve',\r\n      },\r\n    ],\r\n  };\r\n\r\n  #importMetaInitializer = initializeImportMeta;\r\n\r\n  /**\r\n   * Map of already-loaded CJS modules to use\r\n   */\r\n  cjsCache = new SafeWeakMap();\r\n\r\n  /**\r\n   * The index for assigning unique URLs to anonymous module evaluation\r\n   */\r\n  evalIndex = 0;\r\n\r\n  /**\r\n   * Registry of loaded modules, akin to `require.cache`\r\n   */\r\n  moduleMap = new ModuleMap();\r\n\r\n  /**\r\n   * Methods which translate input code or other information into ES modules\r\n   */\r\n  translators = translators;\r\n\r\n  constructor() {\r\n    if (getOptionValue('--experimental-loader').length > 0) {\r\n      emitExperimentalWarning('Custom ESM Loaders');\r\n    }\r\n    if (getOptionValue('--experimental-network-imports')) {\r\n      emitExperimentalWarning('Network Imports');\r\n    }\r\n    if (\r\n      !emittedSpecifierResolutionWarning &&\r\n      getOptionValue('--experimental-specifier-resolution') === 'node'\r\n    ) {\r\n      process.emitWarning(\r\n        'The Node.js specifier resolution flag is experimental. It could change or be removed at any time.',\r\n        'ExperimentalWarning'\r\n      );\r\n      emittedSpecifierResolutionWarning = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {ModuleExports} exports\r\n   * @returns {ExportedHooks}\r\n   */\r\n  static pluckHooks({\r\n    globalPreload,\r\n    resolve,\r\n    load,\r\n    // obsolete hooks:\r\n    dynamicInstantiate,\r\n    getFormat,\r\n    getGlobalPreloadCode,\r\n    getSource,\r\n    transformSource,\r\n  }) {\r\n    const obsoleteHooks = [];\r\n    const acceptedHooks = ObjectCreate(null);\r\n\r\n    if (getGlobalPreloadCode) {\r\n      globalPreload ??= getGlobalPreloadCode;\r\n\r\n      process.emitWarning(\r\n        'Loader hook \"getGlobalPreloadCode\" has been renamed to \"globalPreload\"'\r\n      );\r\n    }\r\n    if (dynamicInstantiate) ArrayPrototypePush(\r\n      obsoleteHooks,\r\n      'dynamicInstantiate'\r\n    );\r\n    if (getFormat) ArrayPrototypePush(\r\n      obsoleteHooks,\r\n      'getFormat',\r\n    );\r\n    if (getSource) ArrayPrototypePush(\r\n      obsoleteHooks,\r\n      'getSource',\r\n    );\r\n    if (transformSource) ArrayPrototypePush(\r\n      obsoleteHooks,\r\n      'transformSource',\r\n    );\r\n\r\n    if (obsoleteHooks.length) process.emitWarning(\r\n      `Obsolete loader hook(s) supplied and will be ignored: ${\r\n        ArrayPrototypeJoin(obsoleteHooks, ', ')\r\n      }`,\r\n      'DeprecationWarning',\r\n    );\r\n\r\n    if (globalPreload) {\r\n      acceptedHooks.globalPreload = globalPreload;\r\n    }\r\n    if (resolve) {\r\n      acceptedHooks.resolve = resolve;\r\n    }\r\n    if (load) {\r\n      acceptedHooks.load = load;\r\n    }\r\n\r\n    return acceptedHooks;\r\n  }\r\n\r\n  /**\r\n   * Collect custom/user-defined hook(s). After all hooks have been collected,\r\n   * calls global preload hook(s).\r\n   * @param {KeyedExports} customLoaders\r\n   *  A list of exports from user-defined loaders (as returned by\r\n   *  ESMLoader.import()).\r\n   */\r\n  addCustomLoaders(\r\n    customLoaders = [],\r\n  ) {\r\n    for (let i = 0; i < customLoaders.length; i++) {\r\n      const {\r\n        exports,\r\n        url,\r\n      } = customLoaders[i];\r\n      const {\r\n        globalPreload,\r\n        resolve,\r\n        load,\r\n      } = ESMLoader.pluckHooks(exports);\r\n\r\n      if (globalPreload) {\r\n        ArrayPrototypePush(\r\n          this.#hooks.globalPreload,\r\n          {\r\n            fn: globalPreload,\r\n            url,\r\n          },\r\n        );\r\n      }\r\n      if (resolve) {\r\n        ArrayPrototypePush(\r\n          this.#hooks.resolve,\r\n          {\r\n            fn: resolve,\r\n            url,\r\n          },\r\n        );\r\n      }\r\n      if (load) {\r\n        ArrayPrototypePush(\r\n          this.#hooks.load,\r\n          {\r\n            fn: load,\r\n            url,\r\n          },\r\n        );\r\n      }\r\n    }\r\n\r\n    this.preload();\r\n  }\r\n\r\n  async eval(\r\n    source,\r\n    url = pathToFileURL(`${process.cwd()}/[eval${++this.evalIndex}]`).href\r\n  ) {\r\n    const evalInstance = (url) => {\r\n      const { ModuleWrap, callbackMap } = internalBinding('module_wrap');\r\n      const module = new ModuleWrap(url, undefined, source, 0, 0);\r\n      callbackMap.set(module, {\r\n        importModuleDynamically: (specifier, { url }, importAssertions) => {\r\n          return this.import(specifier, url, importAssertions);\r\n        }\r\n      });\r\n\r\n      return module;\r\n    };\r\n    const job = new ModuleJob(\r\n      this, url, undefined, evalInstance, false, false);\r\n    this.moduleMap.set(url, undefined, job);\r\n    const { module } = await job.run();\r\n\r\n    return {\r\n      namespace: module.getNamespace(),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Get a (possibly still pending) module job from the cache,\r\n   * or create one and return its Promise.\r\n   * @param {string} specifier The string after `from` in an `import` statement,\r\n   *                           or the first parameter of an `import()`\r\n   *                           expression\r\n   * @param {string | undefined} parentURL The URL of the module importing this\r\n   *                                     one, unless this is the Node.js entry\r\n   *                                     point.\r\n   * @param {Record<string, string>} importAssertions Validations for the\r\n   *                                                  module import.\r\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\r\n   */\r\n  async getModuleJob(specifier, parentURL, importAssertions) {\r\n    let importAssertionsForResolve;\r\n\r\n    // By default, `this.#hooks.load` contains just the Node default load hook\r\n    if (this.#hooks.load.length !== 1) {\r\n      // We can skip cloning if there are no user-provided loaders because\r\n      // the Node.js default resolve hook does not use import assertions.\r\n      importAssertionsForResolve = {\r\n        __proto__: null,\r\n        ...importAssertions,\r\n      };\r\n    }\r\n\r\n    const { format, url } =\r\n      await this.resolve(specifier, parentURL, importAssertionsForResolve);\r\n\r\n    let job = this.moduleMap.get(url, importAssertions.type);\r\n\r\n    // CommonJS will set functions for lazy job evaluation.\r\n    if (typeof job === 'function') {\r\n      this.moduleMap.set(url, undefined, job = job());\r\n    }\r\n\r\n    if (job === undefined) {\r\n      job = this.#createModuleJob(url, importAssertions, parentURL, format);\r\n    }\r\n\r\n    return job;\r\n  }\r\n\r\n  /**\r\n   * Create and cache an object representing a loaded module.\r\n   * @param {string} url The absolute URL that was resolved for this module\r\n   * @param {Record<string, string>} importAssertions Validations for the\r\n   *                                                  module import.\r\n   * @param {string} [parentURL] The absolute URL of the module importing this\r\n   *                             one, unless this is the Node.js entry point\r\n   * @param {string} [format] The format hint possibly returned by the\r\n   *                          `resolve` hook\r\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\r\n   */\r\n  #createModuleJob(url, importAssertions, parentURL, format) {\r\n    const moduleProvider = async (url, isMain) => {\r\n      const {\r\n        format: finalFormat,\r\n        responseURL,\r\n        source,\r\n      } = await this.load(url, {\r\n        format,\r\n        importAssertions,\r\n      });\r\n\r\n      const translator = translators.get(finalFormat);\r\n\r\n      if (!translator) {\r\n        throw new ERR_UNKNOWN_MODULE_FORMAT(finalFormat, responseURL);\r\n      }\r\n\r\n      return FunctionPrototypeCall(translator, this, responseURL, source, isMain);\r\n    };\r\n\r\n    const inspectBrk = (\r\n      parentURL === undefined &&\r\n      getOptionValue('--inspect-brk')\r\n    );\r\n\r\n    if (process.env.WATCH_REPORT_DEPENDENCIES && process.send) {\r\n      process.send({ 'watch:import': [url] });\r\n    }\r\n\r\n    const job = new ModuleJob(\r\n      this,\r\n      url,\r\n      importAssertions,\r\n      moduleProvider,\r\n      parentURL === undefined,\r\n      inspectBrk\r\n    );\r\n\r\n    this.moduleMap.set(url, importAssertions.type, job);\r\n\r\n    return job;\r\n  }\r\n\r\n  /**\r\n   * This method is usually called indirectly as part of the loading processes.\r\n   * Internally, it is used directly to add loaders. Use directly with caution.\r\n   *\r\n   * This method must NOT be renamed: it functions as a dynamic import on a\r\n   * loader module.\r\n   *\r\n   * @param {string | string[]} specifiers Path(s) to the module.\r\n   * @param {string} parentURL Path of the parent importing the module.\r\n   * @param {Record<string, string>} importAssertions Validations for the\r\n   *                                                  module import.\r\n   * @returns {Promise<ExportedHooks | KeyedExports[]>}\r\n   *  A collection of module export(s) or a list of collections of module\r\n   *  export(s).\r\n   */\r\n  async import(specifiers, parentURL, importAssertions) {\r\n    // For loaders, `import` is passed multiple things to process, it returns a\r\n    // list pairing the url and exports collected. This is especially useful for\r\n    // error messaging, to identity from where an export came. But, in most\r\n    // cases, only a single url is being \"imported\" (ex `import()`), so there is\r\n    // only 1 possible url from which the exports were collected and it is\r\n    // already known to the caller. Nesting that in a list would only ever\r\n    // create redundant work for the caller, so it is later popped off the\r\n    // internal list.\r\n    const wasArr = ArrayIsArray(specifiers);\r\n    if (!wasArr) { specifiers = [specifiers]; }\r\n\r\n    const count = specifiers.length;\r\n    const jobs = new Array(count);\r\n\r\n    for (let i = 0; i < count; i++) {\r\n      jobs[i] = this.getModuleJob(specifiers[i], parentURL, importAssertions)\r\n        .then((job) => job.run())\r\n        .then(({ module }) => module.getNamespace());\r\n    }\r\n\r\n    const namespaces = await SafePromiseAllReturnArrayLike(jobs);\r\n\r\n    if (!wasArr) { return namespaces[0]; } // We can skip the pairing below\r\n\r\n    for (let i = 0; i < count; i++) {\r\n      namespaces[i] = {\r\n        __proto__: null,\r\n        url: specifiers[i],\r\n        exports: namespaces[i],\r\n      };\r\n    }\r\n\r\n    return namespaces;\r\n  }\r\n\r\n  /**\r\n   * Provide source that is understood by one of Node's translators.\r\n   *\r\n   * Internally, this behaves like a backwards iterator, wherein the stack of\r\n   * hooks starts at the top and each call to `nextLoad()` moves down 1 step\r\n   * until it reaches the bottom or short-circuits.\r\n   *\r\n   * @param {URL['href']} url The URL/path of the module to be loaded\r\n   * @param {object} context Metadata about the module\r\n   * @returns {{ format: ModuleFormat, source: ModuleSource }}\r\n   */\r\n  async load(url, context = {}) {\r\n    const chain = this.#hooks.load;\r\n    const meta = {\r\n      chainFinished: null,\r\n      context,\r\n      hookErrIdentifier: '',\r\n      hookIndex: chain.length - 1,\r\n      hookName: 'load',\r\n      shortCircuited: false,\r\n    };\r\n\r\n    const validateArgs = (hookErrIdentifier, nextUrl, ctx) => {\r\n      if (typeof nextUrl !== 'string') {\r\n        // non-strings can be coerced to a url string\r\n        // validateString() throws a less-specific error\r\n        throw new ERR_INVALID_ARG_TYPE(\r\n          `${hookErrIdentifier} url`,\r\n          'a url string',\r\n          nextUrl,\r\n        );\r\n      }\r\n\r\n      // Try to avoid expensive URL instantiation for known-good urls\r\n      if (!this.moduleMap.has(nextUrl)) {\r\n        try {\r\n          new URL(nextUrl);\r\n        } catch {\r\n          throw new ERR_INVALID_ARG_VALUE(\r\n            `${hookErrIdentifier} url`,\r\n            nextUrl,\r\n            'should be a url string',\r\n          );\r\n        }\r\n      }\r\n\r\n      if (ctx) validateObject(ctx, `${hookErrIdentifier} context`);\r\n    };\r\n    const validateOutput = (hookErrIdentifier, output) => {\r\n      if (typeof output !== 'object' || output === null) { // [2]\r\n        throw new ERR_INVALID_RETURN_VALUE(\r\n          'an object',\r\n          hookErrIdentifier,\r\n          output,\r\n        );\r\n      }\r\n    };\r\n\r\n    const nextLoad = nextHookFactory(chain, meta, { validateArgs, validateOutput });\r\n\r\n    const loaded = await nextLoad(url, context);\r\n    const { hookErrIdentifier } = meta; // Retrieve the value after all settled\r\n\r\n    validateOutput(hookErrIdentifier, loaded);\r\n\r\n    if (loaded?.shortCircuit === true) { meta.shortCircuited = true; }\r\n\r\n    if (!meta.chainFinished && !meta.shortCircuited) {\r\n      throw new ERR_LOADER_CHAIN_INCOMPLETE(hookErrIdentifier);\r\n    }\r\n\r\n    const {\r\n      format,\r\n      source,\r\n    } = loaded;\r\n    let responseURL = loaded.responseURL;\r\n\r\n    if (responseURL === undefined) {\r\n      responseURL = url;\r\n    }\r\n\r\n    let responseURLObj;\r\n    if (typeof responseURL === 'string') {\r\n      try {\r\n        responseURLObj = new URL(responseURL);\r\n      } catch {\r\n        // responseURLObj not defined will throw in next branch.\r\n      }\r\n    }\r\n\r\n    if (responseURLObj?.href !== responseURL) {\r\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\r\n        'undefined or a fully resolved URL string',\r\n        hookErrIdentifier,\r\n        'responseURL',\r\n        responseURL,\r\n      );\r\n    }\r\n\r\n    if (format == null) {\r\n      const dataUrl = RegExpPrototypeExec(\r\n        /^data:([^/]+\\/[^;,]+)(?:[^,]*?)(;base64)?,/,\r\n        url,\r\n      );\r\n\r\n      throw new ERR_UNKNOWN_MODULE_FORMAT(\r\n        dataUrl ? dataUrl[1] : format,\r\n        url);\r\n    }\r\n\r\n    if (typeof format !== 'string') { // [2]\r\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\r\n        'a string',\r\n        hookErrIdentifier,\r\n        'format',\r\n        format,\r\n      );\r\n    }\r\n\r\n    if (\r\n      source != null &&\r\n      typeof source !== 'string' &&\r\n      !isAnyArrayBuffer(source) &&\r\n      !isArrayBufferView(source)\r\n    ) {\r\n      throw ERR_INVALID_RETURN_PROPERTY_VALUE(\r\n        'a string, an ArrayBuffer, or a TypedArray',\r\n        hookErrIdentifier,\r\n        'source',\r\n        source\r\n      );\r\n    }\r\n\r\n    return {\r\n      __proto__: null,\r\n      format,\r\n      responseURL,\r\n      source,\r\n    };\r\n  }\r\n\r\n  preload() {\r\n    for (let i = this.#hooks.globalPreload.length - 1; i >= 0; i--) {\r\n      const channel = new MessageChannel();\r\n      const {\r\n        port1: insidePreload,\r\n        port2: insideLoader,\r\n      } = channel;\r\n\r\n      insidePreload.unref();\r\n      insideLoader.unref();\r\n\r\n      const {\r\n        fn: preload,\r\n        url: specifier,\r\n      } = this.#hooks.globalPreload[i];\r\n\r\n      const preloaded = preload({\r\n        port: insideLoader,\r\n      });\r\n\r\n      if (preloaded == null) { return; }\r\n\r\n      const hookErrIdentifier = `${specifier} globalPreload`;\r\n\r\n      if (typeof preloaded !== 'string') { // [2]\r\n        throw new ERR_INVALID_RETURN_VALUE(\r\n          'a string',\r\n          hookErrIdentifier,\r\n          preload,\r\n        );\r\n      }\r\n      const { compileFunction } = require('vm');\r\n      const preloadInit = compileFunction(\r\n        preloaded,\r\n        ['getBuiltin', 'port', 'setImportMetaCallback'],\r\n        {\r\n          filename: '<preload>',\r\n        }\r\n      );\r\n      const { BuiltinModule } = require('internal/bootstrap/loaders');\r\n      // We only allow replacing the importMetaInitializer during preload,\r\n      // after preload is finished, we disable the ability to replace it\r\n      //\r\n      // This exposes accidentally setting the initializer too late by\r\n      // throwing an error.\r\n      let finished = false;\r\n      let replacedImportMetaInitializer = false;\r\n      let next = this.#importMetaInitializer;\r\n      try {\r\n        // Calls the compiled preload source text gotten from the hook\r\n        // Since the parameters are named we use positional parameters\r\n        // see compileFunction above to cross reference the names\r\n        FunctionPrototypeCall(\r\n          preloadInit,\r\n          globalThis,\r\n          // Param getBuiltin\r\n          (builtinName) => {\r\n            if (BuiltinModule.canBeRequiredByUsers(builtinName) &&\r\n                BuiltinModule.canBeRequiredWithoutScheme(builtinName)) {\r\n              return require(builtinName);\r\n            }\r\n            throw new ERR_INVALID_ARG_VALUE('builtinName', builtinName);\r\n          },\r\n          // Param port\r\n          insidePreload,\r\n          // Param setImportMetaCallback\r\n          (fn) => {\r\n            if (finished || typeof fn !== 'function') {\r\n              throw new ERR_INVALID_ARG_TYPE('fn', fn);\r\n            }\r\n            replacedImportMetaInitializer = true;\r\n            const parent = next;\r\n            next = (meta, context) => {\r\n              return fn(meta, context, parent);\r\n            };\r\n          });\r\n      } finally {\r\n        finished = true;\r\n        if (replacedImportMetaInitializer) {\r\n          this.#importMetaInitializer = next;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  importMetaInitialize(meta, context) {\r\n    this.#importMetaInitializer(meta, context);\r\n  }\r\n\r\n  /**\r\n   * Resolve the location of the module.\r\n   *\r\n   * Internally, this behaves like a backwards iterator, wherein the stack of\r\n   * hooks starts at the top and each call to `nextResolve()` moves down 1 step\r\n   * until it reaches the bottom or short-circuits.\r\n   *\r\n   * @param {string} originalSpecifier The specified URL path of the module to\r\n   *                                   be resolved.\r\n   * @param {string} [parentURL] The URL path of the module's parent.\r\n   * @param {ImportAssertions} importAssertions Assertions from the import\r\n   *                                              statement or expression.\r\n   * @returns {{ format: string, url: URL['href'] }}\r\n   */\r\n  async resolve(originalSpecifier, parentURL, importAssertions) {\r\n    const isMain = parentURL === undefined;\r\n\r\n    if (\r\n      !isMain &&\r\n      typeof parentURL !== 'string' &&\r\n      !isURLInstance(parentURL)\r\n    ) {\r\n      throw new ERR_INVALID_ARG_TYPE(\r\n        'parentURL',\r\n        ['string', 'URL'],\r\n        parentURL,\r\n      );\r\n    }\r\n    const chain = this.#hooks.resolve;\r\n    const context = {\r\n      conditions: DEFAULT_CONDITIONS,\r\n      importAssertions,\r\n      parentURL,\r\n    };\r\n    const meta = {\r\n      chainFinished: null,\r\n      context,\r\n      hookErrIdentifier: '',\r\n      hookIndex: chain.length - 1,\r\n      hookName: 'resolve',\r\n      shortCircuited: false,\r\n    };\r\n\r\n    const validateArgs = (hookErrIdentifier, suppliedSpecifier, ctx) => {\r\n      validateString(\r\n        suppliedSpecifier,\r\n        `${hookErrIdentifier} specifier`,\r\n      ); // non-strings can be coerced to a url string\r\n\r\n      if (ctx) validateObject(ctx, `${hookErrIdentifier} context`);\r\n    };\r\n    const validateOutput = (hookErrIdentifier, output) => {\r\n      if (typeof output !== 'object' || output === null) { // [2]\r\n        throw new ERR_INVALID_RETURN_VALUE(\r\n          'an object',\r\n          hookErrIdentifier,\r\n          output,\r\n        );\r\n      }\r\n    };\r\n\r\n    const nextResolve = nextHookFactory(chain, meta, { validateArgs, validateOutput });\r\n\r\n    const resolution = await nextResolve(originalSpecifier, context);\r\n    const { hookErrIdentifier } = meta; // Retrieve the value after all settled\r\n\r\n    validateOutput(hookErrIdentifier, resolution);\r\n\r\n    if (resolution?.shortCircuit === true) { meta.shortCircuited = true; }\r\n\r\n    if (!meta.chainFinished && !meta.shortCircuited) {\r\n      throw new ERR_LOADER_CHAIN_INCOMPLETE(hookErrIdentifier);\r\n    }\r\n\r\n    const {\r\n      format,\r\n      url,\r\n    } = resolution;\r\n\r\n    if (\r\n      format != null &&\r\n      typeof format !== 'string' // [2]\r\n    ) {\r\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\r\n        'a string',\r\n        hookErrIdentifier,\r\n        'format',\r\n        format,\r\n      );\r\n    }\r\n\r\n    if (typeof url !== 'string') {\r\n      // non-strings can be coerced to a url string\r\n      // validateString() throws a less-specific error\r\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\r\n        'a url string',\r\n        hookErrIdentifier,\r\n        'url',\r\n        url,\r\n      );\r\n    }\r\n\r\n    // Try to avoid expensive URL instantiation for known-good urls\r\n    if (!this.moduleMap.has(url)) {\r\n      try {\r\n        new URL(url);\r\n      } catch {\r\n        throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\r\n          'a url string',\r\n          hookErrIdentifier,\r\n          'url',\r\n          url,\r\n        );\r\n      }\r\n    }\r\n\r\n    return {\r\n      __proto__: null,\r\n      format,\r\n      url,\r\n    };\r\n  }\r\n}\r\n\r\nObjectSetPrototypeOf(ESMLoader.prototype, null);\r\n\r\nexports.ESMLoader = ESMLoader;\r\n",
    "name": "node:internal/modules/esm/loader",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 455,
    "sourcePositions": []
  },
  {
    "url": "node:internal/modules/esm/module_map",
    "source": "'use strict';\r\n\r\nconst ModuleJob = require('internal/modules/esm/module_job');\r\nconst { kImplicitAssertType } = require('internal/modules/esm/assert');\r\nconst {\r\n  ObjectCreate,\r\n  SafeMap,\r\n} = primordials;\r\nlet debug = require('internal/util/debuglog').debuglog('esm', (fn) => {\r\n  debug = fn;\r\n});\r\nconst { ERR_INVALID_ARG_TYPE } = require('internal/errors').codes;\r\nconst { validateString } = require('internal/validators');\r\n\r\n// Tracks the state of the loader-level module cache\r\nclass ModuleMap extends SafeMap {\r\n  constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\r\n  get(url, type = kImplicitAssertType) {\r\n    validateString(url, 'url');\r\n    validateString(type, 'type');\r\n    return super.get(url)?.[type];\r\n  }\r\n  set(url, type = kImplicitAssertType, job) {\r\n    validateString(url, 'url');\r\n    validateString(type, 'type');\r\n    if (job instanceof ModuleJob !== true &&\r\n        typeof job !== 'function') {\r\n      throw new ERR_INVALID_ARG_TYPE('job', 'ModuleJob', job);\r\n    }\r\n    debug(`Storing ${url} (${\r\n      type === kImplicitAssertType ? 'implicit type' : type\r\n    }) in ModuleMap`);\r\n    const cachedJobsForUrl = super.get(url) ?? ObjectCreate(null);\r\n    cachedJobsForUrl[type] = job;\r\n    return super.set(url, cachedJobsForUrl);\r\n  }\r\n  has(url, type = kImplicitAssertType) {\r\n    validateString(url, 'url');\r\n    validateString(type, 'type');\r\n    return super.get(url)?.[type] !== undefined;\r\n  }\r\n}\r\nmodule.exports = ModuleMap;\r\n",
    "name": "module_map",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 456,
    "sourcePositions": []
  },
  {
    "url": "node:internal/modules/esm/module_job",
    "source": "'use strict';\r\n\r\nconst {\r\n  ArrayPrototypeJoin,\r\n  ArrayPrototypePush,\r\n  ArrayPrototypeSome,\r\n  FunctionPrototype,\r\n  ObjectCreate,\r\n  ObjectSetPrototypeOf,\r\n  PromiseResolve,\r\n  PromisePrototypeThen,\r\n  ReflectApply,\r\n  RegExpPrototypeExec,\r\n  RegExpPrototypeSymbolReplace,\r\n  SafePromiseAllReturnArrayLike,\r\n  SafePromiseAllReturnVoid,\r\n  SafeSet,\r\n  StringPrototypeIncludes,\r\n  StringPrototypeSplit,\r\n  StringPrototypeStartsWith,\r\n} = primordials;\r\n\r\nconst { ModuleWrap } = internalBinding('module_wrap');\r\n\r\nconst { decorateErrorStack } = require('internal/util');\r\nconst {\r\n  getSourceMapsEnabled,\r\n} = require('internal/source_map/source_map_cache');\r\nconst assert = require('internal/assert');\r\nconst resolvedPromise = PromiseResolve();\r\n\r\nconst noop = FunctionPrototype;\r\n\r\nlet hasPausedEntry = false;\r\n\r\nconst CJSGlobalLike = [\r\n  'require',\r\n  'module',\r\n  'exports',\r\n  '__filename',\r\n  '__dirname',\r\n];\r\nconst isCommonJSGlobalLikeNotDefinedError = (errorMessage) =>\r\n  ArrayPrototypeSome(\r\n    CJSGlobalLike,\r\n    (globalLike) => errorMessage === `${globalLike} is not defined`\r\n  );\r\n\r\n/* A ModuleJob tracks the loading of a single Module, and the ModuleJobs of\r\n * its dependencies, over time. */\r\nclass ModuleJob {\r\n  // `loader` is the Loader instance used for loading dependencies.\r\n  // `moduleProvider` is a function\r\n  constructor(loader, url, importAssertions = ObjectCreate(null),\r\n              moduleProvider, isMain, inspectBrk) {\r\n    this.loader = loader;\r\n    this.importAssertions = importAssertions;\r\n    this.isMain = isMain;\r\n    this.inspectBrk = inspectBrk;\r\n\r\n    this.module = undefined;\r\n    // Expose the promise to the ModuleWrap directly for linking below.\r\n    // `this.module` is also filled in below.\r\n    this.modulePromise = ReflectApply(moduleProvider, loader, [url, isMain]);\r\n\r\n    // Wait for the ModuleWrap instance being linked with all dependencies.\r\n    const link = async () => {\r\n      this.module = await this.modulePromise;\r\n      assert(this.module instanceof ModuleWrap);\r\n\r\n      // Explicitly keeping track of dependency jobs is needed in order\r\n      // to flatten out the dependency graph below in `_instantiate()`,\r\n      // so that circular dependencies can't cause a deadlock by two of\r\n      // these `link` callbacks depending on each other.\r\n      const dependencyJobs = [];\r\n      const promises = this.module.link(async (specifier, assertions) => {\r\n        const jobPromise = this.loader.getModuleJob(specifier, url, assertions);\r\n        ArrayPrototypePush(dependencyJobs, jobPromise);\r\n        const job = await jobPromise;\r\n        return job.modulePromise;\r\n      });\r\n\r\n      if (promises !== undefined)\r\n        await SafePromiseAllReturnVoid(promises);\r\n\r\n      return SafePromiseAllReturnArrayLike(dependencyJobs);\r\n    };\r\n    // Promise for the list of all dependencyJobs.\r\n    this.linked = link();\r\n    // This promise is awaited later anyway, so silence\r\n    // 'unhandled rejection' warnings.\r\n    PromisePrototypeThen(this.linked, undefined, noop);\r\n\r\n    // instantiated == deep dependency jobs wrappers are instantiated,\r\n    // and module wrapper is instantiated.\r\n    this.instantiated = undefined;\r\n  }\r\n\r\n  instantiate() {\r\n    if (this.instantiated === undefined) {\r\n      this.instantiated = this._instantiate();\r\n    }\r\n    return this.instantiated;\r\n  }\r\n\r\n  async _instantiate() {\r\n    const jobsInGraph = new SafeSet();\r\n    const addJobsToDependencyGraph = async (moduleJob) => {\r\n      if (jobsInGraph.has(moduleJob)) {\r\n        return;\r\n      }\r\n      jobsInGraph.add(moduleJob);\r\n      const dependencyJobs = await moduleJob.linked;\r\n      return SafePromiseAllReturnVoid(dependencyJobs, addJobsToDependencyGraph);\r\n    };\r\n    await addJobsToDependencyGraph(this);\r\n\r\n    try {\r\n      if (!hasPausedEntry && this.inspectBrk) {\r\n        hasPausedEntry = true;\r\n        const initWrapper = internalBinding('inspector').callAndPauseOnStart;\r\n        initWrapper(this.module.instantiate, this.module);\r\n      } else {\r\n        this.module.instantiate();\r\n      }\r\n    } catch (e) {\r\n      decorateErrorStack(e);\r\n      // TODO(@bcoe): Add source map support to exception that occurs as result\r\n      // of missing named export. This is currently not possible because\r\n      // stack trace originates in module_job, not the file itself. A hidden\r\n      // symbol with filename could be set in node_errors.cc to facilitate this.\r\n      if (!getSourceMapsEnabled() &&\r\n          StringPrototypeIncludes(e.message,\r\n                                  ' does not provide an export named')) {\r\n        const splitStack = StringPrototypeSplit(e.stack, '\\n');\r\n        const parentFileUrl = RegExpPrototypeSymbolReplace(\r\n          /:\\d+$/,\r\n          splitStack[0],\r\n          ''\r\n        );\r\n        const { 1: childSpecifier, 2: name } = RegExpPrototypeExec(\r\n          /module '(.*)' does not provide an export named '(.+)'/,\r\n          e.message);\r\n        const { url: childFileURL } = await this.loader.resolve(\r\n          childSpecifier, parentFileUrl,\r\n        );\r\n        let format;\r\n        try {\r\n          // This might throw for non-CommonJS modules because we aren't passing\r\n          // in the import assertions and some formats require them; but we only\r\n          // care about CommonJS for the purposes of this error message.\r\n          ({ format } =\r\n            await this.loader.load(childFileURL));\r\n        } catch {\r\n          // Continue regardless of error.\r\n        }\r\n\r\n        if (format === 'commonjs') {\r\n          const importStatement = splitStack[1];\r\n          // TODO(@ctavan): The original error stack only provides the single\r\n          // line which causes the error. For multi-line import statements we\r\n          // cannot generate an equivalent object destructuring assignment by\r\n          // just parsing the error stack.\r\n          const oneLineNamedImports = RegExpPrototypeExec(/{.*}/, importStatement);\r\n          const destructuringAssignment = oneLineNamedImports &&\r\n            RegExpPrototypeSymbolReplace(/\\s+as\\s+/g, oneLineNamedImports, ': ');\r\n          e.message = `Named export '${name}' not found. The requested module` +\r\n            ` '${childSpecifier}' is a CommonJS module, which may not support` +\r\n            ' all module.exports as named exports.\\nCommonJS modules can ' +\r\n            'always be imported via the default export, for example using:' +\r\n            `\\n\\nimport pkg from '${childSpecifier}';\\n${\r\n              destructuringAssignment ?\r\n                `const ${destructuringAssignment} = pkg;\\n` : ''}`;\r\n          const newStack = StringPrototypeSplit(e.stack, '\\n');\r\n          newStack[3] = `SyntaxError: ${e.message}`;\r\n          e.stack = ArrayPrototypeJoin(newStack, '\\n');\r\n        }\r\n      }\r\n      throw e;\r\n    }\r\n\r\n    for (const dependencyJob of jobsInGraph) {\r\n      // Calling `this.module.instantiate()` instantiates not only the\r\n      // ModuleWrap in this module, but all modules in the graph.\r\n      dependencyJob.instantiated = resolvedPromise;\r\n    }\r\n  }\r\n\r\n  async run() {\r\n    await this.instantiate();\r\n    const timeout = -1;\r\n    const breakOnSigint = false;\r\n    try {\r\n      await this.module.evaluate(timeout, breakOnSigint);\r\n    } catch (e) {\r\n      if (e?.name === 'ReferenceError' &&\r\n          isCommonJSGlobalLikeNotDefinedError(e.message)) {\r\n        e.message += ' in ES module scope';\r\n\r\n        if (StringPrototypeStartsWith(e.message, 'require ')) {\r\n          e.message += ', you can use import instead';\r\n        }\r\n\r\n        const packageConfig =\r\n          StringPrototypeStartsWith(this.module.url, 'file://') &&\r\n            RegExpPrototypeExec(/\\.js(\\?[^#]*)?(#.*)?$/, this.module.url) !== null &&\r\n            require('internal/modules/esm/resolve')\r\n              .getPackageScopeConfig(this.module.url);\r\n        if (packageConfig.type === 'module') {\r\n          e.message +=\r\n            '\\nThis file is being treated as an ES module because it has a ' +\r\n            `'.js' file extension and '${packageConfig.pjsonPath}' contains ` +\r\n            '\"type\": \"module\". To treat it as a CommonJS script, rename it ' +\r\n            'to use the \\'.cjs\\' file extension.';\r\n        }\r\n      }\r\n      throw e;\r\n    }\r\n    return { __proto__: null, module: this.module };\r\n  }\r\n}\r\nObjectSetPrototypeOf(ModuleJob.prototype, null);\r\nmodule.exports = ModuleJob;\r\n",
    "name": "module_job",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 457,
    "sourcePositions": []
  },
  {
    "url": "node:internal/modules/esm/assert",
    "source": "'use strict';\r\n\r\nconst {\r\n  ArrayPrototypeFilter,\r\n  ArrayPrototypeIncludes,\r\n  ObjectCreate,\r\n  ObjectValues,\r\n  ObjectPrototypeHasOwnProperty,\r\n} = primordials;\r\nconst { validateString } = require('internal/validators');\r\n\r\nconst {\r\n  ERR_IMPORT_ASSERTION_TYPE_FAILED,\r\n  ERR_IMPORT_ASSERTION_TYPE_MISSING,\r\n  ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED,\r\n} = require('internal/errors').codes;\r\n\r\n// The HTML spec has an implied default type of `'javascript'`.\r\nconst kImplicitAssertType = 'javascript';\r\n\r\n/**\r\n * Define a map of module formats to import assertion types (the value of\r\n * `type` in `assert { type: 'json' }`).\r\n * @type {Map<string, string>}\r\n */\r\nconst formatTypeMap = {\r\n  '__proto__': null,\r\n  'builtin': kImplicitAssertType,\r\n  'commonjs': kImplicitAssertType,\r\n  'json': 'json',\r\n  'module': kImplicitAssertType,\r\n  'wasm': kImplicitAssertType, // It's unclear whether the HTML spec will require an assertion type or not for Wasm; see https://github.com/WebAssembly/esm-integration/issues/42\r\n};\r\n\r\n/**\r\n * The HTML spec disallows the default type to be explicitly specified\r\n * (for now); so `import './file.js'` is okay but\r\n * `import './file.js' assert { type: 'javascript' }` throws.\r\n * @type {Array<string, string>}\r\n */\r\nconst supportedAssertionTypes = ArrayPrototypeFilter(\r\n  ObjectValues(formatTypeMap),\r\n  (type) => type !== kImplicitAssertType);\r\n\r\n\r\n/**\r\n * Test a module's import assertions.\r\n * @param {string} url The URL of the imported module, for error reporting.\r\n * @param {string} format One of Node's supported translators\r\n * @param {Record<string, string>} importAssertions Validations for the\r\n *                                                  module import.\r\n * @returns {true}\r\n * @throws {TypeError} If the format and assertion type are incompatible.\r\n */\r\nfunction validateAssertions(url, format,\r\n                            importAssertions = ObjectCreate(null)) {\r\n  const validType = formatTypeMap[format];\r\n\r\n  switch (validType) {\r\n    case undefined:\r\n      // Ignore assertions for module formats we don't recognize, to allow new\r\n      // formats in the future.\r\n      return true;\r\n\r\n    case kImplicitAssertType:\r\n      // This format doesn't allow an import assertion type, so the property\r\n      // must not be set on the import assertions object.\r\n      if (!ObjectPrototypeHasOwnProperty(importAssertions, 'type')) {\r\n        return true;\r\n      }\r\n      return handleInvalidType(url, importAssertions.type);\r\n\r\n    case importAssertions.type:\r\n      // The asserted type is the valid type for this format.\r\n      return true;\r\n\r\n    default:\r\n      // There is an expected type for this format, but the value of\r\n      // `importAssertions.type` might not have been it.\r\n      if (!ObjectPrototypeHasOwnProperty(importAssertions, 'type')) {\r\n        // `type` wasn't specified at all.\r\n        throw new ERR_IMPORT_ASSERTION_TYPE_MISSING(url, validType);\r\n      }\r\n      return handleInvalidType(url, importAssertions.type);\r\n  }\r\n}\r\n\r\n/**\r\n * Throw the correct error depending on what's wrong with the type assertion.\r\n * @param {string} url The resolved URL for the module to be imported\r\n * @param {string} type The value of the import assertion `type` property\r\n */\r\nfunction handleInvalidType(url, type) {\r\n  // `type` might have not been a string.\r\n  validateString(type, 'type');\r\n\r\n  // `type` might not have been one of the types we understand.\r\n  if (!ArrayPrototypeIncludes(supportedAssertionTypes, type)) {\r\n    throw new ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED(type);\r\n  }\r\n\r\n  // `type` was the wrong value for this format.\r\n  throw new ERR_IMPORT_ASSERTION_TYPE_FAILED(url, type);\r\n}\r\n\r\n\r\nmodule.exports = {\r\n  kImplicitAssertType,\r\n  validateAssertions,\r\n};\r\n",
    "name": "node:internal/modules/esm/assert",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 458,
    "sourcePositions": []
  },
  {
    "url": "node:internal/modules/esm/resolve",
    "source": "'use strict';\r\n\r\nconst {\r\n  ArrayIsArray,\r\n  ArrayPrototypeJoin,\r\n  ArrayPrototypePush,\r\n  ArrayPrototypeShift,\r\n  JSONParse,\r\n  JSONStringify,\r\n  ObjectFreeze,\r\n  ObjectGetOwnPropertyNames,\r\n  ObjectPrototypeHasOwnProperty,\r\n  RegExp,\r\n  RegExpPrototypeExec,\r\n  RegExpPrototypeSymbolReplace,\r\n  SafeMap,\r\n  SafeSet,\r\n  String,\r\n  StringPrototypeEndsWith,\r\n  StringPrototypeIncludes,\r\n  StringPrototypeIndexOf,\r\n  StringPrototypeLastIndexOf,\r\n  StringPrototypeReplace,\r\n  StringPrototypeSlice,\r\n  StringPrototypeSplit,\r\n  StringPrototypeStartsWith,\r\n} = primordials;\r\nconst internalFS = require('internal/fs/utils');\r\nconst { BuiltinModule } = require('internal/bootstrap/loaders');\r\nconst {\r\n  realpathSync,\r\n  statSync,\r\n  Stats,\r\n} = require('fs');\r\nconst { getOptionValue } = require('internal/options');\r\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\r\n// Do not eagerly grab .manifest, it may be in TDZ\r\nconst policy = getOptionValue('--experimental-policy') ?\r\n  require('internal/process/policy') :\r\n  null;\r\nconst { sep, relative, resolve } = require('path');\r\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\r\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\r\nconst experimentalNetworkImports =\r\n  getOptionValue('--experimental-network-imports');\r\nconst typeFlag = getOptionValue('--input-type');\r\nconst { URL, pathToFileURL, fileURLToPath } = require('internal/url');\r\nconst {\r\n  ERR_INPUT_TYPE_NOT_ALLOWED,\r\n  ERR_INVALID_ARG_VALUE,\r\n  ERR_INVALID_MODULE_SPECIFIER,\r\n  ERR_INVALID_PACKAGE_CONFIG,\r\n  ERR_INVALID_PACKAGE_TARGET,\r\n  ERR_MANIFEST_DEPENDENCY_MISSING,\r\n  ERR_MODULE_NOT_FOUND,\r\n  ERR_PACKAGE_IMPORT_NOT_DEFINED,\r\n  ERR_PACKAGE_PATH_NOT_EXPORTED,\r\n  ERR_UNSUPPORTED_DIR_IMPORT,\r\n  ERR_NETWORK_IMPORT_DISALLOWED,\r\n  ERR_UNSUPPORTED_ESM_URL_SCHEME,\r\n} = require('internal/errors').codes;\r\n\r\nconst { Module: CJSModule } = require('internal/modules/cjs/loader');\r\nconst packageJsonReader = require('internal/modules/package_json_reader');\r\nconst { getPackageConfig, getPackageScopeConfig } = require('internal/modules/esm/package_config');\r\n\r\n/**\r\n * @typedef {import('internal/modules/esm/package_config.js').PackageConfig} PackageConfig\r\n */\r\n\r\n\r\nconst userConditions = getOptionValue('--conditions');\r\nconst noAddons = getOptionValue('--no-addons');\r\nconst addonConditions = noAddons ? [] : ['node-addons'];\r\n\r\nconst DEFAULT_CONDITIONS = ObjectFreeze([\r\n  'node',\r\n  'import',\r\n  ...addonConditions,\r\n  ...userConditions,\r\n]);\r\n\r\nconst DEFAULT_CONDITIONS_SET = new SafeSet(DEFAULT_CONDITIONS);\r\n\r\nconst emittedPackageWarnings = new SafeSet();\r\n\r\nfunction emitTrailingSlashPatternDeprecation(match, pjsonUrl, base) {\r\n  const pjsonPath = fileURLToPath(pjsonUrl);\r\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match))\r\n    return;\r\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\r\n  process.emitWarning(\r\n    `Use of deprecated trailing slash pattern mapping \"${match}\" in the ` +\r\n    `\"exports\" field module resolution of the package at ${pjsonPath}${\r\n      base ? ` imported from ${fileURLToPath(base)}` :\r\n        ''}. Mapping specifiers ending in \"/\" is no longer supported.`,\r\n    'DeprecationWarning',\r\n    'DEP0155'\r\n  );\r\n}\r\n\r\nconst doubleSlashRegEx = /[/\\\\][/\\\\]/;\r\n\r\nfunction emitInvalidSegmentDeprecation(target, request, match, pjsonUrl, internal, base, isTarget) {\r\n  if (!pendingDeprecation) { return; }\r\n  const pjsonPath = fileURLToPath(pjsonUrl);\r\n  const double = RegExpPrototypeExec(doubleSlashRegEx, isTarget ? target : request) !== null;\r\n  process.emitWarning(\r\n    `Use of deprecated ${double ? 'double slash' :\r\n      'leading or trailing slash matching'} resolving \"${target}\" for module ` +\r\n      `request \"${request}\" ${request !== match ? `matched to \"${match}\" ` : ''\r\n      }in the \"${internal ? 'imports' : 'exports'}\" field module resolution of the package at ${\r\n        pjsonPath}${base ? ` imported from ${fileURLToPath(base)}` : ''}.`,\r\n    'DeprecationWarning',\r\n    'DEP0166'\r\n  );\r\n}\r\n\r\n/**\r\n * @param {URL} url\r\n * @param {URL} packageJSONUrl\r\n * @param {string | URL | undefined} base\r\n * @param {string} main\r\n * @returns {void}\r\n */\r\nfunction emitLegacyIndexDeprecation(url, packageJSONUrl, base, main) {\r\n  const format = defaultGetFormatWithoutErrors(url);\r\n  if (format !== 'module')\r\n    return;\r\n  const path = fileURLToPath(url);\r\n  const pkgPath = fileURLToPath(new URL('.', packageJSONUrl));\r\n  const basePath = fileURLToPath(base);\r\n  if (main)\r\n    process.emitWarning(\r\n      `Package ${pkgPath} has a \"main\" field set to ${JSONStringify(main)}, ` +\r\n      `excluding the full filename and extension to the resolved file at \"${\r\n        StringPrototypeSlice(path, pkgPath.length)}\", imported from ${\r\n        basePath}.\\n Automatic extension resolution of the \"main\" field is ` +\r\n      'deprecated for ES modules.',\r\n      'DeprecationWarning',\r\n      'DEP0151'\r\n    );\r\n  else\r\n    process.emitWarning(\r\n      `No \"main\" or \"exports\" field defined in the package.json for ${pkgPath\r\n      } resolving the main entry point \"${\r\n        StringPrototypeSlice(path, pkgPath.length)}\", imported from ${basePath\r\n      }.\\nDefault \"index\" lookups for the main are deprecated for ES modules.`,\r\n      'DeprecationWarning',\r\n      'DEP0151'\r\n    );\r\n}\r\n\r\n/**\r\n * @param {string[]} [conditions]\r\n * @returns {Set<string>}\r\n */\r\nfunction getConditionsSet(conditions) {\r\n  if (conditions !== undefined && conditions !== DEFAULT_CONDITIONS) {\r\n    if (!ArrayIsArray(conditions)) {\r\n      throw new ERR_INVALID_ARG_VALUE('conditions', conditions,\r\n                                      'expected an array');\r\n    }\r\n    return new SafeSet(conditions);\r\n  }\r\n  return DEFAULT_CONDITIONS_SET;\r\n}\r\n\r\nconst realpathCache = new SafeMap();\r\n\r\n/**\r\n * @param {string | URL} path\r\n * @returns {import('fs').Stats}\r\n */\r\nconst tryStatSync =\r\n  (path) => statSync(path, { throwIfNoEntry: false }) ?? new Stats();\r\n\r\n/**\r\n * @param {string | URL} url\r\n * @returns {boolean}\r\n */\r\nfunction fileExists(url) {\r\n  return statSync(url, { throwIfNoEntry: false })?.isFile() ?? false;\r\n}\r\n\r\n/**\r\n * Legacy CommonJS main resolution:\r\n * 1. let M = pkg_url + (json main field)\r\n * 2. TRY(M, M.js, M.json, M.node)\r\n * 3. TRY(M/index.js, M/index.json, M/index.node)\r\n * 4. TRY(pkg_url/index.js, pkg_url/index.json, pkg_url/index.node)\r\n * 5. NOT_FOUND\r\n * @param {URL} packageJSONUrl\r\n * @param {PackageConfig} packageConfig\r\n * @param {string | URL | undefined} base\r\n * @returns {URL}\r\n */\r\nfunction legacyMainResolve(packageJSONUrl, packageConfig, base) {\r\n  let guess;\r\n  if (packageConfig.main !== undefined) {\r\n    // Note: fs check redundances will be handled by Descriptor cache here.\r\n    if (fileExists(guess = new URL(`./${packageConfig.main}`,\r\n                                   packageJSONUrl))) {\r\n      return guess;\r\n    } else if (fileExists(guess = new URL(`./${packageConfig.main}.js`,\r\n                                          packageJSONUrl)));\r\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.json`,\r\n                                        packageJSONUrl)));\r\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.node`,\r\n                                        packageJSONUrl)));\r\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.js`,\r\n                                        packageJSONUrl)));\r\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.json`,\r\n                                        packageJSONUrl)));\r\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.node`,\r\n                                        packageJSONUrl)));\r\n    else guess = undefined;\r\n    if (guess) {\r\n      emitLegacyIndexDeprecation(guess, packageJSONUrl, base,\r\n                                 packageConfig.main);\r\n      return guess;\r\n    }\r\n    // Fallthrough.\r\n  }\r\n  if (fileExists(guess = new URL('./index.js', packageJSONUrl)));\r\n  // So fs.\r\n  else if (fileExists(guess = new URL('./index.json', packageJSONUrl)));\r\n  else if (fileExists(guess = new URL('./index.node', packageJSONUrl)));\r\n  else guess = undefined;\r\n  if (guess) {\r\n    emitLegacyIndexDeprecation(guess, packageJSONUrl, base, packageConfig.main);\r\n    return guess;\r\n  }\r\n  // Not found.\r\n  throw new ERR_MODULE_NOT_FOUND(\r\n    fileURLToPath(new URL('.', packageJSONUrl)), fileURLToPath(base));\r\n}\r\n\r\n/**\r\n * @param {URL} search\r\n * @returns {URL | undefined}\r\n */\r\nfunction resolveExtensionsWithTryExactName(search) {\r\n  if (fileExists(search)) return search;\r\n  return resolveExtensions(search);\r\n}\r\n\r\nconst extensions = ['.js', '.json', '.node', '.mjs'];\r\n\r\n/**\r\n * @param {URL} search\r\n * @returns {URL | undefined}\r\n */\r\nfunction resolveExtensions(search) {\r\n  for (let i = 0; i < extensions.length; i++) {\r\n    const extension = extensions[i];\r\n    const guess = new URL(`${search.pathname}${extension}`, search);\r\n    if (fileExists(guess)) return guess;\r\n  }\r\n  return undefined;\r\n}\r\n\r\n/**\r\n * @param {URL} search\r\n * @returns {URL | undefined}\r\n */\r\nfunction resolveDirectoryEntry(search) {\r\n  const dirPath = fileURLToPath(search);\r\n  const pkgJsonPath = resolve(dirPath, 'package.json');\r\n  if (fileExists(pkgJsonPath)) {\r\n    const pkgJson = packageJsonReader.read(pkgJsonPath);\r\n    if (pkgJson.containsKeys) {\r\n      const { main } = JSONParse(pkgJson.string);\r\n      if (main != null) {\r\n        const mainUrl = pathToFileURL(resolve(dirPath, main));\r\n        return resolveExtensionsWithTryExactName(mainUrl);\r\n      }\r\n    }\r\n  }\r\n  return resolveExtensions(new URL('index', search));\r\n}\r\n\r\nconst encodedSepRegEx = /%2F|%5C/i;\r\n/**\r\n * @param {URL} resolved\r\n * @param {string | URL | undefined} base\r\n * @param {boolean} preserveSymlinks\r\n * @returns {URL | undefined}\r\n */\r\nfunction finalizeResolution(resolved, base, preserveSymlinks) {\r\n  if (RegExpPrototypeExec(encodedSepRegEx, resolved.pathname) !== null)\r\n    throw new ERR_INVALID_MODULE_SPECIFIER(\r\n      resolved.pathname, 'must not include encoded \"/\" or \"\\\\\" characters',\r\n      fileURLToPath(base));\r\n\r\n  let path = fileURLToPath(resolved);\r\n  if (getOptionValue('--experimental-specifier-resolution') === 'node') {\r\n    let file = resolveExtensionsWithTryExactName(resolved);\r\n\r\n    // Directory\r\n    if (file === undefined) {\r\n      file = StringPrototypeEndsWith(path, '/') ?\r\n        (resolveDirectoryEntry(resolved) || resolved) : resolveDirectoryEntry(new URL(`${resolved}/`));\r\n\r\n      if (file === resolved) return file;\r\n\r\n      if (file === undefined) {\r\n        throw new ERR_MODULE_NOT_FOUND(\r\n          resolved.pathname, fileURLToPath(base), 'module');\r\n      }\r\n    }\r\n\r\n    path = file;\r\n  }\r\n\r\n  const stats = tryStatSync(StringPrototypeEndsWith(path, '/') ?\r\n    StringPrototypeSlice(path, -1) : path);\r\n  if (stats.isDirectory()) {\r\n    const err = new ERR_UNSUPPORTED_DIR_IMPORT(path, fileURLToPath(base));\r\n    err.url = String(resolved);\r\n    throw err;\r\n  } else if (!stats.isFile()) {\r\n    if (process.env.WATCH_REPORT_DEPENDENCIES && process.send) {\r\n      process.send({ 'watch:require': [path || resolved.pathname] });\r\n    }\r\n    throw new ERR_MODULE_NOT_FOUND(\r\n      path || resolved.pathname, base && fileURLToPath(base), 'module');\r\n  }\r\n\r\n  if (!preserveSymlinks) {\r\n    const real = realpathSync(path, {\r\n      [internalFS.realpathCacheKey]: realpathCache\r\n    });\r\n    const { search, hash } = resolved;\r\n    resolved =\r\n        pathToFileURL(real + (StringPrototypeEndsWith(path, sep) ? '/' : ''));\r\n    resolved.search = search;\r\n    resolved.hash = hash;\r\n  }\r\n\r\n  return resolved;\r\n}\r\n\r\n/**\r\n * @param {string} specifier\r\n * @param {URL} packageJSONUrl\r\n * @param {string | URL | undefined} base\r\n */\r\nfunction importNotDefined(specifier, packageJSONUrl, base) {\r\n  return new ERR_PACKAGE_IMPORT_NOT_DEFINED(\r\n    specifier, packageJSONUrl && fileURLToPath(new URL('.', packageJSONUrl)),\r\n    fileURLToPath(base));\r\n}\r\n\r\n/**\r\n * @param {string} subpath\r\n * @param {URL} packageJSONUrl\r\n * @param {string | URL | undefined} base\r\n */\r\nfunction exportsNotFound(subpath, packageJSONUrl, base) {\r\n  return new ERR_PACKAGE_PATH_NOT_EXPORTED(\r\n    fileURLToPath(new URL('.', packageJSONUrl)), subpath,\r\n    base && fileURLToPath(base));\r\n}\r\n\r\n/**\r\n *\r\n * @param {string} request\r\n * @param {string} match\r\n * @param {URL} packageJSONUrl\r\n * @param {boolean} internal\r\n * @param {string | URL | undefined} base\r\n */\r\nfunction throwInvalidSubpath(request, match, packageJSONUrl, internal, base) {\r\n  const reason = `request is not a valid match in pattern \"${match}\" for the \"${\r\n    internal ? 'imports' : 'exports'}\" resolution of ${\r\n    fileURLToPath(packageJSONUrl)}`;\r\n  throw new ERR_INVALID_MODULE_SPECIFIER(request, reason,\r\n                                         base && fileURLToPath(base));\r\n}\r\n\r\nfunction invalidPackageTarget(\r\n  subpath, target, packageJSONUrl, internal, base) {\r\n  if (typeof target === 'object' && target !== null) {\r\n    target = JSONStringify(target, null, '');\r\n  } else {\r\n    target = `${target}`;\r\n  }\r\n  return new ERR_INVALID_PACKAGE_TARGET(\r\n    fileURLToPath(new URL('.', packageJSONUrl)), subpath, target,\r\n    internal, base && fileURLToPath(base));\r\n}\r\n\r\nconst invalidSegmentRegEx = /(^|\\\\|\\/)((\\.|%2e)(\\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))?(\\\\|\\/|$)/i;\r\nconst deprecatedInvalidSegmentRegEx = /(^|\\\\|\\/)((\\.|%2e)(\\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))(\\\\|\\/|$)/i;\r\nconst invalidPackageNameRegEx = /^\\.|%|\\\\/;\r\nconst patternRegEx = /\\*/g;\r\n\r\n/**\r\n *\r\n * @param {string} target\r\n * @param {*} subpath\r\n * @param {*} match\r\n * @param {*} packageJSONUrl\r\n * @param {*} base\r\n * @param {*} pattern\r\n * @param {*} internal\r\n * @param {*} isPathMap\r\n * @param {*} conditions\r\n * @returns {URL}\r\n */\r\nfunction resolvePackageTargetString(\r\n  target,\r\n  subpath,\r\n  match,\r\n  packageJSONUrl,\r\n  base,\r\n  pattern,\r\n  internal,\r\n  isPathMap,\r\n  conditions,\r\n) {\r\n\r\n  if (subpath !== '' && !pattern && target[target.length - 1] !== '/')\r\n    throw invalidPackageTarget(match, target, packageJSONUrl, internal, base);\r\n\r\n  if (!StringPrototypeStartsWith(target, './')) {\r\n    if (internal && !StringPrototypeStartsWith(target, '../') &&\r\n        !StringPrototypeStartsWith(target, '/')) {\r\n      let isURL = false;\r\n      try {\r\n        new URL(target);\r\n        isURL = true;\r\n      } catch {\r\n        // Continue regardless of error.\r\n      }\r\n      if (!isURL) {\r\n        const exportTarget = pattern ?\r\n          RegExpPrototypeSymbolReplace(patternRegEx, target, () => subpath) :\r\n          target + subpath;\r\n        return packageResolve(\r\n          exportTarget, packageJSONUrl, conditions);\r\n      }\r\n    }\r\n    throw invalidPackageTarget(match, target, packageJSONUrl, internal, base);\r\n  }\r\n\r\n  if (RegExpPrototypeExec(invalidSegmentRegEx, StringPrototypeSlice(target, 2)) !== null) {\r\n    if (RegExpPrototypeExec(deprecatedInvalidSegmentRegEx, StringPrototypeSlice(target, 2)) === null) {\r\n      if (!isPathMap) {\r\n        const request = pattern ?\r\n          StringPrototypeReplace(match, '*', () => subpath) :\r\n          match + subpath;\r\n        const resolvedTarget = pattern ?\r\n          RegExpPrototypeSymbolReplace(patternRegEx, target, () => subpath) :\r\n          target;\r\n        emitInvalidSegmentDeprecation(resolvedTarget, request, match, packageJSONUrl, internal, base, true);\r\n      }\r\n    } else {\r\n      throw invalidPackageTarget(match, target, packageJSONUrl, internal, base);\r\n    }\r\n  }\r\n\r\n  const resolved = new URL(target, packageJSONUrl);\r\n  const resolvedPath = resolved.pathname;\r\n  const packagePath = new URL('.', packageJSONUrl).pathname;\r\n\r\n  if (!StringPrototypeStartsWith(resolvedPath, packagePath))\r\n    throw invalidPackageTarget(match, target, packageJSONUrl, internal, base);\r\n\r\n  if (subpath === '') return resolved;\r\n\r\n  if (RegExpPrototypeExec(invalidSegmentRegEx, subpath) !== null) {\r\n    const request = pattern ? StringPrototypeReplace(match, '*', () => subpath) : match + subpath;\r\n    if (RegExpPrototypeExec(deprecatedInvalidSegmentRegEx, subpath) === null) {\r\n      if (!isPathMap) {\r\n        const resolvedTarget = pattern ?\r\n          RegExpPrototypeSymbolReplace(patternRegEx, target, () => subpath) :\r\n          target;\r\n        emitInvalidSegmentDeprecation(resolvedTarget, request, match, packageJSONUrl, internal, base, false);\r\n      }\r\n    } else {\r\n      throwInvalidSubpath(request, match, packageJSONUrl, internal, base);\r\n    }\r\n  }\r\n\r\n  if (pattern) {\r\n    return new URL(\r\n      RegExpPrototypeSymbolReplace(patternRegEx, resolved.href, () => subpath)\r\n    );\r\n  }\r\n\r\n  return new URL(subpath, resolved);\r\n}\r\n\r\n/**\r\n * @param {string} key\r\n * @returns {boolean}\r\n */\r\nfunction isArrayIndex(key) {\r\n  const keyNum = +key;\r\n  if (`${keyNum}` !== key) return false;\r\n  return keyNum >= 0 && keyNum < 0xFFFF_FFFF;\r\n}\r\n\r\n/**\r\n *\r\n * @param {*} packageJSONUrl\r\n * @param {string|[string]} target\r\n * @param {*} subpath\r\n * @param {*} packageSubpath\r\n * @param {*} base\r\n * @param {*} pattern\r\n * @param {*} internal\r\n * @param {*} isPathMap\r\n * @param {*} conditions\r\n * @returns {URL|null}\r\n */\r\nfunction resolvePackageTarget(packageJSONUrl, target, subpath, packageSubpath,\r\n                              base, pattern, internal, isPathMap, conditions) {\r\n  if (typeof target === 'string') {\r\n    return resolvePackageTargetString(\r\n      target, subpath, packageSubpath, packageJSONUrl, base, pattern, internal,\r\n      isPathMap, conditions);\r\n  } else if (ArrayIsArray(target)) {\r\n    if (target.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    let lastException;\r\n    for (let i = 0; i < target.length; i++) {\r\n      const targetItem = target[i];\r\n      let resolveResult;\r\n      try {\r\n        resolveResult = resolvePackageTarget(\r\n          packageJSONUrl, targetItem, subpath, packageSubpath, base, pattern,\r\n          internal, isPathMap, conditions);\r\n      } catch (e) {\r\n        lastException = e;\r\n        if (e.code === 'ERR_INVALID_PACKAGE_TARGET') {\r\n          continue;\r\n        }\r\n        throw e;\r\n      }\r\n      if (resolveResult === undefined) {\r\n        continue;\r\n      }\r\n      if (resolveResult === null) {\r\n        lastException = null;\r\n        continue;\r\n      }\r\n      return resolveResult;\r\n    }\r\n    if (lastException === undefined || lastException === null)\r\n      return lastException;\r\n    throw lastException;\r\n  } else if (typeof target === 'object' && target !== null) {\r\n    const keys = ObjectGetOwnPropertyNames(target);\r\n    for (let i = 0; i < keys.length; i++) {\r\n      const key = keys[i];\r\n      if (isArrayIndex(key)) {\r\n        throw new ERR_INVALID_PACKAGE_CONFIG(\r\n          fileURLToPath(packageJSONUrl), base,\r\n          '\"exports\" cannot contain numeric property keys.');\r\n      }\r\n    }\r\n    for (let i = 0; i < keys.length; i++) {\r\n      const key = keys[i];\r\n      if (key === 'default' || conditions.has(key)) {\r\n        const conditionalTarget = target[key];\r\n        const resolveResult = resolvePackageTarget(\r\n          packageJSONUrl, conditionalTarget, subpath, packageSubpath, base,\r\n          pattern, internal, isPathMap, conditions);\r\n        if (resolveResult === undefined)\r\n          continue;\r\n        return resolveResult;\r\n      }\r\n    }\r\n    return undefined;\r\n  } else if (target === null) {\r\n    return null;\r\n  }\r\n  throw invalidPackageTarget(packageSubpath, target, packageJSONUrl, internal,\r\n                             base);\r\n}\r\n\r\n/**\r\n *\r\n * @param {import('internal/modules/esm/package_config.js').Exports} exports\r\n * @param {URL} packageJSONUrl\r\n * @param {string | URL | undefined} base\r\n * @returns {boolean}\r\n */\r\nfunction isConditionalExportsMainSugar(exports, packageJSONUrl, base) {\r\n  if (typeof exports === 'string' || ArrayIsArray(exports)) return true;\r\n  if (typeof exports !== 'object' || exports === null) return false;\r\n\r\n  const keys = ObjectGetOwnPropertyNames(exports);\r\n  let isConditionalSugar = false;\r\n  let i = 0;\r\n  for (let j = 0; j < keys.length; j++) {\r\n    const key = keys[j];\r\n    const curIsConditionalSugar = key === '' || key[0] !== '.';\r\n    if (i++ === 0) {\r\n      isConditionalSugar = curIsConditionalSugar;\r\n    } else if (isConditionalSugar !== curIsConditionalSugar) {\r\n      throw new ERR_INVALID_PACKAGE_CONFIG(\r\n        fileURLToPath(packageJSONUrl), base,\r\n        '\"exports\" cannot contain some keys starting with \\'.\\' and some not.' +\r\n        ' The exports object must either be an object of package subpath keys' +\r\n        ' or an object of main entry condition name keys only.');\r\n    }\r\n  }\r\n  return isConditionalSugar;\r\n}\r\n\r\n/**\r\n * @param {URL} packageJSONUrl\r\n * @param {string} packageSubpath\r\n * @param {PackageConfig} packageConfig\r\n * @param {string | URL | undefined} base\r\n * @param {Set<string>} conditions\r\n * @returns {URL}\r\n */\r\nfunction packageExportsResolve(\r\n  packageJSONUrl, packageSubpath, packageConfig, base, conditions) {\r\n  let exports = packageConfig.exports;\r\n  if (isConditionalExportsMainSugar(exports, packageJSONUrl, base))\r\n    exports = { '.': exports };\r\n\r\n  if (ObjectPrototypeHasOwnProperty(exports, packageSubpath) &&\r\n      !StringPrototypeIncludes(packageSubpath, '*') &&\r\n      !StringPrototypeEndsWith(packageSubpath, '/')) {\r\n    const target = exports[packageSubpath];\r\n    const resolveResult = resolvePackageTarget(\r\n      packageJSONUrl, target, '', packageSubpath, base, false, false, false,\r\n      conditions\r\n    );\r\n\r\n    if (resolveResult == null) {\r\n      throw exportsNotFound(packageSubpath, packageJSONUrl, base);\r\n    }\r\n\r\n    return resolveResult;\r\n  }\r\n\r\n  let bestMatch = '';\r\n  let bestMatchSubpath;\r\n  const keys = ObjectGetOwnPropertyNames(exports);\r\n  for (let i = 0; i < keys.length; i++) {\r\n    const key = keys[i];\r\n    const patternIndex = StringPrototypeIndexOf(key, '*');\r\n    if (patternIndex !== -1 &&\r\n        StringPrototypeStartsWith(packageSubpath,\r\n                                  StringPrototypeSlice(key, 0, patternIndex))) {\r\n      // When this reaches EOL, this can throw at the top of the whole function:\r\n      //\r\n      // if (StringPrototypeEndsWith(packageSubpath, '/'))\r\n      //   throwInvalidSubpath(packageSubpath)\r\n      //\r\n      // To match \"imports\" and the spec.\r\n      if (StringPrototypeEndsWith(packageSubpath, '/'))\r\n        emitTrailingSlashPatternDeprecation(packageSubpath, packageJSONUrl,\r\n                                            base);\r\n      const patternTrailer = StringPrototypeSlice(key, patternIndex + 1);\r\n      if (packageSubpath.length >= key.length &&\r\n          StringPrototypeEndsWith(packageSubpath, patternTrailer) &&\r\n          patternKeyCompare(bestMatch, key) === 1 &&\r\n          StringPrototypeLastIndexOf(key, '*') === patternIndex) {\r\n        bestMatch = key;\r\n        bestMatchSubpath = StringPrototypeSlice(\r\n          packageSubpath, patternIndex,\r\n          packageSubpath.length - patternTrailer.length);\r\n      }\r\n    }\r\n  }\r\n\r\n  if (bestMatch) {\r\n    const target = exports[bestMatch];\r\n    const resolveResult = resolvePackageTarget(\r\n      packageJSONUrl,\r\n      target,\r\n      bestMatchSubpath,\r\n      bestMatch,\r\n      base,\r\n      true,\r\n      false,\r\n      StringPrototypeEndsWith(packageSubpath, '/'),\r\n      conditions);\r\n\r\n    if (resolveResult == null) {\r\n      throw exportsNotFound(packageSubpath, packageJSONUrl, base);\r\n    }\r\n    return resolveResult;\r\n  }\r\n\r\n  throw exportsNotFound(packageSubpath, packageJSONUrl, base);\r\n}\r\n\r\nfunction patternKeyCompare(a, b) {\r\n  const aPatternIndex = StringPrototypeIndexOf(a, '*');\r\n  const bPatternIndex = StringPrototypeIndexOf(b, '*');\r\n  const baseLenA = aPatternIndex === -1 ? a.length : aPatternIndex + 1;\r\n  const baseLenB = bPatternIndex === -1 ? b.length : bPatternIndex + 1;\r\n  if (baseLenA > baseLenB) return -1;\r\n  if (baseLenB > baseLenA) return 1;\r\n  if (aPatternIndex === -1) return 1;\r\n  if (bPatternIndex === -1) return -1;\r\n  if (a.length > b.length) return -1;\r\n  if (b.length > a.length) return 1;\r\n  return 0;\r\n}\r\n\r\n/**\r\n * @param {string} name\r\n * @param {string | URL | undefined} base\r\n * @param {Set<string>} conditions\r\n * @returns {URL}\r\n */\r\nfunction packageImportsResolve(name, base, conditions) {\r\n  if (name === '#' || StringPrototypeStartsWith(name, '#/') ||\r\n      StringPrototypeEndsWith(name, '/')) {\r\n    const reason = 'is not a valid internal imports specifier name';\r\n    throw new ERR_INVALID_MODULE_SPECIFIER(name, reason, fileURLToPath(base));\r\n  }\r\n  let packageJSONUrl;\r\n  const packageConfig = getPackageScopeConfig(base);\r\n  if (packageConfig.exists) {\r\n    packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\r\n    const imports = packageConfig.imports;\r\n    if (imports) {\r\n      if (ObjectPrototypeHasOwnProperty(imports, name) &&\r\n          !StringPrototypeIncludes(name, '*')) {\r\n        const resolveResult = resolvePackageTarget(\r\n          packageJSONUrl, imports[name], '', name, base, false, true, false,\r\n          conditions\r\n        );\r\n        if (resolveResult != null) {\r\n          return resolveResult;\r\n        }\r\n      } else {\r\n        let bestMatch = '';\r\n        let bestMatchSubpath;\r\n        const keys = ObjectGetOwnPropertyNames(imports);\r\n        for (let i = 0; i < keys.length; i++) {\r\n          const key = keys[i];\r\n          const patternIndex = StringPrototypeIndexOf(key, '*');\r\n          if (patternIndex !== -1 &&\r\n              StringPrototypeStartsWith(name,\r\n                                        StringPrototypeSlice(key, 0,\r\n                                                             patternIndex))) {\r\n            const patternTrailer = StringPrototypeSlice(key, patternIndex + 1);\r\n            if (name.length >= key.length &&\r\n                StringPrototypeEndsWith(name, patternTrailer) &&\r\n                patternKeyCompare(bestMatch, key) === 1 &&\r\n                StringPrototypeLastIndexOf(key, '*') === patternIndex) {\r\n              bestMatch = key;\r\n              bestMatchSubpath = StringPrototypeSlice(\r\n                name, patternIndex, name.length - patternTrailer.length);\r\n            }\r\n          }\r\n        }\r\n\r\n        if (bestMatch) {\r\n          const target = imports[bestMatch];\r\n          const resolveResult = resolvePackageTarget(packageJSONUrl, target,\r\n                                                     bestMatchSubpath,\r\n                                                     bestMatch, base, true,\r\n                                                     true, false, conditions);\r\n          if (resolveResult != null) {\r\n            return resolveResult;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  throw importNotDefined(name, packageJSONUrl, base);\r\n}\r\n\r\n/**\r\n * @param {URL} url\r\n * @returns {import('internal/modules/esm/package_config.js').PackageType}\r\n */\r\nfunction getPackageType(url) {\r\n  const packageConfig = getPackageScopeConfig(url);\r\n  return packageConfig.type;\r\n}\r\n\r\n/**\r\n * @param {string} specifier\r\n * @param {string | URL | undefined} base\r\n * @returns {{ packageName: string, packageSubpath: string, isScoped: boolean }}\r\n */\r\nfunction parsePackageName(specifier, base) {\r\n  let separatorIndex = StringPrototypeIndexOf(specifier, '/');\r\n  let validPackageName = true;\r\n  let isScoped = false;\r\n  if (specifier[0] === '@') {\r\n    isScoped = true;\r\n    if (separatorIndex === -1 || specifier.length === 0) {\r\n      validPackageName = false;\r\n    } else {\r\n      separatorIndex = StringPrototypeIndexOf(\r\n        specifier, '/', separatorIndex + 1);\r\n    }\r\n  }\r\n\r\n  const packageName = separatorIndex === -1 ?\r\n    specifier : StringPrototypeSlice(specifier, 0, separatorIndex);\r\n\r\n  // Package name cannot have leading . and cannot have percent-encoding or\r\n  // \\\\ separators.\r\n  if (RegExpPrototypeExec(invalidPackageNameRegEx, packageName) !== null)\r\n    validPackageName = false;\r\n\r\n  if (!validPackageName) {\r\n    throw new ERR_INVALID_MODULE_SPECIFIER(\r\n      specifier, 'is not a valid package name', fileURLToPath(base));\r\n  }\r\n\r\n  const packageSubpath = '.' + (separatorIndex === -1 ? '' :\r\n    StringPrototypeSlice(specifier, separatorIndex));\r\n\r\n  return { packageName, packageSubpath, isScoped };\r\n}\r\n\r\n/**\r\n * @param {string} specifier\r\n * @param {string | URL | undefined} base\r\n * @param {Set<string>} conditions\r\n * @returns {resolved: URL, format? : string}\r\n */\r\nfunction packageResolve(specifier, base, conditions) {\r\n  if (BuiltinModule.canBeRequiredByUsers(specifier) &&\r\n      BuiltinModule.canBeRequiredWithoutScheme(specifier)) {\r\n    return new URL('node:' + specifier);\r\n  }\r\n\r\n  const { packageName, packageSubpath, isScoped } =\r\n    parsePackageName(specifier, base);\r\n\r\n  // ResolveSelf\r\n  const packageConfig = getPackageScopeConfig(base);\r\n  if (packageConfig.exists) {\r\n    const packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\r\n    if (packageConfig.name === packageName &&\r\n        packageConfig.exports !== undefined && packageConfig.exports !== null) {\r\n      return packageExportsResolve(\r\n        packageJSONUrl, packageSubpath, packageConfig, base, conditions);\r\n    }\r\n  }\r\n\r\n  let packageJSONUrl =\r\n    new URL('./node_modules/' + packageName + '/package.json', base);\r\n  let packageJSONPath = fileURLToPath(packageJSONUrl);\r\n  let lastPath;\r\n  do {\r\n    const stat = tryStatSync(StringPrototypeSlice(packageJSONPath, 0,\r\n                                                  packageJSONPath.length - 13));\r\n    if (!stat.isDirectory()) {\r\n      lastPath = packageJSONPath;\r\n      packageJSONUrl = new URL((isScoped ?\r\n        '../../../../node_modules/' : '../../../node_modules/') +\r\n        packageName + '/package.json', packageJSONUrl);\r\n      packageJSONPath = fileURLToPath(packageJSONUrl);\r\n      continue;\r\n    }\r\n\r\n    // Package match.\r\n    const packageConfig = getPackageConfig(packageJSONPath, specifier, base);\r\n    if (packageConfig.exports !== undefined && packageConfig.exports !== null) {\r\n      return packageExportsResolve(\r\n        packageJSONUrl, packageSubpath, packageConfig, base, conditions);\r\n    }\r\n    if (packageSubpath === '.') {\r\n      return legacyMainResolve(\r\n        packageJSONUrl,\r\n        packageConfig,\r\n        base\r\n      );\r\n    }\r\n\r\n    return new URL(packageSubpath, packageJSONUrl);\r\n    // Cross-platform root check.\r\n  } while (packageJSONPath.length !== lastPath.length);\r\n\r\n  // eslint can't handle the above code.\r\n  // eslint-disable-next-line no-unreachable\r\n  throw new ERR_MODULE_NOT_FOUND(packageName, fileURLToPath(base));\r\n}\r\n\r\n/**\r\n * @param {string} specifier\r\n * @returns {boolean}\r\n */\r\nfunction isBareSpecifier(specifier) {\r\n  return specifier[0] && specifier[0] !== '/' && specifier[0] !== '.';\r\n}\r\n\r\nfunction isRelativeSpecifier(specifier) {\r\n  if (specifier[0] === '.') {\r\n    if (specifier.length === 1 || specifier[1] === '/') return true;\r\n    if (specifier[1] === '.') {\r\n      if (specifier.length === 2 || specifier[2] === '/') return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction shouldBeTreatedAsRelativeOrAbsolutePath(specifier) {\r\n  if (specifier === '') return false;\r\n  if (specifier[0] === '/') return true;\r\n  return isRelativeSpecifier(specifier);\r\n}\r\n\r\n/**\r\n * @param {string} specifier\r\n * @param {string | URL | undefined} base\r\n * @param {Set<string>} conditions\r\n * @param {boolean} preserveSymlinks\r\n * @returns {url: URL, format?: string}\r\n */\r\nfunction moduleResolve(specifier, base, conditions, preserveSymlinks) {\r\n  const isRemote = base.protocol === 'http:' ||\r\n    base.protocol === 'https:';\r\n  // Order swapped from spec for minor perf gain.\r\n  // Ok since relative URLs cannot parse as URLs.\r\n  let resolved;\r\n  if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\r\n    resolved = new URL(specifier, base);\r\n  } else if (!isRemote && specifier[0] === '#') {\r\n    resolved = packageImportsResolve(specifier, base, conditions);\r\n  } else {\r\n    try {\r\n      resolved = new URL(specifier);\r\n    } catch {\r\n      if (!isRemote) {\r\n        resolved = packageResolve(specifier, base, conditions);\r\n      }\r\n    }\r\n  }\r\n  if (resolved.protocol !== 'file:') {\r\n    return resolved;\r\n  }\r\n  return finalizeResolution(resolved, base, preserveSymlinks);\r\n}\r\n\r\n/**\r\n * Try to resolve an import as a CommonJS module\r\n * @param {string} specifier\r\n * @param {string} parentURL\r\n * @returns {boolean|string}\r\n */\r\nfunction resolveAsCommonJS(specifier, parentURL) {\r\n  try {\r\n    const parent = fileURLToPath(parentURL);\r\n    const tmpModule = new CJSModule(parent, null);\r\n    tmpModule.paths = CJSModule._nodeModulePaths(parent);\r\n\r\n    let found = CJSModule._resolveFilename(specifier, tmpModule, false);\r\n\r\n    // If it is a relative specifier return the relative path\r\n    // to the parent\r\n    if (isRelativeSpecifier(specifier)) {\r\n      found = relative(parent, found);\r\n      // Add '.separator if the path does not start with '..separator'\r\n      // This should be a safe assumption because when loading\r\n      // esm modules there should be always a file specified so\r\n      // there should not be a specifier like '..' or '.'\r\n      if (!StringPrototypeStartsWith(found, `..${sep}`)) {\r\n        found = `.${sep}${found}`;\r\n      }\r\n    } else if (isBareSpecifier(specifier)) {\r\n      // If it is a bare specifier return the relative path within the\r\n      // module\r\n      const pkg = StringPrototypeSplit(specifier, '/')[0];\r\n      const index = StringPrototypeIndexOf(found, pkg);\r\n      if (index !== -1) {\r\n        found = StringPrototypeSlice(found, index);\r\n      }\r\n    }\r\n    // Normalize the path separator to give a valid suggestion\r\n    // on Windows\r\n    if (process.platform === 'win32') {\r\n      found = RegExpPrototypeSymbolReplace(new RegExp(`\\\\${sep}`, 'g'),\r\n                                           found, '/');\r\n    }\r\n    return found;\r\n  } catch {\r\n    return false;\r\n  }\r\n}\r\n\r\n// TODO(@JakobJingleheimer): de-dupe `specifier` & `parsed`\r\nfunction checkIfDisallowedImport(specifier, parsed, parsedParentURL) {\r\n  if (parsedParentURL) {\r\n    if (\r\n      parsedParentURL.protocol === 'http:' ||\r\n      parsedParentURL.protocol === 'https:'\r\n    ) {\r\n      if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\r\n        // data: and blob: disallowed due to allowing file: access via\r\n        // indirection\r\n        if (parsed &&\r\n          parsed.protocol !== 'https:' &&\r\n          parsed.protocol !== 'http:'\r\n        ) {\r\n          throw new ERR_NETWORK_IMPORT_DISALLOWED(\r\n            specifier,\r\n            parsedParentURL,\r\n            'remote imports cannot import from a local location.'\r\n          );\r\n        }\r\n\r\n        return { url: parsed.href };\r\n      }\r\n      if (BuiltinModule.canBeRequiredByUsers(specifier) &&\r\n          BuiltinModule.canBeRequiredWithoutScheme(specifier)) {\r\n        throw new ERR_NETWORK_IMPORT_DISALLOWED(\r\n          specifier,\r\n          parsedParentURL,\r\n          'remote imports cannot import from a local location.'\r\n        );\r\n      }\r\n\r\n      throw new ERR_NETWORK_IMPORT_DISALLOWED(\r\n        specifier,\r\n        parsedParentURL,\r\n        'only relative and absolute specifiers are supported.'\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction throwIfUnsupportedURLProtocol(url) {\r\n  if (url.protocol !== 'file:' && url.protocol !== 'data:' &&\r\n      url.protocol !== 'node:') {\r\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(url);\r\n  }\r\n}\r\n\r\nfunction throwIfUnsupportedURLScheme(parsed, experimentalNetworkImports) {\r\n  if (\r\n    parsed &&\r\n    parsed.protocol !== 'file:' &&\r\n    parsed.protocol !== 'data:' &&\r\n    (\r\n      !experimentalNetworkImports ||\r\n      (\r\n        parsed.protocol !== 'https:' &&\r\n        parsed.protocol !== 'http:'\r\n      )\r\n    )\r\n  ) {\r\n    const schemes = ['file', 'data'];\r\n    if (experimentalNetworkImports) {\r\n      ArrayPrototypePush(schemes, 'https', 'http');\r\n    }\r\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed, schemes);\r\n  }\r\n}\r\n\r\nasync function defaultResolve(specifier, context = {}) {\r\n  let { parentURL, conditions } = context;\r\n  if (parentURL && policy?.manifest) {\r\n    const redirects = policy.manifest.getDependencyMapper(parentURL);\r\n    if (redirects) {\r\n      const { resolve, reaction } = redirects;\r\n      const destination = resolve(specifier, new SafeSet(conditions));\r\n      let missing = true;\r\n      if (destination === true) {\r\n        missing = false;\r\n      } else if (destination) {\r\n        const href = destination.href;\r\n        return { url: href };\r\n      }\r\n      if (missing) {\r\n        // Prevent network requests from firing if resolution would be banned.\r\n        // Network requests can extract data by doing things like putting\r\n        // secrets in query params\r\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\r\n          parentURL,\r\n          specifier,\r\n          ArrayPrototypeJoin([...conditions], ', '))\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  let parsedParentURL;\r\n  if (parentURL) {\r\n    try {\r\n      parsedParentURL = new URL(parentURL);\r\n    } catch {\r\n      // Ignore exception\r\n    }\r\n  }\r\n\r\n  let parsed;\r\n  try {\r\n    if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\r\n      parsed = new URL(specifier, parsedParentURL);\r\n    } else {\r\n      parsed = new URL(specifier);\r\n    }\r\n\r\n    if (parsed.protocol === 'data:' ||\r\n      (experimentalNetworkImports &&\r\n        (\r\n          parsed.protocol === 'https:' ||\r\n          parsed.protocol === 'http:'\r\n        )\r\n      )\r\n    ) {\r\n      return { __proto__: null, url: parsed.href };\r\n    }\r\n  } catch {\r\n    // Ignore exception\r\n  }\r\n\r\n  // There are multiple deep branches that can either throw or return; instead\r\n  // of duplicating that deeply nested logic for the possible returns, DRY and\r\n  // check for a return. This seems the least gnarly.\r\n  const maybeReturn = checkIfDisallowedImport(\r\n    specifier,\r\n    parsed,\r\n    parsedParentURL,\r\n  );\r\n\r\n  if (maybeReturn) return maybeReturn;\r\n\r\n  // This must come after checkIfDisallowedImport\r\n  if (parsed && parsed.protocol === 'node:') return { url: specifier };\r\n\r\n  throwIfUnsupportedURLScheme(parsed, experimentalNetworkImports);\r\n\r\n  const isMain = parentURL === undefined;\r\n  if (isMain) {\r\n    parentURL = pathToFileURL(`${process.cwd()}/`).href;\r\n\r\n    // This is the initial entry point to the program, and --input-type has\r\n    // been passed as an option; but --input-type can only be used with\r\n    // --eval, --print or STDIN string input. It is not allowed with file\r\n    // input, to avoid user confusion over how expansive the effect of the\r\n    // flag should be (i.e. entry point only, package scope surrounding the\r\n    // entry point, etc.).\r\n    if (typeFlag) throw new ERR_INPUT_TYPE_NOT_ALLOWED();\r\n  }\r\n\r\n  conditions = getConditionsSet(conditions);\r\n  let url;\r\n  try {\r\n    url = moduleResolve(\r\n      specifier,\r\n      parentURL,\r\n      conditions,\r\n      isMain ? preserveSymlinksMain : preserveSymlinks\r\n    );\r\n  } catch (error) {\r\n    // Try to give the user a hint of what would have been the\r\n    // resolved CommonJS module\r\n    if (error.code === 'ERR_MODULE_NOT_FOUND' ||\r\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT') {\r\n      if (StringPrototypeStartsWith(specifier, 'file://')) {\r\n        specifier = fileURLToPath(specifier);\r\n      }\r\n      const found = resolveAsCommonJS(specifier, parentURL);\r\n      if (found) {\r\n        // Modify the stack and message string to include the hint\r\n        const lines = StringPrototypeSplit(error.stack, '\\n');\r\n        const hint = `Did you mean to import ${found}?`;\r\n        error.stack =\r\n          ArrayPrototypeShift(lines) + '\\n' +\r\n          hint + '\\n' +\r\n          ArrayPrototypeJoin(lines, '\\n');\r\n        error.message += `\\n${hint}`;\r\n      }\r\n    }\r\n    throw error;\r\n  }\r\n\r\n  throwIfUnsupportedURLProtocol(url);\r\n\r\n  return {\r\n    // Do NOT cast `url` to a string: that will work even when there are real\r\n    // problems, silencing them\r\n    url: url.href,\r\n    format: defaultGetFormatWithoutErrors(url, context),\r\n  };\r\n}\r\n\r\nmodule.exports = {\r\n  DEFAULT_CONDITIONS,\r\n  defaultResolve,\r\n  encodedSepRegEx,\r\n  getPackageScopeConfig,\r\n  getPackageType,\r\n  packageExportsResolve,\r\n  packageImportsResolve,\r\n};\r\n\r\n// cycle\r\nconst {\r\n  defaultGetFormatWithoutErrors,\r\n} = require('internal/modules/esm/get_format');\r\n\r\nif (policy) {\r\n  const $defaultResolve = defaultResolve;\r\n  module.exports.defaultResolve = async function defaultResolve(\r\n    specifier,\r\n    context\r\n  ) {\r\n    const ret = await $defaultResolve(specifier, context);\r\n    // This is a preflight check to avoid data exfiltration by query params etc.\r\n    policy.manifest.mightAllow(ret.url, () =>\r\n      new ERR_MANIFEST_DEPENDENCY_MISSING(\r\n        context.parentURL,\r\n        specifier,\r\n        context.conditions\r\n      )\r\n    );\r\n    return ret;\r\n  };\r\n}\r\n",
    "name": "resolve",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 459,
    "sourcePositions": []
  },
  {
    "url": "node:internal/modules/esm/package_config",
    "source": "'use strict';\r\n\r\nconst {\r\n  JSONParse,\r\n  ObjectPrototypeHasOwnProperty,\r\n  SafeMap,\r\n  StringPrototypeEndsWith,\r\n} = primordials;\r\nconst { URL, fileURLToPath } = require('internal/url');\r\nconst {\r\n  ERR_INVALID_PACKAGE_CONFIG,\r\n} = require('internal/errors').codes;\r\n\r\nconst packageJsonReader = require('internal/modules/package_json_reader');\r\nconst { filterOwnProperties } = require('internal/util');\r\n\r\n\r\n/**\r\n * @typedef {string | string[] | Record<string, unknown>} Exports\r\n * @typedef {'module' | 'commonjs'} PackageType\r\n * @typedef {{\r\n *   pjsonPath: string,\r\n *   exports?: ExportConfig,\r\n *   name?: string,\r\n *   main?: string,\r\n *   type?: PackageType,\r\n * }} PackageConfig\r\n */\r\n\r\n/** @type {Map<string, PackageConfig>} */\r\nconst packageJSONCache = new SafeMap();\r\n\r\n\r\n/**\r\n * @param {string} path\r\n * @param {string} specifier\r\n * @param {string | URL | undefined} base\r\n * @returns {PackageConfig}\r\n */\r\nfunction getPackageConfig(path, specifier, base) {\r\n  const existing = packageJSONCache.get(path);\r\n  if (existing !== undefined) {\r\n    return existing;\r\n  }\r\n  const source = packageJsonReader.read(path).string;\r\n  if (source === undefined) {\r\n    const packageConfig = {\r\n      pjsonPath: path,\r\n      exists: false,\r\n      main: undefined,\r\n      name: undefined,\r\n      type: 'none',\r\n      exports: undefined,\r\n      imports: undefined,\r\n    };\r\n    packageJSONCache.set(path, packageConfig);\r\n    return packageConfig;\r\n  }\r\n\r\n  let packageJSON;\r\n  try {\r\n    packageJSON = JSONParse(source);\r\n  } catch (error) {\r\n    throw new ERR_INVALID_PACKAGE_CONFIG(\r\n      path,\r\n      (base ? `\"${specifier}\" from ` : '') + fileURLToPath(base || specifier),\r\n      error.message\r\n    );\r\n  }\r\n\r\n  let { imports, main, name, type } = filterOwnProperties(packageJSON, ['imports', 'main', 'name', 'type']);\r\n  const exports = ObjectPrototypeHasOwnProperty(packageJSON, 'exports') ? packageJSON.exports : undefined;\r\n  if (typeof imports !== 'object' || imports === null) {\r\n    imports = undefined;\r\n  }\r\n  if (typeof main !== 'string') {\r\n    main = undefined;\r\n  }\r\n  if (typeof name !== 'string') {\r\n    name = undefined;\r\n  }\r\n  // Ignore unknown types for forwards compatibility\r\n  if (type !== 'module' && type !== 'commonjs') {\r\n    type = 'none';\r\n  }\r\n\r\n  const packageConfig = {\r\n    pjsonPath: path,\r\n    exists: true,\r\n    main,\r\n    name,\r\n    type,\r\n    exports,\r\n    imports,\r\n  };\r\n  packageJSONCache.set(path, packageConfig);\r\n  return packageConfig;\r\n}\r\n\r\n\r\n/**\r\n * @param {URL | string} resolved\r\n * @returns {PackageConfig}\r\n */\r\nfunction getPackageScopeConfig(resolved) {\r\n  let packageJSONUrl = new URL('./package.json', resolved);\r\n  while (true) {\r\n    const packageJSONPath = packageJSONUrl.pathname;\r\n    if (StringPrototypeEndsWith(packageJSONPath, 'node_modules/package.json')) {\r\n      break;\r\n    }\r\n    const packageConfig = getPackageConfig(fileURLToPath(packageJSONUrl), resolved);\r\n    if (packageConfig.exists) {\r\n      return packageConfig;\r\n    }\r\n\r\n    const lastPackageJSONUrl = packageJSONUrl;\r\n    packageJSONUrl = new URL('../package.json', packageJSONUrl);\r\n\r\n    // Terminates at root where ../package.json equals ../../package.json\r\n    // (can't just check \"/package.json\" for Windows support).\r\n    if (packageJSONUrl.pathname === lastPackageJSONUrl.pathname) {\r\n      break;\r\n    }\r\n  }\r\n  const packageJSONPath = fileURLToPath(packageJSONUrl);\r\n  const packageConfig = {\r\n    pjsonPath: packageJSONPath,\r\n    exists: false,\r\n    main: undefined,\r\n    name: undefined,\r\n    type: 'none',\r\n    exports: undefined,\r\n    imports: undefined,\r\n  };\r\n  packageJSONCache.set(packageJSONPath, packageConfig);\r\n  return packageConfig;\r\n}\r\n\r\n\r\nmodule.exports = {\r\n  getPackageConfig,\r\n  getPackageScopeConfig,\r\n};\r\n",
    "name": "package_config",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 460,
    "sourcePositions": []
  },
  {
    "url": "node:internal/modules/esm/get_format",
    "source": "'use strict';\r\nconst {\r\n  RegExpPrototypeExec,\r\n  ObjectPrototypeHasOwnProperty,\r\n  PromisePrototypeThen,\r\n  PromiseResolve,\r\n  StringPrototypeSlice,\r\n} = primordials;\r\nconst { basename, extname, relative } = require('path');\r\nconst { getOptionValue } = require('internal/options');\r\nconst { fetchModule } = require('internal/modules/esm/fetch_module');\r\nconst {\r\n  extensionFormatMap,\r\n  getLegacyExtensionFormat,\r\n  mimeToFormat,\r\n} = require('internal/modules/esm/formats');\r\n\r\nconst experimentalNetworkImports =\r\n  getOptionValue('--experimental-network-imports');\r\nconst experimentalSpecifierResolution =\r\n  getOptionValue('--experimental-specifier-resolution');\r\nconst { getPackageType, getPackageScopeConfig } = require('internal/modules/esm/resolve');\r\nconst { URL, fileURLToPath } = require('internal/url');\r\nconst { ERR_UNKNOWN_FILE_EXTENSION } = require('internal/errors').codes;\r\n\r\nconst protocolHandlers = {\r\n  '__proto__': null,\r\n  'data:': getDataProtocolModuleFormat,\r\n  'file:': getFileProtocolModuleFormat,\r\n  'http:': getHttpProtocolModuleFormat,\r\n  'https:': getHttpProtocolModuleFormat,\r\n  'node:'() { return 'builtin'; },\r\n};\r\n\r\n/**\r\n * @param {URL} parsed\r\n * @returns {string | null}\r\n */\r\nfunction getDataProtocolModuleFormat(parsed) {\r\n  const { 1: mime } = RegExpPrototypeExec(\r\n    /^([^/]+\\/[^;,]+)(?:[^,]*?)(;base64)?,/,\r\n    parsed.pathname,\r\n  ) || [ null, null, null ];\r\n\r\n  return mimeToFormat(mime);\r\n}\r\n\r\n/**\r\n * @param {URL} url\r\n * @param {{parentURL: string}} context\r\n * @param {boolean} ignoreErrors\r\n * @returns {string}\r\n */\r\nfunction getFileProtocolModuleFormat(url, context, ignoreErrors) {\r\n  const filepath = fileURLToPath(url);\r\n  const ext = extname(filepath);\r\n  if (ext === '.js') {\r\n    return getPackageType(url) === 'module' ? 'module' : 'commonjs';\r\n  }\r\n\r\n  const format = extensionFormatMap[ext];\r\n  if (format) return format;\r\n\r\n  if (experimentalSpecifierResolution !== 'node') {\r\n    // Explicit undefined return indicates load hook should rerun format check\r\n    if (ignoreErrors) return undefined;\r\n    let suggestion = '';\r\n    if (getPackageType(url) === 'module' && ext === '') {\r\n      const config = getPackageScopeConfig(url);\r\n      const fileBasename = basename(filepath);\r\n      const relativePath = StringPrototypeSlice(relative(config.pjsonPath, filepath), 1);\r\n      suggestion = 'Loading extensionless files is not supported inside of ' +\r\n        '\"type\":\"module\" package.json contexts. The package.json file ' +\r\n        `${config.pjsonPath} caused this \"type\":\"module\" context. Try ` +\r\n        `changing ${filepath} to have a file extension. Note the \"bin\" ` +\r\n        'field of package.json can point to a file with an extension, for example ' +\r\n        `{\"type\":\"module\",\"bin\":{\"${fileBasename}\":\"${relativePath}.js\"}}`;\r\n    }\r\n    throw new ERR_UNKNOWN_FILE_EXTENSION(ext, filepath, suggestion);\r\n  }\r\n\r\n  return getLegacyExtensionFormat(ext) ?? null;\r\n}\r\n\r\n/**\r\n * @param {URL} url\r\n * @param {{parentURL: string}} context\r\n * @returns {Promise<string> | undefined} only works when enabled\r\n */\r\nfunction getHttpProtocolModuleFormat(url, context) {\r\n  if (experimentalNetworkImports) {\r\n    return PromisePrototypeThen(\r\n      PromiseResolve(fetchModule(url, context)),\r\n      (entry) => {\r\n        return mimeToFormat(entry.headers['content-type']);\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * @param {URL | URL['href']} url\r\n * @param {{parentURL: string}} context\r\n * @returns {Promise<string> | string | undefined} only works when enabled\r\n */\r\nfunction defaultGetFormatWithoutErrors(url, context) {\r\n  const parsed = new URL(url);\r\n  if (!ObjectPrototypeHasOwnProperty(protocolHandlers, parsed.protocol))\r\n    return null;\r\n  return protocolHandlers[parsed.protocol](parsed, context, true);\r\n}\r\n\r\n/**\r\n * @param {URL | URL['href']} url\r\n * @param {{parentURL: string}} context\r\n * @returns {Promise<string> | string | undefined} only works when enabled\r\n */\r\nfunction defaultGetFormat(url, context) {\r\n  const parsed = new URL(url);\r\n  return ObjectPrototypeHasOwnProperty(protocolHandlers, parsed.protocol) ?\r\n    protocolHandlers[parsed.protocol](parsed, context, false) :\r\n    null;\r\n}\r\n\r\nmodule.exports = {\r\n  defaultGetFormat,\r\n  defaultGetFormatWithoutErrors,\r\n  extensionFormatMap,\r\n};\r\n",
    "name": "get_format",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 461,
    "sourcePositions": []
  },
  {
    "url": "node:internal/modules/esm/fetch_module",
    "source": "'use strict';\r\nconst {\r\n  ObjectPrototypeHasOwnProperty,\r\n  PromisePrototypeThen,\r\n  SafeMap,\r\n  StringPrototypeEndsWith,\r\n  StringPrototypeSlice,\r\n  StringPrototypeStartsWith,\r\n} = primordials;\r\nconst {\r\n  Buffer: { concat: BufferConcat },\r\n} = require('buffer');\r\nconst {\r\n  ERR_NETWORK_IMPORT_DISALLOWED,\r\n  ERR_NETWORK_IMPORT_BAD_RESPONSE,\r\n  ERR_MODULE_NOT_FOUND,\r\n} = require('internal/errors').codes;\r\nconst { URL } = require('internal/url');\r\nconst net = require('net');\r\nconst { once } = require('events');\r\nconst { compose } = require('stream');\r\n/**\r\n * @typedef CacheEntry\r\n * @property {Promise<string> | string} resolvedHREF Parsed HREF of the request.\r\n * @property {Record<string, string>} headers HTTP headers of the response.\r\n * @property {Promise<Buffer> | Buffer} body Response body.\r\n */\r\n\r\n/**\r\n * Only for GET requests, other requests would need new Map\r\n * HTTP cache semantics keep diff caches\r\n *\r\n * It caches either the promise or the cache entry since import.meta.url needs\r\n * the value synchronously for the response location after all redirects.\r\n *\r\n * Maps HREF to pending cache entry\r\n * @type {Map<string, Promise<CacheEntry> | CacheEntry>}\r\n */\r\nconst cacheForGET = new SafeMap();\r\n\r\n// [1] The V8 snapshot doesn't like some C++ APIs to be loaded eagerly. Do it\r\n// lazily/at runtime and not top level of an internal module.\r\n\r\n// [2] Creating a new agent instead of using the gloabl agent improves\r\n// performance and precludes the agent becoming tainted.\r\n\r\nlet HTTPSAgent;\r\nfunction HTTPSGet(url, opts) {\r\n  const https = require('https'); // [1]\r\n  HTTPSAgent ??= new https.Agent({ // [2]\r\n    keepAlive: true,\r\n  });\r\n  return https.get(url, {\r\n    agent: HTTPSAgent,\r\n    ...opts,\r\n  });\r\n}\r\n\r\nlet HTTPAgent;\r\nfunction HTTPGet(url, opts) {\r\n  const http = require('http'); // [1]\r\n  HTTPAgent ??= new http.Agent({ // [2]\r\n    keepAlive: true,\r\n  });\r\n  return http.get(url, {\r\n    agent: HTTPAgent,\r\n    ...opts,\r\n  });\r\n}\r\n\r\nfunction dnsLookup(name, opts) {\r\n  // eslint-disable-next-line no-func-assign\r\n  dnsLookup = require('dns/promises').lookup;\r\n  return dnsLookup(name, opts);\r\n}\r\n\r\nlet zlib;\r\nfunction createBrotliDecompress() {\r\n  zlib ??= require('zlib'); // [1]\r\n  // eslint-disable-next-line no-func-assign\r\n  createBrotliDecompress = zlib.createBrotliDecompress;\r\n  return createBrotliDecompress();\r\n}\r\n\r\nfunction createUnzip() {\r\n  zlib ??= require('zlib'); // [1]\r\n  // eslint-disable-next-line no-func-assign\r\n  createUnzip = zlib.createUnzip;\r\n  return createUnzip();\r\n}\r\n\r\n/**\r\n * Redirection status code as per section 6.4 of RFC 7231:\r\n * https://datatracker.ietf.org/doc/html/rfc7231#section-6.4\r\n * and RFC 7238:\r\n * https://datatracker.ietf.org/doc/html/rfc7238\r\n * @param {number} statusCode\r\n * @returns {boolean}\r\n */\r\nfunction isRedirect(statusCode) {\r\n  switch (statusCode) {\r\n    case 300: // Multiple Choices\r\n    case 301: // Moved Permanently\r\n    case 302: // Found\r\n    case 303: // See Other\r\n    case 307: // Temporary Redirect\r\n    case 308: // Permanent Redirect\r\n      return true;\r\n    default:\r\n      return false;\r\n  }\r\n}\r\n\r\n/**\r\n * @param {URL} parsed\r\n * @returns {Promise<CacheEntry> | CacheEntry}\r\n */\r\nfunction fetchWithRedirects(parsed) {\r\n  const existing = cacheForGET.get(parsed.href);\r\n  if (existing) {\r\n    return existing;\r\n  }\r\n  const handler = parsed.protocol === 'http:' ? HTTPGet : HTTPSGet;\r\n  const result = (async () => {\r\n    const req = handler(parsed, {\r\n      headers: { Accept: '*/*' },\r\n    });\r\n    // Note that `once` is used here to handle `error` and that it hits the\r\n    // `finally` on network error/timeout.\r\n    const { 0: res } = await once(req, 'response');\r\n    try {\r\n      const hasLocation = ObjectPrototypeHasOwnProperty(res.headers, 'location');\r\n      if (isRedirect(res.statusCode) && hasLocation) {\r\n        const location = new URL(res.headers.location, parsed);\r\n        if (location.protocol !== 'http:' && location.protocol !== 'https:') {\r\n          throw new ERR_NETWORK_IMPORT_DISALLOWED(\r\n            res.headers.location,\r\n            parsed.href,\r\n            'cannot redirect to non-network location'\r\n          );\r\n        }\r\n        const entry = await fetchWithRedirects(location);\r\n        cacheForGET.set(parsed.href, entry);\r\n        return entry;\r\n      }\r\n      if (res.statusCode === 404) {\r\n        const err = new ERR_MODULE_NOT_FOUND(parsed.href, null);\r\n        err.message = `Cannot find module '${parsed.href}', HTTP 404`;\r\n        throw err;\r\n      }\r\n      // This condition catches all unsupported status codes, including\r\n      // 3xx redirection codes without `Location` HTTP header.\r\n      if (res.statusCode < 200 || res.statusCode >= 300) {\r\n        throw new ERR_NETWORK_IMPORT_DISALLOWED(\r\n          res.headers.location,\r\n          parsed.href,\r\n          'cannot redirect to non-network location');\r\n      }\r\n      const { headers } = res;\r\n      const contentType = headers['content-type'];\r\n      if (!contentType) {\r\n        throw new ERR_NETWORK_IMPORT_BAD_RESPONSE(\r\n          parsed.href,\r\n          \"the 'Content-Type' header is required\"\r\n        );\r\n      }\r\n      /**\r\n       * @type {CacheEntry}\r\n       */\r\n      const entry = {\r\n        resolvedHREF: parsed.href,\r\n        headers: {\r\n          'content-type': res.headers['content-type'],\r\n        },\r\n        body: (async () => {\r\n          let bodyStream = res;\r\n          if (res.headers['content-encoding'] === 'br') {\r\n            bodyStream = compose(res, createBrotliDecompress());\r\n          } else if (\r\n            res.headers['content-encoding'] === 'gzip' ||\r\n            res.headers['content-encoding'] === 'deflate'\r\n          ) {\r\n            bodyStream = compose(res, createUnzip());\r\n          }\r\n          const buffers = await bodyStream.toArray();\r\n          const body = BufferConcat(buffers);\r\n          entry.body = body;\r\n          return body;\r\n        })(),\r\n      };\r\n      cacheForGET.set(parsed.href, entry);\r\n      await entry.body;\r\n      return entry;\r\n    } finally {\r\n      req.destroy();\r\n    }\r\n  })();\r\n  cacheForGET.set(parsed.href, result);\r\n  return result;\r\n}\r\n\r\nconst allowList = new net.BlockList();\r\nallowList.addAddress('::1', 'ipv6');\r\nallowList.addRange('127.0.0.1', '127.255.255.255');\r\n\r\n/**\r\n * Returns if an address has local status by if it is going to a local\r\n * interface or is an address resolved by DNS to be a local interface\r\n * @param {string} hostname url.hostname to test\r\n * @returns {Promise<boolean>}\r\n */\r\nasync function isLocalAddress(hostname) {\r\n  try {\r\n    if (\r\n      StringPrototypeStartsWith(hostname, '[') &&\r\n      StringPrototypeEndsWith(hostname, ']')\r\n    ) {\r\n      hostname = StringPrototypeSlice(hostname, 1, -1);\r\n    }\r\n    const addr = await dnsLookup(hostname, { verbatim: true });\r\n    const ipv = addr.family === 4 ? 'ipv4' : 'ipv6';\r\n    return allowList.check(addr.address, ipv);\r\n  } catch {\r\n    // If it errored, the answer is no.\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Fetches a location with a shared cache following redirects.\r\n * Does not respect HTTP cache headers.\r\n *\r\n * This splits the header and body Promises so that things only needing\r\n * headers don't need to wait on the body.\r\n *\r\n * In cases where the request & response have already settled, this returns the\r\n * cache value synchronously.\r\n *\r\n * @param {URL} parsed\r\n * @param {ESModuleContext} context\r\n * @returns {ReturnType<typeof fetchWithRedirects>}\r\n */\r\nfunction fetchModule(parsed, { parentURL }) {\r\n  const { href } = parsed;\r\n  const existing = cacheForGET.get(href);\r\n  if (existing) {\r\n    return existing;\r\n  }\r\n  if (parsed.protocol === 'http:') {\r\n    return PromisePrototypeThen(isLocalAddress(parsed.hostname), (is) => {\r\n      if (is !== true) {\r\n        throw new ERR_NETWORK_IMPORT_DISALLOWED(\r\n          href,\r\n          parentURL,\r\n          'http can only be used to load local resources (use https instead).'\r\n        );\r\n      }\r\n      return fetchWithRedirects(parsed);\r\n    });\r\n  }\r\n  return fetchWithRedirects(parsed);\r\n}\r\n\r\nmodule.exports = {\r\n  fetchModule,\r\n};\r\n",
    "name": "fetch_module",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 462,
    "sourcePositions": []
  },
  {
    "url": "node:net",
    "source": "// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n'use strict';\r\n\r\nconst {\r\n  ArrayIsArray,\r\n  ArrayPrototypeIndexOf,\r\n  ArrayPrototypePush,\r\n  Boolean,\r\n  FunctionPrototypeBind,\r\n  MathMax,\r\n  Number,\r\n  NumberIsNaN,\r\n  NumberParseInt,\r\n  ObjectDefineProperty,\r\n  ObjectSetPrototypeOf,\r\n  Symbol,\r\n  ObjectCreate,\r\n} = primordials;\r\n\r\nconst EventEmitter = require('events');\r\nconst stream = require('stream');\r\nlet debug = require('internal/util/debuglog').debuglog('net', (fn) => {\r\n  debug = fn;\r\n});\r\nconst {\r\n  kWrapConnectedHandle,\r\n  isIP,\r\n  isIPv4,\r\n  isIPv6,\r\n  normalizedArgsSymbol,\r\n  makeSyncWrite\r\n} = require('internal/net');\r\nconst assert = require('internal/assert');\r\nconst {\r\n  UV_EADDRINUSE,\r\n  UV_EINVAL,\r\n  UV_ENOTCONN\r\n} = internalBinding('uv');\r\n\r\nconst { Buffer } = require('buffer');\r\nconst { guessHandleType } = internalBinding('util');\r\nconst { ShutdownWrap } = internalBinding('stream_wrap');\r\nconst {\r\n  TCP,\r\n  TCPConnectWrap,\r\n  constants: TCPConstants\r\n} = internalBinding('tcp_wrap');\r\nconst {\r\n  Pipe,\r\n  PipeConnectWrap,\r\n  constants: PipeConstants\r\n} = internalBinding('pipe_wrap');\r\nconst {\r\n  newAsyncId,\r\n  defaultTriggerAsyncIdScope,\r\n  symbols: { async_id_symbol, owner_symbol }\r\n} = require('internal/async_hooks');\r\nconst {\r\n  writevGeneric,\r\n  writeGeneric,\r\n  onStreamRead,\r\n  kAfterAsyncWrite,\r\n  kHandle,\r\n  kUpdateTimer,\r\n  setStreamTimeout,\r\n  kBuffer,\r\n  kBufferCb,\r\n  kBufferGen\r\n} = require('internal/stream_base_commons');\r\nconst {\r\n  codes: {\r\n    ERR_INVALID_ADDRESS_FAMILY,\r\n    ERR_INVALID_ARG_TYPE,\r\n    ERR_INVALID_ARG_VALUE,\r\n    ERR_INVALID_FD_TYPE,\r\n    ERR_INVALID_IP_ADDRESS,\r\n    ERR_INVALID_HANDLE_TYPE,\r\n    ERR_SERVER_ALREADY_LISTEN,\r\n    ERR_SERVER_NOT_RUNNING,\r\n    ERR_SOCKET_CLOSED,\r\n    ERR_SOCKET_CLOSED_BEFORE_CONNECTION,\r\n    ERR_MISSING_ARGS,\r\n  },\r\n  aggregateErrors,\r\n  errnoException,\r\n  exceptionWithHostPort,\r\n  genericNodeError,\r\n  uvExceptionWithHostPort,\r\n} = require('internal/errors');\r\nconst { isUint8Array } = require('internal/util/types');\r\nconst { queueMicrotask } = require('internal/process/task_queues');\r\nconst { kEmptyObject } = require('internal/util');\r\nconst {\r\n  validateAbortSignal,\r\n  validateBoolean,\r\n  validateFunction,\r\n  validateInt32,\r\n  validateNumber,\r\n  validatePort,\r\n  validateString\r\n} = require('internal/validators');\r\nconst kLastWriteQueueSize = Symbol('lastWriteQueueSize');\r\nconst {\r\n  DTRACE_NET_SERVER_CONNECTION,\r\n  DTRACE_NET_STREAM_END\r\n} = require('internal/dtrace');\r\n\r\n// Lazy loaded to improve startup performance.\r\nlet cluster;\r\nlet dns;\r\nlet BlockList;\r\nlet SocketAddress;\r\n\r\nconst { clearTimeout, setTimeout } = require('timers');\r\nconst { kTimeout } = require('internal/timers');\r\nconst kTimeoutTriggered = Symbol('kTimeoutTriggered');\r\n\r\nconst DEFAULT_IPV4_ADDR = '0.0.0.0';\r\nconst DEFAULT_IPV6_ADDR = '::';\r\n\r\nconst isWindows = process.platform === 'win32';\r\n\r\nconst noop = () => {};\r\n\r\nconst kPerfHooksNetConnectContext = Symbol('kPerfHooksNetConnectContext');\r\n\r\nlet netClientSocketChannel;\r\nlet netServerSocketChannel;\r\nfunction lazyChannels() {\r\n  // TODO(joyeecheung): support diagnostics channels in the snapshot.\r\n  // For now it is fine to create them lazily when there isn't a snapshot to\r\n  // build. If users need the channels they would have to create them first\r\n  // before invoking any built-ins that would publish to these channels\r\n  // anyway.\r\n  if (netClientSocketChannel === undefined) {\r\n    const dc = require('diagnostics_channel');\r\n    netClientSocketChannel = dc.channel('net.client.socket');\r\n    netServerSocketChannel = dc.channel('net.server.socket');\r\n  }\r\n}\r\n\r\nconst {\r\n  hasObserver,\r\n  startPerf,\r\n  stopPerf,\r\n} = require('internal/perf/observe');\r\n\r\nfunction getFlags(ipv6Only) {\r\n  return ipv6Only === true ? TCPConstants.UV_TCP_IPV6ONLY : 0;\r\n}\r\n\r\nfunction createHandle(fd, is_server) {\r\n  validateInt32(fd, 'fd', 0);\r\n  const type = guessHandleType(fd);\r\n  if (type === 'PIPE') {\r\n    return new Pipe(\r\n      is_server ? PipeConstants.SERVER : PipeConstants.SOCKET\r\n    );\r\n  }\r\n\r\n  if (type === 'TCP') {\r\n    return new TCP(\r\n      is_server ? TCPConstants.SERVER : TCPConstants.SOCKET\r\n    );\r\n  }\r\n\r\n  throw new ERR_INVALID_FD_TYPE(type);\r\n}\r\n\r\n\r\nfunction getNewAsyncId(handle) {\r\n  return (!handle || typeof handle.getAsyncId !== 'function') ?\r\n    newAsyncId() : handle.getAsyncId();\r\n}\r\n\r\n\r\nfunction isPipeName(s) {\r\n  return typeof s === 'string' && toNumber(s) === false;\r\n}\r\n\r\n/**\r\n * Creates a new TCP or IPC server\r\n * @param {{\r\n *   allowHalfOpen?: boolean;\r\n *   pauseOnConnect?: boolean;\r\n *   }} [options]\r\n * @param {Function} [connectionListener]\r\n * @returns {Server}\r\n */\r\n\r\nfunction createServer(options, connectionListener) {\r\n  return new Server(options, connectionListener);\r\n}\r\n\r\n\r\n// Target API:\r\n//\r\n// let s = net.connect({port: 80, host: 'google.com'}, function() {\r\n//   ...\r\n// });\r\n//\r\n// There are various forms:\r\n//\r\n// connect(options, [cb])\r\n// connect(port, [host], [cb])\r\n// connect(path, [cb]);\r\n//\r\nfunction connect(...args) {\r\n  const normalized = normalizeArgs(args);\r\n  const options = normalized[0];\r\n  debug('createConnection', normalized);\r\n  const socket = new Socket(options);\r\n  lazyChannels();\r\n  if (netClientSocketChannel.hasSubscribers) {\r\n    netClientSocketChannel.publish({\r\n      socket,\r\n    });\r\n  }\r\n  if (options.timeout) {\r\n    socket.setTimeout(options.timeout);\r\n  }\r\n\r\n  return socket.connect(normalized);\r\n}\r\n\r\n\r\n// Returns an array [options, cb], where options is an object,\r\n// cb is either a function or null.\r\n// Used to normalize arguments of Socket.prototype.connect() and\r\n// Server.prototype.listen(). Possible combinations of parameters:\r\n//   (options[...][, cb])\r\n//   (path[...][, cb])\r\n//   ([port][, host][...][, cb])\r\n// For Socket.prototype.connect(), the [...] part is ignored\r\n// For Server.prototype.listen(), the [...] part is [, backlog]\r\n// but will not be handled here (handled in listen())\r\nfunction normalizeArgs(args) {\r\n  let arr;\r\n\r\n  if (args.length === 0) {\r\n    arr = [{}, null];\r\n    arr[normalizedArgsSymbol] = true;\r\n    return arr;\r\n  }\r\n\r\n  const arg0 = args[0];\r\n  let options = {};\r\n  if (typeof arg0 === 'object' && arg0 !== null) {\r\n    // (options[...][, cb])\r\n    options = arg0;\r\n  } else if (isPipeName(arg0)) {\r\n    // (path[...][, cb])\r\n    options.path = arg0;\r\n  } else {\r\n    // ([port][, host][...][, cb])\r\n    options.port = arg0;\r\n    if (args.length > 1 && typeof args[1] === 'string') {\r\n      options.host = args[1];\r\n    }\r\n  }\r\n\r\n  const cb = args[args.length - 1];\r\n  if (typeof cb !== 'function')\r\n    arr = [options, null];\r\n  else\r\n    arr = [options, cb];\r\n\r\n  arr[normalizedArgsSymbol] = true;\r\n  return arr;\r\n}\r\n\r\n\r\n// Called when creating new Socket, or when re-using a closed Socket\r\nfunction initSocketHandle(self) {\r\n  self._undestroy();\r\n  self._sockname = null;\r\n\r\n  // Handle creation may be deferred to bind() or connect() time.\r\n  if (self._handle) {\r\n    self._handle[owner_symbol] = self;\r\n    self._handle.onread = onStreamRead;\r\n    self[async_id_symbol] = getNewAsyncId(self._handle);\r\n\r\n    let userBuf = self[kBuffer];\r\n    if (userBuf) {\r\n      const bufGen = self[kBufferGen];\r\n      if (bufGen !== null) {\r\n        userBuf = bufGen();\r\n        if (!isUint8Array(userBuf))\r\n          return;\r\n        self[kBuffer] = userBuf;\r\n      }\r\n      self._handle.useUserBuffer(userBuf);\r\n    }\r\n  }\r\n}\r\n\r\nfunction closeSocketHandle(self, isException, isCleanupPending = false) {\r\n  if (self._handle) {\r\n    self._handle.close(() => {\r\n      debug('emit close');\r\n      self.emit('close', isException);\r\n      if (isCleanupPending) {\r\n        self._handle.onread = noop;\r\n        self._handle = null;\r\n        self._sockname = null;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nconst kBytesRead = Symbol('kBytesRead');\r\nconst kBytesWritten = Symbol('kBytesWritten');\r\nconst kSetNoDelay = Symbol('kSetNoDelay');\r\nconst kSetKeepAlive = Symbol('kSetKeepAlive');\r\nconst kSetKeepAliveInitialDelay = Symbol('kSetKeepAliveInitialDelay');\r\n\r\nfunction Socket(options) {\r\n  if (!(this instanceof Socket)) return new Socket(options);\r\n  if (options?.objectMode) {\r\n    throw new ERR_INVALID_ARG_VALUE(\r\n      'options.objectMode',\r\n      options.objectMode,\r\n      'is not supported'\r\n    );\r\n  } else if (options?.readableObjectMode || options?.writableObjectMode) {\r\n    throw new ERR_INVALID_ARG_VALUE(\r\n      `options.${\r\n        options.readableObjectMode ? 'readableObjectMode' : 'writableObjectMode'\r\n      }`,\r\n      options.readableObjectMode || options.writableObjectMode,\r\n      'is not supported'\r\n    );\r\n  }\r\n  if (typeof options?.keepAliveInitialDelay !== 'undefined') {\r\n    validateNumber(\r\n      options?.keepAliveInitialDelay, 'options.keepAliveInitialDelay'\r\n    );\r\n\r\n    if (options.keepAliveInitialDelay < 0) {\r\n      options.keepAliveInitialDelay = 0;\r\n    }\r\n  }\r\n\r\n  this.connecting = false;\r\n  // Problem with this is that users can supply their own handle, that may not\r\n  // have _handle.getAsyncId(). In this case an[async_id_symbol] should\r\n  // probably be supplied by async_hooks.\r\n  this[async_id_symbol] = -1;\r\n  this._hadError = false;\r\n  this[kHandle] = null;\r\n  this._parent = null;\r\n  this._host = null;\r\n  this[kLastWriteQueueSize] = 0;\r\n  this[kTimeout] = null;\r\n  this[kBuffer] = null;\r\n  this[kBufferCb] = null;\r\n  this[kBufferGen] = null;\r\n  this._closeAfterHandlingError = false;\r\n\r\n  if (typeof options === 'number')\r\n    options = { fd: options }; // Legacy interface.\r\n  else\r\n    options = { ...options };\r\n\r\n  // Default to *not* allowing half open sockets.\r\n  options.allowHalfOpen = Boolean(options.allowHalfOpen);\r\n  // For backwards compat do not emit close on destroy.\r\n  options.emitClose = false;\r\n  options.autoDestroy = true;\r\n  // Handle strings directly.\r\n  options.decodeStrings = false;\r\n  stream.Duplex.call(this, options);\r\n\r\n  if (options.handle) {\r\n    this._handle = options.handle; // private\r\n    this[async_id_symbol] = getNewAsyncId(this._handle);\r\n  } else if (options.fd !== undefined) {\r\n    const { fd } = options;\r\n    let err;\r\n\r\n    // createHandle will throw ERR_INVALID_FD_TYPE if `fd` is not\r\n    // a valid `PIPE` or `TCP` descriptor\r\n    this._handle = createHandle(fd, false);\r\n\r\n    err = this._handle.open(fd);\r\n\r\n    // While difficult to fabricate, in some architectures\r\n    // `open` may return an error code for valid file descriptors\r\n    // which cannot be opened. This is difficult to test as most\r\n    // un-openable fds will throw on `createHandle`\r\n    if (err)\r\n      throw errnoException(err, 'open');\r\n\r\n    this[async_id_symbol] = this._handle.getAsyncId();\r\n\r\n    if ((fd === 1 || fd === 2) &&\r\n        (this._handle instanceof Pipe) && isWindows) {\r\n      // Make stdout and stderr blocking on Windows\r\n      err = this._handle.setBlocking(true);\r\n      if (err)\r\n        throw errnoException(err, 'setBlocking');\r\n\r\n      this._writev = null;\r\n      this._write = makeSyncWrite(fd);\r\n      // makeSyncWrite adjusts this value like the original handle would, so\r\n      // we need to let it do that by turning it into a writable, own\r\n      // property.\r\n      ObjectDefineProperty(this._handle, 'bytesWritten', {\r\n        __proto__: null,\r\n        value: 0, writable: true\r\n      });\r\n    }\r\n  }\r\n\r\n  const onread = options.onread;\r\n  if (onread !== null && typeof onread === 'object' &&\r\n      (isUint8Array(onread.buffer) || typeof onread.buffer === 'function') &&\r\n      typeof onread.callback === 'function') {\r\n    if (typeof onread.buffer === 'function') {\r\n      this[kBuffer] = true;\r\n      this[kBufferGen] = onread.buffer;\r\n    } else {\r\n      this[kBuffer] = onread.buffer;\r\n    }\r\n    this[kBufferCb] = onread.callback;\r\n  }\r\n\r\n  this[kSetNoDelay] = Boolean(options.noDelay);\r\n  this[kSetKeepAlive] = Boolean(options.keepAlive);\r\n  this[kSetKeepAliveInitialDelay] = ~~(options.keepAliveInitialDelay / 1000);\r\n\r\n  // Shut down the socket when we're finished with it.\r\n  this.on('end', onReadableStreamEnd);\r\n\r\n  initSocketHandle(this);\r\n\r\n  this._pendingData = null;\r\n  this._pendingEncoding = '';\r\n\r\n  // If we have a handle, then start the flow of data into the\r\n  // buffer.  if not, then this will happen when we connect\r\n  if (this._handle && options.readable !== false) {\r\n    if (options.pauseOnCreate) {\r\n      // Stop the handle from reading and pause the stream\r\n      this._handle.reading = false;\r\n      this._handle.readStop();\r\n      this.readableFlowing = false;\r\n    } else if (!options.manualStart) {\r\n      this.read(0);\r\n    }\r\n  }\r\n\r\n  // Reserve properties\r\n  this.server = null;\r\n  this._server = null;\r\n\r\n  // Used after `.destroy()`\r\n  this[kBytesRead] = 0;\r\n  this[kBytesWritten] = 0;\r\n}\r\nObjectSetPrototypeOf(Socket.prototype, stream.Duplex.prototype);\r\nObjectSetPrototypeOf(Socket, stream.Duplex);\r\n\r\n// Refresh existing timeouts.\r\nSocket.prototype._unrefTimer = function _unrefTimer() {\r\n  for (let s = this; s !== null; s = s._parent) {\r\n    if (s[kTimeout])\r\n      s[kTimeout].refresh();\r\n  }\r\n};\r\n\r\n\r\n// The user has called .end(), and all the bytes have been\r\n// sent out to the other side.\r\nSocket.prototype._final = function(cb) {\r\n  // If still connecting - defer handling `_final` until 'connect' will happen\r\n  if (this.pending) {\r\n    debug('_final: not yet connected');\r\n    return this.once('connect', () => this._final(cb));\r\n  }\r\n\r\n  if (!this._handle)\r\n    return cb();\r\n\r\n  debug('_final: not ended, call shutdown()');\r\n\r\n  const req = new ShutdownWrap();\r\n  req.oncomplete = afterShutdown;\r\n  req.handle = this._handle;\r\n  req.callback = cb;\r\n  const err = this._handle.shutdown(req);\r\n\r\n  if (err === 1 || err === UV_ENOTCONN)  // synchronous finish\r\n    return cb();\r\n  else if (err !== 0)\r\n    return cb(errnoException(err, 'shutdown'));\r\n};\r\n\r\nfunction afterShutdown() {\r\n  const self = this.handle[owner_symbol];\r\n\r\n  debug('afterShutdown destroyed=%j', self.destroyed);\r\n\r\n  this.callback();\r\n}\r\n\r\n// Provide a better error message when we call end() as a result\r\n// of the other side sending a FIN.  The standard 'write after end'\r\n// is overly vague, and makes it seem like the user's code is to blame.\r\nfunction writeAfterFIN(chunk, encoding, cb) {\r\n  if (!this.writableEnded) {\r\n    return stream.Duplex.prototype.write.call(this, chunk, encoding, cb);\r\n  }\r\n\r\n  if (typeof encoding === 'function') {\r\n    cb = encoding;\r\n    encoding = null;\r\n  }\r\n\r\n  const er = genericNodeError(\r\n    'This socket has been ended by the other party',\r\n    { code: 'EPIPE' }\r\n  );\r\n  if (typeof cb === 'function') {\r\n    defaultTriggerAsyncIdScope(this[async_id_symbol], process.nextTick, cb, er);\r\n  }\r\n  this.destroy(er);\r\n\r\n  return false;\r\n}\r\n\r\nSocket.prototype.setTimeout = setStreamTimeout;\r\n\r\n\r\nSocket.prototype._onTimeout = function() {\r\n  const handle = this._handle;\r\n  const lastWriteQueueSize = this[kLastWriteQueueSize];\r\n  if (lastWriteQueueSize > 0 && handle) {\r\n    // `lastWriteQueueSize !== writeQueueSize` means there is\r\n    // an active write in progress, so we suppress the timeout.\r\n    const { writeQueueSize } = handle;\r\n    if (lastWriteQueueSize !== writeQueueSize) {\r\n      this[kLastWriteQueueSize] = writeQueueSize;\r\n      this._unrefTimer();\r\n      return;\r\n    }\r\n  }\r\n  debug('_onTimeout');\r\n  this.emit('timeout');\r\n};\r\n\r\n\r\nSocket.prototype.setNoDelay = function(enable) {\r\n  // Backwards compatibility: assume true when `enable` is omitted\r\n  enable = Boolean(enable === undefined ? true : enable);\r\n\r\n  if (!this._handle) {\r\n    this[kSetNoDelay] = enable;\r\n    return this;\r\n  }\r\n\r\n  if (this._handle.setNoDelay && enable !== this[kSetNoDelay]) {\r\n    this[kSetNoDelay] = enable;\r\n    this._handle.setNoDelay(enable);\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n\r\nSocket.prototype.setKeepAlive = function(enable, initialDelayMsecs) {\r\n  enable = Boolean(enable);\r\n  const initialDelay = ~~(initialDelayMsecs / 1000);\r\n\r\n  if (!this._handle) {\r\n    this[kSetKeepAlive] = enable;\r\n    this[kSetKeepAliveInitialDelay] = initialDelay;\r\n    return this;\r\n  }\r\n\r\n  if (!this._handle.setKeepAlive) {\r\n    return this;\r\n  }\r\n\r\n  if (enable !== this[kSetKeepAlive] ||\r\n      (\r\n        enable &&\r\n        this[kSetKeepAliveInitialDelay] !== initialDelay\r\n      )\r\n  ) {\r\n    this[kSetKeepAlive] = enable;\r\n    this[kSetKeepAliveInitialDelay] = initialDelay;\r\n    this._handle.setKeepAlive(enable, initialDelay);\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n\r\nSocket.prototype.address = function() {\r\n  return this._getsockname();\r\n};\r\n\r\n\r\nObjectDefineProperty(Socket.prototype, '_connecting', {\r\n  __proto__: null,\r\n  get: function() {\r\n    return this.connecting;\r\n  }\r\n});\r\n\r\nObjectDefineProperty(Socket.prototype, 'pending', {\r\n  __proto__: null,\r\n  get() {\r\n    return !this._handle || this.connecting;\r\n  },\r\n  configurable: true\r\n});\r\n\r\n\r\nObjectDefineProperty(Socket.prototype, 'readyState', {\r\n  __proto__: null,\r\n  get: function() {\r\n    if (this.connecting) {\r\n      return 'opening';\r\n    } else if (this.readable && this.writable) {\r\n      return 'open';\r\n    } else if (this.readable && !this.writable) {\r\n      return 'readOnly';\r\n    } else if (!this.readable && this.writable) {\r\n      return 'writeOnly';\r\n    }\r\n    return 'closed';\r\n  }\r\n});\r\n\r\n\r\nObjectDefineProperty(Socket.prototype, 'bufferSize', {\r\n  __proto__: null,\r\n  get: function() {\r\n    if (this._handle) {\r\n      return this.writableLength;\r\n    }\r\n  }\r\n});\r\n\r\nObjectDefineProperty(Socket.prototype, kUpdateTimer, {\r\n  __proto__: null,\r\n  get: function() {\r\n    return this._unrefTimer;\r\n  }\r\n});\r\n\r\n\r\nfunction tryReadStart(socket) {\r\n  // Not already reading, start the flow\r\n  debug('Socket._handle.readStart');\r\n  socket._handle.reading = true;\r\n  const err = socket._handle.readStart();\r\n  if (err)\r\n    socket.destroy(errnoException(err, 'read'));\r\n}\r\n\r\n// Just call handle.readStart until we have enough in the buffer\r\nSocket.prototype._read = function(n) {\r\n  debug('_read');\r\n\r\n  if (this.connecting || !this._handle) {\r\n    debug('_read wait for connection');\r\n    this.once('connect', () => this._read(n));\r\n  } else if (!this._handle.reading) {\r\n    tryReadStart(this);\r\n  }\r\n};\r\n\r\n\r\nSocket.prototype.end = function(data, encoding, callback) {\r\n  stream.Duplex.prototype.end.call(this,\r\n                                   data, encoding, callback);\r\n  DTRACE_NET_STREAM_END(this);\r\n  return this;\r\n};\r\n\r\nSocket.prototype.resetAndDestroy = function() {\r\n  if (this._handle) {\r\n    if (!(this._handle instanceof TCP))\r\n      throw new ERR_INVALID_HANDLE_TYPE();\r\n    if (this.connecting) {\r\n      debug('reset wait for connection');\r\n      this.once('connect', () => this._reset());\r\n    } else {\r\n      this._reset();\r\n    }\r\n  } else {\r\n    this.destroy(new ERR_SOCKET_CLOSED());\r\n  }\r\n  return this;\r\n};\r\n\r\nSocket.prototype.pause = function() {\r\n  if (this[kBuffer] && !this.connecting && this._handle &&\r\n      this._handle.reading) {\r\n    this._handle.reading = false;\r\n    if (!this.destroyed) {\r\n      const err = this._handle.readStop();\r\n      if (err)\r\n        this.destroy(errnoException(err, 'read'));\r\n    }\r\n  }\r\n  return stream.Duplex.prototype.pause.call(this);\r\n};\r\n\r\n\r\nSocket.prototype.resume = function() {\r\n  if (this[kBuffer] && !this.connecting && this._handle &&\r\n      !this._handle.reading) {\r\n    tryReadStart(this);\r\n  }\r\n  return stream.Duplex.prototype.resume.call(this);\r\n};\r\n\r\n\r\nSocket.prototype.read = function(n) {\r\n  if (this[kBuffer] && !this.connecting && this._handle &&\r\n      !this._handle.reading) {\r\n    tryReadStart(this);\r\n  }\r\n  return stream.Duplex.prototype.read.call(this, n);\r\n};\r\n\r\n\r\n// Called when the 'end' event is emitted.\r\nfunction onReadableStreamEnd() {\r\n  if (!this.allowHalfOpen) {\r\n    this.write = writeAfterFIN;\r\n  }\r\n}\r\n\r\n\r\nSocket.prototype.destroySoon = function() {\r\n  if (this.writable)\r\n    this.end();\r\n\r\n  if (this.writableFinished)\r\n    this.destroy();\r\n  else\r\n    this.once('finish', this.destroy);\r\n};\r\n\r\n\r\nSocket.prototype._destroy = function(exception, cb) {\r\n  debug('destroy');\r\n\r\n  this.connecting = false;\r\n\r\n  for (let s = this; s !== null; s = s._parent) {\r\n    clearTimeout(s[kTimeout]);\r\n  }\r\n\r\n  debug('close');\r\n  if (this._handle) {\r\n    if (this !== process.stderr)\r\n      debug('close handle');\r\n    const isException = exception ? true : false;\r\n    // `bytesRead` and `kBytesWritten` should be accessible after `.destroy()`\r\n    this[kBytesRead] = this._handle.bytesRead;\r\n    this[kBytesWritten] = this._handle.bytesWritten;\r\n\r\n    if (this.resetAndClosing) {\r\n      this.resetAndClosing = false;\r\n      const err = this._handle.reset(() => {\r\n        debug('emit close');\r\n        this.emit('close', isException);\r\n      });\r\n      if (err)\r\n        this.emit('error', errnoException(err, 'reset'));\r\n    } else if (this._closeAfterHandlingError) {\r\n      // Enqueue closing the socket as a microtask, so that the socket can be\r\n      // accessible when an `error` event is handled in the `next tick queue`.\r\n      queueMicrotask(() => closeSocketHandle(this, isException, true));\r\n    } else {\r\n      closeSocketHandle(this, isException);\r\n    }\r\n\r\n    if (!this._closeAfterHandlingError) {\r\n      this._handle.onread = noop;\r\n      this._handle = null;\r\n      this._sockname = null;\r\n    }\r\n    cb(exception);\r\n  } else {\r\n    cb(exception);\r\n    process.nextTick(emitCloseNT, this);\r\n  }\r\n\r\n  if (this._server) {\r\n    debug('has server');\r\n    this._server._connections--;\r\n    if (this._server._emitCloseIfDrained) {\r\n      this._server._emitCloseIfDrained();\r\n    }\r\n  }\r\n};\r\n\r\nSocket.prototype._reset = function() {\r\n  debug('reset connection');\r\n  this.resetAndClosing = true;\r\n  return this.destroy();\r\n};\r\n\r\nSocket.prototype._getpeername = function() {\r\n  if (!this._handle || !this._handle.getpeername || this.connecting) {\r\n    return this._peername || {};\r\n  } else if (!this._peername) {\r\n    const out = {};\r\n    const err = this._handle.getpeername(out);\r\n    if (err) return out;\r\n    this._peername = out;\r\n  }\r\n  return this._peername;\r\n};\r\n\r\nfunction protoGetter(name, callback) {\r\n  ObjectDefineProperty(Socket.prototype, name, {\r\n    __proto__: null,\r\n    configurable: false,\r\n    enumerable: true,\r\n    get: callback\r\n  });\r\n}\r\n\r\nprotoGetter('bytesRead', function bytesRead() {\r\n  return this._handle ? this._handle.bytesRead : this[kBytesRead];\r\n});\r\n\r\nprotoGetter('remoteAddress', function remoteAddress() {\r\n  return this._getpeername().address;\r\n});\r\n\r\nprotoGetter('remoteFamily', function remoteFamily() {\r\n  return this._getpeername().family;\r\n});\r\n\r\nprotoGetter('remotePort', function remotePort() {\r\n  return this._getpeername().port;\r\n});\r\n\r\n\r\nSocket.prototype._getsockname = function() {\r\n  if (!this._handle || !this._handle.getsockname) {\r\n    return {};\r\n  } else if (!this._sockname) {\r\n    this._sockname = {};\r\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\r\n    this._handle.getsockname(this._sockname);\r\n  }\r\n  return this._sockname;\r\n};\r\n\r\n\r\nprotoGetter('localAddress', function localAddress() {\r\n  return this._getsockname().address;\r\n});\r\n\r\n\r\nprotoGetter('localPort', function localPort() {\r\n  return this._getsockname().port;\r\n});\r\n\r\nprotoGetter('localFamily', function localFamily() {\r\n  return this._getsockname().family;\r\n});\r\n\r\nSocket.prototype[kAfterAsyncWrite] = function() {\r\n  this[kLastWriteQueueSize] = 0;\r\n};\r\n\r\nSocket.prototype._writeGeneric = function(writev, data, encoding, cb) {\r\n  // If we are still connecting, then buffer this for later.\r\n  // The Writable logic will buffer up any more writes while\r\n  // waiting for this one to be done.\r\n  if (this.connecting) {\r\n    this._pendingData = data;\r\n    this._pendingEncoding = encoding;\r\n    this.once('connect', function connect() {\r\n      this.off('close', onClose);\r\n      this._writeGeneric(writev, data, encoding, cb);\r\n    });\r\n    function onClose() {\r\n      cb(new ERR_SOCKET_CLOSED_BEFORE_CONNECTION());\r\n    }\r\n    this.once('close', onClose);\r\n    return;\r\n  }\r\n  this._pendingData = null;\r\n  this._pendingEncoding = '';\r\n\r\n  if (!this._handle) {\r\n    cb(new ERR_SOCKET_CLOSED());\r\n    return false;\r\n  }\r\n\r\n  this._unrefTimer();\r\n\r\n  let req;\r\n  if (writev)\r\n    req = writevGeneric(this, data, cb);\r\n  else\r\n    req = writeGeneric(this, data, encoding, cb);\r\n  if (req.async)\r\n    this[kLastWriteQueueSize] = req.bytes;\r\n};\r\n\r\n\r\nSocket.prototype._writev = function(chunks, cb) {\r\n  this._writeGeneric(true, chunks, '', cb);\r\n};\r\n\r\n\r\nSocket.prototype._write = function(data, encoding, cb) {\r\n  this._writeGeneric(false, data, encoding, cb);\r\n};\r\n\r\n\r\n// Legacy alias. Having this is probably being overly cautious, but it doesn't\r\n// really hurt anyone either. This can probably be removed safely if desired.\r\nprotoGetter('_bytesDispatched', function _bytesDispatched() {\r\n  return this._handle ? this._handle.bytesWritten : this[kBytesWritten];\r\n});\r\n\r\nprotoGetter('bytesWritten', function bytesWritten() {\r\n  let bytes = this._bytesDispatched;\r\n  const data = this._pendingData;\r\n  const encoding = this._pendingEncoding;\r\n  const writableBuffer = this.writableBuffer;\r\n\r\n  if (!writableBuffer)\r\n    return undefined;\r\n\r\n  for (const el of writableBuffer) {\r\n    bytes += el.chunk instanceof Buffer ?\r\n      el.chunk.length :\r\n      Buffer.byteLength(el.chunk, el.encoding);\r\n  }\r\n\r\n  if (ArrayIsArray(data)) {\r\n    // Was a writev, iterate over chunks to get total length\r\n    for (let i = 0; i < data.length; i++) {\r\n      const chunk = data[i];\r\n\r\n      if (data.allBuffers || chunk instanceof Buffer)\r\n        bytes += chunk.length;\r\n      else\r\n        bytes += Buffer.byteLength(chunk.chunk, chunk.encoding);\r\n    }\r\n  } else if (data) {\r\n    // Writes are either a string or a Buffer.\r\n    if (typeof data !== 'string')\r\n      bytes += data.length;\r\n    else\r\n      bytes += Buffer.byteLength(data, encoding);\r\n  }\r\n\r\n  return bytes;\r\n});\r\n\r\n\r\nfunction checkBindError(err, port, handle) {\r\n  // EADDRINUSE may not be reported until we call listen() or connect().\r\n  // To complicate matters, a failed bind() followed by listen() or connect()\r\n  // will implicitly bind to a random port. Ergo, check that the socket is\r\n  // bound to the expected port before calling listen() or connect().\r\n  //\r\n  // FIXME(bnoordhuis) Doesn't work for pipe handles, they don't have a\r\n  // getsockname() method. Non-issue for now, the cluster module doesn't\r\n  // really support pipes anyway.\r\n  if (err === 0 && port > 0 && handle.getsockname) {\r\n    const out = {};\r\n    err = handle.getsockname(out);\r\n    if (err === 0 && port !== out.port) {\r\n      debug(`checkBindError, bound to ${out.port} instead of ${port}`);\r\n      err = UV_EADDRINUSE;\r\n    }\r\n  }\r\n  return err;\r\n}\r\n\r\n\r\nfunction internalConnect(\r\n  self, address, port, addressType, localAddress, localPort, flags) {\r\n  // TODO return promise from Socket.prototype.connect which\r\n  // wraps _connectReq.\r\n\r\n  assert(self.connecting);\r\n\r\n  let err;\r\n\r\n  if (localAddress || localPort) {\r\n    if (addressType === 4) {\r\n      localAddress = localAddress || DEFAULT_IPV4_ADDR;\r\n      err = self._handle.bind(localAddress, localPort);\r\n    } else { // addressType === 6\r\n      localAddress = localAddress || DEFAULT_IPV6_ADDR;\r\n      err = self._handle.bind6(localAddress, localPort, flags);\r\n    }\r\n    debug('binding to localAddress: %s and localPort: %d (addressType: %d)',\r\n          localAddress, localPort, addressType);\r\n\r\n    err = checkBindError(err, localPort, self._handle);\r\n    if (err) {\r\n      const ex = exceptionWithHostPort(err, 'bind', localAddress, localPort);\r\n      self.destroy(ex);\r\n      return;\r\n    }\r\n  }\r\n\r\n  if (addressType === 6 || addressType === 4) {\r\n    const req = new TCPConnectWrap();\r\n    req.oncomplete = afterConnect;\r\n    req.address = address;\r\n    req.port = port;\r\n    req.localAddress = localAddress;\r\n    req.localPort = localPort;\r\n\r\n    if (addressType === 4)\r\n      err = self._handle.connect(req, address, port);\r\n    else\r\n      err = self._handle.connect6(req, address, port);\r\n  } else {\r\n    const req = new PipeConnectWrap();\r\n    req.address = address;\r\n    req.oncomplete = afterConnect;\r\n\r\n    err = self._handle.connect(req, address);\r\n  }\r\n\r\n  if (err) {\r\n    const sockname = self._getsockname();\r\n    let details;\r\n\r\n    if (sockname) {\r\n      details = sockname.address + ':' + sockname.port;\r\n    }\r\n\r\n    const ex = exceptionWithHostPort(err, 'connect', address, port, details);\r\n    self.destroy(ex);\r\n  } else if ((addressType === 6 || addressType === 4) && hasObserver('net')) {\r\n    startPerf(self, kPerfHooksNetConnectContext, { type: 'net', name: 'connect', detail: { host: address, port } });\r\n  }\r\n}\r\n\r\n\r\nfunction internalConnectMultiple(context) {\r\n  clearTimeout(context[kTimeout]);\r\n  const self = context.socket;\r\n  assert(self.connecting);\r\n\r\n  // All connections have been tried without success, destroy with error\r\n  if (context.current === context.addresses.length) {\r\n    self.destroy(aggregateErrors(context.errors));\r\n    return;\r\n  }\r\n\r\n  const { localPort, port, flags } = context;\r\n  const { address, family: addressType } = context.addresses[context.current++];\r\n  const handle = new TCP(TCPConstants.SOCKET);\r\n  let localAddress;\r\n  let err;\r\n\r\n  if (localPort) {\r\n    if (addressType === 4) {\r\n      localAddress = DEFAULT_IPV4_ADDR;\r\n      err = handle.bind(localAddress, localPort);\r\n    } else { // addressType === 6\r\n      localAddress = DEFAULT_IPV6_ADDR;\r\n      err = handle.bind6(localAddress, localPort, flags);\r\n    }\r\n\r\n    debug('connect/multiple: binding to localAddress: %s and localPort: %d (addressType: %d)',\r\n          localAddress, localPort, addressType);\r\n\r\n    err = checkBindError(err, localPort, handle);\r\n    if (err) {\r\n      ArrayPrototypePush(context.errors, exceptionWithHostPort(err, 'bind', localAddress, localPort));\r\n      internalConnectMultiple(context);\r\n      return;\r\n    }\r\n  }\r\n\r\n  const req = new TCPConnectWrap();\r\n  req.oncomplete = FunctionPrototypeBind(afterConnectMultiple, undefined, context);\r\n  req.address = address;\r\n  req.port = port;\r\n  req.localAddress = localAddress;\r\n  req.localPort = localPort;\r\n\r\n  if (addressType === 4) {\r\n    err = handle.connect(req, address, port);\r\n  } else {\r\n    err = handle.connect6(req, address, port);\r\n  }\r\n\r\n  if (err) {\r\n    const sockname = self._getsockname();\r\n    let details;\r\n\r\n    if (sockname) {\r\n      details = sockname.address + ':' + sockname.port;\r\n    }\r\n\r\n    ArrayPrototypePush(context.errors, exceptionWithHostPort(err, 'connect', address, port, details));\r\n    internalConnectMultiple(context);\r\n    return;\r\n  }\r\n\r\n  // If the attempt has not returned an error, start the connection timer\r\n  context[kTimeout] = setTimeout(internalConnectMultipleTimeout, context.timeout, context, req);\r\n}\r\n\r\nSocket.prototype.connect = function(...args) {\r\n  let normalized;\r\n  // If passed an array, it's treated as an array of arguments that have\r\n  // already been normalized (so we don't normalize more than once). This has\r\n  // been solved before in https://github.com/nodejs/node/pull/12342, but was\r\n  // reverted as it had unintended side effects.\r\n  if (ArrayIsArray(args[0]) && args[0][normalizedArgsSymbol]) {\r\n    normalized = args[0];\r\n  } else {\r\n    normalized = normalizeArgs(args);\r\n  }\r\n  const options = normalized[0];\r\n  const cb = normalized[1];\r\n\r\n  // options.port === null will be checked later.\r\n  if (options.port === undefined && options.path == null)\r\n    throw new ERR_MISSING_ARGS(['options', 'port', 'path']);\r\n\r\n  if (this.write !== Socket.prototype.write)\r\n    this.write = Socket.prototype.write;\r\n\r\n  if (this.destroyed) {\r\n    this._handle = null;\r\n    this._peername = null;\r\n    this._sockname = null;\r\n  }\r\n\r\n  const { path } = options;\r\n  const pipe = !!path;\r\n  debug('pipe', pipe, path);\r\n\r\n  if (!this._handle) {\r\n    this._handle = pipe ?\r\n      new Pipe(PipeConstants.SOCKET) :\r\n      new TCP(TCPConstants.SOCKET);\r\n    initSocketHandle(this);\r\n  }\r\n\r\n  if (cb !== null) {\r\n    this.once('connect', cb);\r\n  }\r\n\r\n  this._unrefTimer();\r\n\r\n  this.connecting = true;\r\n\r\n  if (pipe) {\r\n    validateString(path, 'options.path');\r\n    defaultTriggerAsyncIdScope(\r\n      this[async_id_symbol], internalConnect, this, path\r\n    );\r\n  } else {\r\n    lookupAndConnect(this, options);\r\n  }\r\n  return this;\r\n};\r\n\r\nfunction socketToDnsFamily(family) {\r\n  switch (family) {\r\n    case 'IPv4':\r\n      return 4;\r\n    case 'IPv6':\r\n      return 6;\r\n  }\r\n\r\n  return family;\r\n}\r\n\r\nfunction lookupAndConnect(self, options) {\r\n  const { localAddress, localPort, autoSelectFamily } = options;\r\n  const host = options.host || 'localhost';\r\n  let { port, autoSelectFamilyAttemptTimeout } = options;\r\n\r\n  if (localAddress && !isIP(localAddress)) {\r\n    throw new ERR_INVALID_IP_ADDRESS(localAddress);\r\n  }\r\n\r\n  if (localPort) {\r\n    validateNumber(localPort, 'options.localPort');\r\n  }\r\n\r\n  if (typeof port !== 'undefined') {\r\n    if (typeof port !== 'number' && typeof port !== 'string') {\r\n      throw new ERR_INVALID_ARG_TYPE('options.port',\r\n                                     ['number', 'string'], port);\r\n    }\r\n    validatePort(port);\r\n  }\r\n  port |= 0;\r\n\r\n  if (autoSelectFamily !== undefined) {\r\n    validateBoolean(autoSelectFamily);\r\n  }\r\n\r\n  if (autoSelectFamilyAttemptTimeout !== undefined) {\r\n    validateInt32(autoSelectFamilyAttemptTimeout, 'options.autoSelectFamilyAttemptTimeout', 1);\r\n\r\n    if (autoSelectFamilyAttemptTimeout < 10) {\r\n      autoSelectFamilyAttemptTimeout = 10;\r\n    }\r\n  } else {\r\n    autoSelectFamilyAttemptTimeout = 250;\r\n  }\r\n\r\n  // If host is an IP, skip performing a lookup\r\n  const addressType = isIP(host);\r\n  if (addressType) {\r\n    defaultTriggerAsyncIdScope(self[async_id_symbol], process.nextTick, () => {\r\n      if (self.connecting)\r\n        defaultTriggerAsyncIdScope(\r\n          self[async_id_symbol],\r\n          internalConnect,\r\n          self, host, port, addressType, localAddress, localPort\r\n        );\r\n    });\r\n    return;\r\n  }\r\n\r\n  if (options.lookup !== undefined)\r\n    validateFunction(options.lookup, 'options.lookup');\r\n\r\n  if (dns === undefined) dns = require('dns');\r\n  const dnsopts = {\r\n    family: socketToDnsFamily(options.family),\r\n    hints: options.hints || 0\r\n  };\r\n\r\n  if (!isWindows &&\r\n      dnsopts.family !== 4 &&\r\n      dnsopts.family !== 6 &&\r\n      dnsopts.hints === 0) {\r\n    dnsopts.hints = dns.ADDRCONFIG;\r\n  }\r\n\r\n  debug('connect: find host', host);\r\n  debug('connect: dns options', dnsopts);\r\n  self._host = host;\r\n  const lookup = options.lookup || dns.lookup;\r\n\r\n  if (dnsopts.family !== 4 && dnsopts.family !== 6 && !localAddress && autoSelectFamily) {\r\n    debug('connect: autodetecting');\r\n\r\n    dnsopts.all = true;\r\n    lookupAndConnectMultiple(\r\n      self,\r\n      async_id_symbol,\r\n      lookup,\r\n      host,\r\n      options,\r\n      dnsopts,\r\n      port,\r\n      localPort,\r\n      autoSelectFamilyAttemptTimeout\r\n    );\r\n\r\n    return;\r\n  }\r\n\r\n  defaultTriggerAsyncIdScope(self[async_id_symbol], function() {\r\n    lookup(host, dnsopts, function emitLookup(err, ip, addressType) {\r\n      self.emit('lookup', err, ip, addressType, host);\r\n\r\n      // It's possible we were destroyed while looking this up.\r\n      // XXX it would be great if we could cancel the promise returned by\r\n      // the look up.\r\n      if (!self.connecting) return;\r\n\r\n      if (err) {\r\n        // net.createConnection() creates a net.Socket object and immediately\r\n        // calls net.Socket.connect() on it (that's us). There are no event\r\n        // listeners registered yet so defer the error event to the next tick.\r\n        process.nextTick(connectErrorNT, self, err);\r\n      } else if (!isIP(ip)) {\r\n        err = new ERR_INVALID_IP_ADDRESS(ip);\r\n        process.nextTick(connectErrorNT, self, err);\r\n      } else if (addressType !== 4 && addressType !== 6) {\r\n        err = new ERR_INVALID_ADDRESS_FAMILY(addressType,\r\n                                             options.host,\r\n                                             options.port);\r\n        process.nextTick(connectErrorNT, self, err);\r\n      } else {\r\n        self._unrefTimer();\r\n        defaultTriggerAsyncIdScope(\r\n          self[async_id_symbol],\r\n          internalConnect,\r\n          self, ip, port, addressType, localAddress, localPort\r\n        );\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nfunction lookupAndConnectMultiple(self, async_id_symbol, lookup, host, options, dnsopts, port, localPort, timeout) {\r\n  defaultTriggerAsyncIdScope(self[async_id_symbol], function emitLookup() {\r\n    lookup(host, dnsopts, function emitLookup(err, addresses) {\r\n      // It's possible we were destroyed while looking this up.\r\n      // XXX it would be great if we could cancel the promise returned by\r\n      // the look up.\r\n      if (!self.connecting) {\r\n        return;\r\n      } else if (err) {\r\n        // net.createConnection() creates a net.Socket object and immediately\r\n        // calls net.Socket.connect() on it (that's us). There are no event\r\n        // listeners registered yet so defer the error event to the next tick.\r\n        process.nextTick(connectErrorNT, self, err);\r\n        return;\r\n      }\r\n\r\n      // Filter addresses by only keeping the one which are either IPv4 or IPV6.\r\n      // The first valid address determines which group has preference on the\r\n      // alternate family sorting which happens later.\r\n      const validIps = [[], []];\r\n      let destinations;\r\n      for (let i = 0, l = addresses.length; i < l; i++) {\r\n        const address = addresses[i];\r\n        const { address: ip, family: addressType } = address;\r\n        self.emit('lookup', err, ip, addressType, host);\r\n\r\n        if (isIP(ip) && (addressType === 4 || addressType === 6)) {\r\n          if (!destinations) {\r\n            destinations = addressType === 6 ? { 6: 0, 4: 1 } : { 4: 0, 6: 1 };\r\n          }\r\n\r\n          ArrayPrototypePush(validIps[destinations[addressType]], address);\r\n        }\r\n      }\r\n\r\n      // When no AAAA or A records are available, fail on the first one\r\n      if (!validIps[0].length && !validIps[1].length) {\r\n        const { address: firstIp, family: firstAddressType } = addresses[0];\r\n\r\n        if (!isIP(firstIp)) {\r\n          err = new ERR_INVALID_IP_ADDRESS(firstIp);\r\n          process.nextTick(connectErrorNT, self, err);\r\n        } else if (firstAddressType !== 4 && firstAddressType !== 6) {\r\n          err = new ERR_INVALID_ADDRESS_FAMILY(firstAddressType,\r\n                                               options.host,\r\n                                               options.port);\r\n          process.nextTick(connectErrorNT, self, err);\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      // Sort addresses alternating families\r\n      const toAttempt = [];\r\n      for (let i = 0, l = MathMax(validIps[0].length, validIps[1].length); i < l; i++) {\r\n        if (i in validIps[0]) {\r\n          ArrayPrototypePush(toAttempt, validIps[0][i]);\r\n        }\r\n        if (i in validIps[1]) {\r\n          ArrayPrototypePush(toAttempt, validIps[1][i]);\r\n        }\r\n      }\r\n\r\n      const context = {\r\n        socket: self,\r\n        addresses,\r\n        current: 0,\r\n        port,\r\n        localPort,\r\n        timeout,\r\n        [kTimeout]: null,\r\n        [kTimeoutTriggered]: false,\r\n        errors: [],\r\n      };\r\n\r\n      self._unrefTimer();\r\n      defaultTriggerAsyncIdScope(self[async_id_symbol], internalConnectMultiple, context);\r\n    });\r\n  });\r\n}\r\n\r\nfunction connectErrorNT(self, err) {\r\n  self.destroy(err);\r\n}\r\n\r\n\r\nSocket.prototype.ref = function() {\r\n  if (!this._handle) {\r\n    this.once('connect', this.ref);\r\n    return this;\r\n  }\r\n\r\n  if (typeof this._handle.ref === 'function') {\r\n    this._handle.ref();\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n\r\nSocket.prototype.unref = function() {\r\n  if (!this._handle) {\r\n    this.once('connect', this.unref);\r\n    return this;\r\n  }\r\n\r\n  if (typeof this._handle.unref === 'function') {\r\n    this._handle.unref();\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n\r\nfunction afterConnect(status, handle, req, readable, writable) {\r\n  const self = handle[owner_symbol];\r\n\r\n  // Callback may come after call to destroy\r\n  if (self.destroyed) {\r\n    return;\r\n  }\r\n\r\n  debug('afterConnect');\r\n\r\n  assert(self.connecting);\r\n  self.connecting = false;\r\n  self._sockname = null;\r\n\r\n  if (status === 0) {\r\n    if (self.readable && !readable) {\r\n      self.push(null);\r\n      self.read();\r\n    }\r\n    if (self.writable && !writable) {\r\n      self.end();\r\n    }\r\n    self._unrefTimer();\r\n\r\n    if (self[kSetNoDelay] && self._handle.setNoDelay) {\r\n      self._handle.setNoDelay(true);\r\n    }\r\n\r\n    if (self[kSetKeepAlive] && self._handle.setKeepAlive) {\r\n      self._handle.setKeepAlive(true, self[kSetKeepAliveInitialDelay]);\r\n    }\r\n\r\n    self.emit('connect');\r\n    self.emit('ready');\r\n\r\n    // Start the first read, or get an immediate EOF.\r\n    // this doesn't actually consume any bytes, because len=0.\r\n    if (readable && !self.isPaused())\r\n      self.read(0);\r\n    if (self[kPerfHooksNetConnectContext] && hasObserver('net')) {\r\n      stopPerf(self, kPerfHooksNetConnectContext);\r\n    }\r\n  } else {\r\n    let details;\r\n    if (req.localAddress && req.localPort) {\r\n      details = req.localAddress + ':' + req.localPort;\r\n    }\r\n    const ex = exceptionWithHostPort(status,\r\n                                     'connect',\r\n                                     req.address,\r\n                                     req.port,\r\n                                     details);\r\n    if (details) {\r\n      ex.localAddress = req.localAddress;\r\n      ex.localPort = req.localPort;\r\n    }\r\n    self.destroy(ex);\r\n  }\r\n}\r\n\r\nfunction afterConnectMultiple(context, status, handle, req, readable, writable) {\r\n  const self = context.socket;\r\n\r\n  // Make sure another connection is not spawned\r\n  clearTimeout(context[kTimeout]);\r\n\r\n  // Some error occurred, add to the list of exceptions\r\n  if (status !== 0) {\r\n    let details;\r\n    if (req.localAddress && req.localPort) {\r\n      details = req.localAddress + ':' + req.localPort;\r\n    }\r\n    const ex = exceptionWithHostPort(status,\r\n                                     'connect',\r\n                                     req.address,\r\n                                     req.port,\r\n                                     details);\r\n    if (details) {\r\n      ex.localAddress = req.localAddress;\r\n      ex.localPort = req.localPort;\r\n    }\r\n\r\n    ArrayPrototypePush(context.errors, ex);\r\n\r\n    // Try the next address\r\n    internalConnectMultiple(context);\r\n    return;\r\n  }\r\n\r\n  // One of the connection has completed and correctly dispatched but after timeout, ignore this one\r\n  if (context[kTimeoutTriggered]) {\r\n    debug('connect/multiple: ignoring successful but timedout connection to %s:%s', req.address, req.port);\r\n    handle.close();\r\n    return;\r\n  }\r\n\r\n  // Perform initialization sequence on the handle, then move on with the regular callback\r\n  self._handle = handle;\r\n  initSocketHandle(self);\r\n\r\n  if (self[kWrapConnectedHandle]) {\r\n    self[kWrapConnectedHandle](handle);\r\n    initSocketHandle(self); // This is called again to initialize the TLSWrap\r\n  }\r\n\r\n  if (hasObserver('net')) {\r\n    startPerf(\r\n      self,\r\n      kPerfHooksNetConnectContext,\r\n      { type: 'net', name: 'connect', detail: { host: req.address, port: req.port } }\r\n    );\r\n  }\r\n\r\n  afterConnect(status, handle, req, readable, writable);\r\n}\r\n\r\nfunction internalConnectMultipleTimeout(context, req) {\r\n  context[kTimeoutTriggered] = true;\r\n  internalConnectMultiple(context);\r\n}\r\n\r\nfunction addAbortSignalOption(self, options) {\r\n  if (options?.signal === undefined) {\r\n    return;\r\n  }\r\n  validateAbortSignal(options.signal, 'options.signal');\r\n  const { signal } = options;\r\n  const onAborted = () => {\r\n    self.close();\r\n  };\r\n  if (signal.aborted) {\r\n    process.nextTick(onAborted);\r\n  } else {\r\n    signal.addEventListener('abort', onAborted);\r\n    self.once('close', () => signal.removeEventListener('abort', onAborted));\r\n  }\r\n}\r\n\r\nfunction Server(options, connectionListener) {\r\n  if (!(this instanceof Server))\r\n    return new Server(options, connectionListener);\r\n\r\n  EventEmitter.call(this);\r\n\r\n  if (typeof options === 'function') {\r\n    connectionListener = options;\r\n    options = kEmptyObject;\r\n    this.on('connection', connectionListener);\r\n  } else if (options == null || typeof options === 'object') {\r\n    options = { ...options };\r\n\r\n    if (typeof connectionListener === 'function') {\r\n      this.on('connection', connectionListener);\r\n    }\r\n  } else {\r\n    throw new ERR_INVALID_ARG_TYPE('options', 'Object', options);\r\n  }\r\n  if (typeof options.keepAliveInitialDelay !== 'undefined') {\r\n    validateNumber(\r\n      options.keepAliveInitialDelay, 'options.keepAliveInitialDelay'\r\n    );\r\n\r\n    if (options.keepAliveInitialDelay < 0) {\r\n      options.keepAliveInitialDelay = 0;\r\n    }\r\n  }\r\n\r\n  this._connections = 0;\r\n\r\n  this[async_id_symbol] = -1;\r\n  this._handle = null;\r\n  this._usingWorkers = false;\r\n  this._workers = [];\r\n  this._unref = false;\r\n\r\n  this.allowHalfOpen = options.allowHalfOpen || false;\r\n  this.pauseOnConnect = !!options.pauseOnConnect;\r\n  this.noDelay = Boolean(options.noDelay);\r\n  this.keepAlive = Boolean(options.keepAlive);\r\n  this.keepAliveInitialDelay = ~~(options.keepAliveInitialDelay / 1000);\r\n}\r\nObjectSetPrototypeOf(Server.prototype, EventEmitter.prototype);\r\nObjectSetPrototypeOf(Server, EventEmitter);\r\n\r\n\r\nfunction toNumber(x) { return (x = Number(x)) >= 0 ? x : false; }\r\n\r\n// Returns handle if it can be created, or error code if it can't\r\nfunction createServerHandle(address, port, addressType, fd, flags) {\r\n  let err = 0;\r\n  // Assign handle in listen, and clean up if bind or listen fails\r\n  let handle;\r\n\r\n  let isTCP = false;\r\n  if (typeof fd === 'number' && fd >= 0) {\r\n    try {\r\n      handle = createHandle(fd, true);\r\n    } catch (e) {\r\n      // Not a fd we can listen on.  This will trigger an error.\r\n      debug('listen invalid fd=%d:', fd, e.message);\r\n      return UV_EINVAL;\r\n    }\r\n\r\n    err = handle.open(fd);\r\n    if (err)\r\n      return err;\r\n\r\n    assert(!address && !port);\r\n  } else if (port === -1 && addressType === -1) {\r\n    handle = new Pipe(PipeConstants.SERVER);\r\n    if (isWindows) {\r\n      const instances = NumberParseInt(process.env.NODE_PENDING_PIPE_INSTANCES);\r\n      if (!NumberIsNaN(instances)) {\r\n        handle.setPendingInstances(instances);\r\n      }\r\n    }\r\n  } else {\r\n    handle = new TCP(TCPConstants.SERVER);\r\n    isTCP = true;\r\n  }\r\n\r\n  if (address || port || isTCP) {\r\n    debug('bind to', address || 'any');\r\n    if (!address) {\r\n      // Try binding to ipv6 first\r\n      err = handle.bind6(DEFAULT_IPV6_ADDR, port, flags);\r\n      if (err) {\r\n        handle.close();\r\n        // Fallback to ipv4\r\n        return createServerHandle(DEFAULT_IPV4_ADDR, port);\r\n      }\r\n    } else if (addressType === 6) {\r\n      err = handle.bind6(address, port, flags);\r\n    } else {\r\n      err = handle.bind(address, port);\r\n    }\r\n  }\r\n\r\n  if (err) {\r\n    handle.close();\r\n    return err;\r\n  }\r\n\r\n  return handle;\r\n}\r\n\r\nfunction setupListenHandle(address, port, addressType, backlog, fd, flags) {\r\n  debug('setupListenHandle', address, port, addressType, backlog, fd);\r\n\r\n  // If there is not yet a handle, we need to create one and bind.\r\n  // In the case of a server sent via IPC, we don't need to do this.\r\n  if (this._handle) {\r\n    debug('setupListenHandle: have a handle already');\r\n  } else {\r\n    debug('setupListenHandle: create a handle');\r\n\r\n    let rval = null;\r\n\r\n    // Try to bind to the unspecified IPv6 address, see if IPv6 is available\r\n    if (!address && typeof fd !== 'number') {\r\n      rval = createServerHandle(DEFAULT_IPV6_ADDR, port, 6, fd, flags);\r\n\r\n      if (typeof rval === 'number') {\r\n        rval = null;\r\n        address = DEFAULT_IPV4_ADDR;\r\n        addressType = 4;\r\n      } else {\r\n        address = DEFAULT_IPV6_ADDR;\r\n        addressType = 6;\r\n      }\r\n    }\r\n\r\n    if (rval === null)\r\n      rval = createServerHandle(address, port, addressType, fd, flags);\r\n\r\n    if (typeof rval === 'number') {\r\n      const error = uvExceptionWithHostPort(rval, 'listen', address, port);\r\n      process.nextTick(emitErrorNT, this, error);\r\n      return;\r\n    }\r\n    this._handle = rval;\r\n  }\r\n\r\n  this[async_id_symbol] = getNewAsyncId(this._handle);\r\n  this._handle.onconnection = onconnection;\r\n  this._handle[owner_symbol] = this;\r\n\r\n  // Use a backlog of 512 entries. We pass 511 to the listen() call because\r\n  // the kernel does: backlogsize = roundup_pow_of_two(backlogsize + 1);\r\n  // which will thus give us a backlog of 512 entries.\r\n  const err = this._handle.listen(backlog || 511);\r\n\r\n  if (err) {\r\n    const ex = uvExceptionWithHostPort(err, 'listen', address, port);\r\n    this._handle.close();\r\n    this._handle = null;\r\n    defaultTriggerAsyncIdScope(this[async_id_symbol],\r\n                               process.nextTick,\r\n                               emitErrorNT,\r\n                               this,\r\n                               ex);\r\n    return;\r\n  }\r\n\r\n  // Generate connection key, this should be unique to the connection\r\n  this._connectionKey = addressType + ':' + address + ':' + port;\r\n\r\n  // Unref the handle if the server was unref'ed prior to listening\r\n  if (this._unref)\r\n    this.unref();\r\n\r\n  defaultTriggerAsyncIdScope(this[async_id_symbol],\r\n                             process.nextTick,\r\n                             emitListeningNT,\r\n                             this);\r\n}\r\n\r\nServer.prototype._listen2 = setupListenHandle;  // legacy alias\r\n\r\nfunction emitErrorNT(self, err) {\r\n  self.emit('error', err);\r\n}\r\n\r\n\r\nfunction emitListeningNT(self) {\r\n  // Ensure handle hasn't closed\r\n  if (self._handle)\r\n    self.emit('listening');\r\n}\r\n\r\n\r\nfunction listenInCluster(server, address, port, addressType,\r\n                         backlog, fd, exclusive, flags, options) {\r\n  exclusive = !!exclusive;\r\n\r\n  if (cluster === undefined) cluster = require('cluster');\r\n\r\n  if (cluster.isPrimary || exclusive) {\r\n    // Will create a new handle\r\n    // _listen2 sets up the listened handle, it is still named like this\r\n    // to avoid breaking code that wraps this method\r\n    server._listen2(address, port, addressType, backlog, fd, flags);\r\n    return;\r\n  }\r\n\r\n  const serverQuery = {\r\n    address: address,\r\n    port: port,\r\n    addressType: addressType,\r\n    fd: fd,\r\n    flags,\r\n    backlog,\r\n    ...options,\r\n  };\r\n  // Get the primary's server handle, and listen on it\r\n  cluster._getServer(server, serverQuery, listenOnPrimaryHandle);\r\n\r\n  function listenOnPrimaryHandle(err, handle) {\r\n    err = checkBindError(err, port, handle);\r\n\r\n    if (err) {\r\n      const ex = exceptionWithHostPort(err, 'bind', address, port);\r\n      return server.emit('error', ex);\r\n    }\r\n\r\n    // Reuse primary's server handle\r\n    server._handle = handle;\r\n    // _listen2 sets up the listened handle, it is still named like this\r\n    // to avoid breaking code that wraps this method\r\n    server._listen2(address, port, addressType, backlog, fd, flags);\r\n  }\r\n}\r\n\r\n\r\nServer.prototype.listen = function(...args) {\r\n  const normalized = normalizeArgs(args);\r\n  let options = normalized[0];\r\n  const cb = normalized[1];\r\n\r\n  if (this._handle) {\r\n    throw new ERR_SERVER_ALREADY_LISTEN();\r\n  }\r\n\r\n  if (cb !== null) {\r\n    this.once('listening', cb);\r\n  }\r\n  const backlogFromArgs =\r\n    // (handle, backlog) or (path, backlog) or (port, backlog)\r\n    toNumber(args.length > 1 && args[1]) ||\r\n    toNumber(args.length > 2 && args[2]);  // (port, host, backlog)\r\n\r\n  options = options._handle || options.handle || options;\r\n  const flags = getFlags(options.ipv6Only);\r\n  // (handle[, backlog][, cb]) where handle is an object with a handle\r\n  if (options instanceof TCP) {\r\n    this._handle = options;\r\n    this[async_id_symbol] = this._handle.getAsyncId();\r\n    listenInCluster(this, null, -1, -1, backlogFromArgs);\r\n    return this;\r\n  }\r\n  addAbortSignalOption(this, options);\r\n  // (handle[, backlog][, cb]) where handle is an object with a fd\r\n  if (typeof options.fd === 'number' && options.fd >= 0) {\r\n    listenInCluster(this, null, null, null, backlogFromArgs, options.fd);\r\n    return this;\r\n  }\r\n\r\n  // ([port][, host][, backlog][, cb]) where port is omitted,\r\n  // that is, listen(), listen(null), listen(cb), or listen(null, cb)\r\n  // or (options[, cb]) where options.port is explicitly set as undefined or\r\n  // null, bind to an arbitrary unused port\r\n  if (args.length === 0 || typeof args[0] === 'function' ||\r\n      (typeof options.port === 'undefined' && 'port' in options) ||\r\n      options.port === null) {\r\n    options.port = 0;\r\n  }\r\n  // ([port][, host][, backlog][, cb]) where port is specified\r\n  // or (options[, cb]) where options.port is specified\r\n  // or if options.port is normalized as 0 before\r\n  let backlog;\r\n  if (typeof options.port === 'number' || typeof options.port === 'string') {\r\n    validatePort(options.port, 'options.port');\r\n    backlog = options.backlog || backlogFromArgs;\r\n    // start TCP server listening on host:port\r\n    if (options.host) {\r\n      lookupAndListen(this, options.port | 0, options.host, backlog,\r\n                      options.exclusive, flags);\r\n    } else { // Undefined host, listens on unspecified address\r\n      // Default addressType 4 will be used to search for primary server\r\n      listenInCluster(this, null, options.port | 0, 4,\r\n                      backlog, undefined, options.exclusive);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  // (path[, backlog][, cb]) or (options[, cb])\r\n  // where path or options.path is a UNIX domain socket or Windows pipe\r\n  if (options.path && isPipeName(options.path)) {\r\n    const pipeName = this._pipeName = options.path;\r\n    backlog = options.backlog || backlogFromArgs;\r\n    listenInCluster(this,\r\n                    pipeName,\r\n                    -1,\r\n                    -1,\r\n                    backlog,\r\n                    undefined,\r\n                    options.exclusive,\r\n                    undefined,\r\n                    {\r\n                      readableAll: options.readableAll,\r\n                      writableAll: options.writableAll,\r\n                    });\r\n\r\n    if (!this._handle) {\r\n      // Failed and an error shall be emitted in the next tick.\r\n      // Therefore, we directly return.\r\n      return this;\r\n    }\r\n\r\n    let mode = 0;\r\n    if (options.readableAll === true)\r\n      mode |= PipeConstants.UV_READABLE;\r\n    if (options.writableAll === true)\r\n      mode |= PipeConstants.UV_WRITABLE;\r\n    if (mode !== 0) {\r\n      const err = this._handle.fchmod(mode);\r\n      if (err) {\r\n        this._handle.close();\r\n        this._handle = null;\r\n        throw errnoException(err, 'uv_pipe_chmod');\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  if (!(('port' in options) || ('path' in options))) {\r\n    throw new ERR_INVALID_ARG_VALUE('options', options,\r\n                                    'must have the property \"port\" or \"path\"');\r\n  }\r\n\r\n  throw new ERR_INVALID_ARG_VALUE('options', options);\r\n};\r\n\r\nfunction lookupAndListen(self, port, address, backlog, exclusive, flags) {\r\n  if (dns === undefined) dns = require('dns');\r\n  dns.lookup(address, function doListen(err, ip, addressType) {\r\n    if (err) {\r\n      self.emit('error', err);\r\n    } else {\r\n      addressType = ip ? addressType : 4;\r\n      listenInCluster(self, ip, port, addressType,\r\n                      backlog, undefined, exclusive, flags);\r\n    }\r\n  });\r\n}\r\n\r\nObjectDefineProperty(Server.prototype, 'listening', {\r\n  __proto__: null,\r\n  get: function() {\r\n    return !!this._handle;\r\n  },\r\n  configurable: true,\r\n  enumerable: true\r\n});\r\n\r\nServer.prototype.address = function() {\r\n  if (this._handle && this._handle.getsockname) {\r\n    const out = {};\r\n    const err = this._handle.getsockname(out);\r\n    if (err) {\r\n      throw errnoException(err, 'address');\r\n    }\r\n    return out;\r\n  } else if (this._pipeName) {\r\n    return this._pipeName;\r\n  }\r\n  return null;\r\n};\r\n\r\nfunction onconnection(err, clientHandle) {\r\n  const handle = this;\r\n  const self = handle[owner_symbol];\r\n\r\n  debug('onconnection');\r\n\r\n  if (err) {\r\n    self.emit('error', errnoException(err, 'accept'));\r\n    return;\r\n  }\r\n\r\n  if (self.maxConnections && self._connections >= self.maxConnections) {\r\n    if (clientHandle.getsockname || clientHandle.getpeername) {\r\n      const data = ObjectCreate(null);\r\n      if (clientHandle.getsockname) {\r\n        const localInfo = ObjectCreate(null);\r\n        clientHandle.getsockname(localInfo);\r\n        data.localAddress = localInfo.address;\r\n        data.localPort = localInfo.port;\r\n        data.localFamily = localInfo.family;\r\n      }\r\n      if (clientHandle.getpeername) {\r\n        const remoteInfo = ObjectCreate(null);\r\n        clientHandle.getpeername(remoteInfo);\r\n        data.remoteAddress = remoteInfo.address;\r\n        data.remotePort = remoteInfo.port;\r\n        data.remoteFamily = remoteInfo.family;\r\n      }\r\n      self.emit('drop', data);\r\n    } else {\r\n      self.emit('drop');\r\n    }\r\n    clientHandle.close();\r\n    return;\r\n  }\r\n\r\n  const socket = new Socket({\r\n    handle: clientHandle,\r\n    allowHalfOpen: self.allowHalfOpen,\r\n    pauseOnCreate: self.pauseOnConnect,\r\n    readable: true,\r\n    writable: true\r\n  });\r\n\r\n  if (self.noDelay && clientHandle.setNoDelay) {\r\n    socket[kSetNoDelay] = true;\r\n    clientHandle.setNoDelay(true);\r\n  }\r\n  if (self.keepAlive && clientHandle.setKeepAlive) {\r\n    socket[kSetKeepAlive] = true;\r\n    socket[kSetKeepAliveInitialDelay] = self.keepAliveInitialDelay;\r\n    clientHandle.setKeepAlive(true, self.keepAliveInitialDelay);\r\n  }\r\n\r\n  self._connections++;\r\n  socket.server = self;\r\n  socket._server = self;\r\n\r\n  DTRACE_NET_SERVER_CONNECTION(socket);\r\n  self.emit('connection', socket);\r\n  lazyChannels();\r\n  if (netServerSocketChannel.hasSubscribers) {\r\n    netServerSocketChannel.publish({\r\n      socket,\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Gets the number of concurrent connections on the server\r\n * @param {Function} cb\r\n * @returns {Server}\r\n */\r\n\r\nServer.prototype.getConnections = function(cb) {\r\n  const self = this;\r\n\r\n  function end(err, connections) {\r\n    defaultTriggerAsyncIdScope(self[async_id_symbol],\r\n                               process.nextTick,\r\n                               cb,\r\n                               err,\r\n                               connections);\r\n  }\r\n\r\n  if (!this._usingWorkers) {\r\n    end(null, this._connections);\r\n    return this;\r\n  }\r\n\r\n  // Poll workers\r\n  let left = this._workers.length;\r\n  let total = this._connections;\r\n\r\n  function oncount(err, count) {\r\n    if (err) {\r\n      left = -1;\r\n      return end(err);\r\n    }\r\n\r\n    total += count;\r\n    if (--left === 0) return end(null, total);\r\n  }\r\n\r\n  for (let n = 0; n < this._workers.length; n++) {\r\n    this._workers[n].getConnections(oncount);\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n\r\nServer.prototype.close = function(cb) {\r\n  if (typeof cb === 'function') {\r\n    if (!this._handle) {\r\n      this.once('close', function close() {\r\n        cb(new ERR_SERVER_NOT_RUNNING());\r\n      });\r\n    } else {\r\n      this.once('close', cb);\r\n    }\r\n  }\r\n\r\n  if (this._handle) {\r\n    this._handle.close();\r\n    this._handle = null;\r\n  }\r\n\r\n  if (this._usingWorkers) {\r\n    let left = this._workers.length;\r\n    const onWorkerClose = () => {\r\n      if (--left !== 0) return;\r\n\r\n      this._connections = 0;\r\n      this._emitCloseIfDrained();\r\n    };\r\n\r\n    // Increment connections to be sure that, even if all sockets will be closed\r\n    // during polling of workers, `close` event will be emitted only once.\r\n    this._connections++;\r\n\r\n    // Poll workers\r\n    for (let n = 0; n < this._workers.length; n++)\r\n      this._workers[n].close(onWorkerClose);\r\n  } else {\r\n    this._emitCloseIfDrained();\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\nServer.prototype._emitCloseIfDrained = function() {\r\n  debug('SERVER _emitCloseIfDrained');\r\n\r\n  if (this._handle || this._connections) {\r\n    debug('SERVER handle? %j   connections? %d',\r\n          !!this._handle, this._connections);\r\n    return;\r\n  }\r\n\r\n  defaultTriggerAsyncIdScope(this[async_id_symbol],\r\n                             process.nextTick,\r\n                             emitCloseNT,\r\n                             this);\r\n};\r\n\r\n\r\nfunction emitCloseNT(self) {\r\n  debug('SERVER: emit close');\r\n  self.emit('close');\r\n}\r\n\r\n\r\nServer.prototype[EventEmitter.captureRejectionSymbol] = function(\r\n  err, event, sock) {\r\n\r\n  switch (event) {\r\n    case 'connection':\r\n      sock.destroy(err);\r\n      break;\r\n    default:\r\n      this.emit('error', err);\r\n  }\r\n};\r\n\r\n\r\n// Legacy alias on the C++ wrapper object. This is not public API, so we may\r\n// want to runtime-deprecate it at some point. There's no hurry, though.\r\nObjectDefineProperty(TCP.prototype, 'owner', {\r\n  __proto__: null,\r\n  get() { return this[owner_symbol]; },\r\n  set(v) { return this[owner_symbol] = v; }\r\n});\r\n\r\nObjectDefineProperty(Socket.prototype, '_handle', {\r\n  __proto__: null,\r\n  get() { return this[kHandle]; },\r\n  set(v) { return this[kHandle] = v; }\r\n});\r\n\r\nServer.prototype._setupWorker = function(socketList) {\r\n  this._usingWorkers = true;\r\n  this._workers.push(socketList);\r\n  socketList.once('exit', (socketList) => {\r\n    const index = ArrayPrototypeIndexOf(this._workers, socketList);\r\n    this._workers.splice(index, 1);\r\n  });\r\n};\r\n\r\nServer.prototype.ref = function() {\r\n  this._unref = false;\r\n\r\n  if (this._handle)\r\n    this._handle.ref();\r\n\r\n  return this;\r\n};\r\n\r\nServer.prototype.unref = function() {\r\n  this._unref = true;\r\n\r\n  if (this._handle)\r\n    this._handle.unref();\r\n\r\n  return this;\r\n};\r\n\r\nlet _setSimultaneousAccepts;\r\nlet warnSimultaneousAccepts = true;\r\n\r\nif (isWindows) {\r\n  let simultaneousAccepts;\r\n\r\n  _setSimultaneousAccepts = function(handle) {\r\n    if (warnSimultaneousAccepts) {\r\n      process.emitWarning(\r\n        'net._setSimultaneousAccepts() is deprecated and will be removed.',\r\n        'DeprecationWarning', 'DEP0121');\r\n      warnSimultaneousAccepts = false;\r\n    }\r\n    if (handle === undefined) {\r\n      return;\r\n    }\r\n\r\n    if (simultaneousAccepts === undefined) {\r\n      simultaneousAccepts = (process.env.NODE_MANY_ACCEPTS &&\r\n                             process.env.NODE_MANY_ACCEPTS !== '0');\r\n    }\r\n\r\n    if (handle._simultaneousAccepts !== simultaneousAccepts) {\r\n      handle.setSimultaneousAccepts(!!simultaneousAccepts);\r\n      handle._simultaneousAccepts = simultaneousAccepts;\r\n    }\r\n  };\r\n} else {\r\n  _setSimultaneousAccepts = function() {\r\n    if (warnSimultaneousAccepts) {\r\n      process.emitWarning(\r\n        'net._setSimultaneousAccepts() is deprecated and will be removed.',\r\n        'DeprecationWarning', 'DEP0121');\r\n      warnSimultaneousAccepts = false;\r\n    }\r\n  };\r\n}\r\n\r\nmodule.exports = {\r\n  _createServerHandle: createServerHandle,\r\n  _normalizeArgs: normalizeArgs,\r\n  _setSimultaneousAccepts,\r\n  get BlockList() {\r\n    BlockList ??= require('internal/blocklist').BlockList;\r\n    return BlockList;\r\n  },\r\n  get SocketAddress() {\r\n    SocketAddress ??= require('internal/socketaddress').SocketAddress;\r\n    return SocketAddress;\r\n  },\r\n  connect,\r\n  createConnection: connect,\r\n  createServer,\r\n  isIP: isIP,\r\n  isIPv4: isIPv4,\r\n  isIPv6: isIPv6,\r\n  Server,\r\n  Socket,\r\n  Stream: Socket, // Legacy naming\r\n};\r\n",
    "name": "node:net",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 463,
    "sourcePositions": []
  },
  {
    "url": "node:internal/dtrace",
    "source": "'use strict';\r\n\r\nconst config = internalBinding('config');\r\n\r\nconst {\r\n  DTRACE_HTTP_CLIENT_REQUEST = () => {},\r\n  DTRACE_HTTP_CLIENT_RESPONSE = () => {},\r\n  DTRACE_HTTP_SERVER_REQUEST = () => {},\r\n  DTRACE_HTTP_SERVER_RESPONSE = () => {},\r\n  DTRACE_NET_SERVER_CONNECTION = () => {},\r\n  DTRACE_NET_STREAM_END = () => {}\r\n} = (config.hasDtrace ? internalBinding('dtrace') : {});\r\n\r\nmodule.exports = {\r\n  DTRACE_HTTP_CLIENT_REQUEST,\r\n  DTRACE_HTTP_CLIENT_RESPONSE,\r\n  DTRACE_HTTP_SERVER_REQUEST,\r\n  DTRACE_HTTP_SERVER_RESPONSE,\r\n  DTRACE_NET_SERVER_CONNECTION,\r\n  DTRACE_NET_STREAM_END\r\n};\r\n",
    "name": "dtrace",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 464,
    "sourcePositions": []
  },
  {
    "url": "node:internal/blocklist",
    "source": "'use strict';\r\n\r\nconst {\r\n  Boolean,\r\n  ObjectSetPrototypeOf,\r\n  Symbol\r\n} = primordials;\r\n\r\nconst {\r\n  BlockList: BlockListHandle,\r\n} = internalBinding('block_list');\r\n\r\nconst {\r\n  customInspectSymbol: kInspect,\r\n} = require('internal/util');\r\n\r\nconst {\r\n  SocketAddress,\r\n  kHandle: kSocketAddressHandle,\r\n} = require('internal/socketaddress');\r\n\r\nconst {\r\n  JSTransferable,\r\n  kClone,\r\n  kDeserialize,\r\n} = require('internal/worker/js_transferable');\r\n\r\nconst { inspect } = require('internal/util/inspect');\r\n\r\nconst kHandle = Symbol('kHandle');\r\nconst { owner_symbol } = internalBinding('symbols');\r\n\r\nconst {\r\n  ERR_INVALID_ARG_VALUE,\r\n} = require('internal/errors').codes;\r\n\r\nconst { validateInt32, validateString } = require('internal/validators');\r\n\r\nclass BlockList extends JSTransferable {\r\n  constructor() {\r\n    super();\r\n    this[kHandle] = new BlockListHandle();\r\n    this[kHandle][owner_symbol] = this;\r\n  }\r\n\r\n  [kInspect](depth, options) {\r\n    if (depth < 0)\r\n      return this;\r\n\r\n    const opts = {\r\n      ...options,\r\n      depth: options.depth == null ? null : options.depth - 1\r\n    };\r\n\r\n    return `BlockList ${inspect({\r\n      rules: this.rules\r\n    }, opts)}`;\r\n  }\r\n\r\n  addAddress(address, family = 'ipv4') {\r\n    if (!SocketAddress.isSocketAddress(address)) {\r\n      validateString(address, 'address');\r\n      validateString(family, 'family');\r\n      address = new SocketAddress({\r\n        address,\r\n        family,\r\n      });\r\n    }\r\n    this[kHandle].addAddress(address[kSocketAddressHandle]);\r\n  }\r\n\r\n  addRange(start, end, family = 'ipv4') {\r\n    if (!SocketAddress.isSocketAddress(start)) {\r\n      validateString(start, 'start');\r\n      validateString(family, 'family');\r\n      start = new SocketAddress({\r\n        address: start,\r\n        family,\r\n      });\r\n    }\r\n    if (!SocketAddress.isSocketAddress(end)) {\r\n      validateString(end, 'end');\r\n      validateString(family, 'family');\r\n      end = new SocketAddress({\r\n        address: end,\r\n        family,\r\n      });\r\n    }\r\n    const ret = this[kHandle].addRange(\r\n      start[kSocketAddressHandle],\r\n      end[kSocketAddressHandle]);\r\n    if (ret === false)\r\n      throw new ERR_INVALID_ARG_VALUE('start', start, 'must come before end');\r\n  }\r\n\r\n  addSubnet(network, prefix, family = 'ipv4') {\r\n    if (!SocketAddress.isSocketAddress(network)) {\r\n      validateString(network, 'network');\r\n      validateString(family, 'family');\r\n      network = new SocketAddress({\r\n        address: network,\r\n        family,\r\n      });\r\n    }\r\n    switch (network.family) {\r\n      case 'ipv4':\r\n        validateInt32(prefix, 'prefix', 0, 32);\r\n        break;\r\n      case 'ipv6':\r\n        validateInt32(prefix, 'prefix', 0, 128);\r\n        break;\r\n    }\r\n    this[kHandle].addSubnet(network[kSocketAddressHandle], prefix);\r\n  }\r\n\r\n  check(address, family = 'ipv4') {\r\n    if (!SocketAddress.isSocketAddress(address)) {\r\n      validateString(address, 'address');\r\n      validateString(family, 'family');\r\n      try {\r\n        address = new SocketAddress({\r\n          address,\r\n          family,\r\n        });\r\n      } catch {\r\n        // Ignore the error. If it's not a valid address, return false.\r\n        return false;\r\n      }\r\n    }\r\n    return Boolean(this[kHandle].check(address[kSocketAddressHandle]));\r\n  }\r\n\r\n  get rules() {\r\n    return this[kHandle].getRules();\r\n  }\r\n\r\n  [kClone]() {\r\n    const handle = this[kHandle];\r\n    return {\r\n      data: { handle },\r\n      deserializeInfo: 'internal/blocklist:InternalBlockList',\r\n    };\r\n  }\r\n\r\n  [kDeserialize]({ handle }) {\r\n    this[kHandle] = handle;\r\n    this[kHandle][owner_symbol] = this;\r\n  }\r\n}\r\n\r\nclass InternalBlockList extends JSTransferable {\r\n  constructor(handle) {\r\n    super();\r\n    this[kHandle] = handle;\r\n    if (handle !== undefined)\r\n      handle[owner_symbol] = this;\r\n  }\r\n}\r\n\r\nInternalBlockList.prototype.constructor = BlockList.prototype.constructor;\r\nObjectSetPrototypeOf(InternalBlockList.prototype, BlockList.prototype);\r\n\r\nmodule.exports = {\r\n  BlockList,\r\n  InternalBlockList,\r\n};\r\n",
    "name": "blocklist",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 465,
    "sourcePositions": []
  },
  {
    "url": "node:internal/socketaddress",
    "source": "'use strict';\r\n\r\nconst {\r\n  ObjectSetPrototypeOf,\r\n  Symbol,\r\n} = primordials;\r\n\r\nconst {\r\n  SocketAddress: _SocketAddress,\r\n  AF_INET,\r\n  AF_INET6,\r\n} = internalBinding('block_list');\r\n\r\nconst {\r\n  validateObject,\r\n  validateString,\r\n  validatePort,\r\n  validateUint32,\r\n} = require('internal/validators');\r\n\r\nconst {\r\n  codes: {\r\n    ERR_INVALID_ARG_VALUE,\r\n  },\r\n} = require('internal/errors');\r\n\r\nconst {\r\n  customInspectSymbol: kInspect,\r\n  kEmptyObject,\r\n} = require('internal/util');\r\n\r\nconst { inspect } = require('internal/util/inspect');\r\n\r\nconst {\r\n  JSTransferable,\r\n  kClone,\r\n  kDeserialize,\r\n} = require('internal/worker/js_transferable');\r\n\r\nconst kHandle = Symbol('kHandle');\r\nconst kDetail = Symbol('kDetail');\r\n\r\nclass SocketAddress extends JSTransferable {\r\n  static isSocketAddress(value) {\r\n    return value?.[kHandle] !== undefined;\r\n  }\r\n\r\n  constructor(options = kEmptyObject) {\r\n    super();\r\n    validateObject(options, 'options');\r\n    let { family = 'ipv4' } = options;\r\n    const {\r\n      address = (family === 'ipv4' ? '127.0.0.1' : '::'),\r\n      port = 0,\r\n      flowlabel = 0,\r\n    } = options;\r\n\r\n    let type;\r\n    if (typeof family?.toLowerCase === 'function')\r\n      family = family.toLowerCase();\r\n    switch (family) {\r\n      case 'ipv4':\r\n        type = AF_INET;\r\n        break;\r\n      case 'ipv6':\r\n        type = AF_INET6;\r\n        break;\r\n      default:\r\n        throw new ERR_INVALID_ARG_VALUE('options.family', options.family);\r\n    }\r\n\r\n    validateString(address, 'options.address');\r\n    validatePort(port, 'options.port');\r\n    validateUint32(flowlabel, 'options.flowlabel', false);\r\n\r\n    this[kHandle] = new _SocketAddress(address, port, type, flowlabel);\r\n    this[kDetail] = this[kHandle].detail({\r\n      address: undefined,\r\n      port: undefined,\r\n      family: undefined,\r\n      flowlabel: undefined,\r\n    });\r\n  }\r\n\r\n  get address() {\r\n    return this[kDetail].address;\r\n  }\r\n\r\n  get port() {\r\n    return this[kDetail].port;\r\n  }\r\n\r\n  get family() {\r\n    return this[kDetail].family === AF_INET ? 'ipv4' : 'ipv6';\r\n  }\r\n\r\n  get flowlabel() {\r\n    // The flow label can be changed internally.\r\n    return this[kHandle].flowlabel();\r\n  }\r\n\r\n  [kInspect](depth, options) {\r\n    if (depth < 0)\r\n      return this;\r\n\r\n    const opts = {\r\n      ...options,\r\n      depth: options.depth == null ? null : options.depth - 1\r\n    };\r\n\r\n    return `SocketAddress ${inspect(this.toJSON(), opts)}`;\r\n  }\r\n\r\n  [kClone]() {\r\n    const handle = this[kHandle];\r\n    return {\r\n      data: { handle },\r\n      deserializeInfo: 'internal/socketaddress:InternalSocketAddress',\r\n    };\r\n  }\r\n\r\n  [kDeserialize]({ handle }) {\r\n    this[kHandle] = handle;\r\n    this[kDetail] = handle.detail({\r\n      address: undefined,\r\n      port: undefined,\r\n      family: undefined,\r\n      flowlabel: undefined,\r\n    });\r\n  }\r\n\r\n  toJSON() {\r\n    return {\r\n      address: this.address,\r\n      port: this.port,\r\n      family: this.family,\r\n      flowlabel: this.flowlabel,\r\n    };\r\n  }\r\n}\r\n\r\nclass InternalSocketAddress extends JSTransferable {\r\n  constructor(handle) {\r\n    super();\r\n    this[kHandle] = handle;\r\n    this[kDetail] = this[kHandle]?.detail({\r\n      address: undefined,\r\n      port: undefined,\r\n      family: undefined,\r\n      flowlabel: undefined,\r\n    });\r\n  }\r\n}\r\n\r\nInternalSocketAddress.prototype.constructor =\r\n  SocketAddress.prototype.constructor;\r\nObjectSetPrototypeOf(InternalSocketAddress.prototype, SocketAddress.prototype);\r\n\r\nmodule.exports = {\r\n  SocketAddress,\r\n  InternalSocketAddress,\r\n  kHandle,\r\n};\r\n",
    "name": "socketaddress",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 466,
    "sourcePositions": []
  },
  {
    "url": "node:internal/modules/esm/formats",
    "source": "'use strict';\r\n\r\nconst {\r\n  RegExpPrototypeExec,\r\n} = primordials;\r\nconst { getOptionValue } = require('internal/options');\r\n\r\n\r\nconst experimentalWasmModules = getOptionValue('--experimental-wasm-modules');\r\n\r\nconst extensionFormatMap = {\r\n  '__proto__': null,\r\n  '.cjs': 'commonjs',\r\n  '.js': 'module',\r\n  '.json': 'json',\r\n  '.mjs': 'module',\r\n};\r\n\r\nconst legacyExtensionFormatMap = {\r\n  '__proto__': null,\r\n  '.cjs': 'commonjs',\r\n  '.js': 'commonjs',\r\n  '.json': 'commonjs',\r\n  '.mjs': 'module',\r\n  '.node': 'commonjs',\r\n};\r\n\r\nif (experimentalWasmModules) {\r\n  extensionFormatMap['.wasm'] = legacyExtensionFormatMap['.wasm'] = 'wasm';\r\n}\r\n\r\n/**\r\n * @param {string} mime\r\n * @returns {string | null}\r\n */\r\nfunction mimeToFormat(mime) {\r\n  if (\r\n    RegExpPrototypeExec(\r\n      /\\s*(text|application)\\/javascript\\s*(;\\s*charset=utf-?8\\s*)?/i,\r\n      mime\r\n    ) !== null\r\n  ) return 'module';\r\n  if (mime === 'application/json') return 'json';\r\n  if (experimentalWasmModules && mime === 'application/wasm') return 'wasm';\r\n  return null;\r\n}\r\n\r\nfunction getLegacyExtensionFormat(ext) {\r\n  return legacyExtensionFormatMap[ext];\r\n}\r\n\r\nmodule.exports = {\r\n  extensionFormatMap,\r\n  getLegacyExtensionFormat,\r\n  legacyExtensionFormatMap,\r\n  mimeToFormat,\r\n};\r\n",
    "name": "formats",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 467,
    "sourcePositions": []
  },
  {
    "url": "node:internal/modules/esm/initialize_import_meta",
    "source": "'use strict';\r\n\r\nconst { getOptionValue } = require('internal/options');\r\nconst experimentalImportMetaResolve =\r\n  getOptionValue('--experimental-import-meta-resolve');\r\nconst {\r\n  PromisePrototypeThen,\r\n  PromiseReject,\r\n} = primordials;\r\nconst asyncESM = require('internal/process/esm_loader');\r\n\r\nfunction createImportMetaResolve(defaultParentUrl) {\r\n  return async function resolve(specifier, parentUrl = defaultParentUrl) {\r\n    return PromisePrototypeThen(\r\n      asyncESM.esmLoader.resolve(specifier, parentUrl),\r\n      ({ url }) => url,\r\n      (error) => (\r\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT' ?\r\n          error.url : PromiseReject(error))\r\n    );\r\n  };\r\n}\r\n\r\n/**\r\n * @param {object} meta\r\n * @param {{url: string}} context\r\n */\r\nfunction initializeImportMeta(meta, context) {\r\n  const { url } = context;\r\n\r\n  // Alphabetical\r\n  if (experimentalImportMetaResolve) {\r\n    meta.resolve = createImportMetaResolve(url);\r\n  }\r\n\r\n  meta.url = url;\r\n}\r\n\r\nmodule.exports = {\r\n  initializeImportMeta\r\n};\r\n",
    "name": "initialize_import_meta",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 468,
    "sourcePositions": []
  },
  {
    "url": "node:internal/modules/esm/load",
    "source": "'use strict';\r\n\r\nconst {\r\n  ArrayPrototypePush,\r\n  RegExpPrototypeExec,\r\n  decodeURIComponent,\r\n} = primordials;\r\n\r\nconst { defaultGetFormat } = require('internal/modules/esm/get_format');\r\nconst { validateAssertions } = require('internal/modules/esm/assert');\r\nconst { getOptionValue } = require('internal/options');\r\nconst { fetchModule } = require('internal/modules/esm/fetch_module');\r\n\r\n// Do not eagerly grab .manifest, it may be in TDZ\r\nconst policy = getOptionValue('--experimental-policy') ?\r\n  require('internal/process/policy') :\r\n  null;\r\nconst experimentalNetworkImports =\r\n  getOptionValue('--experimental-network-imports');\r\n\r\nconst { Buffer: { from: BufferFrom } } = require('buffer');\r\n\r\nconst { readFile: readFileAsync } = require('internal/fs/promises').exports;\r\nconst { URL } = require('internal/url');\r\nconst {\r\n  ERR_INVALID_URL,\r\n  ERR_UNSUPPORTED_ESM_URL_SCHEME,\r\n} = require('internal/errors').codes;\r\n\r\nconst DATA_URL_PATTERN = /^[^/]+\\/[^,;]+(?:[^,]*?)(;base64)?,([\\s\\S]*)$/;\r\n\r\nasync function getSource(url, context) {\r\n  const parsed = new URL(url);\r\n  let responseURL = url;\r\n  let source;\r\n  if (parsed.protocol === 'file:') {\r\n    source = await readFileAsync(parsed);\r\n  } else if (parsed.protocol === 'data:') {\r\n    const match = RegExpPrototypeExec(DATA_URL_PATTERN, parsed.pathname);\r\n    if (!match) {\r\n      throw new ERR_INVALID_URL(url);\r\n    }\r\n    const { 1: base64, 2: body } = match;\r\n    source = BufferFrom(decodeURIComponent(body), base64 ? 'base64' : 'utf8');\r\n  } else if (experimentalNetworkImports && (\r\n    parsed.protocol === 'https:' ||\r\n    parsed.protocol === 'http:'\r\n  )) {\r\n    const res = await fetchModule(parsed, context);\r\n    source = await res.body;\r\n    responseURL = res.resolvedHREF;\r\n  } else {\r\n    const supportedSchemes = ['file', 'data'];\r\n    if (experimentalNetworkImports) {\r\n      ArrayPrototypePush(supportedSchemes, 'http', 'https');\r\n    }\r\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed, supportedSchemes);\r\n  }\r\n  if (policy?.manifest) {\r\n    policy.manifest.assertIntegrity(parsed, source);\r\n  }\r\n  return { __proto__: null, responseURL, source };\r\n}\r\n\r\n\r\n/**\r\n * Node.js default load hook.\r\n * @param {string} url\r\n * @param {object} context\r\n * @returns {object}\r\n */\r\nasync function defaultLoad(url, context) {\r\n  let responseURL = url;\r\n  const { importAssertions } = context;\r\n  let {\r\n    format,\r\n    source,\r\n  } = context;\r\n\r\n  if (format == null) {\r\n    format = await defaultGetFormat(url, context);\r\n  }\r\n\r\n  validateAssertions(url, format, importAssertions);\r\n\r\n  if (\r\n    format === 'builtin' ||\r\n    format === 'commonjs'\r\n  ) {\r\n    source = null;\r\n  } else if (source == null) {\r\n    ({ responseURL, source } = await getSource(url, context));\r\n  }\r\n\r\n  return {\r\n    __proto__: null,\r\n    format,\r\n    responseURL,\r\n    source,\r\n  };\r\n}\r\n\r\nmodule.exports = {\r\n  defaultLoad,\r\n};\r\n",
    "name": "load",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 469,
    "sourcePositions": []
  },
  {
    "url": "node:internal/fs/promises",
    "source": "'use strict';\r\n\r\nconst {\r\n  ArrayPrototypePush,\r\n  Error,\r\n  MathMax,\r\n  MathMin,\r\n  NumberIsSafeInteger,\r\n  Promise,\r\n  PromisePrototypeThen,\r\n  PromiseResolve,\r\n  PromiseReject,\r\n  SafeArrayIterator,\r\n  SafePromisePrototypeFinally,\r\n  Symbol,\r\n  Uint8Array,\r\n} = primordials;\r\n\r\nconst { fs: constants } = internalBinding('constants');\r\nconst {\r\n  F_OK,\r\n  O_SYMLINK,\r\n  O_WRONLY,\r\n  S_IFMT,\r\n  S_IFREG\r\n} = constants;\r\n\r\nconst binding = internalBinding('fs');\r\nconst { Buffer } = require('buffer');\r\n\r\nconst {\r\n  codes: {\r\n    ERR_FS_FILE_TOO_LARGE,\r\n    ERR_INVALID_ARG_VALUE,\r\n    ERR_INVALID_STATE,\r\n    ERR_METHOD_NOT_IMPLEMENTED,\r\n  },\r\n  AbortError,\r\n  aggregateTwoErrors,\r\n} = require('internal/errors');\r\nconst { isArrayBufferView } = require('internal/util/types');\r\nconst { rimrafPromises } = require('internal/fs/rimraf');\r\nconst {\r\n  constants: {\r\n    kIoMaxLength,\r\n    kMaxUserId,\r\n    kReadFileBufferLength,\r\n    kReadFileUnknownBufferLength,\r\n    kWriteFileMaxChunkSize,\r\n  },\r\n  copyObject,\r\n  emitRecursiveRmdirWarning,\r\n  getDirents,\r\n  getOptions,\r\n  getStatFsFromBinding,\r\n  getStatsFromBinding,\r\n  getValidatedPath,\r\n  getValidMode,\r\n  nullCheck,\r\n  preprocessSymlinkDestination,\r\n  stringToFlags,\r\n  stringToSymlinkType,\r\n  toUnixTimestamp,\r\n  validateBufferArray,\r\n  validateCpOptions,\r\n  validateOffsetLengthRead,\r\n  validateOffsetLengthWrite,\r\n  validateRmOptions,\r\n  validateRmdirOptions,\r\n  validatePrimitiveStringAfterArrayBufferView,\r\n  warnOnNonPortableTemplate,\r\n} = require('internal/fs/utils');\r\nconst { opendir } = require('internal/fs/dir');\r\nconst {\r\n  parseFileMode,\r\n  validateAbortSignal,\r\n  validateBoolean,\r\n  validateBuffer,\r\n  validateEncoding,\r\n  validateInteger,\r\n  validateString,\r\n} = require('internal/validators');\r\nconst pathModule = require('path');\r\nconst {\r\n  kEmptyObject,\r\n  lazyDOMException,\r\n  promisify,\r\n} = require('internal/util');\r\nconst { EventEmitterMixin } = require('internal/event_target');\r\nconst { StringDecoder } = require('string_decoder');\r\nconst { watch } = require('internal/fs/watchers');\r\nconst { isIterable } = require('internal/streams/utils');\r\nconst assert = require('internal/assert');\r\n\r\nconst kHandle = Symbol('kHandle');\r\nconst kFd = Symbol('kFd');\r\nconst kRefs = Symbol('kRefs');\r\nconst kClosePromise = Symbol('kClosePromise');\r\nconst kCloseResolve = Symbol('kCloseResolve');\r\nconst kCloseReject = Symbol('kCloseReject');\r\nconst kRef = Symbol('kRef');\r\nconst kUnref = Symbol('kUnref');\r\nconst kLocked = Symbol('kLocked');\r\n\r\nconst { kUsePromises } = binding;\r\nconst { Interface } = require('internal/readline/interface');\r\nconst {\r\n  JSTransferable, kDeserialize, kTransfer, kTransferList\r\n} = require('internal/worker/js_transferable');\r\n\r\nconst {\r\n  newReadableStreamFromStreamBase,\r\n} = require('internal/webstreams/adapters');\r\n\r\nconst {\r\n  readableStreamCancel,\r\n} = require('internal/webstreams/readablestream');\r\n\r\nconst getDirectoryEntriesPromise = promisify(getDirents);\r\nconst validateRmOptionsPromise = promisify(validateRmOptions);\r\n\r\nlet cpPromises;\r\nfunction lazyLoadCpPromises() {\r\n  return cpPromises ??= require('internal/fs/cp/cp').cpFn;\r\n}\r\n\r\n// Lazy loaded to avoid circular dependency.\r\nlet fsStreams;\r\nfunction lazyFsStreams() {\r\n  return fsStreams ??= require('internal/fs/streams');\r\n}\r\n\r\nclass FileHandle extends EventEmitterMixin(JSTransferable) {\r\n  /**\r\n   * @param {InternalFSBinding.FileHandle | undefined} filehandle\r\n   */\r\n  constructor(filehandle) {\r\n    super();\r\n    this[kHandle] = filehandle;\r\n    this[kFd] = filehandle ? filehandle.fd : -1;\r\n\r\n    this[kRefs] = 1;\r\n    this[kClosePromise] = null;\r\n  }\r\n\r\n  getAsyncId() {\r\n    return this[kHandle].getAsyncId();\r\n  }\r\n\r\n  get fd() {\r\n    return this[kFd];\r\n  }\r\n\r\n  appendFile(data, options) {\r\n    return fsCall(writeFile, this, data, options);\r\n  }\r\n\r\n  chmod(mode) {\r\n    return fsCall(fchmod, this, mode);\r\n  }\r\n\r\n  chown(uid, gid) {\r\n    return fsCall(fchown, this, uid, gid);\r\n  }\r\n\r\n  datasync() {\r\n    return fsCall(fdatasync, this);\r\n  }\r\n\r\n  sync() {\r\n    return fsCall(fsync, this);\r\n  }\r\n\r\n  read(buffer, offset, length, position) {\r\n    return fsCall(read, this, buffer, offset, length, position);\r\n  }\r\n\r\n  readv(buffers, position) {\r\n    return fsCall(readv, this, buffers, position);\r\n  }\r\n\r\n  readFile(options) {\r\n    return fsCall(readFile, this, options);\r\n  }\r\n\r\n  readLines(options = undefined) {\r\n    return new Interface({\r\n      input: this.createReadStream(options),\r\n      crlfDelay: Infinity,\r\n    });\r\n  }\r\n\r\n  stat(options) {\r\n    return fsCall(fstat, this, options);\r\n  }\r\n\r\n  truncate(len = 0) {\r\n    return fsCall(ftruncate, this, len);\r\n  }\r\n\r\n  utimes(atime, mtime) {\r\n    return fsCall(futimes, this, atime, mtime);\r\n  }\r\n\r\n  write(buffer, offset, length, position) {\r\n    return fsCall(write, this, buffer, offset, length, position);\r\n  }\r\n\r\n  writev(buffers, position) {\r\n    return fsCall(writev, this, buffers, position);\r\n  }\r\n\r\n  writeFile(data, options) {\r\n    return fsCall(writeFile, this, data, options);\r\n  }\r\n\r\n  close = () => {\r\n    if (this[kFd] === -1) {\r\n      return PromiseResolve();\r\n    }\r\n\r\n    if (this[kClosePromise]) {\r\n      return this[kClosePromise];\r\n    }\r\n\r\n    this[kRefs]--;\r\n    if (this[kRefs] === 0) {\r\n      this[kFd] = -1;\r\n      this[kClosePromise] = SafePromisePrototypeFinally(\r\n        this[kHandle].close(),\r\n        () => { this[kClosePromise] = undefined; }\r\n      );\r\n    } else {\r\n      this[kClosePromise] = SafePromisePrototypeFinally(\r\n        new Promise((resolve, reject) => {\r\n          this[kCloseResolve] = resolve;\r\n          this[kCloseReject] = reject;\r\n        }), () => {\r\n          this[kClosePromise] = undefined;\r\n          this[kCloseReject] = undefined;\r\n          this[kCloseResolve] = undefined;\r\n        }\r\n      );\r\n    }\r\n\r\n    this.emit('close');\r\n    return this[kClosePromise];\r\n  };\r\n\r\n  /**\r\n   * @typedef {import('../webstreams/readablestream').ReadableStream\r\n   * } ReadableStream\r\n   * @returns {ReadableStream}\r\n   */\r\n  readableWebStream() {\r\n    if (this[kFd] === -1)\r\n      throw new ERR_INVALID_STATE('The FileHandle is closed');\r\n    if (this[kClosePromise])\r\n      throw new ERR_INVALID_STATE('The FileHandle is closing');\r\n    if (this[kLocked])\r\n      throw new ERR_INVALID_STATE('The FileHandle is locked');\r\n    this[kLocked] = true;\r\n\r\n    const readable = newReadableStreamFromStreamBase(\r\n      this[kHandle],\r\n      undefined,\r\n      { ondone: () => this[kUnref]() });\r\n\r\n    this[kRef]();\r\n    this.once('close', () => {\r\n      readableStreamCancel(readable);\r\n    });\r\n\r\n    return readable;\r\n  }\r\n\r\n  /**\r\n   * @typedef {import('./streams').ReadStream\r\n   * } ReadStream\r\n   * @param {{\r\n   *   encoding?: string;\r\n   *   autoClose?: boolean;\r\n   *   emitClose?: boolean;\r\n   *   start: number;\r\n   *   end?: number;\r\n   *   highWaterMark?: number;\r\n   *   }} [options]\r\n   * @returns {ReadStream}\r\n   */\r\n  createReadStream(options = undefined) {\r\n    const { ReadStream } = lazyFsStreams();\r\n    return new ReadStream(undefined, { ...options, fd: this });\r\n  }\r\n\r\n  /**\r\n   * @typedef {import('./streams').WriteStream\r\n   * } WriteStream\r\n   * @param {{\r\n   *   encoding?: string;\r\n   *   autoClose?: boolean;\r\n   *   emitClose?: boolean;\r\n   *   start: number;\r\n   *   }} [options]\r\n   * @returns {WriteStream}\r\n   */\r\n  createWriteStream(options = undefined) {\r\n    const { WriteStream } = lazyFsStreams();\r\n    return new WriteStream(undefined, { ...options, fd: this });\r\n  }\r\n\r\n  [kTransfer]() {\r\n    if (this[kClosePromise] || this[kRefs] > 1) {\r\n      throw lazyDOMException('Cannot transfer FileHandle while in use',\r\n                             'DataCloneError');\r\n    }\r\n\r\n    const handle = this[kHandle];\r\n    this[kFd] = -1;\r\n    this[kHandle] = null;\r\n    this[kRefs] = 0;\r\n\r\n    return {\r\n      data: { handle },\r\n      deserializeInfo: 'internal/fs/promises:FileHandle'\r\n    };\r\n  }\r\n\r\n  [kTransferList]() {\r\n    return [ this[kHandle] ];\r\n  }\r\n\r\n  [kDeserialize]({ handle }) {\r\n    this[kHandle] = handle;\r\n    this[kFd] = handle.fd;\r\n  }\r\n\r\n  [kRef]() {\r\n    this[kRefs]++;\r\n  }\r\n\r\n  [kUnref]() {\r\n    this[kRefs]--;\r\n    if (this[kRefs] === 0) {\r\n      this[kFd] = -1;\r\n      PromisePrototypeThen(\r\n        this[kHandle].close(),\r\n        this[kCloseResolve],\r\n        this[kCloseReject]\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nasync function handleFdClose(fileOpPromise, closeFunc) {\r\n  return PromisePrototypeThen(\r\n    fileOpPromise,\r\n    (result) => PromisePrototypeThen(closeFunc(), () => result),\r\n    (opError) =>\r\n      PromisePrototypeThen(\r\n        closeFunc(),\r\n        () => PromiseReject(opError),\r\n        (closeError) => PromiseReject(aggregateTwoErrors(closeError, opError))\r\n      )\r\n  );\r\n}\r\n\r\nasync function fsCall(fn, handle, ...args) {\r\n  assert(handle[kRefs] !== undefined,\r\n         'handle must be an instance of FileHandle');\r\n\r\n  if (handle.fd === -1) {\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    const err = new Error('file closed');\r\n    err.code = 'EBADF';\r\n    err.syscall = fn.name;\r\n    throw err;\r\n  }\r\n\r\n  try {\r\n    handle[kRef]();\r\n    return await fn(handle, ...new SafeArrayIterator(args));\r\n  } finally {\r\n    handle[kUnref]();\r\n  }\r\n}\r\n\r\nfunction checkAborted(signal) {\r\n  if (signal?.aborted)\r\n    throw new AbortError(undefined, { cause: signal?.reason });\r\n}\r\n\r\nasync function writeFileHandle(filehandle, data, signal, encoding) {\r\n  checkAborted(signal);\r\n  if (isCustomIterable(data)) {\r\n    for await (const buf of data) {\r\n      checkAborted(signal);\r\n      const toWrite =\r\n        isArrayBufferView(buf) ? buf : Buffer.from(buf, encoding || 'utf8');\r\n      let remaining = toWrite.byteLength;\r\n      while (remaining > 0) {\r\n        const writeSize = MathMin(kWriteFileMaxChunkSize, remaining);\r\n        const { bytesWritten } = await write(\r\n          filehandle, toWrite, toWrite.byteLength - remaining, writeSize);\r\n        remaining -= bytesWritten;\r\n        checkAborted(signal);\r\n      }\r\n    }\r\n    return;\r\n  }\r\n  data = new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\r\n  let remaining = data.byteLength;\r\n  if (remaining === 0) return;\r\n  do {\r\n    checkAborted(signal);\r\n    const { bytesWritten } =\r\n      await write(filehandle, data, 0,\r\n                  MathMin(kWriteFileMaxChunkSize, data.byteLength));\r\n    remaining -= bytesWritten;\r\n    data = new Uint8Array(\r\n      data.buffer,\r\n      data.byteOffset + bytesWritten,\r\n      data.byteLength - bytesWritten\r\n    );\r\n  } while (remaining > 0);\r\n}\r\n\r\nasync function readFileHandle(filehandle, options) {\r\n  const signal = options?.signal;\r\n  const encoding = options?.encoding;\r\n  const decoder = encoding && new StringDecoder(encoding);\r\n\r\n  checkAborted(signal);\r\n\r\n  const statFields = await binding.fstat(filehandle.fd, false, kUsePromises);\r\n\r\n  checkAborted(signal);\r\n\r\n  let size = 0;\r\n  let length = 0;\r\n  if ((statFields[1/* mode */] & S_IFMT) === S_IFREG) {\r\n    size = statFields[8/* size */];\r\n    length = encoding ? MathMin(size, kReadFileBufferLength) : size;\r\n  }\r\n  if (length === 0) {\r\n    length = kReadFileUnknownBufferLength;\r\n  }\r\n\r\n  if (size > kIoMaxLength)\r\n    throw new ERR_FS_FILE_TOO_LARGE(size);\r\n\r\n  let totalRead = 0;\r\n  let buffer = Buffer.allocUnsafeSlow(length);\r\n  let result = '';\r\n  let offset = 0;\r\n  let buffers;\r\n  const chunkedRead = length > kReadFileBufferLength;\r\n\r\n  while (true) {\r\n    checkAborted(signal);\r\n\r\n    if (chunkedRead) {\r\n      length = MathMin(size - totalRead, kReadFileBufferLength);\r\n    }\r\n\r\n    const bytesRead = (await binding.read(filehandle.fd, buffer, offset,\r\n                                          length, -1, kUsePromises)) ?? 0;\r\n    totalRead += bytesRead;\r\n\r\n    if (bytesRead === 0 ||\r\n        totalRead === size ||\r\n        (bytesRead !== buffer.length && !chunkedRead)) {\r\n      const singleRead = bytesRead === totalRead;\r\n\r\n      const bytesToCheck = chunkedRead ? totalRead : bytesRead;\r\n\r\n      if (bytesToCheck !== buffer.length) {\r\n        buffer = buffer.subarray(0, bytesToCheck);\r\n      }\r\n\r\n      if (!encoding) {\r\n        if (size === 0 && !singleRead) {\r\n          ArrayPrototypePush(buffers, buffer);\r\n          return Buffer.concat(buffers, totalRead);\r\n        }\r\n        return buffer;\r\n      }\r\n\r\n      if (singleRead) {\r\n        return buffer.toString(encoding);\r\n      }\r\n      result += decoder.end(buffer);\r\n      return result;\r\n    }\r\n\r\n    if (encoding) {\r\n      result += decoder.write(buffer);\r\n    } else if (size !== 0) {\r\n      offset = totalRead;\r\n    } else {\r\n      buffers ??= [];\r\n      // Unknown file size requires chunks.\r\n      ArrayPrototypePush(buffers, buffer);\r\n      buffer = Buffer.allocUnsafeSlow(kReadFileUnknownBufferLength);\r\n    }\r\n  }\r\n}\r\n\r\n// All of the functions are defined as async in order to ensure that errors\r\n// thrown cause promise rejections rather than being thrown synchronously.\r\nasync function access(path, mode = F_OK) {\r\n  path = getValidatedPath(path);\r\n\r\n  mode = getValidMode(mode, 'access');\r\n  return binding.access(pathModule.toNamespacedPath(path), mode,\r\n                        kUsePromises);\r\n}\r\n\r\nasync function cp(src, dest, options) {\r\n  options = validateCpOptions(options);\r\n  src = pathModule.toNamespacedPath(getValidatedPath(src, 'src'));\r\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest, 'dest'));\r\n  return lazyLoadCpPromises()(src, dest, options);\r\n}\r\n\r\nasync function copyFile(src, dest, mode) {\r\n  src = getValidatedPath(src, 'src');\r\n  dest = getValidatedPath(dest, 'dest');\r\n  mode = getValidMode(mode, 'copyFile');\r\n  return binding.copyFile(pathModule.toNamespacedPath(src),\r\n                          pathModule.toNamespacedPath(dest),\r\n                          mode,\r\n                          kUsePromises);\r\n}\r\n\r\n// Note that unlike fs.open() which uses numeric file descriptors,\r\n// fsPromises.open() uses the fs.FileHandle class.\r\nasync function open(path, flags, mode) {\r\n  path = getValidatedPath(path);\r\n  const flagsNumber = stringToFlags(flags);\r\n  mode = parseFileMode(mode, 'mode', 0o666);\r\n  return new FileHandle(\r\n    await binding.openFileHandle(pathModule.toNamespacedPath(path),\r\n                                 flagsNumber, mode, kUsePromises));\r\n}\r\n\r\nasync function read(handle, bufferOrParams, offset, length, position) {\r\n  let buffer = bufferOrParams;\r\n  if (!isArrayBufferView(buffer)) {\r\n    // This is fh.read(params)\r\n    ({\r\n      buffer = Buffer.alloc(16384),\r\n      offset = 0,\r\n      length = buffer.byteLength - offset,\r\n      position = null,\r\n    } = bufferOrParams ?? kEmptyObject);\r\n\r\n    validateBuffer(buffer);\r\n  }\r\n\r\n  if (offset !== null && typeof offset === 'object') {\r\n    // This is fh.read(buffer, options)\r\n    ({\r\n      offset = 0,\r\n      length = buffer.byteLength - offset,\r\n      position = null,\r\n    } = offset);\r\n  }\r\n\r\n  if (offset == null) {\r\n    offset = 0;\r\n  } else {\r\n    validateInteger(offset, 'offset', 0);\r\n  }\r\n\r\n  length |= 0;\r\n\r\n  if (length === 0)\r\n    return { bytesRead: length, buffer };\r\n\r\n  if (buffer.byteLength === 0) {\r\n    throw new ERR_INVALID_ARG_VALUE('buffer', buffer,\r\n                                    'is empty and cannot be written');\r\n  }\r\n\r\n  validateOffsetLengthRead(offset, length, buffer.byteLength);\r\n\r\n  if (!NumberIsSafeInteger(position))\r\n    position = -1;\r\n\r\n  const bytesRead = (await binding.read(handle.fd, buffer, offset, length,\r\n                                        position, kUsePromises)) || 0;\r\n\r\n  return { bytesRead, buffer };\r\n}\r\n\r\nasync function readv(handle, buffers, position) {\r\n  validateBufferArray(buffers);\r\n\r\n  if (typeof position !== 'number')\r\n    position = null;\r\n\r\n  const bytesRead = (await binding.readBuffers(handle.fd, buffers, position,\r\n                                               kUsePromises)) || 0;\r\n  return { bytesRead, buffers };\r\n}\r\n\r\nasync function write(handle, buffer, offsetOrOptions, length, position) {\r\n  if (buffer?.byteLength === 0)\r\n    return { bytesWritten: 0, buffer };\r\n\r\n  let offset = offsetOrOptions;\r\n  if (isArrayBufferView(buffer)) {\r\n    if (typeof offset === 'object') {\r\n      ({\r\n        offset = 0,\r\n        length = buffer.byteLength - offset,\r\n        position = null,\r\n      } = offsetOrOptions ?? kEmptyObject);\r\n    }\r\n\r\n    if (offset == null) {\r\n      offset = 0;\r\n    } else {\r\n      validateInteger(offset, 'offset', 0);\r\n    }\r\n    if (typeof length !== 'number')\r\n      length = buffer.byteLength - offset;\r\n    if (typeof position !== 'number')\r\n      position = null;\r\n    validateOffsetLengthWrite(offset, length, buffer.byteLength);\r\n    const bytesWritten =\r\n      (await binding.writeBuffer(handle.fd, buffer, offset,\r\n                                 length, position, kUsePromises)) || 0;\r\n    return { bytesWritten, buffer };\r\n  }\r\n\r\n  validatePrimitiveStringAfterArrayBufferView(buffer, 'buffer');\r\n  validateEncoding(buffer, length);\r\n  const bytesWritten = (await binding.writeString(handle.fd, buffer, offset,\r\n                                                  length, kUsePromises)) || 0;\r\n  return { bytesWritten, buffer };\r\n}\r\n\r\nasync function writev(handle, buffers, position) {\r\n  validateBufferArray(buffers);\r\n\r\n  if (typeof position !== 'number')\r\n    position = null;\r\n\r\n  if (buffers.length === 0) {\r\n    return { bytesWritten: 0, buffers };\r\n  }\r\n\r\n  const bytesWritten = (await binding.writeBuffers(handle.fd, buffers, position,\r\n                                                   kUsePromises)) || 0;\r\n  return { bytesWritten, buffers };\r\n}\r\n\r\nasync function rename(oldPath, newPath) {\r\n  oldPath = getValidatedPath(oldPath, 'oldPath');\r\n  newPath = getValidatedPath(newPath, 'newPath');\r\n  return binding.rename(pathModule.toNamespacedPath(oldPath),\r\n                        pathModule.toNamespacedPath(newPath),\r\n                        kUsePromises);\r\n}\r\n\r\nasync function truncate(path, len = 0) {\r\n  const fd = await open(path, 'r+');\r\n  return handleFdClose(ftruncate(fd, len), fd.close);\r\n}\r\n\r\nasync function ftruncate(handle, len = 0) {\r\n  validateInteger(len, 'len');\r\n  len = MathMax(0, len);\r\n  return binding.ftruncate(handle.fd, len, kUsePromises);\r\n}\r\n\r\nasync function rm(path, options) {\r\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\r\n  options = await validateRmOptionsPromise(path, options, false);\r\n  return rimrafPromises(path, options);\r\n}\r\n\r\nasync function rmdir(path, options) {\r\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\r\n  options = validateRmdirOptions(options);\r\n\r\n  if (options.recursive) {\r\n    emitRecursiveRmdirWarning();\r\n    const stats = await stat(path);\r\n    if (stats.isDirectory()) {\r\n      return rimrafPromises(path, options);\r\n    }\r\n  }\r\n\r\n  return binding.rmdir(path, kUsePromises);\r\n}\r\n\r\nasync function fdatasync(handle) {\r\n  return binding.fdatasync(handle.fd, kUsePromises);\r\n}\r\n\r\nasync function fsync(handle) {\r\n  return binding.fsync(handle.fd, kUsePromises);\r\n}\r\n\r\nasync function mkdir(path, options) {\r\n  if (typeof options === 'number' || typeof options === 'string') {\r\n    options = { mode: options };\r\n  }\r\n  const {\r\n    recursive = false,\r\n    mode = 0o777\r\n  } = options || kEmptyObject;\r\n  path = getValidatedPath(path);\r\n  validateBoolean(recursive, 'options.recursive');\r\n\r\n  return binding.mkdir(pathModule.toNamespacedPath(path),\r\n                       parseFileMode(mode, 'mode', 0o777), recursive,\r\n                       kUsePromises);\r\n}\r\n\r\nasync function readdir(path, options) {\r\n  options = getOptions(options);\r\n  path = getValidatedPath(path);\r\n  const result = await binding.readdir(pathModule.toNamespacedPath(path),\r\n                                       options.encoding,\r\n                                       !!options.withFileTypes,\r\n                                       kUsePromises);\r\n  return options.withFileTypes ?\r\n    getDirectoryEntriesPromise(path, result) :\r\n    result;\r\n}\r\n\r\nasync function readlink(path, options) {\r\n  options = getOptions(options);\r\n  path = getValidatedPath(path, 'oldPath');\r\n  return binding.readlink(pathModule.toNamespacedPath(path),\r\n                          options.encoding, kUsePromises);\r\n}\r\n\r\nasync function symlink(target, path, type_) {\r\n  const type = (typeof type_ === 'string' ? type_ : null);\r\n  target = getValidatedPath(target, 'target');\r\n  path = getValidatedPath(path);\r\n  return binding.symlink(preprocessSymlinkDestination(target, type, path),\r\n                         pathModule.toNamespacedPath(path),\r\n                         stringToSymlinkType(type),\r\n                         kUsePromises);\r\n}\r\n\r\nasync function fstat(handle, options = { bigint: false }) {\r\n  const result = await binding.fstat(handle.fd, options.bigint, kUsePromises);\r\n  return getStatsFromBinding(result);\r\n}\r\n\r\nasync function lstat(path, options = { bigint: false }) {\r\n  path = getValidatedPath(path);\r\n  const result = await binding.lstat(pathModule.toNamespacedPath(path),\r\n                                     options.bigint, kUsePromises);\r\n  return getStatsFromBinding(result);\r\n}\r\n\r\nasync function stat(path, options = { bigint: false }) {\r\n  path = getValidatedPath(path);\r\n  const result = await binding.stat(pathModule.toNamespacedPath(path),\r\n                                    options.bigint, kUsePromises);\r\n  return getStatsFromBinding(result);\r\n}\r\n\r\nasync function statfs(path, options = { bigint: false }) {\r\n  path = getValidatedPath(path);\r\n  const result = await binding.statfs(pathModule.toNamespacedPath(path),\r\n                                      options.bigint, kUsePromises);\r\n  return getStatFsFromBinding(result);\r\n}\r\n\r\nasync function link(existingPath, newPath) {\r\n  existingPath = getValidatedPath(existingPath, 'existingPath');\r\n  newPath = getValidatedPath(newPath, 'newPath');\r\n  return binding.link(pathModule.toNamespacedPath(existingPath),\r\n                      pathModule.toNamespacedPath(newPath),\r\n                      kUsePromises);\r\n}\r\n\r\nasync function unlink(path) {\r\n  path = getValidatedPath(path);\r\n  return binding.unlink(pathModule.toNamespacedPath(path), kUsePromises);\r\n}\r\n\r\nasync function fchmod(handle, mode) {\r\n  mode = parseFileMode(mode, 'mode');\r\n  return binding.fchmod(handle.fd, mode, kUsePromises);\r\n}\r\n\r\nasync function chmod(path, mode) {\r\n  path = getValidatedPath(path);\r\n  mode = parseFileMode(mode, 'mode');\r\n  return binding.chmod(pathModule.toNamespacedPath(path), mode, kUsePromises);\r\n}\r\n\r\nasync function lchmod(path, mode) {\r\n  if (O_SYMLINK === undefined)\r\n    throw new ERR_METHOD_NOT_IMPLEMENTED('lchmod()');\r\n\r\n  const fd = await open(path, O_WRONLY | O_SYMLINK);\r\n  return handleFdClose(fchmod(fd, mode), fd.close);\r\n}\r\n\r\nasync function lchown(path, uid, gid) {\r\n  path = getValidatedPath(path);\r\n  validateInteger(uid, 'uid', -1, kMaxUserId);\r\n  validateInteger(gid, 'gid', -1, kMaxUserId);\r\n  return binding.lchown(pathModule.toNamespacedPath(path),\r\n                        uid, gid, kUsePromises);\r\n}\r\n\r\nasync function fchown(handle, uid, gid) {\r\n  validateInteger(uid, 'uid', -1, kMaxUserId);\r\n  validateInteger(gid, 'gid', -1, kMaxUserId);\r\n  return binding.fchown(handle.fd, uid, gid, kUsePromises);\r\n}\r\n\r\nasync function chown(path, uid, gid) {\r\n  path = getValidatedPath(path);\r\n  validateInteger(uid, 'uid', -1, kMaxUserId);\r\n  validateInteger(gid, 'gid', -1, kMaxUserId);\r\n  return binding.chown(pathModule.toNamespacedPath(path),\r\n                       uid, gid, kUsePromises);\r\n}\r\n\r\nasync function utimes(path, atime, mtime) {\r\n  path = getValidatedPath(path);\r\n  return binding.utimes(pathModule.toNamespacedPath(path),\r\n                        toUnixTimestamp(atime),\r\n                        toUnixTimestamp(mtime),\r\n                        kUsePromises);\r\n}\r\n\r\nasync function futimes(handle, atime, mtime) {\r\n  atime = toUnixTimestamp(atime, 'atime');\r\n  mtime = toUnixTimestamp(mtime, 'mtime');\r\n  return binding.futimes(handle.fd, atime, mtime, kUsePromises);\r\n}\r\n\r\nasync function lutimes(path, atime, mtime) {\r\n  path = getValidatedPath(path);\r\n  return binding.lutimes(pathModule.toNamespacedPath(path),\r\n                         toUnixTimestamp(atime),\r\n                         toUnixTimestamp(mtime),\r\n                         kUsePromises);\r\n}\r\n\r\nasync function realpath(path, options) {\r\n  options = getOptions(options);\r\n  path = getValidatedPath(path);\r\n  return binding.realpath(path, options.encoding, kUsePromises);\r\n}\r\n\r\nasync function mkdtemp(prefix, options) {\r\n  options = getOptions(options);\r\n\r\n  validateString(prefix, 'prefix');\r\n  nullCheck(prefix);\r\n  warnOnNonPortableTemplate(prefix);\r\n  return binding.mkdtemp(`${prefix}XXXXXX`, options.encoding, kUsePromises);\r\n}\r\n\r\nasync function writeFile(path, data, options) {\r\n  options = getOptions(options, { encoding: 'utf8', mode: 0o666, flag: 'w' });\r\n  const flag = options.flag || 'w';\r\n\r\n  if (!isArrayBufferView(data) && !isCustomIterable(data)) {\r\n    validatePrimitiveStringAfterArrayBufferView(data, 'data');\r\n    data = Buffer.from(data, options.encoding || 'utf8');\r\n  }\r\n\r\n  validateAbortSignal(options.signal);\r\n  if (path instanceof FileHandle)\r\n    return writeFileHandle(path, data, options.signal, options.encoding);\r\n\r\n  checkAborted(options.signal);\r\n\r\n  const fd = await open(path, flag, options.mode);\r\n  return handleFdClose(\r\n    writeFileHandle(fd, data, options.signal, options.encoding), fd.close);\r\n}\r\n\r\nfunction isCustomIterable(obj) {\r\n  return isIterable(obj) && !isArrayBufferView(obj) && typeof obj !== 'string';\r\n}\r\n\r\nasync function appendFile(path, data, options) {\r\n  options = getOptions(options, { encoding: 'utf8', mode: 0o666, flag: 'a' });\r\n  options = copyObject(options);\r\n  options.flag = options.flag || 'a';\r\n  return writeFile(path, data, options);\r\n}\r\n\r\nasync function readFile(path, options) {\r\n  options = getOptions(options, { flag: 'r' });\r\n  const flag = options.flag || 'r';\r\n\r\n  if (path instanceof FileHandle)\r\n    return readFileHandle(path, options);\r\n\r\n  checkAborted(options.signal);\r\n\r\n  const fd = await open(path, flag, 0o666);\r\n  return handleFdClose(readFileHandle(fd, options), fd.close);\r\n}\r\n\r\nmodule.exports = {\r\n  exports: {\r\n    access,\r\n    copyFile,\r\n    cp,\r\n    open,\r\n    opendir: promisify(opendir),\r\n    rename,\r\n    truncate,\r\n    rm,\r\n    rmdir,\r\n    mkdir,\r\n    readdir,\r\n    readlink,\r\n    symlink,\r\n    lstat,\r\n    stat,\r\n    statfs,\r\n    link,\r\n    unlink,\r\n    chmod,\r\n    lchmod,\r\n    lchown,\r\n    chown,\r\n    utimes,\r\n    lutimes,\r\n    realpath,\r\n    mkdtemp,\r\n    writeFile,\r\n    appendFile,\r\n    readFile,\r\n    watch,\r\n    constants,\r\n  },\r\n\r\n  FileHandle,\r\n  kRef,\r\n  kUnref,\r\n};\r\n",
    "name": "node:internal/process/promises",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 470,
    "sourcePositions": []
  },
  {
    "url": "node:internal/fs/rimraf",
    "source": "// This file is a modified version of the rimraf module on npm. It has been\r\n// modified in the following ways:\r\n// - Use of the assert module has been replaced with core's error system.\r\n// - All code related to the glob dependency has been removed.\r\n// - Bring your own custom fs module is not currently supported.\r\n// - Some basic code cleanup.\r\n'use strict';\r\n\r\nconst {\r\n  ArrayPrototypeForEach,\r\n  Promise,\r\n  SafeSet,\r\n} = primordials;\r\n\r\nconst { Buffer } = require('buffer');\r\nconst fs = require('fs');\r\nconst {\r\n  chmod,\r\n  chmodSync,\r\n  lstat,\r\n  lstatSync,\r\n  readdir,\r\n  readdirSync,\r\n  rmdir,\r\n  rmdirSync,\r\n  stat,\r\n  statSync,\r\n  unlink,\r\n  unlinkSync\r\n} = fs;\r\nconst { sep } = require('path');\r\nconst { setTimeout } = require('timers');\r\nconst { sleep } = require('internal/util');\r\nconst notEmptyErrorCodes = new SafeSet(['ENOTEMPTY', 'EEXIST', 'EPERM']);\r\nconst retryErrorCodes = new SafeSet(\r\n  ['EBUSY', 'EMFILE', 'ENFILE', 'ENOTEMPTY', 'EPERM']);\r\nconst isWindows = process.platform === 'win32';\r\nconst epermHandler = isWindows ? fixWinEPERM : _rmdir;\r\nconst epermHandlerSync = isWindows ? fixWinEPERMSync : _rmdirSync;\r\nconst readdirEncoding = 'buffer';\r\nconst separator = Buffer.from(sep);\r\n\r\n\r\nfunction rimraf(path, options, callback) {\r\n  let retries = 0;\r\n\r\n  _rimraf(path, options, function CB(err) {\r\n    if (err) {\r\n      if (retryErrorCodes.has(err.code) && retries < options.maxRetries) {\r\n        retries++;\r\n        const delay = retries * options.retryDelay;\r\n        return setTimeout(_rimraf, delay, path, options, CB);\r\n      }\r\n\r\n      // The file is already gone.\r\n      if (err.code === 'ENOENT')\r\n        err = null;\r\n    }\r\n\r\n    callback(err);\r\n  });\r\n}\r\n\r\n\r\nfunction _rimraf(path, options, callback) {\r\n  // SunOS lets the root user unlink directories. Use lstat here to make sure\r\n  // it's not a directory.\r\n  lstat(path, (err, stats) => {\r\n    if (err) {\r\n      if (err.code === 'ENOENT')\r\n        return callback(null);\r\n\r\n      // Windows can EPERM on stat.\r\n      if (isWindows && err.code === 'EPERM')\r\n        return fixWinEPERM(path, options, err, callback);\r\n    } else if (stats.isDirectory()) {\r\n      return _rmdir(path, options, err, callback);\r\n    }\r\n\r\n    unlink(path, (err) => {\r\n      if (err) {\r\n        if (err.code === 'ENOENT')\r\n          return callback(null);\r\n        if (err.code === 'EISDIR')\r\n          return _rmdir(path, options, err, callback);\r\n        if (err.code === 'EPERM') {\r\n          return epermHandler(path, options, err, callback);\r\n        }\r\n      }\r\n\r\n      return callback(err);\r\n    });\r\n  });\r\n}\r\n\r\n\r\nfunction fixWinEPERM(path, options, originalErr, callback) {\r\n  chmod(path, 0o666, (err) => {\r\n    if (err)\r\n      return callback(err.code === 'ENOENT' ? null : originalErr);\r\n\r\n    stat(path, (err, stats) => {\r\n      if (err)\r\n        return callback(err.code === 'ENOENT' ? null : originalErr);\r\n\r\n      if (stats.isDirectory())\r\n        _rmdir(path, options, originalErr, callback);\r\n      else\r\n        unlink(path, callback);\r\n    });\r\n  });\r\n}\r\n\r\n\r\nfunction _rmdir(path, options, originalErr, callback) {\r\n  rmdir(path, (err) => {\r\n    if (err) {\r\n      if (notEmptyErrorCodes.has(err.code))\r\n        return _rmchildren(path, options, callback);\r\n      if (err.code === 'ENOTDIR')\r\n        return callback(originalErr);\r\n    }\r\n\r\n    callback(err);\r\n  });\r\n}\r\n\r\n\r\nfunction _rmchildren(path, options, callback) {\r\n  const pathBuf = Buffer.from(path);\r\n\r\n  readdir(pathBuf, readdirEncoding, (err, files) => {\r\n    if (err)\r\n      return callback(err);\r\n\r\n    let numFiles = files.length;\r\n\r\n    if (numFiles === 0)\r\n      return rmdir(path, callback);\r\n\r\n    let done = false;\r\n\r\n    ArrayPrototypeForEach(files, (child) => {\r\n      const childPath = Buffer.concat([pathBuf, separator, child]);\r\n\r\n      rimraf(childPath, options, (err) => {\r\n        if (done)\r\n          return;\r\n\r\n        if (err) {\r\n          done = true;\r\n          return callback(err);\r\n        }\r\n\r\n        numFiles--;\r\n        if (numFiles === 0)\r\n          rmdir(path, callback);\r\n      });\r\n    });\r\n  });\r\n}\r\n\r\n\r\nfunction rimrafPromises(path, options) {\r\n  return new Promise((resolve, reject) => {\r\n    rimraf(path, options, (err) => {\r\n      if (err)\r\n        return reject(err);\r\n\r\n      resolve();\r\n    });\r\n  });\r\n}\r\n\r\n\r\nfunction rimrafSync(path, options) {\r\n  let stats;\r\n\r\n  try {\r\n    stats = lstatSync(path);\r\n  } catch (err) {\r\n    if (err.code === 'ENOENT')\r\n      return;\r\n\r\n    // Windows can EPERM on stat.\r\n    if (isWindows && err.code === 'EPERM')\r\n      fixWinEPERMSync(path, options, err);\r\n  }\r\n\r\n  try {\r\n    // SunOS lets the root user unlink directories.\r\n    if (stats?.isDirectory())\r\n      _rmdirSync(path, options, null);\r\n    else\r\n      _unlinkSync(path, options);\r\n  } catch (err) {\r\n    if (err.code === 'ENOENT')\r\n      return;\r\n    if (err.code === 'EPERM')\r\n      return epermHandlerSync(path, options, err);\r\n    if (err.code !== 'EISDIR')\r\n      throw err;\r\n\r\n    _rmdirSync(path, options, err);\r\n  }\r\n}\r\n\r\n\r\nfunction _unlinkSync(path, options) {\r\n  const tries = options.maxRetries + 1;\r\n\r\n  for (let i = 1; i <= tries; i++) {\r\n    try {\r\n      return unlinkSync(path);\r\n    } catch (err) {\r\n      // Only sleep if this is not the last try, and the delay is greater\r\n      // than zero, and an error was encountered that warrants a retry.\r\n      if (retryErrorCodes.has(err.code) &&\r\n          i < tries &&\r\n          options.retryDelay > 0) {\r\n        sleep(i * options.retryDelay);\r\n      } else if (err.code === 'ENOENT') {\r\n        // The file is already gone.\r\n        return;\r\n      } else if (i === tries) {\r\n        throw err;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\nfunction _rmdirSync(path, options, originalErr) {\r\n  try {\r\n    rmdirSync(path);\r\n  } catch (err) {\r\n    if (err.code === 'ENOENT')\r\n      return;\r\n    if (err.code === 'ENOTDIR') {\r\n      throw originalErr || err;\r\n    }\r\n\r\n    if (notEmptyErrorCodes.has(err.code)) {\r\n      // Removing failed. Try removing all children and then retrying the\r\n      // original removal. Windows has a habit of not closing handles promptly\r\n      // when files are deleted, resulting in spurious ENOTEMPTY failures. Work\r\n      // around that issue by retrying on Windows.\r\n      const pathBuf = Buffer.from(path);\r\n\r\n      ArrayPrototypeForEach(readdirSync(pathBuf, readdirEncoding), (child) => {\r\n        const childPath = Buffer.concat([pathBuf, separator, child]);\r\n\r\n        rimrafSync(childPath, options);\r\n      });\r\n\r\n      const tries = options.maxRetries + 1;\r\n\r\n      for (let i = 1; i <= tries; i++) {\r\n        try {\r\n          return fs.rmdirSync(path);\r\n        } catch (err) {\r\n          // Only sleep if this is not the last try, and the delay is greater\r\n          // than zero, and an error was encountered that warrants a retry.\r\n          if (retryErrorCodes.has(err.code) &&\r\n              i < tries &&\r\n              options.retryDelay > 0) {\r\n            sleep(i * options.retryDelay);\r\n          } else if (err.code === 'ENOENT') {\r\n            // The file is already gone.\r\n            return;\r\n          } else if (i === tries) {\r\n            throw err;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    throw originalErr || err;\r\n  }\r\n}\r\n\r\n\r\nfunction fixWinEPERMSync(path, options, originalErr) {\r\n  try {\r\n    chmodSync(path, 0o666);\r\n  } catch (err) {\r\n    if (err.code === 'ENOENT')\r\n      return;\r\n\r\n    throw originalErr;\r\n  }\r\n\r\n  let stats;\r\n\r\n  try {\r\n    stats = statSync(path, { throwIfNoEntry: false });\r\n  } catch {\r\n    throw originalErr;\r\n  }\r\n\r\n  if (stats === undefined) return;\r\n\r\n  if (stats.isDirectory())\r\n    _rmdirSync(path, options, originalErr);\r\n  else\r\n    _unlinkSync(path, options);\r\n}\r\n\r\n\r\nmodule.exports = { rimraf, rimrafPromises, rimrafSync };\r\n",
    "name": "rimraf",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 471,
    "sourcePositions": []
  },
  {
    "url": "node:internal/readline/interface",
    "source": "'use strict';\r\n\r\nconst {\r\n  ArrayFrom,\r\n  ArrayPrototypeFilter,\r\n  ArrayPrototypeIndexOf,\r\n  ArrayPrototypeJoin,\r\n  ArrayPrototypeMap,\r\n  ArrayPrototypePop,\r\n  ArrayPrototypePush,\r\n  ArrayPrototypeReverse,\r\n  ArrayPrototypeSplice,\r\n  ArrayPrototypeShift,\r\n  ArrayPrototypeUnshift,\r\n  DateNow,\r\n  FunctionPrototypeCall,\r\n  MathCeil,\r\n  MathFloor,\r\n  MathMax,\r\n  MathMaxApply,\r\n  NumberIsFinite,\r\n  NumberIsNaN,\r\n  ObjectSetPrototypeOf,\r\n  RegExpPrototypeExec,\r\n  StringPrototypeCodePointAt,\r\n  StringPrototypeEndsWith,\r\n  StringPrototypeRepeat,\r\n  StringPrototypeSlice,\r\n  StringPrototypeStartsWith,\r\n  StringPrototypeTrim,\r\n  Symbol,\r\n  SymbolAsyncIterator,\r\n  SafeStringIterator,\r\n} = primordials;\r\n\r\nconst { codes } = require('internal/errors');\r\n\r\nconst {\r\n  ERR_INVALID_ARG_VALUE,\r\n  ERR_USE_AFTER_CLOSE,\r\n} = codes;\r\nconst {\r\n  validateAbortSignal,\r\n  validateArray,\r\n  validateString,\r\n  validateUint32,\r\n} = require('internal/validators');\r\nconst { kEmptyObject } = require('internal/util');\r\nconst {\r\n  inspect,\r\n  getStringWidth,\r\n  stripVTControlCharacters,\r\n} = require('internal/util/inspect');\r\nconst EventEmitter = require('events');\r\nconst {\r\n  charLengthAt,\r\n  charLengthLeft,\r\n  commonPrefix,\r\n  kSubstringSearch,\r\n} = require('internal/readline/utils');\r\nlet emitKeypressEvents;\r\nconst {\r\n  clearScreenDown,\r\n  cursorTo,\r\n  moveCursor,\r\n} = require('internal/readline/callbacks');\r\n\r\nconst { StringDecoder } = require('string_decoder');\r\n\r\n// Lazy load Readable for startup performance.\r\nlet Readable;\r\n\r\nconst kHistorySize = 30;\r\nconst kMaxUndoRedoStackSize = 2048;\r\nconst kMincrlfDelay = 100;\r\n// \\r\\n, \\n, or \\r followed by something other than \\n\r\nconst lineEnding = /\\r?\\n|\\r(?!\\n)/g;\r\n\r\nconst kLineObjectStream = Symbol('line object stream');\r\nconst kQuestionCancel = Symbol('kQuestionCancel');\r\n\r\n// GNU readline library - keyseq-timeout is 500ms (default)\r\nconst ESCAPE_CODE_TIMEOUT = 500;\r\n\r\n// Max length of the kill ring\r\nconst kMaxLengthOfKillRing = 32;\r\n\r\nconst kAddHistory = Symbol('_addHistory');\r\nconst kBeforeEdit = Symbol('_beforeEdit');\r\nconst kDecoder = Symbol('_decoder');\r\nconst kDeleteLeft = Symbol('_deleteLeft');\r\nconst kDeleteLineLeft = Symbol('_deleteLineLeft');\r\nconst kDeleteLineRight = Symbol('_deleteLineRight');\r\nconst kDeleteRight = Symbol('_deleteRight');\r\nconst kDeleteWordLeft = Symbol('_deleteWordLeft');\r\nconst kDeleteWordRight = Symbol('_deleteWordRight');\r\nconst kGetDisplayPos = Symbol('_getDisplayPos');\r\nconst kHistoryNext = Symbol('_historyNext');\r\nconst kHistoryPrev = Symbol('_historyPrev');\r\nconst kInsertString = Symbol('_insertString');\r\nconst kLine = Symbol('_line');\r\nconst kLine_buffer = Symbol('_line_buffer');\r\nconst kKillRing = Symbol('_killRing');\r\nconst kKillRingCursor = Symbol('_killRingCursor');\r\nconst kMoveCursor = Symbol('_moveCursor');\r\nconst kNormalWrite = Symbol('_normalWrite');\r\nconst kOldPrompt = Symbol('_oldPrompt');\r\nconst kOnLine = Symbol('_onLine');\r\nconst kPreviousKey = Symbol('_previousKey');\r\nconst kPrompt = Symbol('_prompt');\r\nconst kPushToKillRing = Symbol('_pushToKillRing');\r\nconst kPushToUndoStack = Symbol('_pushToUndoStack');\r\nconst kQuestionCallback = Symbol('_questionCallback');\r\nconst kRedo = Symbol('_redo');\r\nconst kRedoStack = Symbol('_redoStack');\r\nconst kRefreshLine = Symbol('_refreshLine');\r\nconst kSawKeyPress = Symbol('_sawKeyPress');\r\nconst kSawReturnAt = Symbol('_sawReturnAt');\r\nconst kSetRawMode = Symbol('_setRawMode');\r\nconst kTabComplete = Symbol('_tabComplete');\r\nconst kTabCompleter = Symbol('_tabCompleter');\r\nconst kTtyWrite = Symbol('_ttyWrite');\r\nconst kUndo = Symbol('_undo');\r\nconst kUndoStack = Symbol('_undoStack');\r\nconst kWordLeft = Symbol('_wordLeft');\r\nconst kWordRight = Symbol('_wordRight');\r\nconst kWriteToOutput = Symbol('_writeToOutput');\r\nconst kYank = Symbol('_yank');\r\nconst kYanking = Symbol('_yanking');\r\nconst kYankPop = Symbol('_yankPop');\r\n\r\nfunction InterfaceConstructor(input, output, completer, terminal) {\r\n  this[kSawReturnAt] = 0;\r\n  // TODO(BridgeAR): Document this property. The name is not ideal, so we\r\n  // might want to expose an alias and document that instead.\r\n  this.isCompletionEnabled = true;\r\n  this[kSawKeyPress] = false;\r\n  this[kPreviousKey] = null;\r\n  this.escapeCodeTimeout = ESCAPE_CODE_TIMEOUT;\r\n  this.tabSize = 8;\r\n\r\n  FunctionPrototypeCall(EventEmitter, this);\r\n\r\n  let history;\r\n  let historySize;\r\n  let removeHistoryDuplicates = false;\r\n  let crlfDelay;\r\n  let prompt = '> ';\r\n  let signal;\r\n\r\n  if (input?.input) {\r\n    // An options object was given\r\n    output = input.output;\r\n    completer = input.completer;\r\n    terminal = input.terminal;\r\n    history = input.history;\r\n    historySize = input.historySize;\r\n    signal = input.signal;\r\n    if (input.tabSize !== undefined) {\r\n      validateUint32(input.tabSize, 'tabSize', true);\r\n      this.tabSize = input.tabSize;\r\n    }\r\n    removeHistoryDuplicates = input.removeHistoryDuplicates;\r\n    if (input.prompt !== undefined) {\r\n      prompt = input.prompt;\r\n    }\r\n    if (input.escapeCodeTimeout !== undefined) {\r\n      if (NumberIsFinite(input.escapeCodeTimeout)) {\r\n        this.escapeCodeTimeout = input.escapeCodeTimeout;\r\n      } else {\r\n        throw new ERR_INVALID_ARG_VALUE(\r\n          'input.escapeCodeTimeout',\r\n          this.escapeCodeTimeout\r\n        );\r\n      }\r\n    }\r\n\r\n    if (signal) {\r\n      validateAbortSignal(signal, 'options.signal');\r\n    }\r\n\r\n    crlfDelay = input.crlfDelay;\r\n    input = input.input;\r\n  }\r\n\r\n  if (completer !== undefined && typeof completer !== 'function') {\r\n    throw new ERR_INVALID_ARG_VALUE('completer', completer);\r\n  }\r\n\r\n  if (history === undefined) {\r\n    history = [];\r\n  } else {\r\n    validateArray(history, 'history');\r\n  }\r\n\r\n  if (historySize === undefined) {\r\n    historySize = kHistorySize;\r\n  }\r\n\r\n  if (\r\n    typeof historySize !== 'number' ||\r\n      NumberIsNaN(historySize) ||\r\n      historySize < 0\r\n  ) {\r\n    throw new ERR_INVALID_ARG_VALUE.RangeError('historySize', historySize);\r\n  }\r\n\r\n  // Backwards compat; check the isTTY prop of the output stream\r\n  //  when `terminal` was not specified\r\n  if (terminal === undefined && !(output === null || output === undefined)) {\r\n    terminal = !!output.isTTY;\r\n  }\r\n\r\n  const self = this;\r\n\r\n  this.line = '';\r\n  this[kSubstringSearch] = null;\r\n  this.output = output;\r\n  this.input = input;\r\n  this[kUndoStack] = [];\r\n  this[kRedoStack] = [];\r\n  this.history = history;\r\n  this.historySize = historySize;\r\n\r\n  // The kill ring is a global list of blocks of text that were previously\r\n  // killed (deleted). If its size exceeds kMaxLengthOfKillRing, the oldest\r\n  // element will be removed to make room for the latest deletion. With kill\r\n  // ring, users are able to recall (yank) or cycle (yank pop) among previously\r\n  // killed texts, quite similar to the behavior of Emacs.\r\n  this[kKillRing] = [];\r\n  this[kKillRingCursor] = 0;\r\n\r\n  this.removeHistoryDuplicates = !!removeHistoryDuplicates;\r\n  this.crlfDelay = crlfDelay ?\r\n    MathMax(kMincrlfDelay, crlfDelay) :\r\n    kMincrlfDelay;\r\n  this.completer = completer;\r\n\r\n  this.setPrompt(prompt);\r\n\r\n  this.terminal = !!terminal;\r\n\r\n\r\n  function onerror(err) {\r\n    self.emit('error', err);\r\n  }\r\n\r\n  function ondata(data) {\r\n    self[kNormalWrite](data);\r\n  }\r\n\r\n  function onend() {\r\n    if (\r\n      typeof self[kLine_buffer] === 'string' &&\r\n        self[kLine_buffer].length > 0\r\n    ) {\r\n      self.emit('line', self[kLine_buffer]);\r\n    }\r\n    self.close();\r\n  }\r\n\r\n  function ontermend() {\r\n    if (typeof self.line === 'string' && self.line.length > 0) {\r\n      self.emit('line', self.line);\r\n    }\r\n    self.close();\r\n  }\r\n\r\n  function onkeypress(s, key) {\r\n    self[kTtyWrite](s, key);\r\n    if (key && key.sequence) {\r\n      // If the key.sequence is half of a surrogate pair\r\n      // (>= 0xd800 and <= 0xdfff), refresh the line so\r\n      // the character is displayed appropriately.\r\n      const ch = StringPrototypeCodePointAt(key.sequence, 0);\r\n      if (ch >= 0xd800 && ch <= 0xdfff) self[kRefreshLine]();\r\n    }\r\n  }\r\n\r\n  function onresize() {\r\n    self[kRefreshLine]();\r\n  }\r\n\r\n  this[kLineObjectStream] = undefined;\r\n\r\n  input.on('error', onerror);\r\n\r\n  if (!this.terminal) {\r\n    function onSelfCloseWithoutTerminal() {\r\n      input.removeListener('data', ondata);\r\n      input.removeListener('error', onerror);\r\n      input.removeListener('end', onend);\r\n    }\r\n\r\n    input.on('data', ondata);\r\n    input.on('end', onend);\r\n    self.once('close', onSelfCloseWithoutTerminal);\r\n    this[kDecoder] = new StringDecoder('utf8');\r\n  } else {\r\n    function onSelfCloseWithTerminal() {\r\n      input.removeListener('keypress', onkeypress);\r\n      input.removeListener('error', onerror);\r\n      input.removeListener('end', ontermend);\r\n      if (output !== null && output !== undefined) {\r\n        output.removeListener('resize', onresize);\r\n      }\r\n    }\r\n\r\n    emitKeypressEvents ??= require('internal/readline/emitKeypressEvents');\r\n    emitKeypressEvents(input, this);\r\n\r\n    // `input` usually refers to stdin\r\n    input.on('keypress', onkeypress);\r\n    input.on('end', ontermend);\r\n\r\n    this[kSetRawMode](true);\r\n    this.terminal = true;\r\n\r\n    // Cursor position on the line.\r\n    this.cursor = 0;\r\n\r\n    this.historyIndex = -1;\r\n\r\n    if (output !== null && output !== undefined)\r\n      output.on('resize', onresize);\r\n\r\n    self.once('close', onSelfCloseWithTerminal);\r\n  }\r\n\r\n  if (signal) {\r\n    const onAborted = () => self.close();\r\n    if (signal.aborted) {\r\n      process.nextTick(onAborted);\r\n    } else {\r\n      signal.addEventListener('abort', onAborted, { once: true });\r\n      self.once('close', () => signal.removeEventListener('abort', onAborted));\r\n    }\r\n  }\r\n\r\n  // Current line\r\n  this.line = '';\r\n\r\n  input.resume();\r\n}\r\n\r\nObjectSetPrototypeOf(InterfaceConstructor.prototype, EventEmitter.prototype);\r\nObjectSetPrototypeOf(InterfaceConstructor, EventEmitter);\r\n\r\nclass Interface extends InterfaceConstructor {\r\n  // eslint-disable-next-line no-useless-constructor\r\n  constructor(input, output, completer, terminal) {\r\n    super(input, output, completer, terminal);\r\n  }\r\n  get columns() {\r\n    if (this.output && this.output.columns) return this.output.columns;\r\n    return Infinity;\r\n  }\r\n\r\n  /**\r\n   * Sets the prompt written to the output.\r\n   * @param {string} prompt\r\n   * @returns {void}\r\n   */\r\n  setPrompt(prompt) {\r\n    this[kPrompt] = prompt;\r\n  }\r\n\r\n  /**\r\n   * Returns the current prompt used by `rl.prompt()`.\r\n   * @returns {string}\r\n   */\r\n  getPrompt() {\r\n    return this[kPrompt];\r\n  }\r\n\r\n  [kSetRawMode](mode) {\r\n    const wasInRawMode = this.input.isRaw;\r\n\r\n    if (typeof this.input.setRawMode === 'function') {\r\n      this.input.setRawMode(mode);\r\n    }\r\n\r\n    return wasInRawMode;\r\n  }\r\n\r\n  /**\r\n   * Writes the configured `prompt` to a new line in `output`.\r\n   * @param {boolean} [preserveCursor]\r\n   * @returns {void}\r\n   */\r\n  prompt(preserveCursor) {\r\n    if (this.paused) this.resume();\r\n    if (this.terminal && process.env.TERM !== 'dumb') {\r\n      if (!preserveCursor) this.cursor = 0;\r\n      this[kRefreshLine]();\r\n    } else {\r\n      this[kWriteToOutput](this[kPrompt]);\r\n    }\r\n  }\r\n\r\n  question(query, cb) {\r\n    if (this.closed) {\r\n      throw new ERR_USE_AFTER_CLOSE('readline');\r\n    }\r\n    if (this[kQuestionCallback]) {\r\n      this.prompt();\r\n    } else {\r\n      this[kOldPrompt] = this[kPrompt];\r\n      this.setPrompt(query);\r\n      this[kQuestionCallback] = cb;\r\n      this.prompt();\r\n    }\r\n  }\r\n\r\n  [kOnLine](line) {\r\n    if (this[kQuestionCallback]) {\r\n      const cb = this[kQuestionCallback];\r\n      this[kQuestionCallback] = null;\r\n      this.setPrompt(this[kOldPrompt]);\r\n      cb(line);\r\n    } else {\r\n      this.emit('line', line);\r\n    }\r\n  }\r\n\r\n  [kBeforeEdit](oldText, oldCursor) {\r\n    this[kPushToUndoStack](oldText, oldCursor);\r\n  }\r\n\r\n  [kQuestionCancel]() {\r\n    if (this[kQuestionCallback]) {\r\n      this[kQuestionCallback] = null;\r\n      this.setPrompt(this[kOldPrompt]);\r\n      this.clearLine();\r\n    }\r\n  }\r\n\r\n  [kWriteToOutput](stringToWrite) {\r\n    validateString(stringToWrite, 'stringToWrite');\r\n\r\n    if (this.output !== null && this.output !== undefined) {\r\n      this.output.write(stringToWrite);\r\n    }\r\n  }\r\n\r\n  [kAddHistory]() {\r\n    if (this.line.length === 0) return '';\r\n\r\n    // If the history is disabled then return the line\r\n    if (this.historySize === 0) return this.line;\r\n\r\n    // If the trimmed line is empty then return the line\r\n    if (StringPrototypeTrim(this.line).length === 0) return this.line;\r\n\r\n    if (this.history.length === 0 || this.history[0] !== this.line) {\r\n      if (this.removeHistoryDuplicates) {\r\n        // Remove older history line if identical to new one\r\n        const dupIndex = ArrayPrototypeIndexOf(this.history, this.line);\r\n        if (dupIndex !== -1) ArrayPrototypeSplice(this.history, dupIndex, 1);\r\n      }\r\n\r\n      ArrayPrototypeUnshift(this.history, this.line);\r\n\r\n      // Only store so many\r\n      if (this.history.length > this.historySize)\r\n        ArrayPrototypePop(this.history);\r\n    }\r\n\r\n    this.historyIndex = -1;\r\n\r\n    // The listener could change the history object, possibly\r\n    // to remove the last added entry if it is sensitive and should\r\n    // not be persisted in the history, like a password\r\n    const line = this.history[0];\r\n\r\n    // Emit history event to notify listeners of update\r\n    this.emit('history', this.history);\r\n\r\n    return line;\r\n  }\r\n\r\n  [kRefreshLine]() {\r\n    // line length\r\n    const line = this[kPrompt] + this.line;\r\n    const dispPos = this[kGetDisplayPos](line);\r\n    const lineCols = dispPos.cols;\r\n    const lineRows = dispPos.rows;\r\n\r\n    // cursor position\r\n    const cursorPos = this.getCursorPos();\r\n\r\n    // First move to the bottom of the current line, based on cursor pos\r\n    const prevRows = this.prevRows || 0;\r\n    if (prevRows > 0) {\r\n      moveCursor(this.output, 0, -prevRows);\r\n    }\r\n\r\n    // Cursor to left edge.\r\n    cursorTo(this.output, 0);\r\n    // erase data\r\n    clearScreenDown(this.output);\r\n\r\n    // Write the prompt and the current buffer content.\r\n    this[kWriteToOutput](line);\r\n\r\n    // Force terminal to allocate a new line\r\n    if (lineCols === 0) {\r\n      this[kWriteToOutput](' ');\r\n    }\r\n\r\n    // Move cursor to original position.\r\n    cursorTo(this.output, cursorPos.cols);\r\n\r\n    const diff = lineRows - cursorPos.rows;\r\n    if (diff > 0) {\r\n      moveCursor(this.output, 0, -diff);\r\n    }\r\n\r\n    this.prevRows = cursorPos.rows;\r\n  }\r\n\r\n  /**\r\n   * Closes the `readline.Interface` instance.\r\n   * @returns {void}\r\n   */\r\n  close() {\r\n    if (this.closed) return;\r\n    this.pause();\r\n    if (this.terminal) {\r\n      this[kSetRawMode](false);\r\n    }\r\n    this.closed = true;\r\n    this.emit('close');\r\n  }\r\n\r\n  /**\r\n   * Pauses the `input` stream.\r\n   * @returns {void | Interface}\r\n   */\r\n  pause() {\r\n    if (this.paused) return;\r\n    this.input.pause();\r\n    this.paused = true;\r\n    this.emit('pause');\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Resumes the `input` stream if paused.\r\n   * @returns {void | Interface}\r\n   */\r\n  resume() {\r\n    if (!this.paused) return;\r\n    this.input.resume();\r\n    this.paused = false;\r\n    this.emit('resume');\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Writes either `data` or a `key` sequence identified by\r\n   * `key` to the `output`.\r\n   * @param {string} d\r\n   * @param {{\r\n   *   ctrl?: boolean;\r\n   *   meta?: boolean;\r\n   *   shift?: boolean;\r\n   *   name?: string;\r\n   *   }} [key]\r\n   * @returns {void}\r\n   */\r\n  write(d, key) {\r\n    if (this.paused) this.resume();\r\n    if (this.terminal) {\r\n      this[kTtyWrite](d, key);\r\n    } else {\r\n      this[kNormalWrite](d);\r\n    }\r\n  }\r\n\r\n  [kNormalWrite](b) {\r\n    if (b === undefined) {\r\n      return;\r\n    }\r\n    let string = this[kDecoder].write(b);\r\n    if (\r\n      this[kSawReturnAt] &&\r\n      DateNow() - this[kSawReturnAt] <= this.crlfDelay\r\n    ) {\r\n      if (StringPrototypeCodePointAt(string) === 10) string = StringPrototypeSlice(string, 1);\r\n      this[kSawReturnAt] = 0;\r\n    }\r\n\r\n    // Run test() on the new string chunk, not on the entire line buffer.\r\n    let newPartContainsEnding = RegExpPrototypeExec(lineEnding, string);\r\n    if (newPartContainsEnding !== null) {\r\n      if (this[kLine_buffer]) {\r\n        string = this[kLine_buffer] + string;\r\n        this[kLine_buffer] = null;\r\n        lineEnding.lastIndex = 0; // Start the search from the beginning of the string.\r\n        newPartContainsEnding = RegExpPrototypeExec(lineEnding, string);\r\n      }\r\n      this[kSawReturnAt] = StringPrototypeEndsWith(string, '\\r') ?\r\n        DateNow() :\r\n        0;\r\n\r\n      const indexes = [0, newPartContainsEnding.index, lineEnding.lastIndex];\r\n      let nextMatch;\r\n      while ((nextMatch = RegExpPrototypeExec(lineEnding, string)) !== null) {\r\n        ArrayPrototypePush(indexes, nextMatch.index, lineEnding.lastIndex);\r\n      }\r\n      const lastIndex = indexes.length - 1;\r\n      // Either '' or (conceivably) the unfinished portion of the next line\r\n      this[kLine_buffer] = StringPrototypeSlice(string, indexes[lastIndex]);\r\n      for (let i = 1; i < lastIndex; i += 2) {\r\n        this[kOnLine](StringPrototypeSlice(string, indexes[i - 1], indexes[i]));\r\n      }\r\n    } else if (string) {\r\n      // No newlines this time, save what we have for next time\r\n      if (this[kLine_buffer]) {\r\n        this[kLine_buffer] += string;\r\n      } else {\r\n        this[kLine_buffer] = string;\r\n      }\r\n    }\r\n  }\r\n\r\n  [kInsertString](c) {\r\n    this[kBeforeEdit](this.line, this.cursor);\r\n    if (this.cursor < this.line.length) {\r\n      const beg = StringPrototypeSlice(this.line, 0, this.cursor);\r\n      const end = StringPrototypeSlice(\r\n        this.line,\r\n        this.cursor,\r\n        this.line.length\r\n      );\r\n      this.line = beg + c + end;\r\n      this.cursor += c.length;\r\n      this[kRefreshLine]();\r\n    } else {\r\n      const oldPos = this.getCursorPos();\r\n      this.line += c;\r\n      this.cursor += c.length;\r\n      const newPos = this.getCursorPos();\r\n\r\n      if (oldPos.rows < newPos.rows) {\r\n        this[kRefreshLine]();\r\n      } else {\r\n        this[kWriteToOutput](c);\r\n      }\r\n    }\r\n  }\r\n\r\n  async [kTabComplete](lastKeypressWasTab) {\r\n    this.pause();\r\n    const string = StringPrototypeSlice(this.line, 0, this.cursor);\r\n    let value;\r\n    try {\r\n      value = await this.completer(string);\r\n    } catch (err) {\r\n      this[kWriteToOutput](`Tab completion error: ${inspect(err)}`);\r\n      return;\r\n    } finally {\r\n      this.resume();\r\n    }\r\n    this[kTabCompleter](lastKeypressWasTab, value);\r\n  }\r\n\r\n  [kTabCompleter](lastKeypressWasTab, { 0: completions, 1: completeOn }) {\r\n    // Result and the text that was completed.\r\n\r\n    if (!completions || completions.length === 0) {\r\n      return;\r\n    }\r\n\r\n    // If there is a common prefix to all matches, then apply that portion.\r\n    const prefix = commonPrefix(\r\n      ArrayPrototypeFilter(completions, (e) => e !== '')\r\n    );\r\n    if (StringPrototypeStartsWith(prefix, completeOn) &&\r\n        prefix.length > completeOn.length) {\r\n      this[kInsertString](StringPrototypeSlice(prefix, completeOn.length));\r\n      return;\r\n    } else if (!StringPrototypeStartsWith(completeOn, prefix)) {\r\n      this.line = StringPrototypeSlice(this.line,\r\n                                       0,\r\n                                       this.cursor - completeOn.length) +\r\n                  prefix +\r\n                  StringPrototypeSlice(this.line,\r\n                                       this.cursor,\r\n                                       this.line.length);\r\n      this.cursor = this.cursor - completeOn.length + prefix.length;\r\n      this._refreshLine();\r\n      return;\r\n    }\r\n\r\n    if (!lastKeypressWasTab) {\r\n      return;\r\n    }\r\n\r\n    this[kBeforeEdit](this.line, this.cursor);\r\n\r\n    // Apply/show completions.\r\n    const completionsWidth = ArrayPrototypeMap(completions, (e) =>\r\n      getStringWidth(e)\r\n    );\r\n    const width = MathMaxApply(completionsWidth) + 2; // 2 space padding\r\n    let maxColumns = MathFloor(this.columns / width) || 1;\r\n    if (maxColumns === Infinity) {\r\n      maxColumns = 1;\r\n    }\r\n    let output = '\\r\\n';\r\n    let lineIndex = 0;\r\n    let whitespace = 0;\r\n    for (let i = 0; i < completions.length; i++) {\r\n      const completion = completions[i];\r\n      if (completion === '' || lineIndex === maxColumns) {\r\n        output += '\\r\\n';\r\n        lineIndex = 0;\r\n        whitespace = 0;\r\n      } else {\r\n        output += StringPrototypeRepeat(' ', whitespace);\r\n      }\r\n      if (completion !== '') {\r\n        output += completion;\r\n        whitespace = width - completionsWidth[i];\r\n        lineIndex++;\r\n      } else {\r\n        output += '\\r\\n';\r\n      }\r\n    }\r\n    if (lineIndex !== 0) {\r\n      output += '\\r\\n\\r\\n';\r\n    }\r\n    this[kWriteToOutput](output);\r\n    this[kRefreshLine]();\r\n  }\r\n\r\n  [kWordLeft]() {\r\n    if (this.cursor > 0) {\r\n      // Reverse the string and match a word near beginning\r\n      // to avoid quadratic time complexity\r\n      const leading = StringPrototypeSlice(this.line, 0, this.cursor);\r\n      const reversed = ArrayPrototypeJoin(\r\n        ArrayPrototypeReverse(ArrayFrom(leading)),\r\n        ''\r\n      );\r\n      const match = RegExpPrototypeExec(/^\\s*(?:[^\\w\\s]+|\\w+)?/, reversed);\r\n      this[kMoveCursor](-match[0].length);\r\n    }\r\n  }\r\n\r\n  [kWordRight]() {\r\n    if (this.cursor < this.line.length) {\r\n      const trailing = StringPrototypeSlice(this.line, this.cursor);\r\n      const match = RegExpPrototypeExec(/^(?:\\s+|[^\\w\\s]+|\\w+)\\s*/, trailing);\r\n      this[kMoveCursor](match[0].length);\r\n    }\r\n  }\r\n\r\n  [kDeleteLeft]() {\r\n    if (this.cursor > 0 && this.line.length > 0) {\r\n      this[kBeforeEdit](this.line, this.cursor);\r\n      // The number of UTF-16 units comprising the character to the left\r\n      const charSize = charLengthLeft(this.line, this.cursor);\r\n      this.line =\r\n        StringPrototypeSlice(this.line, 0, this.cursor - charSize) +\r\n        StringPrototypeSlice(this.line, this.cursor, this.line.length);\r\n\r\n      this.cursor -= charSize;\r\n      this[kRefreshLine]();\r\n    }\r\n  }\r\n\r\n  [kDeleteRight]() {\r\n    if (this.cursor < this.line.length) {\r\n      this[kBeforeEdit](this.line, this.cursor);\r\n      // The number of UTF-16 units comprising the character to the left\r\n      const charSize = charLengthAt(this.line, this.cursor);\r\n      this.line =\r\n        StringPrototypeSlice(this.line, 0, this.cursor) +\r\n        StringPrototypeSlice(\r\n          this.line,\r\n          this.cursor + charSize,\r\n          this.line.length\r\n        );\r\n      this[kRefreshLine]();\r\n    }\r\n  }\r\n\r\n  [kDeleteWordLeft]() {\r\n    if (this.cursor > 0) {\r\n      this[kBeforeEdit](this.line, this.cursor);\r\n      // Reverse the string and match a word near beginning\r\n      // to avoid quadratic time complexity\r\n      let leading = StringPrototypeSlice(this.line, 0, this.cursor);\r\n      const reversed = ArrayPrototypeJoin(\r\n        ArrayPrototypeReverse(ArrayFrom(leading)),\r\n        ''\r\n      );\r\n      const match = RegExpPrototypeExec(/^\\s*(?:[^\\w\\s]+|\\w+)?/, reversed);\r\n      leading = StringPrototypeSlice(\r\n        leading,\r\n        0,\r\n        leading.length - match[0].length\r\n      );\r\n      this.line =\r\n        leading +\r\n        StringPrototypeSlice(this.line, this.cursor, this.line.length);\r\n      this.cursor = leading.length;\r\n      this[kRefreshLine]();\r\n    }\r\n  }\r\n\r\n  [kDeleteWordRight]() {\r\n    if (this.cursor < this.line.length) {\r\n      this[kBeforeEdit](this.line, this.cursor);\r\n      const trailing = StringPrototypeSlice(this.line, this.cursor);\r\n      const match = RegExpPrototypeExec(/^(?:\\s+|\\W+|\\w+)\\s*/, trailing);\r\n      this.line =\r\n        StringPrototypeSlice(this.line, 0, this.cursor) +\r\n        StringPrototypeSlice(trailing, match[0].length);\r\n      this[kRefreshLine]();\r\n    }\r\n  }\r\n\r\n  [kDeleteLineLeft]() {\r\n    this[kBeforeEdit](this.line, this.cursor);\r\n    const del = StringPrototypeSlice(this.line, 0, this.cursor);\r\n    this.line = StringPrototypeSlice(this.line, this.cursor);\r\n    this.cursor = 0;\r\n    this[kPushToKillRing](del);\r\n    this[kRefreshLine]();\r\n  }\r\n\r\n  [kDeleteLineRight]() {\r\n    this[kBeforeEdit](this.line, this.cursor);\r\n    const del = StringPrototypeSlice(this.line, this.cursor);\r\n    this.line = StringPrototypeSlice(this.line, 0, this.cursor);\r\n    this[kPushToKillRing](del);\r\n    this[kRefreshLine]();\r\n  }\r\n\r\n  [kPushToKillRing](del) {\r\n    if (!del || del === this[kKillRing][0]) return;\r\n    ArrayPrototypeUnshift(this[kKillRing], del);\r\n    this[kKillRingCursor] = 0;\r\n    while (this[kKillRing].length > kMaxLengthOfKillRing)\r\n      ArrayPrototypePop(this[kKillRing]);\r\n  }\r\n\r\n  [kYank]() {\r\n    if (this[kKillRing].length > 0) {\r\n      this[kYanking] = true;\r\n      this[kInsertString](this[kKillRing][this[kKillRingCursor]]);\r\n    }\r\n  }\r\n\r\n  [kYankPop]() {\r\n    if (!this[kYanking]) {\r\n      return;\r\n    }\r\n    if (this[kKillRing].length > 1) {\r\n      const lastYank = this[kKillRing][this[kKillRingCursor]];\r\n      this[kKillRingCursor]++;\r\n      if (this[kKillRingCursor] >= this[kKillRing].length) {\r\n        this[kKillRingCursor] = 0;\r\n      }\r\n      const currentYank = this[kKillRing][this[kKillRingCursor]];\r\n      const head =\r\n            StringPrototypeSlice(this.line, 0, this.cursor - lastYank.length);\r\n      const tail =\r\n            StringPrototypeSlice(this.line, this.cursor);\r\n      this.line = head + currentYank + tail;\r\n      this.cursor = head.length + currentYank.length;\r\n      this[kRefreshLine]();\r\n    }\r\n  }\r\n\r\n  clearLine() {\r\n    this[kMoveCursor](+Infinity);\r\n    this[kWriteToOutput]('\\r\\n');\r\n    this.line = '';\r\n    this.cursor = 0;\r\n    this.prevRows = 0;\r\n  }\r\n\r\n  [kLine]() {\r\n    const line = this[kAddHistory]();\r\n    this[kUndoStack] = [];\r\n    this[kRedoStack] = [];\r\n    this.clearLine();\r\n    this[kOnLine](line);\r\n  }\r\n\r\n  [kPushToUndoStack](text, cursor) {\r\n    if (ArrayPrototypePush(this[kUndoStack], { text, cursor }) >\r\n        kMaxUndoRedoStackSize) {\r\n      ArrayPrototypeShift(this[kUndoStack]);\r\n    }\r\n  }\r\n\r\n  [kUndo]() {\r\n    if (this[kUndoStack].length <= 0) return;\r\n\r\n    ArrayPrototypePush(\r\n      this[kRedoStack],\r\n      { text: this.line, cursor: this.cursor },\r\n    );\r\n\r\n    const entry = ArrayPrototypePop(this[kUndoStack]);\r\n    this.line = entry.text;\r\n    this.cursor = entry.cursor;\r\n\r\n    this[kRefreshLine]();\r\n  }\r\n\r\n  [kRedo]() {\r\n    if (this[kRedoStack].length <= 0) return;\r\n\r\n    ArrayPrototypePush(\r\n      this[kUndoStack],\r\n      { text: this.line, cursor: this.cursor },\r\n    );\r\n\r\n    const entry = ArrayPrototypePop(this[kRedoStack]);\r\n    this.line = entry.text;\r\n    this.cursor = entry.cursor;\r\n\r\n    this[kRefreshLine]();\r\n  }\r\n\r\n  // TODO(BridgeAR): Add underscores to the search part and a red background in\r\n  // case no match is found. This should only be the visual part and not the\r\n  // actual line content!\r\n  // TODO(BridgeAR): In case the substring based search is active and the end is\r\n  // reached, show a comment how to search the history as before. E.g., using\r\n  // <ctrl> + N. Only show this after two/three UPs or DOWNs, not on the first\r\n  // one.\r\n  [kHistoryNext]() {\r\n    if (this.historyIndex >= 0) {\r\n      this[kBeforeEdit](this.line, this.cursor);\r\n      const search = this[kSubstringSearch] || '';\r\n      let index = this.historyIndex - 1;\r\n      while (\r\n        index >= 0 &&\r\n        (!StringPrototypeStartsWith(this.history[index], search) ||\r\n          this.line === this.history[index])\r\n      ) {\r\n        index--;\r\n      }\r\n      if (index === -1) {\r\n        this.line = search;\r\n      } else {\r\n        this.line = this.history[index];\r\n      }\r\n      this.historyIndex = index;\r\n      this.cursor = this.line.length; // Set cursor to end of line.\r\n      this[kRefreshLine]();\r\n    }\r\n  }\r\n\r\n  [kHistoryPrev]() {\r\n    if (this.historyIndex < this.history.length && this.history.length) {\r\n      this[kBeforeEdit](this.line, this.cursor);\r\n      const search = this[kSubstringSearch] || '';\r\n      let index = this.historyIndex + 1;\r\n      while (\r\n        index < this.history.length &&\r\n        (!StringPrototypeStartsWith(this.history[index], search) ||\r\n          this.line === this.history[index])\r\n      ) {\r\n        index++;\r\n      }\r\n      if (index === this.history.length) {\r\n        this.line = search;\r\n      } else {\r\n        this.line = this.history[index];\r\n      }\r\n      this.historyIndex = index;\r\n      this.cursor = this.line.length; // Set cursor to end of line.\r\n      this[kRefreshLine]();\r\n    }\r\n  }\r\n\r\n  // Returns the last character's display position of the given string\r\n  [kGetDisplayPos](str) {\r\n    let offset = 0;\r\n    const col = this.columns;\r\n    let rows = 0;\r\n    str = stripVTControlCharacters(str);\r\n    for (const char of new SafeStringIterator(str)) {\r\n      if (char === '\\n') {\r\n        // Rows must be incremented by 1 even if offset = 0 or col = +Infinity.\r\n        rows += MathCeil(offset / col) || 1;\r\n        offset = 0;\r\n        continue;\r\n      }\r\n      // Tabs must be aligned by an offset of the tab size.\r\n      if (char === '\\t') {\r\n        offset += this.tabSize - (offset % this.tabSize);\r\n        continue;\r\n      }\r\n      const width = getStringWidth(char, false /* stripVTControlCharacters */);\r\n      if (width === 0 || width === 1) {\r\n        offset += width;\r\n      } else {\r\n        // width === 2\r\n        if ((offset + 1) % col === 0) {\r\n          offset++;\r\n        }\r\n        offset += 2;\r\n      }\r\n    }\r\n    const cols = offset % col;\r\n    rows += (offset - cols) / col;\r\n    return { cols, rows };\r\n  }\r\n\r\n  /**\r\n   * Returns the real position of the cursor in relation\r\n   * to the input prompt + string.\r\n   * @returns {{\r\n   *   rows: number;\r\n   *   cols: number;\r\n   *   }}\r\n   */\r\n  getCursorPos() {\r\n    const strBeforeCursor =\r\n      this[kPrompt] + StringPrototypeSlice(this.line, 0, this.cursor);\r\n    return this[kGetDisplayPos](strBeforeCursor);\r\n  }\r\n\r\n  // This function moves cursor dx places to the right\r\n  // (-dx for left) and refreshes the line if it is needed.\r\n  [kMoveCursor](dx) {\r\n    if (dx === 0) {\r\n      return;\r\n    }\r\n    const oldPos = this.getCursorPos();\r\n    this.cursor += dx;\r\n\r\n    // Bounds check\r\n    if (this.cursor < 0) {\r\n      this.cursor = 0;\r\n    } else if (this.cursor > this.line.length) {\r\n      this.cursor = this.line.length;\r\n    }\r\n\r\n    const newPos = this.getCursorPos();\r\n\r\n    // Check if cursor stayed on the line.\r\n    if (oldPos.rows === newPos.rows) {\r\n      const diffWidth = newPos.cols - oldPos.cols;\r\n      moveCursor(this.output, diffWidth, 0);\r\n    } else {\r\n      this[kRefreshLine]();\r\n    }\r\n  }\r\n\r\n  // Handle a write from the tty\r\n  [kTtyWrite](s, key) {\r\n    const previousKey = this[kPreviousKey];\r\n    key = key || kEmptyObject;\r\n    this[kPreviousKey] = key;\r\n\r\n    if (!key.meta || key.name !== 'y') {\r\n      // Reset yanking state unless we are doing yank pop.\r\n      this[kYanking] = false;\r\n    }\r\n\r\n    // Activate or deactivate substring search.\r\n    if (\r\n      (key.name === 'up' || key.name === 'down') &&\r\n      !key.ctrl &&\r\n      !key.meta &&\r\n      !key.shift\r\n    ) {\r\n      if (this[kSubstringSearch] === null) {\r\n        this[kSubstringSearch] = StringPrototypeSlice(\r\n          this.line,\r\n          0,\r\n          this.cursor\r\n        );\r\n      }\r\n    } else if (this[kSubstringSearch] !== null) {\r\n      this[kSubstringSearch] = null;\r\n      // Reset the index in case there's no match.\r\n      if (this.history.length === this.historyIndex) {\r\n        this.historyIndex = -1;\r\n      }\r\n    }\r\n\r\n    // Undo & Redo\r\n    if (typeof key.sequence === 'string') {\r\n      switch (StringPrototypeCodePointAt(key.sequence, 0)) {\r\n        case 0x1f:\r\n          this[kUndo]();\r\n          return;\r\n        case 0x1e:\r\n          this[kRedo]();\r\n          return;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    // Ignore escape key, fixes\r\n    // https://github.com/nodejs/node-v0.x-archive/issues/2876.\r\n    if (key.name === 'escape') return;\r\n\r\n    if (key.ctrl && key.shift) {\r\n      /* Control and shift pressed */\r\n      switch (key.name) {\r\n        // TODO(BridgeAR): The transmitted escape sequence is `\\b` and that is\r\n        // identical to <ctrl>-h. It should have a unique escape sequence.\r\n        case 'backspace':\r\n          this[kDeleteLineLeft]();\r\n          break;\r\n\r\n        case 'delete':\r\n          this[kDeleteLineRight]();\r\n          break;\r\n      }\r\n    } else if (key.ctrl) {\r\n      /* Control key pressed */\r\n\r\n      switch (key.name) {\r\n        case 'c':\r\n          if (this.listenerCount('SIGINT') > 0) {\r\n            this.emit('SIGINT');\r\n          } else {\r\n            // This readline instance is finished\r\n            this.close();\r\n          }\r\n          break;\r\n\r\n        case 'h': // delete left\r\n          this[kDeleteLeft]();\r\n          break;\r\n\r\n        case 'd': // delete right or EOF\r\n          if (this.cursor === 0 && this.line.length === 0) {\r\n            // This readline instance is finished\r\n            this.close();\r\n          } else if (this.cursor < this.line.length) {\r\n            this[kDeleteRight]();\r\n          }\r\n          break;\r\n\r\n        case 'u': // Delete from current to start of line\r\n          this[kDeleteLineLeft]();\r\n          break;\r\n\r\n        case 'k': // Delete from current to end of line\r\n          this[kDeleteLineRight]();\r\n          break;\r\n\r\n        case 'a': // Go to the start of the line\r\n          this[kMoveCursor](-Infinity);\r\n          break;\r\n\r\n        case 'e': // Go to the end of the line\r\n          this[kMoveCursor](+Infinity);\r\n          break;\r\n\r\n        case 'b': // back one character\r\n          this[kMoveCursor](-charLengthLeft(this.line, this.cursor));\r\n          break;\r\n\r\n        case 'f': // Forward one character\r\n          this[kMoveCursor](+charLengthAt(this.line, this.cursor));\r\n          break;\r\n\r\n        case 'l': // Clear the whole screen\r\n          cursorTo(this.output, 0, 0);\r\n          clearScreenDown(this.output);\r\n          this[kRefreshLine]();\r\n          break;\r\n\r\n        case 'n': // next history item\r\n          this[kHistoryNext]();\r\n          break;\r\n\r\n        case 'p': // Previous history item\r\n          this[kHistoryPrev]();\r\n          break;\r\n\r\n        case 'y': // Yank killed string\r\n          this[kYank]();\r\n          break;\r\n\r\n        case 'z':\r\n          if (process.platform === 'win32') break;\r\n          if (this.listenerCount('SIGTSTP') > 0) {\r\n            this.emit('SIGTSTP');\r\n          } else {\r\n            process.once('SIGCONT', () => {\r\n              // Don't raise events if stream has already been abandoned.\r\n              if (!this.paused) {\r\n                // Stream must be paused and resumed after SIGCONT to catch\r\n                // SIGINT, SIGTSTP, and EOF.\r\n                this.pause();\r\n                this.emit('SIGCONT');\r\n              }\r\n              // Explicitly re-enable \"raw mode\" and move the cursor to\r\n              // the correct position.\r\n              // See https://github.com/joyent/node/issues/3295.\r\n              this[kSetRawMode](true);\r\n              this[kRefreshLine]();\r\n            });\r\n            this[kSetRawMode](false);\r\n            process.kill(process.pid, 'SIGTSTP');\r\n          }\r\n          break;\r\n\r\n        case 'w': // Delete backwards to a word boundary\r\n        // TODO(BridgeAR): The transmitted escape sequence is `\\b` and that is\r\n        // identical to <ctrl>-h. It should have a unique escape sequence.\r\n        // Falls through\r\n        case 'backspace':\r\n          this[kDeleteWordLeft]();\r\n          break;\r\n\r\n        case 'delete': // Delete forward to a word boundary\r\n          this[kDeleteWordRight]();\r\n          break;\r\n\r\n        case 'left':\r\n          this[kWordLeft]();\r\n          break;\r\n\r\n        case 'right':\r\n          this[kWordRight]();\r\n          break;\r\n      }\r\n    } else if (key.meta) {\r\n      /* Meta key pressed */\r\n\r\n      switch (key.name) {\r\n        case 'b': // backward word\r\n          this[kWordLeft]();\r\n          break;\r\n\r\n        case 'f': // forward word\r\n          this[kWordRight]();\r\n          break;\r\n\r\n        case 'd': // delete forward word\r\n        case 'delete':\r\n          this[kDeleteWordRight]();\r\n          break;\r\n\r\n        case 'backspace': // Delete backwards to a word boundary\r\n          this[kDeleteWordLeft]();\r\n          break;\r\n\r\n        case 'y': // Doing yank pop\r\n          this[kYankPop]();\r\n          break;\r\n      }\r\n    } else {\r\n      /* No modifier keys used */\r\n\r\n      // \\r bookkeeping is only relevant if a \\n comes right after.\r\n      if (this[kSawReturnAt] && key.name !== 'enter') this[kSawReturnAt] = 0;\r\n\r\n      switch (key.name) {\r\n        case 'return': // Carriage return, i.e. \\r\r\n          this[kSawReturnAt] = DateNow();\r\n          this[kLine]();\r\n          break;\r\n\r\n        case 'enter':\r\n          // When key interval > crlfDelay\r\n          if (\r\n            this[kSawReturnAt] === 0 ||\r\n            DateNow() - this[kSawReturnAt] > this.crlfDelay\r\n          ) {\r\n            this[kLine]();\r\n          }\r\n          this[kSawReturnAt] = 0;\r\n          break;\r\n\r\n        case 'backspace':\r\n          this[kDeleteLeft]();\r\n          break;\r\n\r\n        case 'delete':\r\n          this[kDeleteRight]();\r\n          break;\r\n\r\n        case 'left':\r\n          // Obtain the code point to the left\r\n          this[kMoveCursor](-charLengthLeft(this.line, this.cursor));\r\n          break;\r\n\r\n        case 'right':\r\n          this[kMoveCursor](+charLengthAt(this.line, this.cursor));\r\n          break;\r\n\r\n        case 'home':\r\n          this[kMoveCursor](-Infinity);\r\n          break;\r\n\r\n        case 'end':\r\n          this[kMoveCursor](+Infinity);\r\n          break;\r\n\r\n        case 'up':\r\n          this[kHistoryPrev]();\r\n          break;\r\n\r\n        case 'down':\r\n          this[kHistoryNext]();\r\n          break;\r\n\r\n        case 'tab':\r\n          // If tab completion enabled, do that...\r\n          if (\r\n            typeof this.completer === 'function' &&\r\n            this.isCompletionEnabled\r\n          ) {\r\n            const lastKeypressWasTab =\r\n              previousKey && previousKey.name === 'tab';\r\n            this[kTabComplete](lastKeypressWasTab);\r\n            break;\r\n          }\r\n        // falls through\r\n        default:\r\n          if (typeof s === 'string' && s) {\r\n            let nextMatch = RegExpPrototypeExec(lineEnding, s);\r\n            if (nextMatch !== null) {\r\n              this[kInsertString](StringPrototypeSlice(s, 0, nextMatch.index));\r\n              let { lastIndex } = lineEnding;\r\n              while ((nextMatch = RegExpPrototypeExec(lineEnding, s)) !== null) {\r\n                this[kLine]();\r\n                this[kInsertString](StringPrototypeSlice(s, lastIndex, nextMatch.index));\r\n                ({ lastIndex } = lineEnding);\r\n              }\r\n              if (lastIndex === s.length) this[kLine]();\r\n            } else {\r\n              this[kInsertString](s);\r\n            }\r\n          }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates an `AsyncIterator` object that iterates through\r\n   * each line in the input stream as a string.\r\n   * @typedef {{\r\n   *   [Symbol.asyncIterator]: () => InterfaceAsyncIterator,\r\n   *   next: () => Promise<string>\r\n   * }} InterfaceAsyncIterator\r\n   * @returns {InterfaceAsyncIterator}\r\n   */\r\n  [SymbolAsyncIterator]() {\r\n    if (this[kLineObjectStream] === undefined) {\r\n      if (Readable === undefined) {\r\n        Readable = require('stream').Readable;\r\n      }\r\n      const readable = new Readable({\r\n        objectMode: true,\r\n        read: () => {\r\n          this.resume();\r\n        },\r\n        destroy: (err, cb) => {\r\n          this.off('line', lineListener);\r\n          this.off('close', closeListener);\r\n          this.close();\r\n          cb(err);\r\n        },\r\n      });\r\n      const lineListener = (input) => {\r\n        if (!readable.push(input)) {\r\n          // TODO(rexagod): drain to resume flow\r\n          this.pause();\r\n        }\r\n      };\r\n      const closeListener = () => {\r\n        readable.push(null);\r\n      };\r\n      const errorListener = (err) => {\r\n        readable.destroy(err);\r\n      };\r\n      this.on('error', errorListener);\r\n      this.on('line', lineListener);\r\n      this.on('close', closeListener);\r\n      this[kLineObjectStream] = readable;\r\n    }\r\n\r\n    return this[kLineObjectStream][SymbolAsyncIterator]();\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  Interface,\r\n  InterfaceConstructor,\r\n  kAddHistory,\r\n  kDecoder,\r\n  kDeleteLeft,\r\n  kDeleteLineLeft,\r\n  kDeleteLineRight,\r\n  kDeleteRight,\r\n  kDeleteWordLeft,\r\n  kDeleteWordRight,\r\n  kGetDisplayPos,\r\n  kHistoryNext,\r\n  kHistoryPrev,\r\n  kInsertString,\r\n  kLine,\r\n  kLine_buffer,\r\n  kMoveCursor,\r\n  kNormalWrite,\r\n  kOldPrompt,\r\n  kOnLine,\r\n  kPreviousKey,\r\n  kPrompt,\r\n  kQuestionCallback,\r\n  kQuestionCancel,\r\n  kRefreshLine,\r\n  kSawKeyPress,\r\n  kSawReturnAt,\r\n  kSetRawMode,\r\n  kTabComplete,\r\n  kTabCompleter,\r\n  kTtyWrite,\r\n  kWordLeft,\r\n  kWordRight,\r\n  kWriteToOutput,\r\n};\r\n",
    "name": "interface",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 472,
    "sourcePositions": []
  },
  {
    "url": "node:internal/readline/utils",
    "source": "'use strict';\r\n\r\nconst {\r\n  ArrayPrototypeSlice,\r\n  ArrayPrototypeSort,\r\n  RegExpPrototypeExec,\r\n  StringFromCharCode,\r\n  StringPrototypeCharCodeAt,\r\n  StringPrototypeCodePointAt,\r\n  StringPrototypeSlice,\r\n  StringPrototypeToLowerCase,\r\n  Symbol,\r\n} = primordials;\r\n\r\nconst kUTF16SurrogateThreshold = 0x10000; // 2 ** 16\r\nconst kEscape = '\\x1b';\r\nconst kSubstringSearch = Symbol('kSubstringSearch');\r\n\r\nfunction CSI(strings, ...args) {\r\n  let ret = `${kEscape}[`;\r\n  for (let n = 0; n < strings.length; n++) {\r\n    ret += strings[n];\r\n    if (n < args.length)\r\n      ret += args[n];\r\n  }\r\n  return ret;\r\n}\r\n\r\nCSI.kEscape = kEscape;\r\nCSI.kClearToLineBeginning = CSI`1K`;\r\nCSI.kClearToLineEnd = CSI`0K`;\r\nCSI.kClearLine = CSI`2K`;\r\nCSI.kClearScreenDown = CSI`0J`;\r\n\r\n// TODO(BridgeAR): Treat combined characters as single character, i.e,\r\n// 'a\\u0301' and '\\u0301a' (both have the same visual output).\r\n// Check Canonical_Combining_Class in\r\n// http://userguide.icu-project.org/strings/properties\r\nfunction charLengthLeft(str, i) {\r\n  if (i <= 0)\r\n    return 0;\r\n  if ((i > 1 &&\r\n      StringPrototypeCodePointAt(str, i - 2) >= kUTF16SurrogateThreshold) ||\r\n      StringPrototypeCodePointAt(str, i - 1) >= kUTF16SurrogateThreshold) {\r\n    return 2;\r\n  }\r\n  return 1;\r\n}\r\n\r\nfunction charLengthAt(str, i) {\r\n  if (str.length <= i) {\r\n    // Pretend to move to the right. This is necessary to autocomplete while\r\n    // moving to the right.\r\n    return 1;\r\n  }\r\n  return StringPrototypeCodePointAt(str, i) >= kUTF16SurrogateThreshold ? 2 : 1;\r\n}\r\n\r\n/*\r\n  Some patterns seen in terminal key escape codes, derived from combos seen\r\n  at http://www.midnight-commander.org/browser/lib/tty/key.c\r\n\r\n  ESC letter\r\n  ESC [ letter\r\n  ESC [ modifier letter\r\n  ESC [ 1 ; modifier letter\r\n  ESC [ num char\r\n  ESC [ num ; modifier char\r\n  ESC O letter\r\n  ESC O modifier letter\r\n  ESC O 1 ; modifier letter\r\n  ESC N letter\r\n  ESC [ [ num ; modifier char\r\n  ESC [ [ 1 ; modifier letter\r\n  ESC ESC [ num char\r\n  ESC ESC O letter\r\n\r\n  - char is usually ~ but $ and ^ also happen with rxvt\r\n  - modifier is 1 +\r\n                (shift     * 1) +\r\n                (left_alt  * 2) +\r\n                (ctrl      * 4) +\r\n                (right_alt * 8)\r\n  - two leading ESCs apparently mean the same as one leading ESC\r\n*/\r\nfunction* emitKeys(stream) {\r\n  while (true) {\r\n    let ch = yield;\r\n    let s = ch;\r\n    let escaped = false;\r\n    const key = {\r\n      sequence: null,\r\n      name: undefined,\r\n      ctrl: false,\r\n      meta: false,\r\n      shift: false\r\n    };\r\n\r\n    if (ch === kEscape) {\r\n      escaped = true;\r\n      s += (ch = yield);\r\n\r\n      if (ch === kEscape) {\r\n        s += (ch = yield);\r\n      }\r\n    }\r\n\r\n    if (escaped && (ch === 'O' || ch === '[')) {\r\n      // ANSI escape sequence\r\n      let code = ch;\r\n      let modifier = 0;\r\n\r\n      if (ch === 'O') {\r\n        // ESC O letter\r\n        // ESC O modifier letter\r\n        s += (ch = yield);\r\n\r\n        if (ch >= '0' && ch <= '9') {\r\n          modifier = (ch >> 0) - 1;\r\n          s += (ch = yield);\r\n        }\r\n\r\n        code += ch;\r\n      } else if (ch === '[') {\r\n        // ESC [ letter\r\n        // ESC [ modifier letter\r\n        // ESC [ [ modifier letter\r\n        // ESC [ [ num char\r\n        s += (ch = yield);\r\n\r\n        if (ch === '[') {\r\n          // \\x1b[[A\r\n          //      ^--- escape codes might have a second bracket\r\n          code += ch;\r\n          s += (ch = yield);\r\n        }\r\n\r\n        /*\r\n         * Here and later we try to buffer just enough data to get\r\n         * a complete ascii sequence.\r\n         *\r\n         * We have basically two classes of ascii characters to process:\r\n         *\r\n         *\r\n         * 1. `\\x1b[24;5~` should be parsed as { code: '[24~', modifier: 5 }\r\n         *\r\n         * This particular example is featuring Ctrl+F12 in xterm.\r\n         *\r\n         *  - `;5` part is optional, e.g. it could be `\\x1b[24~`\r\n         *  - first part can contain one or two digits\r\n         *\r\n         * So the generic regexp is like /^\\d\\d?(;\\d)?[~^$]$/\r\n         *\r\n         *\r\n         * 2. `\\x1b[1;5H` should be parsed as { code: '[H', modifier: 5 }\r\n         *\r\n         * This particular example is featuring Ctrl+Home in xterm.\r\n         *\r\n         *  - `1;5` part is optional, e.g. it could be `\\x1b[H`\r\n         *  - `1;` part is optional, e.g. it could be `\\x1b[5H`\r\n         *\r\n         * So the generic regexp is like /^((\\d;)?\\d)?[A-Za-z]$/\r\n         *\r\n         */\r\n        const cmdStart = s.length - 1;\r\n\r\n        // Skip one or two leading digits\r\n        if (ch >= '0' && ch <= '9') {\r\n          s += (ch = yield);\r\n\r\n          if (ch >= '0' && ch <= '9') {\r\n            s += (ch = yield);\r\n          }\r\n        }\r\n\r\n        // skip modifier\r\n        if (ch === ';') {\r\n          s += (ch = yield);\r\n\r\n          if (ch >= '0' && ch <= '9') {\r\n            s += yield;\r\n          }\r\n        }\r\n\r\n        /*\r\n         * We buffered enough data, now trying to extract code\r\n         * and modifier from it\r\n         */\r\n        const cmd = StringPrototypeSlice(s, cmdStart);\r\n        let match;\r\n\r\n        if ((match = RegExpPrototypeExec(/^(\\d\\d?)(;(\\d))?([~^$])$/, cmd))) {\r\n          code += match[1] + match[4];\r\n          modifier = (match[3] || 1) - 1;\r\n        } else if (\r\n          (match = RegExpPrototypeExec(/^((\\d;)?(\\d))?([A-Za-z])$/, cmd))\r\n        ) {\r\n          code += match[4];\r\n          modifier = (match[3] || 1) - 1;\r\n        } else {\r\n          code += cmd;\r\n        }\r\n      }\r\n\r\n      // Parse the key modifier\r\n      key.ctrl = !!(modifier & 4);\r\n      key.meta = !!(modifier & 10);\r\n      key.shift = !!(modifier & 1);\r\n      key.code = code;\r\n\r\n      // Parse the key itself\r\n      switch (code) {\r\n        /* xterm/gnome ESC [ letter (with modifier) */\r\n        case '[P': key.name = 'f1'; break;\r\n        case '[Q': key.name = 'f2'; break;\r\n        case '[R': key.name = 'f3'; break;\r\n        case '[S': key.name = 'f4'; break;\r\n\r\n        /* xterm/gnome ESC O letter (without modifier) */\r\n        case 'OP': key.name = 'f1'; break;\r\n        case 'OQ': key.name = 'f2'; break;\r\n        case 'OR': key.name = 'f3'; break;\r\n        case 'OS': key.name = 'f4'; break;\r\n\r\n        /* xterm/rxvt ESC [ number ~ */\r\n        case '[11~': key.name = 'f1'; break;\r\n        case '[12~': key.name = 'f2'; break;\r\n        case '[13~': key.name = 'f3'; break;\r\n        case '[14~': key.name = 'f4'; break;\r\n\r\n        /* from Cygwin and used in libuv */\r\n        case '[[A': key.name = 'f1'; break;\r\n        case '[[B': key.name = 'f2'; break;\r\n        case '[[C': key.name = 'f3'; break;\r\n        case '[[D': key.name = 'f4'; break;\r\n        case '[[E': key.name = 'f5'; break;\r\n\r\n        /* common */\r\n        case '[15~': key.name = 'f5'; break;\r\n        case '[17~': key.name = 'f6'; break;\r\n        case '[18~': key.name = 'f7'; break;\r\n        case '[19~': key.name = 'f8'; break;\r\n        case '[20~': key.name = 'f9'; break;\r\n        case '[21~': key.name = 'f10'; break;\r\n        case '[23~': key.name = 'f11'; break;\r\n        case '[24~': key.name = 'f12'; break;\r\n\r\n        /* xterm ESC [ letter */\r\n        case '[A': key.name = 'up'; break;\r\n        case '[B': key.name = 'down'; break;\r\n        case '[C': key.name = 'right'; break;\r\n        case '[D': key.name = 'left'; break;\r\n        case '[E': key.name = 'clear'; break;\r\n        case '[F': key.name = 'end'; break;\r\n        case '[H': key.name = 'home'; break;\r\n\r\n        /* xterm/gnome ESC O letter */\r\n        case 'OA': key.name = 'up'; break;\r\n        case 'OB': key.name = 'down'; break;\r\n        case 'OC': key.name = 'right'; break;\r\n        case 'OD': key.name = 'left'; break;\r\n        case 'OE': key.name = 'clear'; break;\r\n        case 'OF': key.name = 'end'; break;\r\n        case 'OH': key.name = 'home'; break;\r\n\r\n        /* xterm/rxvt ESC [ number ~ */\r\n        case '[1~': key.name = 'home'; break;\r\n        case '[2~': key.name = 'insert'; break;\r\n        case '[3~': key.name = 'delete'; break;\r\n        case '[4~': key.name = 'end'; break;\r\n        case '[5~': key.name = 'pageup'; break;\r\n        case '[6~': key.name = 'pagedown'; break;\r\n\r\n        /* putty */\r\n        case '[[5~': key.name = 'pageup'; break;\r\n        case '[[6~': key.name = 'pagedown'; break;\r\n\r\n        /* rxvt */\r\n        case '[7~': key.name = 'home'; break;\r\n        case '[8~': key.name = 'end'; break;\r\n\r\n        /* rxvt keys with modifiers */\r\n        case '[a': key.name = 'up'; key.shift = true; break;\r\n        case '[b': key.name = 'down'; key.shift = true; break;\r\n        case '[c': key.name = 'right'; key.shift = true; break;\r\n        case '[d': key.name = 'left'; key.shift = true; break;\r\n        case '[e': key.name = 'clear'; key.shift = true; break;\r\n\r\n        case '[2$': key.name = 'insert'; key.shift = true; break;\r\n        case '[3$': key.name = 'delete'; key.shift = true; break;\r\n        case '[5$': key.name = 'pageup'; key.shift = true; break;\r\n        case '[6$': key.name = 'pagedown'; key.shift = true; break;\r\n        case '[7$': key.name = 'home'; key.shift = true; break;\r\n        case '[8$': key.name = 'end'; key.shift = true; break;\r\n\r\n        case 'Oa': key.name = 'up'; key.ctrl = true; break;\r\n        case 'Ob': key.name = 'down'; key.ctrl = true; break;\r\n        case 'Oc': key.name = 'right'; key.ctrl = true; break;\r\n        case 'Od': key.name = 'left'; key.ctrl = true; break;\r\n        case 'Oe': key.name = 'clear'; key.ctrl = true; break;\r\n\r\n        case '[2^': key.name = 'insert'; key.ctrl = true; break;\r\n        case '[3^': key.name = 'delete'; key.ctrl = true; break;\r\n        case '[5^': key.name = 'pageup'; key.ctrl = true; break;\r\n        case '[6^': key.name = 'pagedown'; key.ctrl = true; break;\r\n        case '[7^': key.name = 'home'; key.ctrl = true; break;\r\n        case '[8^': key.name = 'end'; key.ctrl = true; break;\r\n\r\n        /* misc. */\r\n        case '[Z': key.name = 'tab'; key.shift = true; break;\r\n        default: key.name = 'undefined'; break;\r\n      }\r\n    } else if (ch === '\\r') {\r\n      // carriage return\r\n      key.name = 'return';\r\n      key.meta = escaped;\r\n    } else if (ch === '\\n') {\r\n      // Enter, should have been called linefeed\r\n      key.name = 'enter';\r\n      key.meta = escaped;\r\n    } else if (ch === '\\t') {\r\n      // tab\r\n      key.name = 'tab';\r\n      key.meta = escaped;\r\n    } else if (ch === '\\b' || ch === '\\x7f') {\r\n      // backspace or ctrl+h\r\n      key.name = 'backspace';\r\n      key.meta = escaped;\r\n    } else if (ch === kEscape) {\r\n      // escape key\r\n      key.name = 'escape';\r\n      key.meta = escaped;\r\n    } else if (ch === ' ') {\r\n      key.name = 'space';\r\n      key.meta = escaped;\r\n    } else if (!escaped && ch <= '\\x1a') {\r\n      // ctrl+letter\r\n      key.name = StringFromCharCode(\r\n        StringPrototypeCharCodeAt(ch) + StringPrototypeCharCodeAt('a') - 1\r\n      );\r\n      key.ctrl = true;\r\n    } else if (RegExpPrototypeExec(/^[0-9A-Za-z]$/, ch) !== null) {\r\n      // Letter, number, shift+letter\r\n      key.name = StringPrototypeToLowerCase(ch);\r\n      key.shift = RegExpPrototypeExec(/^[A-Z]$/, ch) !== null;\r\n      key.meta = escaped;\r\n    } else if (escaped) {\r\n      // Escape sequence timeout\r\n      key.name = ch.length ? undefined : 'escape';\r\n      key.meta = true;\r\n    }\r\n\r\n    key.sequence = s;\r\n\r\n    if (s.length !== 0 && (key.name !== undefined || escaped)) {\r\n      /* Named character or sequence */\r\n      stream.emit('keypress', escaped ? undefined : s, key);\r\n    } else if (charLengthAt(s, 0) === s.length) {\r\n      /* Single unnamed character, e.g. \".\" */\r\n      stream.emit('keypress', s, key);\r\n    }\r\n    /* Unrecognized or broken escape sequence, don't emit anything */\r\n  }\r\n}\r\n\r\n// This runs in O(n log n).\r\nfunction commonPrefix(strings) {\r\n  if (strings.length === 0) {\r\n    return '';\r\n  }\r\n  if (strings.length === 1) {\r\n    return strings[0];\r\n  }\r\n  const sorted = ArrayPrototypeSort(ArrayPrototypeSlice(strings));\r\n  const min = sorted[0];\r\n  const max = sorted[sorted.length - 1];\r\n  for (let i = 0; i < min.length; i++) {\r\n    if (min[i] !== max[i]) {\r\n      return StringPrototypeSlice(min, 0, i);\r\n    }\r\n  }\r\n  return min;\r\n}\r\n\r\nmodule.exports = {\r\n  charLengthAt,\r\n  charLengthLeft,\r\n  commonPrefix,\r\n  emitKeys,\r\n  kSubstringSearch,\r\n  CSI\r\n};\r\n",
    "name": "node:internal/cluster/utils",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 473,
    "sourcePositions": []
  },
  {
    "url": "node:internal/readline/callbacks",
    "source": "'use strict';\r\n\r\nconst {\r\n  NumberIsNaN,\r\n} = primordials;\r\n\r\nconst {\r\n  codes: {\r\n    ERR_INVALID_ARG_VALUE,\r\n    ERR_INVALID_CURSOR_POS,\r\n  },\r\n} = require('internal/errors');\r\n\r\nconst {\r\n  validateFunction,\r\n} = require('internal/validators');\r\nconst {\r\n  CSI,\r\n} = require('internal/readline/utils');\r\n\r\nconst {\r\n  kClearLine,\r\n  kClearScreenDown,\r\n  kClearToLineBeginning,\r\n  kClearToLineEnd,\r\n} = CSI;\r\n\r\n\r\n/**\r\n * moves the cursor to the x and y coordinate on the given stream\r\n */\r\n\r\nfunction cursorTo(stream, x, y, callback) {\r\n  if (callback !== undefined) {\r\n    validateFunction(callback, 'callback');\r\n  }\r\n\r\n  if (typeof y === 'function') {\r\n    callback = y;\r\n    y = undefined;\r\n  }\r\n\r\n  if (NumberIsNaN(x)) throw new ERR_INVALID_ARG_VALUE('x', x);\r\n  if (NumberIsNaN(y)) throw new ERR_INVALID_ARG_VALUE('y', y);\r\n\r\n  if (stream == null || (typeof x !== 'number' && typeof y !== 'number')) {\r\n    if (typeof callback === 'function') process.nextTick(callback, null);\r\n    return true;\r\n  }\r\n\r\n  if (typeof x !== 'number') throw new ERR_INVALID_CURSOR_POS();\r\n\r\n  const data = typeof y !== 'number' ? CSI`${x + 1}G` : CSI`${y + 1};${x + 1}H`;\r\n  return stream.write(data, callback);\r\n}\r\n\r\n/**\r\n * moves the cursor relative to its current location\r\n */\r\n\r\nfunction moveCursor(stream, dx, dy, callback) {\r\n  if (callback !== undefined) {\r\n    validateFunction(callback, 'callback');\r\n  }\r\n\r\n  if (stream == null || !(dx || dy)) {\r\n    if (typeof callback === 'function') process.nextTick(callback, null);\r\n    return true;\r\n  }\r\n\r\n  let data = '';\r\n\r\n  if (dx < 0) {\r\n    data += CSI`${-dx}D`;\r\n  } else if (dx > 0) {\r\n    data += CSI`${dx}C`;\r\n  }\r\n\r\n  if (dy < 0) {\r\n    data += CSI`${-dy}A`;\r\n  } else if (dy > 0) {\r\n    data += CSI`${dy}B`;\r\n  }\r\n\r\n  return stream.write(data, callback);\r\n}\r\n\r\n/**\r\n * clears the current line the cursor is on:\r\n *   -1 for left of the cursor\r\n *   +1 for right of the cursor\r\n *    0 for the entire line\r\n */\r\n\r\nfunction clearLine(stream, dir, callback) {\r\n  if (callback !== undefined) {\r\n    validateFunction(callback, 'callback');\r\n  }\r\n\r\n  if (stream === null || stream === undefined) {\r\n    if (typeof callback === 'function') process.nextTick(callback, null);\r\n    return true;\r\n  }\r\n\r\n  const type =\r\n    dir < 0 ? kClearToLineBeginning : dir > 0 ? kClearToLineEnd : kClearLine;\r\n  return stream.write(type, callback);\r\n}\r\n\r\n/**\r\n * clears the screen from the current position of the cursor down\r\n */\r\n\r\nfunction clearScreenDown(stream, callback) {\r\n  if (callback !== undefined) {\r\n    validateFunction(callback, 'callback');\r\n  }\r\n\r\n  if (stream === null || stream === undefined) {\r\n    if (typeof callback === 'function') process.nextTick(callback, null);\r\n    return true;\r\n  }\r\n\r\n  return stream.write(kClearScreenDown, callback);\r\n}\r\n\r\nmodule.exports = {\r\n  clearLine,\r\n  clearScreenDown,\r\n  cursorTo,\r\n  moveCursor,\r\n};\r\n",
    "name": "callbacks",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 474,
    "sourcePositions": []
  },
  {
    "url": "node:internal/modules/esm/translators",
    "source": "'use strict';\r\n\r\nconst {\r\n  ArrayPrototypeForEach,\r\n  ArrayPrototypeMap,\r\n  Boolean,\r\n  JSONParse,\r\n  ObjectGetPrototypeOf,\r\n  ObjectPrototypeHasOwnProperty,\r\n  ObjectKeys,\r\n  SafeArrayIterator,\r\n  SafeMap,\r\n  SafeSet,\r\n  StringPrototypeReplaceAll,\r\n  StringPrototypeSlice,\r\n  StringPrototypeStartsWith,\r\n  SyntaxErrorPrototype,\r\n  globalThis: { WebAssembly },\r\n} = primordials;\r\n\r\nlet _TYPES = null;\r\nfunction lazyTypes() {\r\n  if (_TYPES !== null) return _TYPES;\r\n  return _TYPES = require('internal/util/types');\r\n}\r\n\r\nconst { readFileSync } = require('fs');\r\nconst { extname, isAbsolute } = require('path');\r\nconst {\r\n  hasEsmSyntax,\r\n  loadBuiltinModule,\r\n  stripBOM,\r\n} = require('internal/modules/cjs/helpers');\r\nconst {\r\n  Module: CJSModule,\r\n  cjsParseCache\r\n} = require('internal/modules/cjs/loader');\r\nconst internalURLModule = require('internal/url');\r\nconst createDynamicModule = require(\r\n  'internal/modules/esm/create_dynamic_module');\r\nconst { fileURLToPath, URL } = require('url');\r\nlet debug = require('internal/util/debuglog').debuglog('esm', (fn) => {\r\n  debug = fn;\r\n});\r\nconst { emitExperimentalWarning } = require('internal/util');\r\nconst {\r\n  ERR_UNKNOWN_BUILTIN_MODULE,\r\n  ERR_INVALID_RETURN_PROPERTY_VALUE\r\n} = require('internal/errors').codes;\r\nconst { maybeCacheSourceMap } = require('internal/source_map/source_map_cache');\r\nconst moduleWrap = internalBinding('module_wrap');\r\nconst { ModuleWrap } = moduleWrap;\r\nconst asyncESM = require('internal/process/esm_loader');\r\nconst { emitWarningSync } = require('internal/process/warning');\r\nconst { TextDecoder } = require('internal/encoding');\r\n\r\nlet cjsParse;\r\nasync function initCJSParse() {\r\n  if (typeof WebAssembly === 'undefined') {\r\n    cjsParse = require('internal/deps/cjs-module-lexer/lexer').parse;\r\n  } else {\r\n    const { parse, init } =\r\n        require('internal/deps/cjs-module-lexer/dist/lexer');\r\n    try {\r\n      await init();\r\n      cjsParse = parse;\r\n    } catch {\r\n      cjsParse = require('internal/deps/cjs-module-lexer/lexer').parse;\r\n    }\r\n  }\r\n}\r\n\r\nconst translators = new SafeMap();\r\nexports.translators = translators;\r\nexports.enrichCJSError = enrichCJSError;\r\n\r\nlet DECODER = null;\r\nfunction assertBufferSource(body, allowString, hookName) {\r\n  if (allowString && typeof body === 'string') {\r\n    return;\r\n  }\r\n  const { isArrayBufferView, isAnyArrayBuffer } = lazyTypes();\r\n  if (isArrayBufferView(body) || isAnyArrayBuffer(body)) {\r\n    return;\r\n  }\r\n  throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\r\n    `${allowString ? 'string, ' : ''}array buffer, or typed array`,\r\n    hookName,\r\n    'source',\r\n    body\r\n  );\r\n}\r\n\r\nfunction stringify(body) {\r\n  if (typeof body === 'string') return body;\r\n  assertBufferSource(body, false, 'transformSource');\r\n  DECODER = DECODER === null ? new TextDecoder() : DECODER;\r\n  return DECODER.decode(body);\r\n}\r\n\r\nfunction errPath(url) {\r\n  const parsed = new URL(url);\r\n  if (parsed.protocol === 'file:') {\r\n    return fileURLToPath(parsed);\r\n  }\r\n  return url;\r\n}\r\n\r\nasync function importModuleDynamically(specifier, { url }, assertions) {\r\n  return asyncESM.esmLoader.import(specifier, url, assertions);\r\n}\r\n\r\n// Strategy for loading a standard JavaScript module.\r\ntranslators.set('module', async function moduleStrategy(url, source, isMain) {\r\n  assertBufferSource(source, true, 'load');\r\n  source = stringify(source);\r\n  maybeCacheSourceMap(url, source);\r\n  debug(`Translating StandardModule ${url}`);\r\n  const module = new ModuleWrap(url, undefined, source, 0, 0);\r\n  moduleWrap.callbackMap.set(module, {\r\n    initializeImportMeta: (meta, wrap) => this.importMetaInitialize(meta, { url }),\r\n    importModuleDynamically,\r\n  });\r\n  return module;\r\n});\r\n\r\n/**\r\n * @param {Error | any} err\r\n * @param {string} [content] Content of the file, if known.\r\n * @param {string} [filename] Useful only if `content` is unknown.\r\n */\r\nfunction enrichCJSError(err, content, filename) {\r\n  if (err != null && ObjectGetPrototypeOf(err) === SyntaxErrorPrototype &&\r\n      hasEsmSyntax(content || readFileSync(filename, 'utf-8'))) {\r\n    // Emit the warning synchronously because we are in the middle of handling\r\n    // a SyntaxError that will throw and likely terminate the process before an\r\n    // asynchronous warning would be emitted.\r\n    emitWarningSync(\r\n      'To load an ES module, set \"type\": \"module\" in the package.json or use ' +\r\n      'the .mjs extension.'\r\n    );\r\n  }\r\n}\r\n\r\n// Strategy for loading a node-style CommonJS module\r\nconst isWindows = process.platform === 'win32';\r\ntranslators.set('commonjs', async function commonjsStrategy(url, source,\r\n                                                            isMain) {\r\n  debug(`Translating CJSModule ${url}`);\r\n\r\n  let filename = internalURLModule.fileURLToPath(new URL(url));\r\n  if (isWindows)\r\n    filename = StringPrototypeReplaceAll(filename, '/', '\\\\');\r\n\r\n  if (!cjsParse) await initCJSParse();\r\n  const { module, exportNames } = cjsPreparseModuleExports(filename);\r\n  const namesWithDefault = exportNames.has('default') ?\r\n    [...exportNames] : ['default', ...exportNames];\r\n\r\n  return new ModuleWrap(url, undefined, namesWithDefault, function() {\r\n    debug(`Loading CJSModule ${url}`);\r\n\r\n    let exports;\r\n    if (asyncESM.esmLoader.cjsCache.has(module)) {\r\n      exports = asyncESM.esmLoader.cjsCache.get(module);\r\n      asyncESM.esmLoader.cjsCache.delete(module);\r\n    } else {\r\n      try {\r\n        exports = CJSModule._load(filename, undefined, isMain);\r\n      } catch (err) {\r\n        enrichCJSError(err, undefined, filename);\r\n        throw err;\r\n      }\r\n    }\r\n\r\n    for (const exportName of exportNames) {\r\n      if (!ObjectPrototypeHasOwnProperty(exports, exportName) ||\r\n          exportName === 'default')\r\n        continue;\r\n      // We might trigger a getter -> dont fail.\r\n      let value;\r\n      try {\r\n        value = exports[exportName];\r\n      } catch {\r\n        // Continue regardless of error.\r\n      }\r\n      this.setExport(exportName, value);\r\n    }\r\n    this.setExport('default', exports);\r\n  });\r\n});\r\n\r\nfunction cjsPreparseModuleExports(filename) {\r\n  let module = CJSModule._cache[filename];\r\n  if (module) {\r\n    const cached = cjsParseCache.get(module);\r\n    if (cached)\r\n      return { module, exportNames: cached.exportNames };\r\n  }\r\n  const loaded = Boolean(module);\r\n  if (!loaded) {\r\n    module = new CJSModule(filename);\r\n    module.filename = filename;\r\n    module.paths = CJSModule._nodeModulePaths(module.path);\r\n    CJSModule._cache[filename] = module;\r\n  }\r\n\r\n  let source;\r\n  try {\r\n    source = readFileSync(filename, 'utf8');\r\n  } catch {\r\n    // Continue regardless of error.\r\n  }\r\n\r\n  let exports, reexports;\r\n  try {\r\n    ({ exports, reexports } = cjsParse(source || ''));\r\n  } catch {\r\n    exports = [];\r\n    reexports = [];\r\n  }\r\n\r\n  const exportNames = new SafeSet(new SafeArrayIterator(exports));\r\n\r\n  // Set first for cycles.\r\n  cjsParseCache.set(module, { source, exportNames, loaded });\r\n\r\n  if (reexports.length) {\r\n    module.filename = filename;\r\n    module.paths = CJSModule._nodeModulePaths(module.path);\r\n  }\r\n  ArrayPrototypeForEach(reexports, (reexport) => {\r\n    let resolved;\r\n    try {\r\n      resolved = CJSModule._resolveFilename(reexport, module);\r\n    } catch {\r\n      return;\r\n    }\r\n    const ext = extname(resolved);\r\n    if ((ext === '.js' || ext === '.cjs' || !CJSModule._extensions[ext]) &&\r\n        isAbsolute(resolved)) {\r\n      const { exportNames: reexportNames } = cjsPreparseModuleExports(resolved);\r\n      for (const name of reexportNames)\r\n        exportNames.add(name);\r\n    }\r\n  });\r\n\r\n  return { module, exportNames };\r\n}\r\n\r\n// Strategy for loading a node builtin CommonJS module that isn't\r\n// through normal resolution\r\ntranslators.set('builtin', async function builtinStrategy(url) {\r\n  debug(`Translating BuiltinModule ${url}`);\r\n  // Slice 'node:' scheme\r\n  const id = StringPrototypeSlice(url, 5);\r\n  const module = loadBuiltinModule(id, url);\r\n  if (!StringPrototypeStartsWith(url, 'node:') || !module) {\r\n    throw new ERR_UNKNOWN_BUILTIN_MODULE(url);\r\n  }\r\n  debug(`Loading BuiltinModule ${url}`);\r\n  return module.getESMFacade();\r\n});\r\n\r\n// Strategy for loading a JSON file\r\ntranslators.set('json', async function jsonStrategy(url, source) {\r\n  emitExperimentalWarning('Importing JSON modules');\r\n  assertBufferSource(source, true, 'load');\r\n  debug(`Loading JSONModule ${url}`);\r\n  const pathname = StringPrototypeStartsWith(url, 'file:') ?\r\n    fileURLToPath(url) : null;\r\n  let modulePath;\r\n  let module;\r\n  if (pathname) {\r\n    modulePath = isWindows ?\r\n      StringPrototypeReplaceAll(pathname, '/', '\\\\') : pathname;\r\n    module = CJSModule._cache[modulePath];\r\n    if (module && module.loaded) {\r\n      const exports = module.exports;\r\n      return new ModuleWrap(url, undefined, ['default'], function() {\r\n        this.setExport('default', exports);\r\n      });\r\n    }\r\n  }\r\n  source = stringify(source);\r\n  if (pathname) {\r\n    // A require call could have been called on the same file during loading and\r\n    // that resolves synchronously. To make sure we always return the identical\r\n    // export, we have to check again if the module already exists or not.\r\n    module = CJSModule._cache[modulePath];\r\n    if (module && module.loaded) {\r\n      const exports = module.exports;\r\n      return new ModuleWrap(url, undefined, ['default'], function() {\r\n        this.setExport('default', exports);\r\n      });\r\n    }\r\n  }\r\n  try {\r\n    const exports = JSONParse(stripBOM(source));\r\n    module = {\r\n      exports,\r\n      loaded: true\r\n    };\r\n  } catch (err) {\r\n    // TODO (BridgeAR): We could add a NodeCore error that wraps the JSON\r\n    // parse error instead of just manipulating the original error message.\r\n    // That would allow to add further properties and maybe additional\r\n    // debugging information.\r\n    err.message = errPath(url) + ': ' + err.message;\r\n    throw err;\r\n  }\r\n  if (pathname) {\r\n    CJSModule._cache[modulePath] = module;\r\n  }\r\n  return new ModuleWrap(url, undefined, ['default'], function() {\r\n    debug(`Parsing JSONModule ${url}`);\r\n    this.setExport('default', module.exports);\r\n  });\r\n});\r\n\r\n// Strategy for loading a wasm module\r\ntranslators.set('wasm', async function(url, source) {\r\n  emitExperimentalWarning('Importing WebAssembly modules');\r\n\r\n  assertBufferSource(source, false, 'load');\r\n\r\n  debug(`Translating WASMModule ${url}`);\r\n\r\n  let compiled;\r\n  try {\r\n    compiled = await WebAssembly.compile(source);\r\n  } catch (err) {\r\n    err.message = errPath(url) + ': ' + err.message;\r\n    throw err;\r\n  }\r\n\r\n  const imports =\r\n      ArrayPrototypeMap(WebAssembly.Module.imports(compiled),\r\n                        ({ module }) => module);\r\n  const exports =\r\n    ArrayPrototypeMap(WebAssembly.Module.exports(compiled),\r\n                      ({ name }) => name);\r\n\r\n  return createDynamicModule(imports, exports, url, (reflect) => {\r\n    const { exports } = new WebAssembly.Instance(compiled, reflect.imports);\r\n    for (const expt of ObjectKeys(exports))\r\n      reflect.exports[expt].set(exports[expt]);\r\n  }).module;\r\n});\r\n",
    "name": "translators",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 475,
    "sourcePositions": []
  },
  {
    "url": "node:internal/modules/esm/create_dynamic_module",
    "source": "'use strict';\r\n\r\nconst {\r\n  ArrayPrototypeJoin,\r\n  ArrayPrototypeMap,\r\n  JSONStringify,\r\n  ObjectCreate,\r\n  SafeSet,\r\n} = primordials;\r\n\r\nlet debug = require('internal/util/debuglog').debuglog('esm', (fn) => {\r\n  debug = fn;\r\n});\r\n\r\nfunction createImport(impt, index) {\r\n  const imptPath = JSONStringify(impt);\r\n  return `import * as $import_${index} from ${imptPath};\r\nimport.meta.imports[${imptPath}] = $import_${index};`;\r\n}\r\n\r\nfunction createExport(expt) {\r\n  const name = `${expt}`;\r\n  return `let $${name};\r\nexport { $${name} as ${name} };\r\nimport.meta.exports.${name} = {\r\n  get: () => $${name},\r\n  set: (v) => $${name} = v,\r\n};`;\r\n}\r\n\r\nconst createDynamicModule = (imports, exports, url = '', evaluate) => {\r\n  debug('creating ESM facade for %s with exports: %j', url, exports);\r\n  const source = `\r\n${ArrayPrototypeJoin(ArrayPrototypeMap(imports, createImport), '\\n')}\r\n${ArrayPrototypeJoin(ArrayPrototypeMap(exports, createExport), '\\n')}\r\nimport.meta.done();\r\n`;\r\n  const { ModuleWrap, callbackMap } = internalBinding('module_wrap');\r\n  const m = new ModuleWrap(`${url}`, undefined, source, 0, 0);\r\n\r\n  const readyfns = new SafeSet();\r\n  const reflect = {\r\n    exports: ObjectCreate(null),\r\n    onReady: (cb) => { readyfns.add(cb); },\r\n  };\r\n\r\n  if (imports.length)\r\n    reflect.imports = ObjectCreate(null);\r\n\r\n  callbackMap.set(m, {\r\n    initializeImportMeta: (meta, wrap) => {\r\n      meta.exports = reflect.exports;\r\n      if (reflect.imports)\r\n        meta.imports = reflect.imports;\r\n      meta.done = () => {\r\n        evaluate(reflect);\r\n        reflect.onReady = (cb) => cb(reflect);\r\n        for (const fn of readyfns) {\r\n          readyfns.delete(fn);\r\n          fn(reflect);\r\n        }\r\n      };\r\n    },\r\n  });\r\n\r\n  return {\r\n    module: m,\r\n    reflect,\r\n  };\r\n};\r\n\r\nmodule.exports = createDynamicModule;\r\n",
    "name": "create_dynamic_module",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 476,
    "sourcePositions": []
  },
  {
    "url": "node:internal/vm/module",
    "source": "'use strict';\r\n\r\nconst assert = require('internal/assert');\r\nconst {\r\n  ArrayIsArray,\r\n  ArrayPrototypeForEach,\r\n  ArrayPrototypeIndexOf,\r\n  ArrayPrototypeSome,\r\n  ObjectCreate,\r\n  ObjectDefineProperty,\r\n  ObjectGetPrototypeOf,\r\n  ObjectSetPrototypeOf,\r\n  ReflectApply,\r\n  SafePromiseAllReturnVoid,\r\n  SafeWeakMap,\r\n  Symbol,\r\n  SymbolToStringTag,\r\n  TypeError,\r\n} = primordials;\r\n\r\nconst { isContext } = internalBinding('contextify');\r\nconst {\r\n  isModuleNamespaceObject,\r\n} = require('internal/util/types');\r\nconst {\r\n  customInspectSymbol,\r\n  emitExperimentalWarning,\r\n  getConstructorOf,\r\n  kEmptyObject,\r\n} = require('internal/util');\r\nconst {\r\n  ERR_INVALID_ARG_TYPE,\r\n  ERR_INVALID_ARG_VALUE,\r\n  ERR_VM_MODULE_ALREADY_LINKED,\r\n  ERR_VM_MODULE_DIFFERENT_CONTEXT,\r\n  ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA,\r\n  ERR_VM_MODULE_LINK_FAILURE,\r\n  ERR_VM_MODULE_NOT_MODULE,\r\n  ERR_VM_MODULE_STATUS,\r\n} = require('internal/errors').codes;\r\nconst {\r\n  validateBoolean,\r\n  validateBuffer,\r\n  validateFunction,\r\n  validateInt32,\r\n  validateObject,\r\n  validateUint32,\r\n  validateString,\r\n} = require('internal/validators');\r\n\r\nconst binding = internalBinding('module_wrap');\r\nconst {\r\n  ModuleWrap,\r\n  kUninstantiated,\r\n  kInstantiating,\r\n  kInstantiated,\r\n  kEvaluating,\r\n  kEvaluated,\r\n  kErrored,\r\n} = binding;\r\n\r\nconst STATUS_MAP = {\r\n  [kUninstantiated]: 'unlinked',\r\n  [kInstantiating]: 'linking',\r\n  [kInstantiated]: 'linked',\r\n  [kEvaluating]: 'evaluating',\r\n  [kEvaluated]: 'evaluated',\r\n  [kErrored]: 'errored',\r\n};\r\n\r\nlet globalModuleId = 0;\r\nconst defaultModuleName = 'vm:module';\r\nconst wrapToModuleMap = new SafeWeakMap();\r\n\r\nconst kWrap = Symbol('kWrap');\r\nconst kContext = Symbol('kContext');\r\nconst kPerContextModuleId = Symbol('kPerContextModuleId');\r\nconst kLink = Symbol('kLink');\r\n\r\nclass Module {\r\n  constructor(options) {\r\n    emitExperimentalWarning('VM Modules');\r\n\r\n    if (new.target === Module) {\r\n      // eslint-disable-next-line no-restricted-syntax\r\n      throw new TypeError('Module is not a constructor');\r\n    }\r\n\r\n    const {\r\n      context,\r\n      sourceText,\r\n      syntheticExportNames,\r\n      syntheticEvaluationSteps,\r\n    } = options;\r\n\r\n    if (context !== undefined) {\r\n      validateObject(context, 'context');\r\n      if (!isContext(context)) {\r\n        throw new ERR_INVALID_ARG_TYPE('options.context', 'vm.Context',\r\n                                       context);\r\n      }\r\n    }\r\n\r\n    let { identifier } = options;\r\n    if (identifier !== undefined) {\r\n      validateString(identifier, 'options.identifier');\r\n    } else if (context === undefined) {\r\n      identifier = `${defaultModuleName}(${globalModuleId++})`;\r\n    } else if (context[kPerContextModuleId] !== undefined) {\r\n      const curId = context[kPerContextModuleId];\r\n      identifier = `${defaultModuleName}(${curId})`;\r\n      context[kPerContextModuleId] += 1;\r\n    } else {\r\n      identifier = `${defaultModuleName}(0)`;\r\n      ObjectDefineProperty(context, kPerContextModuleId, {\r\n        __proto__: null,\r\n        value: 1,\r\n        writable: true,\r\n        enumerable: false,\r\n        configurable: true,\r\n      });\r\n    }\r\n\r\n    if (sourceText !== undefined) {\r\n      this[kWrap] = new ModuleWrap(identifier, context, sourceText,\r\n                                   options.lineOffset, options.columnOffset,\r\n                                   options.cachedData);\r\n\r\n      binding.callbackMap.set(this[kWrap], {\r\n        initializeImportMeta: options.initializeImportMeta,\r\n        importModuleDynamically: options.importModuleDynamically ?\r\n          importModuleDynamicallyWrap(options.importModuleDynamically) :\r\n          undefined,\r\n      });\r\n    } else {\r\n      assert(syntheticEvaluationSteps);\r\n      this[kWrap] = new ModuleWrap(identifier, context,\r\n                                   syntheticExportNames,\r\n                                   syntheticEvaluationSteps);\r\n    }\r\n\r\n    wrapToModuleMap.set(this[kWrap], this);\r\n\r\n    this[kContext] = context;\r\n  }\r\n\r\n  get identifier() {\r\n    if (this[kWrap] === undefined) {\r\n      throw new ERR_VM_MODULE_NOT_MODULE();\r\n    }\r\n    return this[kWrap].url;\r\n  }\r\n\r\n  get context() {\r\n    if (this[kWrap] === undefined) {\r\n      throw new ERR_VM_MODULE_NOT_MODULE();\r\n    }\r\n    return this[kContext];\r\n  }\r\n\r\n  get namespace() {\r\n    if (this[kWrap] === undefined) {\r\n      throw new ERR_VM_MODULE_NOT_MODULE();\r\n    }\r\n    if (this[kWrap].getStatus() < kInstantiated) {\r\n      throw new ERR_VM_MODULE_STATUS('must not be unlinked or linking');\r\n    }\r\n    return this[kWrap].getNamespace();\r\n  }\r\n\r\n  get status() {\r\n    if (this[kWrap] === undefined) {\r\n      throw new ERR_VM_MODULE_NOT_MODULE();\r\n    }\r\n    return STATUS_MAP[this[kWrap].getStatus()];\r\n  }\r\n\r\n  get error() {\r\n    if (this[kWrap] === undefined) {\r\n      throw new ERR_VM_MODULE_NOT_MODULE();\r\n    }\r\n    if (this[kWrap].getStatus() !== kErrored) {\r\n      throw new ERR_VM_MODULE_STATUS('must be errored');\r\n    }\r\n    return this[kWrap].getError();\r\n  }\r\n\r\n  async link(linker) {\r\n    if (this[kWrap] === undefined) {\r\n      throw new ERR_VM_MODULE_NOT_MODULE();\r\n    }\r\n    validateFunction(linker, 'linker');\r\n    if (this.status === 'linked') {\r\n      throw new ERR_VM_MODULE_ALREADY_LINKED();\r\n    }\r\n    if (this.status !== 'unlinked') {\r\n      throw new ERR_VM_MODULE_STATUS('must be unlinked');\r\n    }\r\n    await this[kLink](linker);\r\n    this[kWrap].instantiate();\r\n  }\r\n\r\n  async evaluate(options = kEmptyObject) {\r\n    if (this[kWrap] === undefined) {\r\n      throw new ERR_VM_MODULE_NOT_MODULE();\r\n    }\r\n\r\n    validateObject(options, 'options');\r\n\r\n    let timeout = options.timeout;\r\n    if (timeout === undefined) {\r\n      timeout = -1;\r\n    } else {\r\n      validateUint32(timeout, 'options.timeout', true);\r\n    }\r\n    const { breakOnSigint = false } = options;\r\n    validateBoolean(breakOnSigint, 'options.breakOnSigint');\r\n    const status = this[kWrap].getStatus();\r\n    if (status !== kInstantiated &&\r\n        status !== kEvaluated &&\r\n        status !== kErrored) {\r\n      throw new ERR_VM_MODULE_STATUS(\r\n        'must be one of linked, evaluated, or errored'\r\n      );\r\n    }\r\n    await this[kWrap].evaluate(timeout, breakOnSigint);\r\n  }\r\n\r\n  [customInspectSymbol](depth, options) {\r\n    if (this[kWrap] === undefined) {\r\n      throw new ERR_VM_MODULE_NOT_MODULE();\r\n    }\r\n    if (typeof depth === 'number' && depth < 0)\r\n      return this;\r\n\r\n    const constructor = getConstructorOf(this) || Module;\r\n    const o = ObjectCreate({ constructor });\r\n    o.status = this.status;\r\n    o.identifier = this.identifier;\r\n    o.context = this.context;\r\n\r\n    ObjectSetPrototypeOf(o, ObjectGetPrototypeOf(this));\r\n    ObjectDefineProperty(o, SymbolToStringTag, {\r\n      __proto__: null,\r\n      value: constructor.name,\r\n      configurable: true\r\n    });\r\n\r\n    // Lazy to avoid circular dependency\r\n    const { inspect } = require('internal/util/inspect');\r\n    return inspect(o, { ...options, customInspect: false });\r\n  }\r\n}\r\n\r\nconst kDependencySpecifiers = Symbol('kDependencySpecifiers');\r\nconst kNoError = Symbol('kNoError');\r\n\r\nclass SourceTextModule extends Module {\r\n  #error = kNoError;\r\n  #statusOverride;\r\n\r\n  constructor(sourceText, options = kEmptyObject) {\r\n    validateString(sourceText, 'sourceText');\r\n    validateObject(options, 'options');\r\n\r\n    const {\r\n      lineOffset = 0,\r\n      columnOffset = 0,\r\n      initializeImportMeta,\r\n      importModuleDynamically,\r\n      context,\r\n      identifier,\r\n      cachedData,\r\n    } = options;\r\n\r\n    validateInt32(lineOffset, 'options.lineOffset');\r\n    validateInt32(columnOffset, 'options.columnOffset');\r\n\r\n    if (initializeImportMeta !== undefined) {\r\n      validateFunction(initializeImportMeta, 'options.initializeImportMeta');\r\n    }\r\n\r\n    if (importModuleDynamically !== undefined) {\r\n      validateFunction(importModuleDynamically, 'options.importModuleDynamically');\r\n    }\r\n\r\n    if (cachedData !== undefined) {\r\n      validateBuffer(cachedData, 'options.cachedData');\r\n    }\r\n\r\n    super({\r\n      sourceText,\r\n      context,\r\n      identifier,\r\n      lineOffset,\r\n      columnOffset,\r\n      cachedData,\r\n      initializeImportMeta,\r\n      importModuleDynamically,\r\n    });\r\n\r\n    this[kLink] = async (linker) => {\r\n      this.#statusOverride = 'linking';\r\n\r\n      const promises = this[kWrap].link(async (identifier, assert) => {\r\n        const module = await linker(identifier, this, { assert });\r\n        if (module[kWrap] === undefined) {\r\n          throw new ERR_VM_MODULE_NOT_MODULE();\r\n        }\r\n        if (module.context !== this.context) {\r\n          throw new ERR_VM_MODULE_DIFFERENT_CONTEXT();\r\n        }\r\n        if (module.status === 'errored') {\r\n          throw new ERR_VM_MODULE_LINK_FAILURE(`request for '${identifier}' resolved to an errored module`, module.error);\r\n        }\r\n        if (module.status === 'unlinked') {\r\n          await module[kLink](linker);\r\n        }\r\n        return module[kWrap];\r\n      });\r\n\r\n      try {\r\n        if (promises !== undefined) {\r\n          await SafePromiseAllReturnVoid(promises);\r\n        }\r\n      } catch (e) {\r\n        this.#error = e;\r\n        throw e;\r\n      } finally {\r\n        this.#statusOverride = undefined;\r\n      }\r\n    };\r\n\r\n    this[kDependencySpecifiers] = undefined;\r\n  }\r\n\r\n  get dependencySpecifiers() {\r\n    if (this[kWrap] === undefined) {\r\n      throw new ERR_VM_MODULE_NOT_MODULE();\r\n    }\r\n    if (this[kDependencySpecifiers] === undefined) {\r\n      this[kDependencySpecifiers] = this[kWrap].getStaticDependencySpecifiers();\r\n    }\r\n    return this[kDependencySpecifiers];\r\n  }\r\n\r\n  get status() {\r\n    if (this[kWrap] === undefined) {\r\n      throw new ERR_VM_MODULE_NOT_MODULE();\r\n    }\r\n    if (this.#error !== kNoError) {\r\n      return 'errored';\r\n    }\r\n    if (this.#statusOverride) {\r\n      return this.#statusOverride;\r\n    }\r\n    return super.status;\r\n  }\r\n\r\n  get error() {\r\n    if (this[kWrap] === undefined) {\r\n      throw new ERR_VM_MODULE_NOT_MODULE();\r\n    }\r\n    if (this.#error !== kNoError) {\r\n      return this.#error;\r\n    }\r\n    return super.error;\r\n  }\r\n\r\n  createCachedData() {\r\n    const { status } = this;\r\n    if (status === 'evaluating' ||\r\n        status === 'evaluated' ||\r\n        status === 'errored') {\r\n      throw new ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA();\r\n    }\r\n    return this[kWrap].createCachedData();\r\n  }\r\n}\r\n\r\nclass SyntheticModule extends Module {\r\n  constructor(exportNames, evaluateCallback, options = kEmptyObject) {\r\n    if (!ArrayIsArray(exportNames) ||\r\n      ArrayPrototypeSome(exportNames, (e) => typeof e !== 'string')) {\r\n      throw new ERR_INVALID_ARG_TYPE('exportNames',\r\n                                     'Array of unique strings',\r\n                                     exportNames);\r\n    } else {\r\n      ArrayPrototypeForEach(exportNames, (name, i) => {\r\n        if (ArrayPrototypeIndexOf(exportNames, name, i + 1) !== -1) {\r\n          throw new ERR_INVALID_ARG_VALUE(`exportNames.${name}`,\r\n                                          name,\r\n                                          'is duplicated');\r\n        }\r\n      });\r\n    }\r\n    validateFunction(evaluateCallback, 'evaluateCallback');\r\n\r\n    validateObject(options, 'options');\r\n\r\n    const { context, identifier } = options;\r\n\r\n    super({\r\n      syntheticExportNames: exportNames,\r\n      syntheticEvaluationSteps: evaluateCallback,\r\n      context,\r\n      identifier,\r\n    });\r\n\r\n    this[kLink] = () => this[kWrap].link(() => {\r\n      assert.fail('link callback should not be called');\r\n    });\r\n  }\r\n\r\n  setExport(name, value) {\r\n    if (this[kWrap] === undefined) {\r\n      throw new ERR_VM_MODULE_NOT_MODULE();\r\n    }\r\n    validateString(name, 'name');\r\n    if (this[kWrap].getStatus() < kInstantiated) {\r\n      throw new ERR_VM_MODULE_STATUS('must be linked');\r\n    }\r\n    this[kWrap].setExport(name, value);\r\n  }\r\n}\r\n\r\nfunction importModuleDynamicallyWrap(importModuleDynamically) {\r\n  const importModuleDynamicallyWrapper = async (...args) => {\r\n    const m = await ReflectApply(importModuleDynamically, this, args);\r\n    if (isModuleNamespaceObject(m)) {\r\n      return m;\r\n    }\r\n    if (!m || m[kWrap] === undefined) {\r\n      throw new ERR_VM_MODULE_NOT_MODULE();\r\n    }\r\n    if (m.status === 'errored') {\r\n      throw m.error;\r\n    }\r\n    return m.namespace;\r\n  };\r\n  return importModuleDynamicallyWrapper;\r\n}\r\n\r\nmodule.exports = {\r\n  Module,\r\n  SourceTextModule,\r\n  SyntheticModule,\r\n  importModuleDynamicallyWrap,\r\n  getModuleFromWrap: (wrap) => wrapToModuleMap.get(wrap),\r\n};\r\n",
    "name": "module",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 477,
    "sourcePositions": []
  },
  {
    "url": "node:internal/modules/run_main",
    "source": "'use strict';\r\n\r\nconst {\r\n  ObjectCreate,\r\n  StringPrototypeEndsWith,\r\n} = primordials;\r\nconst CJSLoader = require('internal/modules/cjs/loader');\r\nconst { Module, toRealPath, readPackageScope } = CJSLoader;\r\nconst { getOptionValue } = require('internal/options');\r\nconst path = require('path');\r\nconst {\r\n  handleProcessExit,\r\n} = require('internal/modules/esm/handle_process_exit');\r\n\r\nfunction resolveMainPath(main) {\r\n  // Note extension resolution for the main entry point can be deprecated in a\r\n  // future major.\r\n  // Module._findPath is monkey-patchable here.\r\n  let mainPath = Module._findPath(path.resolve(main), null, true);\r\n  if (!mainPath)\r\n    return;\r\n\r\n  const preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\r\n  if (!preserveSymlinksMain)\r\n    mainPath = toRealPath(mainPath);\r\n\r\n  return mainPath;\r\n}\r\n\r\nfunction shouldUseESMLoader(mainPath) {\r\n  /**\r\n   * @type {string[]} userLoaders A list of custom loaders registered by the user\r\n   * (or an empty list when none have been registered).\r\n   */\r\n  const userLoaders = getOptionValue('--experimental-loader');\r\n  if (userLoaders.length > 0)\r\n    return true;\r\n  const esModuleSpecifierResolution =\r\n    getOptionValue('--experimental-specifier-resolution');\r\n  if (esModuleSpecifierResolution === 'node')\r\n    return true;\r\n  // Determine the module format of the main\r\n  if (mainPath && StringPrototypeEndsWith(mainPath, '.mjs'))\r\n    return true;\r\n  if (!mainPath || StringPrototypeEndsWith(mainPath, '.cjs'))\r\n    return false;\r\n  const pkg = readPackageScope(mainPath);\r\n  return pkg && pkg.data.type === 'module';\r\n}\r\n\r\nfunction runMainESM(mainPath) {\r\n  const { loadESM } = require('internal/process/esm_loader');\r\n  const { pathToFileURL } = require('internal/url');\r\n\r\n  handleMainPromise(loadESM((esmLoader) => {\r\n    const main = path.isAbsolute(mainPath) ?\r\n      pathToFileURL(mainPath).href : mainPath;\r\n    return esmLoader.import(main, undefined, ObjectCreate(null));\r\n  }));\r\n}\r\n\r\nasync function handleMainPromise(promise) {\r\n  process.on('exit', handleProcessExit);\r\n  try {\r\n    return await promise;\r\n  } finally {\r\n    process.off('exit', handleProcessExit);\r\n  }\r\n}\r\n\r\n// For backwards compatibility, we have to run a bunch of\r\n// monkey-patchable code that belongs to the CJS loader (exposed by\r\n// `require('module')`) even when the entry point is ESM.\r\nfunction executeUserEntryPoint(main = process.argv[1]) {\r\n  const resolvedMain = resolveMainPath(main);\r\n  const useESMLoader = shouldUseESMLoader(resolvedMain);\r\n  if (useESMLoader) {\r\n    runMainESM(resolvedMain || main);\r\n  } else {\r\n    // Module._load is the monkey-patchable CJS module loader.\r\n    Module._load(main, null, true);\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  executeUserEntryPoint,\r\n  handleMainPromise,\r\n};\r\n",
    "name": "run_main",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 478,
    "sourcePositions": []
  },
  {
    "url": "evalmachine.<anonymous>",
    "source": "this",
    "name": "evalmachine.<anonymous>",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 479,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\index.js",
    "source": "const express = require('express');\r\nconst generateFlamegraph = require('./index');\r\n\r\nconst app = express();\r\n\r\nfunction createLeak() {\r\n    const arr = [];\r\n    setInterval(() => {\r\n      arr.push(new Array(10000));\r\n    }, 1000);\r\n  }\r\n  \r\n  app.get('/', (req, res) => {\r\n    createLeak();\r\n    res.send('Memory leak created!');\r\n  });\r\n  \r\n  app.listen(3000, () => {\r\n    console.log('App listening on port 3000');\r\n  });\r\n\r\n\r\n\r\n\r\n// ...\r\n",
    "name": "D:\\doc\\node.js\\mfg\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 480,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\express\\index.js",
    "source": "/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\nmodule.exports = require('./lib/express');\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\express\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 481,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\express.js",
    "source": "/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n */\n\nvar bodyParser = require('body-parser')\nvar EventEmitter = require('events').EventEmitter;\nvar mixin = require('merge-descriptors');\nvar proto = require('./application');\nvar Route = require('./router/route');\nvar Router = require('./router');\nvar req = require('./request');\nvar res = require('./response');\n\n/**\n * Expose `createApplication()`.\n */\n\nexports = module.exports = createApplication;\n\n/**\n * Create an express application.\n *\n * @return {Function}\n * @api public\n */\n\nfunction createApplication() {\n  var app = function(req, res, next) {\n    app.handle(req, res, next);\n  };\n\n  mixin(app, EventEmitter.prototype, false);\n  mixin(app, proto, false);\n\n  // expose the prototype that will get set on requests\n  app.request = Object.create(req, {\n    app: { configurable: true, enumerable: true, writable: true, value: app }\n  })\n\n  // expose the prototype that will get set on responses\n  app.response = Object.create(res, {\n    app: { configurable: true, enumerable: true, writable: true, value: app }\n  })\n\n  app.init();\n  return app;\n}\n\n/**\n * Expose the prototypes.\n */\n\nexports.application = proto;\nexports.request = req;\nexports.response = res;\n\n/**\n * Expose constructors.\n */\n\nexports.Route = Route;\nexports.Router = Router;\n\n/**\n * Expose middleware\n */\n\nexports.json = bodyParser.json\nexports.query = require('./middleware/query');\nexports.raw = bodyParser.raw\nexports.static = require('serve-static');\nexports.text = bodyParser.text\nexports.urlencoded = bodyParser.urlencoded\n\n/**\n * Replace removed middleware with an appropriate error message.\n */\n\nvar removedMiddlewares = [\n  'bodyParser',\n  'compress',\n  'cookieSession',\n  'session',\n  'logger',\n  'cookieParser',\n  'favicon',\n  'responseTime',\n  'errorHandler',\n  'timeout',\n  'methodOverride',\n  'vhost',\n  'csrf',\n  'directory',\n  'limit',\n  'multipart',\n  'staticCache'\n]\n\nremovedMiddlewares.forEach(function (name) {\n  Object.defineProperty(exports, name, {\n    get: function () {\n      throw new Error('Most middleware (like ' + name + ') is no longer bundled with Express and must be installed separately. Please see https://github.com/senchalabs/connect#middleware.');\n    },\n    configurable: true\n  });\n});\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\express.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 482,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\body-parser\\index.js",
    "source": "/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar deprecate = require('depd')('body-parser')\n\n/**\n * Cache of loaded parsers.\n * @private\n */\n\nvar parsers = Object.create(null)\n\n/**\n * @typedef Parsers\n * @type {function}\n * @property {function} json\n * @property {function} raw\n * @property {function} text\n * @property {function} urlencoded\n */\n\n/**\n * Module exports.\n * @type {Parsers}\n */\n\nexports = module.exports = deprecate.function(bodyParser,\n  'bodyParser: use individual json/urlencoded middlewares')\n\n/**\n * JSON parser.\n * @public\n */\n\nObject.defineProperty(exports, 'json', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('json')\n})\n\n/**\n * Raw parser.\n * @public\n */\n\nObject.defineProperty(exports, 'raw', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('raw')\n})\n\n/**\n * Text parser.\n * @public\n */\n\nObject.defineProperty(exports, 'text', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('text')\n})\n\n/**\n * URL-encoded parser.\n * @public\n */\n\nObject.defineProperty(exports, 'urlencoded', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('urlencoded')\n})\n\n/**\n * Create a middleware to parse json and urlencoded bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @deprecated\n * @public\n */\n\nfunction bodyParser (options) {\n  // use default type for parsers\n  var opts = Object.create(options || null, {\n    type: {\n      configurable: true,\n      enumerable: true,\n      value: undefined,\n      writable: true\n    }\n  })\n\n  var _urlencoded = exports.urlencoded(opts)\n  var _json = exports.json(opts)\n\n  return function bodyParser (req, res, next) {\n    _json(req, res, function (err) {\n      if (err) return next(err)\n      _urlencoded(req, res, next)\n    })\n  }\n}\n\n/**\n * Create a getter for loading a parser.\n * @private\n */\n\nfunction createParserGetter (name) {\n  return function get () {\n    return loadParser(name)\n  }\n}\n\n/**\n * Load a parser module.\n * @private\n */\n\nfunction loadParser (parserName) {\n  var parser = parsers[parserName]\n\n  if (parser !== undefined) {\n    return parser\n  }\n\n  // this uses a switch for static require analysis\n  switch (parserName) {\n    case 'json':\n      parser = require('./lib/types/json')\n      break\n    case 'raw':\n      parser = require('./lib/types/raw')\n      break\n    case 'text':\n      parser = require('./lib/types/text')\n      break\n    case 'urlencoded':\n      parser = require('./lib/types/urlencoded')\n      break\n  }\n\n  // store to prevent invoking require()\n  return (parsers[parserName] = parser)\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\body-parser\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 483,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\depd\\index.js",
    "source": "/*!\n * depd\n * Copyright(c) 2014-2018 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar relative = require('path').relative\n\n/**\n * Module exports.\n */\n\nmodule.exports = depd\n\n/**\n * Get the path to base files on.\n */\n\nvar basePath = process.cwd()\n\n/**\n * Determine if namespace is contained in the string.\n */\n\nfunction containsNamespace (str, namespace) {\n  var vals = str.split(/[ ,]+/)\n  var ns = String(namespace).toLowerCase()\n\n  for (var i = 0; i < vals.length; i++) {\n    var val = vals[i]\n\n    // namespace contained\n    if (val && (val === '*' || val.toLowerCase() === ns)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Convert a data descriptor to accessor descriptor.\n */\n\nfunction convertDataDescriptorToAccessor (obj, prop, message) {\n  var descriptor = Object.getOwnPropertyDescriptor(obj, prop)\n  var value = descriptor.value\n\n  descriptor.get = function getter () { return value }\n\n  if (descriptor.writable) {\n    descriptor.set = function setter (val) { return (value = val) }\n  }\n\n  delete descriptor.value\n  delete descriptor.writable\n\n  Object.defineProperty(obj, prop, descriptor)\n\n  return descriptor\n}\n\n/**\n * Create arguments string to keep arity.\n */\n\nfunction createArgumentsString (arity) {\n  var str = ''\n\n  for (var i = 0; i < arity; i++) {\n    str += ', arg' + i\n  }\n\n  return str.substr(2)\n}\n\n/**\n * Create stack string from stack.\n */\n\nfunction createStackString (stack) {\n  var str = this.name + ': ' + this.namespace\n\n  if (this.message) {\n    str += ' deprecated ' + this.message\n  }\n\n  for (var i = 0; i < stack.length; i++) {\n    str += '\\n    at ' + stack[i].toString()\n  }\n\n  return str\n}\n\n/**\n * Create deprecate for namespace in caller.\n */\n\nfunction depd (namespace) {\n  if (!namespace) {\n    throw new TypeError('argument namespace is required')\n  }\n\n  var stack = getStack()\n  var site = callSiteLocation(stack[1])\n  var file = site[0]\n\n  function deprecate (message) {\n    // call to self as log\n    log.call(deprecate, message)\n  }\n\n  deprecate._file = file\n  deprecate._ignored = isignored(namespace)\n  deprecate._namespace = namespace\n  deprecate._traced = istraced(namespace)\n  deprecate._warned = Object.create(null)\n\n  deprecate.function = wrapfunction\n  deprecate.property = wrapproperty\n\n  return deprecate\n}\n\n/**\n * Determine if event emitter has listeners of a given type.\n *\n * The way to do this check is done three different ways in Node.js >= 0.8\n * so this consolidates them into a minimal set using instance methods.\n *\n * @param {EventEmitter} emitter\n * @param {string} type\n * @returns {boolean}\n * @private\n */\n\nfunction eehaslisteners (emitter, type) {\n  var count = typeof emitter.listenerCount !== 'function'\n    ? emitter.listeners(type).length\n    : emitter.listenerCount(type)\n\n  return count > 0\n}\n\n/**\n * Determine if namespace is ignored.\n */\n\nfunction isignored (namespace) {\n  if (process.noDeprecation) {\n    // --no-deprecation support\n    return true\n  }\n\n  var str = process.env.NO_DEPRECATION || ''\n\n  // namespace ignored\n  return containsNamespace(str, namespace)\n}\n\n/**\n * Determine if namespace is traced.\n */\n\nfunction istraced (namespace) {\n  if (process.traceDeprecation) {\n    // --trace-deprecation support\n    return true\n  }\n\n  var str = process.env.TRACE_DEPRECATION || ''\n\n  // namespace traced\n  return containsNamespace(str, namespace)\n}\n\n/**\n * Display deprecation message.\n */\n\nfunction log (message, site) {\n  var haslisteners = eehaslisteners(process, 'deprecation')\n\n  // abort early if no destination\n  if (!haslisteners && this._ignored) {\n    return\n  }\n\n  var caller\n  var callFile\n  var callSite\n  var depSite\n  var i = 0\n  var seen = false\n  var stack = getStack()\n  var file = this._file\n\n  if (site) {\n    // provided site\n    depSite = site\n    callSite = callSiteLocation(stack[1])\n    callSite.name = depSite.name\n    file = callSite[0]\n  } else {\n    // get call site\n    i = 2\n    depSite = callSiteLocation(stack[i])\n    callSite = depSite\n  }\n\n  // get caller of deprecated thing in relation to file\n  for (; i < stack.length; i++) {\n    caller = callSiteLocation(stack[i])\n    callFile = caller[0]\n\n    if (callFile === file) {\n      seen = true\n    } else if (callFile === this._file) {\n      file = this._file\n    } else if (seen) {\n      break\n    }\n  }\n\n  var key = caller\n    ? depSite.join(':') + '__' + caller.join(':')\n    : undefined\n\n  if (key !== undefined && key in this._warned) {\n    // already warned\n    return\n  }\n\n  this._warned[key] = true\n\n  // generate automatic message from call site\n  var msg = message\n  if (!msg) {\n    msg = callSite === depSite || !callSite.name\n      ? defaultMessage(depSite)\n      : defaultMessage(callSite)\n  }\n\n  // emit deprecation if listeners exist\n  if (haslisteners) {\n    var err = DeprecationError(this._namespace, msg, stack.slice(i))\n    process.emit('deprecation', err)\n    return\n  }\n\n  // format and write message\n  var format = process.stderr.isTTY\n    ? formatColor\n    : formatPlain\n  var output = format.call(this, msg, caller, stack.slice(i))\n  process.stderr.write(output + '\\n', 'utf8')\n}\n\n/**\n * Get call site location as array.\n */\n\nfunction callSiteLocation (callSite) {\n  var file = callSite.getFileName() || '<anonymous>'\n  var line = callSite.getLineNumber()\n  var colm = callSite.getColumnNumber()\n\n  if (callSite.isEval()) {\n    file = callSite.getEvalOrigin() + ', ' + file\n  }\n\n  var site = [file, line, colm]\n\n  site.callSite = callSite\n  site.name = callSite.getFunctionName()\n\n  return site\n}\n\n/**\n * Generate a default message from the site.\n */\n\nfunction defaultMessage (site) {\n  var callSite = site.callSite\n  var funcName = site.name\n\n  // make useful anonymous name\n  if (!funcName) {\n    funcName = '<anonymous@' + formatLocation(site) + '>'\n  }\n\n  var context = callSite.getThis()\n  var typeName = context && callSite.getTypeName()\n\n  // ignore useless type name\n  if (typeName === 'Object') {\n    typeName = undefined\n  }\n\n  // make useful type name\n  if (typeName === 'Function') {\n    typeName = context.name || typeName\n  }\n\n  return typeName && callSite.getMethodName()\n    ? typeName + '.' + funcName\n    : funcName\n}\n\n/**\n * Format deprecation message without color.\n */\n\nfunction formatPlain (msg, caller, stack) {\n  var timestamp = new Date().toUTCString()\n\n  var formatted = timestamp +\n    ' ' + this._namespace +\n    ' deprecated ' + msg\n\n  // add stack trace\n  if (this._traced) {\n    for (var i = 0; i < stack.length; i++) {\n      formatted += '\\n    at ' + stack[i].toString()\n    }\n\n    return formatted\n  }\n\n  if (caller) {\n    formatted += ' at ' + formatLocation(caller)\n  }\n\n  return formatted\n}\n\n/**\n * Format deprecation message with color.\n */\n\nfunction formatColor (msg, caller, stack) {\n  var formatted = '\\x1b[36;1m' + this._namespace + '\\x1b[22;39m' + // bold cyan\n    ' \\x1b[33;1mdeprecated\\x1b[22;39m' + // bold yellow\n    ' \\x1b[0m' + msg + '\\x1b[39m' // reset\n\n  // add stack trace\n  if (this._traced) {\n    for (var i = 0; i < stack.length; i++) {\n      formatted += '\\n    \\x1b[36mat ' + stack[i].toString() + '\\x1b[39m' // cyan\n    }\n\n    return formatted\n  }\n\n  if (caller) {\n    formatted += ' \\x1b[36m' + formatLocation(caller) + '\\x1b[39m' // cyan\n  }\n\n  return formatted\n}\n\n/**\n * Format call site location.\n */\n\nfunction formatLocation (callSite) {\n  return relative(basePath, callSite[0]) +\n    ':' + callSite[1] +\n    ':' + callSite[2]\n}\n\n/**\n * Get the stack as array of call sites.\n */\n\nfunction getStack () {\n  var limit = Error.stackTraceLimit\n  var obj = {}\n  var prep = Error.prepareStackTrace\n\n  Error.prepareStackTrace = prepareObjectStackTrace\n  Error.stackTraceLimit = Math.max(10, limit)\n\n  // capture the stack\n  Error.captureStackTrace(obj)\n\n  // slice this function off the top\n  var stack = obj.stack.slice(1)\n\n  Error.prepareStackTrace = prep\n  Error.stackTraceLimit = limit\n\n  return stack\n}\n\n/**\n * Capture call site stack from v8.\n */\n\nfunction prepareObjectStackTrace (obj, stack) {\n  return stack\n}\n\n/**\n * Return a wrapped function in a deprecation message.\n */\n\nfunction wrapfunction (fn, message) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('argument fn must be a function')\n  }\n\n  var args = createArgumentsString(fn.length)\n  var stack = getStack()\n  var site = callSiteLocation(stack[1])\n\n  site.name = fn.name\n\n  // eslint-disable-next-line no-new-func\n  var deprecatedfn = new Function('fn', 'log', 'deprecate', 'message', 'site',\n    '\"use strict\"\\n' +\n    'return function (' + args + ') {' +\n    'log.call(deprecate, message, site)\\n' +\n    'return fn.apply(this, arguments)\\n' +\n    '}')(fn, log, this, message, site)\n\n  return deprecatedfn\n}\n\n/**\n * Wrap property in a deprecation message.\n */\n\nfunction wrapproperty (obj, prop, message) {\n  if (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {\n    throw new TypeError('argument obj must be object')\n  }\n\n  var descriptor = Object.getOwnPropertyDescriptor(obj, prop)\n\n  if (!descriptor) {\n    throw new TypeError('must call property on owner object')\n  }\n\n  if (!descriptor.configurable) {\n    throw new TypeError('property must be configurable')\n  }\n\n  var deprecate = this\n  var stack = getStack()\n  var site = callSiteLocation(stack[1])\n\n  // set site name\n  site.name = prop\n\n  // convert data descriptor\n  if ('value' in descriptor) {\n    descriptor = convertDataDescriptorToAccessor(obj, prop, message)\n  }\n\n  var get = descriptor.get\n  var set = descriptor.set\n\n  // wrap getter\n  if (typeof get === 'function') {\n    descriptor.get = function getter () {\n      log.call(deprecate, message, site)\n      return get.apply(this, arguments)\n    }\n  }\n\n  // wrap setter\n  if (typeof set === 'function') {\n    descriptor.set = function setter () {\n      log.call(deprecate, message, site)\n      return set.apply(this, arguments)\n    }\n  }\n\n  Object.defineProperty(obj, prop, descriptor)\n}\n\n/**\n * Create DeprecationError for deprecation\n */\n\nfunction DeprecationError (namespace, message, stack) {\n  var error = new Error()\n  var stackString\n\n  Object.defineProperty(error, 'constructor', {\n    value: DeprecationError\n  })\n\n  Object.defineProperty(error, 'message', {\n    configurable: true,\n    enumerable: false,\n    value: message,\n    writable: true\n  })\n\n  Object.defineProperty(error, 'name', {\n    enumerable: false,\n    configurable: true,\n    value: 'DeprecationError',\n    writable: true\n  })\n\n  Object.defineProperty(error, 'namespace', {\n    configurable: true,\n    enumerable: false,\n    value: namespace,\n    writable: true\n  })\n\n  Object.defineProperty(error, 'stack', {\n    configurable: true,\n    enumerable: false,\n    get: function () {\n      if (stackString !== undefined) {\n        return stackString\n      }\n\n      // prepare stack trace\n      return (stackString = createStackString.call(this, stack))\n    },\n    set: function setter (val) {\n      stackString = val\n    }\n  })\n\n  return error\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\depd\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 484,
    "sourcePositions": []
  },
  {
    "url": "<unknown>",
    "source": "(function anonymous(fn,log,deprecate,message,site\n) {\n\"use strict\"\nreturn function (arg0) {log.call(deprecate, message, site)\nreturn fn.apply(this, arguments)\n}\n})",
    "name": "<unknown>",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 485,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\merge-descriptors\\index.js",
    "source": "/*!\n * merge-descriptors\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = merge\n\n/**\n * Module variables.\n * @private\n */\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty\n\n/**\n * Merge the property descriptors of `src` into `dest`\n *\n * @param {object} dest Object to add descriptors to\n * @param {object} src Object to clone descriptors from\n * @param {boolean} [redefine=true] Redefine `dest` properties with `src` properties\n * @returns {object} Reference to dest\n * @public\n */\n\nfunction merge(dest, src, redefine) {\n  if (!dest) {\n    throw new TypeError('argument dest is required')\n  }\n\n  if (!src) {\n    throw new TypeError('argument src is required')\n  }\n\n  if (redefine === undefined) {\n    // Default to true\n    redefine = true\n  }\n\n  Object.getOwnPropertyNames(src).forEach(function forEachOwnPropertyName(name) {\n    if (!redefine && hasOwnProperty.call(dest, name)) {\n      // Skip desriptor\n      return\n    }\n\n    // Copy descriptor\n    var descriptor = Object.getOwnPropertyDescriptor(src, name)\n    Object.defineProperty(dest, name, descriptor)\n  })\n\n  return dest\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\merge-descriptors\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 486,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\application.js",
    "source": "/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar finalhandler = require('finalhandler');\nvar Router = require('./router');\nvar methods = require('methods');\nvar middleware = require('./middleware/init');\nvar query = require('./middleware/query');\nvar debug = require('debug')('express:application');\nvar View = require('./view');\nvar http = require('http');\nvar compileETag = require('./utils').compileETag;\nvar compileQueryParser = require('./utils').compileQueryParser;\nvar compileTrust = require('./utils').compileTrust;\nvar deprecate = require('depd')('express');\nvar flatten = require('array-flatten');\nvar merge = require('utils-merge');\nvar resolve = require('path').resolve;\nvar setPrototypeOf = require('setprototypeof')\n\n/**\n * Module variables.\n * @private\n */\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty\nvar slice = Array.prototype.slice;\n\n/**\n * Application prototype.\n */\n\nvar app = exports = module.exports = {};\n\n/**\n * Variable for trust proxy inheritance back-compat\n * @private\n */\n\nvar trustProxyDefaultSymbol = '@@symbol:trust_proxy_default';\n\n/**\n * Initialize the server.\n *\n *   - setup default configuration\n *   - setup default middleware\n *   - setup route reflection methods\n *\n * @private\n */\n\napp.init = function init() {\n  this.cache = {};\n  this.engines = {};\n  this.settings = {};\n\n  this.defaultConfiguration();\n};\n\n/**\n * Initialize application configuration.\n * @private\n */\n\napp.defaultConfiguration = function defaultConfiguration() {\n  var env = process.env.NODE_ENV || 'development';\n\n  // default settings\n  this.enable('x-powered-by');\n  this.set('etag', 'weak');\n  this.set('env', env);\n  this.set('query parser', 'extended');\n  this.set('subdomain offset', 2);\n  this.set('trust proxy', false);\n\n  // trust proxy inherit back-compat\n  Object.defineProperty(this.settings, trustProxyDefaultSymbol, {\n    configurable: true,\n    value: true\n  });\n\n  debug('booting in %s mode', env);\n\n  this.on('mount', function onmount(parent) {\n    // inherit trust proxy\n    if (this.settings[trustProxyDefaultSymbol] === true\n      && typeof parent.settings['trust proxy fn'] === 'function') {\n      delete this.settings['trust proxy'];\n      delete this.settings['trust proxy fn'];\n    }\n\n    // inherit protos\n    setPrototypeOf(this.request, parent.request)\n    setPrototypeOf(this.response, parent.response)\n    setPrototypeOf(this.engines, parent.engines)\n    setPrototypeOf(this.settings, parent.settings)\n  });\n\n  // setup locals\n  this.locals = Object.create(null);\n\n  // top-most app is mounted at /\n  this.mountpath = '/';\n\n  // default locals\n  this.locals.settings = this.settings;\n\n  // default configuration\n  this.set('view', View);\n  this.set('views', resolve('views'));\n  this.set('jsonp callback name', 'callback');\n\n  if (env === 'production') {\n    this.enable('view cache');\n  }\n\n  Object.defineProperty(this, 'router', {\n    get: function() {\n      throw new Error('\\'app.router\\' is deprecated!\\nPlease see the 3.x to 4.x migration guide for details on how to update your app.');\n    }\n  });\n};\n\n/**\n * lazily adds the base router if it has not yet been added.\n *\n * We cannot add the base router in the defaultConfiguration because\n * it reads app settings which might be set after that has run.\n *\n * @private\n */\napp.lazyrouter = function lazyrouter() {\n  if (!this._router) {\n    this._router = new Router({\n      caseSensitive: this.enabled('case sensitive routing'),\n      strict: this.enabled('strict routing')\n    });\n\n    this._router.use(query(this.get('query parser fn')));\n    this._router.use(middleware.init(this));\n  }\n};\n\n/**\n * Dispatch a req, res pair into the application. Starts pipeline processing.\n *\n * If no callback is provided, then default error handlers will respond\n * in the event of an error bubbling through the stack.\n *\n * @private\n */\n\napp.handle = function handle(req, res, callback) {\n  var router = this._router;\n\n  // final handler\n  var done = callback || finalhandler(req, res, {\n    env: this.get('env'),\n    onerror: logerror.bind(this)\n  });\n\n  // no routes\n  if (!router) {\n    debug('no routes defined on app');\n    done();\n    return;\n  }\n\n  router.handle(req, res, done);\n};\n\n/**\n * Proxy `Router#use()` to add middleware to the app router.\n * See Router#use() documentation for details.\n *\n * If the _fn_ parameter is an express app, then it will be\n * mounted at the _route_ specified.\n *\n * @public\n */\n\napp.use = function use(fn) {\n  var offset = 0;\n  var path = '/';\n\n  // default path to '/'\n  // disambiguate app.use([fn])\n  if (typeof fn !== 'function') {\n    var arg = fn;\n\n    while (Array.isArray(arg) && arg.length !== 0) {\n      arg = arg[0];\n    }\n\n    // first arg is the path\n    if (typeof arg !== 'function') {\n      offset = 1;\n      path = fn;\n    }\n  }\n\n  var fns = flatten(slice.call(arguments, offset));\n\n  if (fns.length === 0) {\n    throw new TypeError('app.use() requires a middleware function')\n  }\n\n  // setup router\n  this.lazyrouter();\n  var router = this._router;\n\n  fns.forEach(function (fn) {\n    // non-express app\n    if (!fn || !fn.handle || !fn.set) {\n      return router.use(path, fn);\n    }\n\n    debug('.use app under %s', path);\n    fn.mountpath = path;\n    fn.parent = this;\n\n    // restore .app property on req and res\n    router.use(path, function mounted_app(req, res, next) {\n      var orig = req.app;\n      fn.handle(req, res, function (err) {\n        setPrototypeOf(req, orig.request)\n        setPrototypeOf(res, orig.response)\n        next(err);\n      });\n    });\n\n    // mounted an app\n    fn.emit('mount', this);\n  }, this);\n\n  return this;\n};\n\n/**\n * Proxy to the app `Router#route()`\n * Returns a new `Route` instance for the _path_.\n *\n * Routes are isolated middleware stacks for specific paths.\n * See the Route api docs for details.\n *\n * @public\n */\n\napp.route = function route(path) {\n  this.lazyrouter();\n  return this._router.route(path);\n};\n\n/**\n * Register the given template engine callback `fn`\n * as `ext`.\n *\n * By default will `require()` the engine based on the\n * file extension. For example if you try to render\n * a \"foo.ejs\" file Express will invoke the following internally:\n *\n *     app.engine('ejs', require('ejs').__express);\n *\n * For engines that do not provide `.__express` out of the box,\n * or if you wish to \"map\" a different extension to the template engine\n * you may use this method. For example mapping the EJS template engine to\n * \".html\" files:\n *\n *     app.engine('html', require('ejs').renderFile);\n *\n * In this case EJS provides a `.renderFile()` method with\n * the same signature that Express expects: `(path, options, callback)`,\n * though note that it aliases this method as `ejs.__express` internally\n * so if you're using \".ejs\" extensions you don't need to do anything.\n *\n * Some template engines do not follow this convention, the\n * [Consolidate.js](https://github.com/tj/consolidate.js)\n * library was created to map all of node's popular template\n * engines to follow this convention, thus allowing them to\n * work seamlessly within Express.\n *\n * @param {String} ext\n * @param {Function} fn\n * @return {app} for chaining\n * @public\n */\n\napp.engine = function engine(ext, fn) {\n  if (typeof fn !== 'function') {\n    throw new Error('callback function required');\n  }\n\n  // get file extension\n  var extension = ext[0] !== '.'\n    ? '.' + ext\n    : ext;\n\n  // store engine\n  this.engines[extension] = fn;\n\n  return this;\n};\n\n/**\n * Proxy to `Router#param()` with one added api feature. The _name_ parameter\n * can be an array of names.\n *\n * See the Router#param() docs for more details.\n *\n * @param {String|Array} name\n * @param {Function} fn\n * @return {app} for chaining\n * @public\n */\n\napp.param = function param(name, fn) {\n  this.lazyrouter();\n\n  if (Array.isArray(name)) {\n    for (var i = 0; i < name.length; i++) {\n      this.param(name[i], fn);\n    }\n\n    return this;\n  }\n\n  this._router.param(name, fn);\n\n  return this;\n};\n\n/**\n * Assign `setting` to `val`, or return `setting`'s value.\n *\n *    app.set('foo', 'bar');\n *    app.set('foo');\n *    // => \"bar\"\n *\n * Mounted servers inherit their parent server's settings.\n *\n * @param {String} setting\n * @param {*} [val]\n * @return {Server} for chaining\n * @public\n */\n\napp.set = function set(setting, val) {\n  if (arguments.length === 1) {\n    // app.get(setting)\n    var settings = this.settings\n\n    while (settings && settings !== Object.prototype) {\n      if (hasOwnProperty.call(settings, setting)) {\n        return settings[setting]\n      }\n\n      settings = Object.getPrototypeOf(settings)\n    }\n\n    return undefined\n  }\n\n  debug('set \"%s\" to %o', setting, val);\n\n  // set value\n  this.settings[setting] = val;\n\n  // trigger matched settings\n  switch (setting) {\n    case 'etag':\n      this.set('etag fn', compileETag(val));\n      break;\n    case 'query parser':\n      this.set('query parser fn', compileQueryParser(val));\n      break;\n    case 'trust proxy':\n      this.set('trust proxy fn', compileTrust(val));\n\n      // trust proxy inherit back-compat\n      Object.defineProperty(this.settings, trustProxyDefaultSymbol, {\n        configurable: true,\n        value: false\n      });\n\n      break;\n  }\n\n  return this;\n};\n\n/**\n * Return the app's absolute pathname\n * based on the parent(s) that have\n * mounted it.\n *\n * For example if the application was\n * mounted as \"/admin\", which itself\n * was mounted as \"/blog\" then the\n * return value would be \"/blog/admin\".\n *\n * @return {String}\n * @private\n */\n\napp.path = function path() {\n  return this.parent\n    ? this.parent.path() + this.mountpath\n    : '';\n};\n\n/**\n * Check if `setting` is enabled (truthy).\n *\n *    app.enabled('foo')\n *    // => false\n *\n *    app.enable('foo')\n *    app.enabled('foo')\n *    // => true\n *\n * @param {String} setting\n * @return {Boolean}\n * @public\n */\n\napp.enabled = function enabled(setting) {\n  return Boolean(this.set(setting));\n};\n\n/**\n * Check if `setting` is disabled.\n *\n *    app.disabled('foo')\n *    // => true\n *\n *    app.enable('foo')\n *    app.disabled('foo')\n *    // => false\n *\n * @param {String} setting\n * @return {Boolean}\n * @public\n */\n\napp.disabled = function disabled(setting) {\n  return !this.set(setting);\n};\n\n/**\n * Enable `setting`.\n *\n * @param {String} setting\n * @return {app} for chaining\n * @public\n */\n\napp.enable = function enable(setting) {\n  return this.set(setting, true);\n};\n\n/**\n * Disable `setting`.\n *\n * @param {String} setting\n * @return {app} for chaining\n * @public\n */\n\napp.disable = function disable(setting) {\n  return this.set(setting, false);\n};\n\n/**\n * Delegate `.VERB(...)` calls to `router.VERB(...)`.\n */\n\nmethods.forEach(function(method){\n  app[method] = function(path){\n    if (method === 'get' && arguments.length === 1) {\n      // app.get(setting)\n      return this.set(path);\n    }\n\n    this.lazyrouter();\n\n    var route = this._router.route(path);\n    route[method].apply(route, slice.call(arguments, 1));\n    return this;\n  };\n});\n\n/**\n * Special-cased \"all\" method, applying the given route `path`,\n * middleware, and callback to _every_ HTTP method.\n *\n * @param {String} path\n * @param {Function} ...\n * @return {app} for chaining\n * @public\n */\n\napp.all = function all(path) {\n  this.lazyrouter();\n\n  var route = this._router.route(path);\n  var args = slice.call(arguments, 1);\n\n  for (var i = 0; i < methods.length; i++) {\n    route[methods[i]].apply(route, args);\n  }\n\n  return this;\n};\n\n// del -> delete alias\n\napp.del = deprecate.function(app.delete, 'app.del: Use app.delete instead');\n\n/**\n * Render the given view `name` name with `options`\n * and a callback accepting an error and the\n * rendered template string.\n *\n * Example:\n *\n *    app.render('email', { name: 'Tobi' }, function(err, html){\n *      // ...\n *    })\n *\n * @param {String} name\n * @param {Object|Function} options or fn\n * @param {Function} callback\n * @public\n */\n\napp.render = function render(name, options, callback) {\n  var cache = this.cache;\n  var done = callback;\n  var engines = this.engines;\n  var opts = options;\n  var renderOptions = {};\n  var view;\n\n  // support callback function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  // merge app.locals\n  merge(renderOptions, this.locals);\n\n  // merge options._locals\n  if (opts._locals) {\n    merge(renderOptions, opts._locals);\n  }\n\n  // merge options\n  merge(renderOptions, opts);\n\n  // set .cache unless explicitly provided\n  if (renderOptions.cache == null) {\n    renderOptions.cache = this.enabled('view cache');\n  }\n\n  // primed cache\n  if (renderOptions.cache) {\n    view = cache[name];\n  }\n\n  // view\n  if (!view) {\n    var View = this.get('view');\n\n    view = new View(name, {\n      defaultEngine: this.get('view engine'),\n      root: this.get('views'),\n      engines: engines\n    });\n\n    if (!view.path) {\n      var dirs = Array.isArray(view.root) && view.root.length > 1\n        ? 'directories \"' + view.root.slice(0, -1).join('\", \"') + '\" or \"' + view.root[view.root.length - 1] + '\"'\n        : 'directory \"' + view.root + '\"'\n      var err = new Error('Failed to lookup view \"' + name + '\" in views ' + dirs);\n      err.view = view;\n      return done(err);\n    }\n\n    // prime the cache\n    if (renderOptions.cache) {\n      cache[name] = view;\n    }\n  }\n\n  // render\n  tryRender(view, renderOptions, done);\n};\n\n/**\n * Listen for connections.\n *\n * A node `http.Server` is returned, with this\n * application (which is a `Function`) as its\n * callback. If you wish to create both an HTTP\n * and HTTPS server you may do so with the \"http\"\n * and \"https\" modules as shown here:\n *\n *    var http = require('http')\n *      , https = require('https')\n *      , express = require('express')\n *      , app = express();\n *\n *    http.createServer(app).listen(80);\n *    https.createServer({ ... }, app).listen(443);\n *\n * @return {http.Server}\n * @public\n */\n\napp.listen = function listen() {\n  var server = http.createServer(this);\n  return server.listen.apply(server, arguments);\n};\n\n/**\n * Log error using console.error.\n *\n * @param {Error} err\n * @private\n */\n\nfunction logerror(err) {\n  /* istanbul ignore next */\n  if (this.get('env') !== 'test') console.error(err.stack || err.toString());\n}\n\n/**\n * Try rendering a view.\n * @private\n */\n\nfunction tryRender(view, options, callback) {\n  try {\n    view.render(options, callback);\n  } catch (err) {\n    callback(err);\n  }\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\application.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 487,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\finalhandler\\index.js",
    "source": "/*!\n * finalhandler\n * Copyright(c) 2014-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar debug = require('debug')('finalhandler')\nvar encodeUrl = require('encodeurl')\nvar escapeHtml = require('escape-html')\nvar onFinished = require('on-finished')\nvar parseUrl = require('parseurl')\nvar statuses = require('statuses')\nvar unpipe = require('unpipe')\n\n/**\n * Module variables.\n * @private\n */\n\nvar DOUBLE_SPACE_REGEXP = /\\x20{2}/g\nvar NEWLINE_REGEXP = /\\n/g\n\n/* istanbul ignore next */\nvar defer = typeof setImmediate === 'function'\n  ? setImmediate\n  : function (fn) { process.nextTick(fn.bind.apply(fn, arguments)) }\nvar isFinished = onFinished.isFinished\n\n/**\n * Create a minimal HTML document.\n *\n * @param {string} message\n * @private\n */\n\nfunction createHtmlDocument (message) {\n  var body = escapeHtml(message)\n    .replace(NEWLINE_REGEXP, '<br>')\n    .replace(DOUBLE_SPACE_REGEXP, ' &nbsp;')\n\n  return '<!DOCTYPE html>\\n' +\n    '<html lang=\"en\">\\n' +\n    '<head>\\n' +\n    '<meta charset=\"utf-8\">\\n' +\n    '<title>Error</title>\\n' +\n    '</head>\\n' +\n    '<body>\\n' +\n    '<pre>' + body + '</pre>\\n' +\n    '</body>\\n' +\n    '</html>\\n'\n}\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = finalhandler\n\n/**\n * Create a function to handle the final response.\n *\n * @param {Request} req\n * @param {Response} res\n * @param {Object} [options]\n * @return {Function}\n * @public\n */\n\nfunction finalhandler (req, res, options) {\n  var opts = options || {}\n\n  // get environment\n  var env = opts.env || process.env.NODE_ENV || 'development'\n\n  // get error callback\n  var onerror = opts.onerror\n\n  return function (err) {\n    var headers\n    var msg\n    var status\n\n    // ignore 404 on in-flight response\n    if (!err && headersSent(res)) {\n      debug('cannot 404 after headers sent')\n      return\n    }\n\n    // unhandled error\n    if (err) {\n      // respect status code from error\n      status = getErrorStatusCode(err)\n\n      if (status === undefined) {\n        // fallback to status code on response\n        status = getResponseStatusCode(res)\n      } else {\n        // respect headers from error\n        headers = getErrorHeaders(err)\n      }\n\n      // get error message\n      msg = getErrorMessage(err, status, env)\n    } else {\n      // not found\n      status = 404\n      msg = 'Cannot ' + req.method + ' ' + encodeUrl(getResourceName(req))\n    }\n\n    debug('default %s', status)\n\n    // schedule onerror callback\n    if (err && onerror) {\n      defer(onerror, err, req, res)\n    }\n\n    // cannot actually respond\n    if (headersSent(res)) {\n      debug('cannot %d after headers sent', status)\n      req.socket.destroy()\n      return\n    }\n\n    // send response\n    send(req, res, status, headers, msg)\n  }\n}\n\n/**\n * Get headers from Error object.\n *\n * @param {Error} err\n * @return {object}\n * @private\n */\n\nfunction getErrorHeaders (err) {\n  if (!err.headers || typeof err.headers !== 'object') {\n    return undefined\n  }\n\n  var headers = Object.create(null)\n  var keys = Object.keys(err.headers)\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i]\n    headers[key] = err.headers[key]\n  }\n\n  return headers\n}\n\n/**\n * Get message from Error object, fallback to status message.\n *\n * @param {Error} err\n * @param {number} status\n * @param {string} env\n * @return {string}\n * @private\n */\n\nfunction getErrorMessage (err, status, env) {\n  var msg\n\n  if (env !== 'production') {\n    // use err.stack, which typically includes err.message\n    msg = err.stack\n\n    // fallback to err.toString() when possible\n    if (!msg && typeof err.toString === 'function') {\n      msg = err.toString()\n    }\n  }\n\n  return msg || statuses.message[status]\n}\n\n/**\n * Get status code from Error object.\n *\n * @param {Error} err\n * @return {number}\n * @private\n */\n\nfunction getErrorStatusCode (err) {\n  // check err.status\n  if (typeof err.status === 'number' && err.status >= 400 && err.status < 600) {\n    return err.status\n  }\n\n  // check err.statusCode\n  if (typeof err.statusCode === 'number' && err.statusCode >= 400 && err.statusCode < 600) {\n    return err.statusCode\n  }\n\n  return undefined\n}\n\n/**\n * Get resource name for the request.\n *\n * This is typically just the original pathname of the request\n * but will fallback to \"resource\" is that cannot be determined.\n *\n * @param {IncomingMessage} req\n * @return {string}\n * @private\n */\n\nfunction getResourceName (req) {\n  try {\n    return parseUrl.original(req).pathname\n  } catch (e) {\n    return 'resource'\n  }\n}\n\n/**\n * Get status code from response.\n *\n * @param {OutgoingMessage} res\n * @return {number}\n * @private\n */\n\nfunction getResponseStatusCode (res) {\n  var status = res.statusCode\n\n  // default status code to 500 if outside valid range\n  if (typeof status !== 'number' || status < 400 || status > 599) {\n    status = 500\n  }\n\n  return status\n}\n\n/**\n * Determine if the response headers have been sent.\n *\n * @param {object} res\n * @returns {boolean}\n * @private\n */\n\nfunction headersSent (res) {\n  return typeof res.headersSent !== 'boolean'\n    ? Boolean(res._header)\n    : res.headersSent\n}\n\n/**\n * Send response.\n *\n * @param {IncomingMessage} req\n * @param {OutgoingMessage} res\n * @param {number} status\n * @param {object} headers\n * @param {string} message\n * @private\n */\n\nfunction send (req, res, status, headers, message) {\n  function write () {\n    // response body\n    var body = createHtmlDocument(message)\n\n    // response status\n    res.statusCode = status\n    res.statusMessage = statuses.message[status]\n\n    // remove any content headers\n    res.removeHeader('Content-Encoding')\n    res.removeHeader('Content-Language')\n    res.removeHeader('Content-Range')\n\n    // response headers\n    setHeaders(res, headers)\n\n    // security headers\n    res.setHeader('Content-Security-Policy', \"default-src 'none'\")\n    res.setHeader('X-Content-Type-Options', 'nosniff')\n\n    // standard headers\n    res.setHeader('Content-Type', 'text/html; charset=utf-8')\n    res.setHeader('Content-Length', Buffer.byteLength(body, 'utf8'))\n\n    if (req.method === 'HEAD') {\n      res.end()\n      return\n    }\n\n    res.end(body, 'utf8')\n  }\n\n  if (isFinished(req)) {\n    write()\n    return\n  }\n\n  // unpipe everything from the request\n  unpipe(req)\n\n  // flush the request\n  onFinished(req, write)\n  req.resume()\n}\n\n/**\n * Set response headers from an object.\n *\n * @param {OutgoingMessage} res\n * @param {object} headers\n * @private\n */\n\nfunction setHeaders (res, headers) {\n  if (!headers) {\n    return\n  }\n\n  var keys = Object.keys(headers)\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i]\n    res.setHeader(key, headers[key])\n  }\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\finalhandler\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 488,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\debug\\src\\index.js",
    "source": "/**\n * Detect Electron renderer process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process !== 'undefined' && process.type === 'renderer') {\n  module.exports = require('./browser.js');\n} else {\n  module.exports = require('./node.js');\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\debug\\src\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 489,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\debug\\src\\node.js",
    "source": "/**\n * Module dependencies.\n */\n\nvar tty = require('tty');\nvar util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\n  return /^debug_/i.test(key);\n}).reduce(function (obj, key) {\n  // camel-case\n  var prop = key\n    .substring(6)\n    .toLowerCase()\n    .replace(/_([a-z])/g, function (_, k) { return k.toUpperCase() });\n\n  // coerce string value into JS value\n  var val = process.env[key];\n  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;\n  else if (/^(no|off|false|disabled)$/i.test(val)) val = false;\n  else if (val === 'null') val = null;\n  else val = Number(val);\n\n  obj[prop] = val;\n  return obj;\n}, {});\n\n/**\n * The file descriptor to write the `debug()` calls to.\n * Set the `DEBUG_FD` env variable to override with another value. i.e.:\n *\n *   $ DEBUG_FD=3 node script.js 3>debug.log\n */\n\nvar fd = parseInt(process.env.DEBUG_FD, 10) || 2;\n\nif (1 !== fd && 2 !== fd) {\n  util.deprecate(function(){}, 'except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)')()\n}\n\nvar stream = 1 === fd ? process.stdout :\n             2 === fd ? process.stderr :\n             createWritableStdioStream(fd);\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts\n    ? Boolean(exports.inspectOpts.colors)\n    : tty.isatty(fd);\n}\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nexports.formatters.o = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts)\n    .split('\\n').map(function(str) {\n      return str.trim()\n    }).join(' ');\n};\n\n/**\n * Map %o to `util.inspect()`, allowing multiple lines if needed.\n */\n\nexports.formatters.O = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts);\n};\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var name = this.namespace;\n  var useColors = this.useColors;\n\n  if (useColors) {\n    var c = this.color;\n    var prefix = '  \\u001b[3' + c + ';1m' + name + ' ' + '\\u001b[0m';\n\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push('\\u001b[3' + c + 'm+' + exports.humanize(this.diff) + '\\u001b[0m');\n  } else {\n    args[0] = new Date().toUTCString()\n      + ' ' + name + ' ' + args[0];\n  }\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to `stream`.\n */\n\nfunction log() {\n  return stream.write(util.format.apply(util, arguments) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  if (null == namespaces) {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  } else {\n    process.env.DEBUG = namespaces;\n  }\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  return process.env.DEBUG;\n}\n\n/**\n * Copied from `node/src/node.js`.\n *\n * XXX: It's lame that node doesn't expose this API out-of-the-box. It also\n * relies on the undocumented `tty_wrap.guessHandleType()` which is also lame.\n */\n\nfunction createWritableStdioStream (fd) {\n  var stream;\n  var tty_wrap = process.binding('tty_wrap');\n\n  // Note stream._type is used for test-module-load-list.js\n\n  switch (tty_wrap.guessHandleType(fd)) {\n    case 'TTY':\n      stream = new tty.WriteStream(fd);\n      stream._type = 'tty';\n\n      // Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    case 'FILE':\n      var fs = require('fs');\n      stream = new fs.SyncWriteStream(fd, { autoClose: false });\n      stream._type = 'fs';\n      break;\n\n    case 'PIPE':\n    case 'TCP':\n      var net = require('net');\n      stream = new net.Socket({\n        fd: fd,\n        readable: false,\n        writable: true\n      });\n\n      // FIXME Should probably have an option in net.Socket to create a\n      // stream from an existing fd which is writable only. But for now\n      // we'll just add this hack and set the `readable` member to false.\n      // Test: ./node test/fixtures/echo.js < /etc/passwd\n      stream.readable = false;\n      stream.read = null;\n      stream._type = 'pipe';\n\n      // FIXME Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    default:\n      // Probably an error on in uv_guess_handle()\n      throw new Error('Implement me. Unknown stream file type!');\n  }\n\n  // For supporting legacy API we put the FD here.\n  stream.fd = fd;\n\n  stream._isStdio = true;\n\n  return stream;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init (debug) {\n  debug.inspectOpts = {};\n\n  var keys = Object.keys(exports.inspectOpts);\n  for (var i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n  }\n}\n\n/**\n * Enable namespaces listed in `process.env.DEBUG` initially.\n */\n\nexports.enable(load());\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\debug\\src\\node.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 490,
    "sourcePositions": []
  },
  {
    "url": "node:tty",
    "source": "// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n'use strict';\r\n\r\nconst {\r\n  Array,\r\n  NumberIsInteger,\r\n  ObjectSetPrototypeOf,\r\n} = primordials;\r\n\r\nconst net = require('net');\r\nconst { TTY, isTTY } = internalBinding('tty_wrap');\r\nconst errors = require('internal/errors');\r\nconst { ERR_INVALID_FD, ERR_TTY_INIT_FAILED } = errors.codes;\r\nconst {\r\n  getColorDepth,\r\n  hasColors\r\n} = require('internal/tty');\r\n\r\n// Lazy loaded for startup performance.\r\nlet readline;\r\n\r\nfunction isatty(fd) {\r\n  return NumberIsInteger(fd) && fd >= 0 && fd <= 2147483647 &&\r\n         isTTY(fd);\r\n}\r\n\r\nfunction ReadStream(fd, options) {\r\n  if (!(this instanceof ReadStream))\r\n    return new ReadStream(fd, options);\r\n  if (fd >> 0 !== fd || fd < 0)\r\n    throw new ERR_INVALID_FD(fd);\r\n\r\n  const ctx = {};\r\n  const tty = new TTY(fd, ctx);\r\n  if (ctx.code !== undefined) {\r\n    throw new ERR_TTY_INIT_FAILED(ctx);\r\n  }\r\n\r\n  net.Socket.call(this, {\r\n    readableHighWaterMark: 0,\r\n    handle: tty,\r\n    manualStart: true,\r\n    ...options\r\n  });\r\n\r\n  this.isRaw = false;\r\n  this.isTTY = true;\r\n}\r\n\r\nObjectSetPrototypeOf(ReadStream.prototype, net.Socket.prototype);\r\nObjectSetPrototypeOf(ReadStream, net.Socket);\r\n\r\nReadStream.prototype.setRawMode = function(flag) {\r\n  flag = !!flag;\r\n  const err = this._handle?.setRawMode(flag);\r\n  if (err) {\r\n    this.emit('error', errors.errnoException(err, 'setRawMode'));\r\n    return this;\r\n  }\r\n  this.isRaw = flag;\r\n  return this;\r\n};\r\n\r\nfunction WriteStream(fd) {\r\n  if (!(this instanceof WriteStream))\r\n    return new WriteStream(fd);\r\n  if (fd >> 0 !== fd || fd < 0)\r\n    throw new ERR_INVALID_FD(fd);\r\n\r\n  const ctx = {};\r\n  const tty = new TTY(fd, ctx);\r\n  if (ctx.code !== undefined) {\r\n    throw new ERR_TTY_INIT_FAILED(ctx);\r\n  }\r\n\r\n  net.Socket.call(this, {\r\n    readableHighWaterMark: 0,\r\n    handle: tty,\r\n    manualStart: true\r\n  });\r\n\r\n  // Prevents interleaved or dropped stdout/stderr output for terminals.\r\n  // As noted in the following reference, local TTYs tend to be quite fast and\r\n  // this behavior has become expected due historical functionality on OS X,\r\n  // even though it was originally intended to change in v1.0.2 (Libuv 1.2.1).\r\n  // Ref: https://github.com/nodejs/node/pull/1771#issuecomment-119351671\r\n  this._handle.setBlocking(true);\r\n\r\n  const winSize = new Array(2);\r\n  const err = this._handle.getWindowSize(winSize);\r\n  if (!err) {\r\n    this.columns = winSize[0];\r\n    this.rows = winSize[1];\r\n  }\r\n}\r\n\r\nObjectSetPrototypeOf(WriteStream.prototype, net.Socket.prototype);\r\nObjectSetPrototypeOf(WriteStream, net.Socket);\r\n\r\nWriteStream.prototype.isTTY = true;\r\n\r\nWriteStream.prototype.getColorDepth = getColorDepth;\r\n\r\nWriteStream.prototype.hasColors = hasColors;\r\n\r\nWriteStream.prototype._refreshSize = function() {\r\n  const oldCols = this.columns;\r\n  const oldRows = this.rows;\r\n  const winSize = new Array(2);\r\n  const err = this._handle.getWindowSize(winSize);\r\n  if (err) {\r\n    this.emit('error', errors.errnoException(err, 'getWindowSize'));\r\n    return;\r\n  }\r\n  const { 0: newCols, 1: newRows } = winSize;\r\n  if (oldCols !== newCols || oldRows !== newRows) {\r\n    this.columns = newCols;\r\n    this.rows = newRows;\r\n    this.emit('resize');\r\n  }\r\n};\r\n\r\n// Backwards-compat\r\nWriteStream.prototype.cursorTo = function(x, y, callback) {\r\n  if (readline === undefined) readline = require('readline');\r\n  return readline.cursorTo(this, x, y, callback);\r\n};\r\nWriteStream.prototype.moveCursor = function(dx, dy, callback) {\r\n  if (readline === undefined) readline = require('readline');\r\n  return readline.moveCursor(this, dx, dy, callback);\r\n};\r\nWriteStream.prototype.clearLine = function(dir, callback) {\r\n  if (readline === undefined) readline = require('readline');\r\n  return readline.clearLine(this, dir, callback);\r\n};\r\nWriteStream.prototype.clearScreenDown = function(callback) {\r\n  if (readline === undefined) readline = require('readline');\r\n  return readline.clearScreenDown(this, callback);\r\n};\r\nWriteStream.prototype.getWindowSize = function() {\r\n  return [this.columns, this.rows];\r\n};\r\n\r\nmodule.exports = { isatty, ReadStream, WriteStream };\r\n",
    "name": "node:tty",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 491,
    "sourcePositions": []
  },
  {
    "url": "node:internal/tty",
    "source": "// MIT License\r\n\r\n// Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\r\n\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n// SOFTWARE.\r\n\r\n'use strict';\r\n\r\nconst {\r\n  ArrayPrototypeSome,\r\n  RegExpPrototypeExec,\r\n  StringPrototypeSplit,\r\n  StringPrototypeToLowerCase,\r\n} = primordials;\r\n\r\nconst { validateInteger } = require('internal/validators');\r\n\r\nlet OSRelease;\r\n\r\nconst COLORS_2 = 1;\r\nconst COLORS_16 = 4;\r\nconst COLORS_256 = 8;\r\nconst COLORS_16m = 24;\r\n\r\n// Some entries were taken from `dircolors`\r\n// (https://linux.die.net/man/1/dircolors). The corresponding terminals might\r\n// support more than 16 colors, but this was not tested for.\r\n//\r\n// Copyright (C) 1996-2016 Free Software Foundation, Inc. Copying and\r\n// distribution of this file, with or without modification, are permitted\r\n// provided the copyright notice and this notice are preserved.\r\nconst TERM_ENVS = {\r\n  'eterm': COLORS_16,\r\n  'cons25': COLORS_16,\r\n  'console': COLORS_16,\r\n  'cygwin': COLORS_16,\r\n  'dtterm': COLORS_16,\r\n  'gnome': COLORS_16,\r\n  'hurd': COLORS_16,\r\n  'jfbterm': COLORS_16,\r\n  'konsole': COLORS_16,\r\n  'kterm': COLORS_16,\r\n  'mlterm': COLORS_16,\r\n  'mosh': COLORS_16m,\r\n  'putty': COLORS_16,\r\n  'st': COLORS_16,\r\n  // https://github.com/da-x/rxvt-unicode/tree/v9.22-with-24bit-color\r\n  'rxvt-unicode-24bit': COLORS_16m,\r\n  // https://gist.github.com/XVilka/8346728#gistcomment-2823421\r\n  'terminator': COLORS_16m\r\n};\r\n\r\nconst TERM_ENVS_REG_EXP = [\r\n  /ansi/,\r\n  /color/,\r\n  /linux/,\r\n  /^con[0-9]*x[0-9]/,\r\n  /^rxvt/,\r\n  /^screen/,\r\n  /^xterm/,\r\n  /^vt100/,\r\n];\r\n\r\nlet warned = false;\r\nfunction warnOnDeactivatedColors(env) {\r\n  if (warned)\r\n    return;\r\n  let name = '';\r\n  if (env.NODE_DISABLE_COLORS !== undefined)\r\n    name = 'NODE_DISABLE_COLORS';\r\n  if (env.NO_COLOR !== undefined) {\r\n    if (name !== '') {\r\n      name += \"' and '\";\r\n    }\r\n    name += 'NO_COLOR';\r\n  }\r\n\r\n  if (name !== '') {\r\n    process.emitWarning(\r\n      `The '${name}' env is ignored due to the 'FORCE_COLOR' env being set.`,\r\n      'Warning'\r\n    );\r\n    warned = true;\r\n  }\r\n}\r\n\r\n// The `getColorDepth` API got inspired by multiple sources such as\r\n// https://github.com/chalk/supports-color,\r\n// https://github.com/isaacs/color-support.\r\nfunction getColorDepth(env = process.env) {\r\n  // Use level 0-3 to support the same levels as `chalk` does. This is done for\r\n  // consistency throughout the ecosystem.\r\n  if (env.FORCE_COLOR !== undefined) {\r\n    switch (env.FORCE_COLOR) {\r\n      case '':\r\n      case '1':\r\n      case 'true':\r\n        warnOnDeactivatedColors(env);\r\n        return COLORS_16;\r\n      case '2':\r\n        warnOnDeactivatedColors(env);\r\n        return COLORS_256;\r\n      case '3':\r\n        warnOnDeactivatedColors(env);\r\n        return COLORS_16m;\r\n      default:\r\n        return COLORS_2;\r\n    }\r\n  }\r\n\r\n  if (env.NODE_DISABLE_COLORS !== undefined ||\r\n      // See https://no-color.org/\r\n      env.NO_COLOR !== undefined ||\r\n      // The \"dumb\" special terminal, as defined by terminfo, doesn't support\r\n      // ANSI color control codes.\r\n      // See https://invisible-island.net/ncurses/terminfo.ti.html#toc-_Specials\r\n      env.TERM === 'dumb') {\r\n    return COLORS_2;\r\n  }\r\n\r\n  if (process.platform === 'win32') {\r\n    // Lazy load for startup performance.\r\n    if (OSRelease === undefined) {\r\n      const { release } = require('os');\r\n      OSRelease = StringPrototypeSplit(release(), '.');\r\n    }\r\n    // Windows 10 build 10586 is the first Windows release that supports 256\r\n    // colors. Windows 10 build 14931 is the first release that supports\r\n    // 16m/TrueColor.\r\n    if (+OSRelease[0] >= 10) {\r\n      const build = +OSRelease[2];\r\n      if (build >= 14931)\r\n        return COLORS_16m;\r\n      if (build >= 10586)\r\n        return COLORS_256;\r\n    }\r\n\r\n    return COLORS_16;\r\n  }\r\n\r\n  if (env.TMUX) {\r\n    return COLORS_256;\r\n  }\r\n\r\n  if (env.CI) {\r\n    if ([\r\n      'APPVEYOR',\r\n      'BUILDKITE',\r\n      'CIRCLECI',\r\n      'DRONE',\r\n      'GITHUB_ACTIONS',\r\n      'GITLAB_CI',\r\n      'TRAVIS',\r\n    ].some((sign) => sign in env) || env.CI_NAME === 'codeship') {\r\n      return COLORS_256;\r\n    }\r\n    return COLORS_2;\r\n  }\r\n\r\n  if ('TEAMCITY_VERSION' in env) {\r\n    return RegExpPrototypeExec(/^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/, env.TEAMCITY_VERSION) !== null ?\r\n      COLORS_16 : COLORS_2;\r\n  }\r\n\r\n  switch (env.TERM_PROGRAM) {\r\n    case 'iTerm.app':\r\n      if (!env.TERM_PROGRAM_VERSION ||\r\n        RegExpPrototypeExec(/^[0-2]\\./, env.TERM_PROGRAM_VERSION) !== null\r\n      ) {\r\n        return COLORS_256;\r\n      }\r\n      return COLORS_16m;\r\n    case 'HyperTerm':\r\n    case 'MacTerm':\r\n      return COLORS_16m;\r\n    case 'Apple_Terminal':\r\n      return COLORS_256;\r\n  }\r\n\r\n  if (env.COLORTERM === 'truecolor' || env.COLORTERM === '24bit') {\r\n    return COLORS_16m;\r\n  }\r\n\r\n  if (env.TERM) {\r\n    if (RegExpPrototypeExec(/^xterm-256/, env.TERM) !== null) {\r\n      return COLORS_256;\r\n    }\r\n\r\n    const termEnv = StringPrototypeToLowerCase(env.TERM);\r\n\r\n    if (TERM_ENVS[termEnv]) {\r\n      return TERM_ENVS[termEnv];\r\n    }\r\n    if (ArrayPrototypeSome(TERM_ENVS_REG_EXP,\r\n                           (term) => RegExpPrototypeExec(term, termEnv) !== null)) {\r\n      return COLORS_16;\r\n    }\r\n  }\r\n  // Move 16 color COLORTERM below 16m and 256\r\n  if (env.COLORTERM) {\r\n    return COLORS_16;\r\n  }\r\n  return COLORS_2;\r\n}\r\n\r\nfunction hasColors(count, env) {\r\n  if (env === undefined &&\r\n      (count === undefined || (typeof count === 'object' && count !== null))) {\r\n    env = count;\r\n    count = 16;\r\n  } else {\r\n    validateInteger(count, 'count', 2);\r\n  }\r\n\r\n  return count <= 2 ** getColorDepth(env);\r\n}\r\n\r\nmodule.exports = {\r\n  getColorDepth,\r\n  hasColors\r\n};\r\n",
    "name": "tty",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 492,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\debug\\src\\debug.js",
    "source": "\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\debug\\src\\debug.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 493,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\ms\\index.js",
    "source": "/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\ms\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 494,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\encodeurl\\index.js",
    "source": "/*!\n * encodeurl\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = encodeUrl\n\n/**\n * RegExp to match non-URL code points, *after* encoding (i.e. not including \"%\")\n * and including invalid escape sequences.\n * @private\n */\n\nvar ENCODE_CHARS_REGEXP = /(?:[^\\x21\\x25\\x26-\\x3B\\x3D\\x3F-\\x5B\\x5D\\x5F\\x61-\\x7A\\x7E]|%(?:[^0-9A-Fa-f]|[0-9A-Fa-f][^0-9A-Fa-f]|$))+/g\n\n/**\n * RegExp to match unmatched surrogate pair.\n * @private\n */\n\nvar UNMATCHED_SURROGATE_PAIR_REGEXP = /(^|[^\\uD800-\\uDBFF])[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF]([^\\uDC00-\\uDFFF]|$)/g\n\n/**\n * String to replace unmatched surrogate pair with.\n * @private\n */\n\nvar UNMATCHED_SURROGATE_PAIR_REPLACE = '$1\\uFFFD$2'\n\n/**\n * Encode a URL to a percent-encoded form, excluding already-encoded sequences.\n *\n * This function will take an already-encoded URL and encode all the non-URL\n * code points. This function will not encode the \"%\" character unless it is\n * not part of a valid sequence (`%20` will be left as-is, but `%foo` will\n * be encoded as `%25foo`).\n *\n * This encode is meant to be \"safe\" and does not throw errors. It will try as\n * hard as it can to properly encode the given URL, including replacing any raw,\n * unpaired surrogate pairs with the Unicode replacement character prior to\n * encoding.\n *\n * @param {string} url\n * @return {string}\n * @public\n */\n\nfunction encodeUrl (url) {\n  return String(url)\n    .replace(UNMATCHED_SURROGATE_PAIR_REGEXP, UNMATCHED_SURROGATE_PAIR_REPLACE)\n    .replace(ENCODE_CHARS_REGEXP, encodeURI)\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\encodeurl\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 495,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\escape-html\\index.js",
    "source": "/*!\n * escape-html\n * Copyright(c) 2012-2013 TJ Holowaychuk\n * Copyright(c) 2015 Andreas Lubbe\n * Copyright(c) 2015 Tiancheng \"Timothy\" Gu\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module variables.\n * @private\n */\n\nvar matchHtmlRegExp = /[\"'&<>]/;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = escapeHtml;\n\n/**\n * Escape special characters in the given string of html.\n *\n * @param  {string} string The string to escape for inserting into HTML\n * @return {string}\n * @public\n */\n\nfunction escapeHtml(string) {\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape;\n  var html = '';\n  var index = 0;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34: // \"\n        escape = '&quot;';\n        break;\n      case 38: // &\n        escape = '&amp;';\n        break;\n      case 39: // '\n        escape = '&#39;';\n        break;\n      case 60: // <\n        escape = '&lt;';\n        break;\n      case 62: // >\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index\n    ? html + str.substring(lastIndex, index)\n    : html;\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\escape-html\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 496,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\on-finished\\index.js",
    "source": "/*!\n * on-finished\n * Copyright(c) 2013 Jonathan Ong\n * Copyright(c) 2014 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = onFinished\nmodule.exports.isFinished = isFinished\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar asyncHooks = tryRequireAsyncHooks()\nvar first = require('ee-first')\n\n/**\n * Variables.\n * @private\n */\n\n/* istanbul ignore next */\nvar defer = typeof setImmediate === 'function'\n  ? setImmediate\n  : function (fn) { process.nextTick(fn.bind.apply(fn, arguments)) }\n\n/**\n * Invoke callback when the response has finished, useful for\n * cleaning up resources afterwards.\n *\n * @param {object} msg\n * @param {function} listener\n * @return {object}\n * @public\n */\n\nfunction onFinished (msg, listener) {\n  if (isFinished(msg) !== false) {\n    defer(listener, null, msg)\n    return msg\n  }\n\n  // attach the listener to the message\n  attachListener(msg, wrap(listener))\n\n  return msg\n}\n\n/**\n * Determine if message is already finished.\n *\n * @param {object} msg\n * @return {boolean}\n * @public\n */\n\nfunction isFinished (msg) {\n  var socket = msg.socket\n\n  if (typeof msg.finished === 'boolean') {\n    // OutgoingMessage\n    return Boolean(msg.finished || (socket && !socket.writable))\n  }\n\n  if (typeof msg.complete === 'boolean') {\n    // IncomingMessage\n    return Boolean(msg.upgrade || !socket || !socket.readable || (msg.complete && !msg.readable))\n  }\n\n  // don't know\n  return undefined\n}\n\n/**\n * Attach a finished listener to the message.\n *\n * @param {object} msg\n * @param {function} callback\n * @private\n */\n\nfunction attachFinishedListener (msg, callback) {\n  var eeMsg\n  var eeSocket\n  var finished = false\n\n  function onFinish (error) {\n    eeMsg.cancel()\n    eeSocket.cancel()\n\n    finished = true\n    callback(error)\n  }\n\n  // finished on first message event\n  eeMsg = eeSocket = first([[msg, 'end', 'finish']], onFinish)\n\n  function onSocket (socket) {\n    // remove listener\n    msg.removeListener('socket', onSocket)\n\n    if (finished) return\n    if (eeMsg !== eeSocket) return\n\n    // finished on first socket event\n    eeSocket = first([[socket, 'error', 'close']], onFinish)\n  }\n\n  if (msg.socket) {\n    // socket already assigned\n    onSocket(msg.socket)\n    return\n  }\n\n  // wait for socket to be assigned\n  msg.on('socket', onSocket)\n\n  if (msg.socket === undefined) {\n    // istanbul ignore next: node.js 0.8 patch\n    patchAssignSocket(msg, onSocket)\n  }\n}\n\n/**\n * Attach the listener to the message.\n *\n * @param {object} msg\n * @return {function}\n * @private\n */\n\nfunction attachListener (msg, listener) {\n  var attached = msg.__onFinished\n\n  // create a private single listener with queue\n  if (!attached || !attached.queue) {\n    attached = msg.__onFinished = createListener(msg)\n    attachFinishedListener(msg, attached)\n  }\n\n  attached.queue.push(listener)\n}\n\n/**\n * Create listener on message.\n *\n * @param {object} msg\n * @return {function}\n * @private\n */\n\nfunction createListener (msg) {\n  function listener (err) {\n    if (msg.__onFinished === listener) msg.__onFinished = null\n    if (!listener.queue) return\n\n    var queue = listener.queue\n    listener.queue = null\n\n    for (var i = 0; i < queue.length; i++) {\n      queue[i](err, msg)\n    }\n  }\n\n  listener.queue = []\n\n  return listener\n}\n\n/**\n * Patch ServerResponse.prototype.assignSocket for node.js 0.8.\n *\n * @param {ServerResponse} res\n * @param {function} callback\n * @private\n */\n\n// istanbul ignore next: node.js 0.8 patch\nfunction patchAssignSocket (res, callback) {\n  var assignSocket = res.assignSocket\n\n  if (typeof assignSocket !== 'function') return\n\n  // res.on('socket', callback) is broken in 0.8\n  res.assignSocket = function _assignSocket (socket) {\n    assignSocket.call(this, socket)\n    callback(socket)\n  }\n}\n\n/**\n * Try to require async_hooks\n * @private\n */\n\nfunction tryRequireAsyncHooks () {\n  try {\n    return require('async_hooks')\n  } catch (e) {\n    return {}\n  }\n}\n\n/**\n * Wrap function with async resource, if possible.\n * AsyncResource.bind static method backported.\n * @private\n */\n\nfunction wrap (fn) {\n  var res\n\n  // create anonymous resource\n  if (asyncHooks.AsyncResource) {\n    res = new asyncHooks.AsyncResource(fn.name || 'bound-anonymous-fn')\n  }\n\n  // incompatible node.js\n  if (!res || !res.runInAsyncScope) {\n    return fn\n  }\n\n  // return bound function\n  return res.runInAsyncScope.bind(res, fn, null)\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\on-finished\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 497,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\ee-first\\index.js",
    "source": "/*!\n * ee-first\n * Copyright(c) 2014 Jonathan Ong\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = first\n\n/**\n * Get the first event in a set of event emitters and event pairs.\n *\n * @param {array} stuff\n * @param {function} done\n * @public\n */\n\nfunction first(stuff, done) {\n  if (!Array.isArray(stuff))\n    throw new TypeError('arg must be an array of [ee, events...] arrays')\n\n  var cleanups = []\n\n  for (var i = 0; i < stuff.length; i++) {\n    var arr = stuff[i]\n\n    if (!Array.isArray(arr) || arr.length < 2)\n      throw new TypeError('each array member must be [ee, events...]')\n\n    var ee = arr[0]\n\n    for (var j = 1; j < arr.length; j++) {\n      var event = arr[j]\n      var fn = listener(event, callback)\n\n      // listen to the event\n      ee.on(event, fn)\n      // push this listener to the list of cleanups\n      cleanups.push({\n        ee: ee,\n        event: event,\n        fn: fn,\n      })\n    }\n  }\n\n  function callback() {\n    cleanup()\n    done.apply(null, arguments)\n  }\n\n  function cleanup() {\n    var x\n    for (var i = 0; i < cleanups.length; i++) {\n      x = cleanups[i]\n      x.ee.removeListener(x.event, x.fn)\n    }\n  }\n\n  function thunk(fn) {\n    done = fn\n  }\n\n  thunk.cancel = cleanup\n\n  return thunk\n}\n\n/**\n * Create the event listener.\n * @private\n */\n\nfunction listener(event, done) {\n  return function onevent(arg1) {\n    var args = new Array(arguments.length)\n    var ee = this\n    var err = event === 'error'\n      ? arg1\n      : null\n\n    // copy args to prevent arguments escaping scope\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n\n    done(err, ee, event, args)\n  }\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\ee-first\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 498,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\parseurl\\index.js",
    "source": "/*!\n * parseurl\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar url = require('url')\nvar parse = url.parse\nvar Url = url.Url\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = parseurl\nmodule.exports.original = originalurl\n\n/**\n * Parse the `req` url with memoization.\n *\n * @param {ServerRequest} req\n * @return {Object}\n * @public\n */\n\nfunction parseurl (req) {\n  var url = req.url\n\n  if (url === undefined) {\n    // URL is undefined\n    return undefined\n  }\n\n  var parsed = req._parsedUrl\n\n  if (fresh(url, parsed)) {\n    // Return cached URL parse\n    return parsed\n  }\n\n  // Parse the URL\n  parsed = fastparse(url)\n  parsed._raw = url\n\n  return (req._parsedUrl = parsed)\n};\n\n/**\n * Parse the `req` original url with fallback and memoization.\n *\n * @param {ServerRequest} req\n * @return {Object}\n * @public\n */\n\nfunction originalurl (req) {\n  var url = req.originalUrl\n\n  if (typeof url !== 'string') {\n    // Fallback\n    return parseurl(req)\n  }\n\n  var parsed = req._parsedOriginalUrl\n\n  if (fresh(url, parsed)) {\n    // Return cached URL parse\n    return parsed\n  }\n\n  // Parse the URL\n  parsed = fastparse(url)\n  parsed._raw = url\n\n  return (req._parsedOriginalUrl = parsed)\n};\n\n/**\n * Parse the `str` url with fast-path short-cut.\n *\n * @param {string} str\n * @return {Object}\n * @private\n */\n\nfunction fastparse (str) {\n  if (typeof str !== 'string' || str.charCodeAt(0) !== 0x2f /* / */) {\n    return parse(str)\n  }\n\n  var pathname = str\n  var query = null\n  var search = null\n\n  // This takes the regexp from https://github.com/joyent/node/pull/7878\n  // Which is /^(\\/[^?#\\s]*)(\\?[^#\\s]*)?$/\n  // And unrolls it into a for loop\n  for (var i = 1; i < str.length; i++) {\n    switch (str.charCodeAt(i)) {\n      case 0x3f: /* ?  */\n        if (search === null) {\n          pathname = str.substring(0, i)\n          query = str.substring(i + 1)\n          search = str.substring(i)\n        }\n        break\n      case 0x09: /* \\t */\n      case 0x0a: /* \\n */\n      case 0x0c: /* \\f */\n      case 0x0d: /* \\r */\n      case 0x20: /*    */\n      case 0x23: /* #  */\n      case 0xa0:\n      case 0xfeff:\n        return parse(str)\n    }\n  }\n\n  var url = Url !== undefined\n    ? new Url()\n    : {}\n\n  url.path = str\n  url.href = str\n  url.pathname = pathname\n\n  if (search !== null) {\n    url.query = query\n    url.search = search\n  }\n\n  return url\n}\n\n/**\n * Determine if parsed is still fresh for url.\n *\n * @param {string} url\n * @param {object} parsedUrl\n * @return {boolean}\n * @private\n */\n\nfunction fresh (url, parsedUrl) {\n  return typeof parsedUrl === 'object' &&\n    parsedUrl !== null &&\n    (Url === undefined || parsedUrl instanceof Url) &&\n    parsedUrl._raw === url\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\parseurl\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 499,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\statuses\\index.js",
    "source": "/*!\n * statuses\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar codes = require('./codes.json')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = status\n\n// status code to message map\nstatus.message = codes\n\n// status message (lower-case) to code map\nstatus.code = createMessageToStatusCodeMap(codes)\n\n// array of status codes\nstatus.codes = createStatusCodeList(codes)\n\n// status codes for redirects\nstatus.redirect = {\n  300: true,\n  301: true,\n  302: true,\n  303: true,\n  305: true,\n  307: true,\n  308: true\n}\n\n// status codes for empty bodies\nstatus.empty = {\n  204: true,\n  205: true,\n  304: true\n}\n\n// status codes for when you should retry the request\nstatus.retry = {\n  502: true,\n  503: true,\n  504: true\n}\n\n/**\n * Create a map of message to status code.\n * @private\n */\n\nfunction createMessageToStatusCodeMap (codes) {\n  var map = {}\n\n  Object.keys(codes).forEach(function forEachCode (code) {\n    var message = codes[code]\n    var status = Number(code)\n\n    // populate map\n    map[message.toLowerCase()] = status\n  })\n\n  return map\n}\n\n/**\n * Create a list of all status codes.\n * @private\n */\n\nfunction createStatusCodeList (codes) {\n  return Object.keys(codes).map(function mapCode (code) {\n    return Number(code)\n  })\n}\n\n/**\n * Get the status code for given message.\n * @private\n */\n\nfunction getStatusCode (message) {\n  var msg = message.toLowerCase()\n\n  if (!Object.prototype.hasOwnProperty.call(status.code, msg)) {\n    throw new Error('invalid status message: \"' + message + '\"')\n  }\n\n  return status.code[msg]\n}\n\n/**\n * Get the status message for given code.\n * @private\n */\n\nfunction getStatusMessage (code) {\n  if (!Object.prototype.hasOwnProperty.call(status.message, code)) {\n    throw new Error('invalid status code: ' + code)\n  }\n\n  return status.message[code]\n}\n\n/**\n * Get the status code.\n *\n * Given a number, this will throw if it is not a known status\n * code, otherwise the code will be returned. Given a string,\n * the string will be parsed for a number and return the code\n * if valid, otherwise will lookup the code assuming this is\n * the status message.\n *\n * @param {string|number} code\n * @returns {number}\n * @public\n */\n\nfunction status (code) {\n  if (typeof code === 'number') {\n    return getStatusMessage(code)\n  }\n\n  if (typeof code !== 'string') {\n    throw new TypeError('code must be a number or string')\n  }\n\n  // '403'\n  var n = parseInt(code, 10)\n  if (!isNaN(n)) {\n    return getStatusMessage(n)\n  }\n\n  return getStatusCode(code)\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\statuses\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 500,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\unpipe\\index.js",
    "source": "/*!\n * unpipe\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = unpipe\n\n/**\n * Determine if there are Node.js pipe-like data listeners.\n * @private\n */\n\nfunction hasPipeDataListeners(stream) {\n  var listeners = stream.listeners('data')\n\n  for (var i = 0; i < listeners.length; i++) {\n    if (listeners[i].name === 'ondata') {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Unpipe a stream from all destinations.\n *\n * @param {object} stream\n * @public\n */\n\nfunction unpipe(stream) {\n  if (!stream) {\n    throw new TypeError('argument stream is required')\n  }\n\n  if (typeof stream.unpipe === 'function') {\n    // new-style\n    stream.unpipe()\n    return\n  }\n\n  // Node.js 0.8 hack\n  if (!hasPipeDataListeners(stream)) {\n    return\n  }\n\n  var listener\n  var listeners = stream.listeners('close')\n\n  for (var i = 0; i < listeners.length; i++) {\n    listener = listeners[i]\n\n    if (listener.name !== 'cleanup' && listener.name !== 'onclose') {\n      continue\n    }\n\n    // invoke the listener\n    listener.call(stream)\n  }\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\unpipe\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 501,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\router\\index.js",
    "source": "/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar Route = require('./route');\nvar Layer = require('./layer');\nvar methods = require('methods');\nvar mixin = require('utils-merge');\nvar debug = require('debug')('express:router');\nvar deprecate = require('depd')('express');\nvar flatten = require('array-flatten');\nvar parseUrl = require('parseurl');\nvar setPrototypeOf = require('setprototypeof')\n\n/**\n * Module variables.\n * @private\n */\n\nvar objectRegExp = /^\\[object (\\S+)\\]$/;\nvar slice = Array.prototype.slice;\nvar toString = Object.prototype.toString;\n\n/**\n * Initialize a new `Router` with the given `options`.\n *\n * @param {Object} [options]\n * @return {Router} which is an callable function\n * @public\n */\n\nvar proto = module.exports = function(options) {\n  var opts = options || {};\n\n  function router(req, res, next) {\n    router.handle(req, res, next);\n  }\n\n  // mixin Router class functions\n  setPrototypeOf(router, proto)\n\n  router.params = {};\n  router._params = [];\n  router.caseSensitive = opts.caseSensitive;\n  router.mergeParams = opts.mergeParams;\n  router.strict = opts.strict;\n  router.stack = [];\n\n  return router;\n};\n\n/**\n * Map the given param placeholder `name`(s) to the given callback.\n *\n * Parameter mapping is used to provide pre-conditions to routes\n * which use normalized placeholders. For example a _:user_id_ parameter\n * could automatically load a user's information from the database without\n * any additional code,\n *\n * The callback uses the same signature as middleware, the only difference\n * being that the value of the placeholder is passed, in this case the _id_\n * of the user. Once the `next()` function is invoked, just like middleware\n * it will continue on to execute the route, or subsequent parameter functions.\n *\n * Just like in middleware, you must either respond to the request or call next\n * to avoid stalling the request.\n *\n *  app.param('user_id', function(req, res, next, id){\n *    User.find(id, function(err, user){\n *      if (err) {\n *        return next(err);\n *      } else if (!user) {\n *        return next(new Error('failed to load user'));\n *      }\n *      req.user = user;\n *      next();\n *    });\n *  });\n *\n * @param {String} name\n * @param {Function} fn\n * @return {app} for chaining\n * @public\n */\n\nproto.param = function param(name, fn) {\n  // param logic\n  if (typeof name === 'function') {\n    deprecate('router.param(fn): Refactor to use path params');\n    this._params.push(name);\n    return;\n  }\n\n  // apply param functions\n  var params = this._params;\n  var len = params.length;\n  var ret;\n\n  if (name[0] === ':') {\n    deprecate('router.param(' + JSON.stringify(name) + ', fn): Use router.param(' + JSON.stringify(name.slice(1)) + ', fn) instead')\n    name = name.slice(1)\n  }\n\n  for (var i = 0; i < len; ++i) {\n    if (ret = params[i](name, fn)) {\n      fn = ret;\n    }\n  }\n\n  // ensure we end up with a\n  // middleware function\n  if ('function' !== typeof fn) {\n    throw new Error('invalid param() call for ' + name + ', got ' + fn);\n  }\n\n  (this.params[name] = this.params[name] || []).push(fn);\n  return this;\n};\n\n/**\n * Dispatch a req, res into the router.\n * @private\n */\n\nproto.handle = function handle(req, res, out) {\n  var self = this;\n\n  debug('dispatching %s %s', req.method, req.url);\n\n  var idx = 0;\n  var protohost = getProtohost(req.url) || ''\n  var removed = '';\n  var slashAdded = false;\n  var sync = 0\n  var paramcalled = {};\n\n  // store options for OPTIONS request\n  // only used if OPTIONS request\n  var options = [];\n\n  // middleware and routes\n  var stack = self.stack;\n\n  // manage inter-router variables\n  var parentParams = req.params;\n  var parentUrl = req.baseUrl || '';\n  var done = restore(out, req, 'baseUrl', 'next', 'params');\n\n  // setup next layer\n  req.next = next;\n\n  // for options requests, respond with a default if nothing else responds\n  if (req.method === 'OPTIONS') {\n    done = wrap(done, function(old, err) {\n      if (err || options.length === 0) return old(err);\n      sendOptionsResponse(res, options, old);\n    });\n  }\n\n  // setup basic req values\n  req.baseUrl = parentUrl;\n  req.originalUrl = req.originalUrl || req.url;\n\n  next();\n\n  function next(err) {\n    var layerError = err === 'route'\n      ? null\n      : err;\n\n    // remove added slash\n    if (slashAdded) {\n      req.url = req.url.slice(1)\n      slashAdded = false;\n    }\n\n    // restore altered req.url\n    if (removed.length !== 0) {\n      req.baseUrl = parentUrl;\n      req.url = protohost + removed + req.url.slice(protohost.length)\n      removed = '';\n    }\n\n    // signal to exit router\n    if (layerError === 'router') {\n      setImmediate(done, null)\n      return\n    }\n\n    // no more matching layers\n    if (idx >= stack.length) {\n      setImmediate(done, layerError);\n      return;\n    }\n\n    // max sync stack\n    if (++sync > 100) {\n      return setImmediate(next, err)\n    }\n\n    // get pathname of request\n    var path = getPathname(req);\n\n    if (path == null) {\n      return done(layerError);\n    }\n\n    // find next matching layer\n    var layer;\n    var match;\n    var route;\n\n    while (match !== true && idx < stack.length) {\n      layer = stack[idx++];\n      match = matchLayer(layer, path);\n      route = layer.route;\n\n      if (typeof match !== 'boolean') {\n        // hold on to layerError\n        layerError = layerError || match;\n      }\n\n      if (match !== true) {\n        continue;\n      }\n\n      if (!route) {\n        // process non-route handlers normally\n        continue;\n      }\n\n      if (layerError) {\n        // routes do not match with a pending error\n        match = false;\n        continue;\n      }\n\n      var method = req.method;\n      var has_method = route._handles_method(method);\n\n      // build up automatic options response\n      if (!has_method && method === 'OPTIONS') {\n        appendMethods(options, route._options());\n      }\n\n      // don't even bother matching route\n      if (!has_method && method !== 'HEAD') {\n        match = false;\n      }\n    }\n\n    // no match\n    if (match !== true) {\n      return done(layerError);\n    }\n\n    // store route for dispatch on change\n    if (route) {\n      req.route = route;\n    }\n\n    // Capture one-time layer values\n    req.params = self.mergeParams\n      ? mergeParams(layer.params, parentParams)\n      : layer.params;\n    var layerPath = layer.path;\n\n    // this should be done for the layer\n    self.process_params(layer, paramcalled, req, res, function (err) {\n      if (err) {\n        next(layerError || err)\n      } else if (route) {\n        layer.handle_request(req, res, next)\n      } else {\n        trim_prefix(layer, layerError, layerPath, path)\n      }\n\n      sync = 0\n    });\n  }\n\n  function trim_prefix(layer, layerError, layerPath, path) {\n    if (layerPath.length !== 0) {\n      // Validate path is a prefix match\n      if (layerPath !== path.slice(0, layerPath.length)) {\n        next(layerError)\n        return\n      }\n\n      // Validate path breaks on a path separator\n      var c = path[layerPath.length]\n      if (c && c !== '/' && c !== '.') return next(layerError)\n\n      // Trim off the part of the url that matches the route\n      // middleware (.use stuff) needs to have the path stripped\n      debug('trim prefix (%s) from url %s', layerPath, req.url);\n      removed = layerPath;\n      req.url = protohost + req.url.slice(protohost.length + removed.length)\n\n      // Ensure leading slash\n      if (!protohost && req.url[0] !== '/') {\n        req.url = '/' + req.url;\n        slashAdded = true;\n      }\n\n      // Setup base URL (no trailing slash)\n      req.baseUrl = parentUrl + (removed[removed.length - 1] === '/'\n        ? removed.substring(0, removed.length - 1)\n        : removed);\n    }\n\n    debug('%s %s : %s', layer.name, layerPath, req.originalUrl);\n\n    if (layerError) {\n      layer.handle_error(layerError, req, res, next);\n    } else {\n      layer.handle_request(req, res, next);\n    }\n  }\n};\n\n/**\n * Process any parameters for the layer.\n * @private\n */\n\nproto.process_params = function process_params(layer, called, req, res, done) {\n  var params = this.params;\n\n  // captured parameters from the layer, keys and values\n  var keys = layer.keys;\n\n  // fast track\n  if (!keys || keys.length === 0) {\n    return done();\n  }\n\n  var i = 0;\n  var name;\n  var paramIndex = 0;\n  var key;\n  var paramVal;\n  var paramCallbacks;\n  var paramCalled;\n\n  // process params in order\n  // param callbacks can be async\n  function param(err) {\n    if (err) {\n      return done(err);\n    }\n\n    if (i >= keys.length ) {\n      return done();\n    }\n\n    paramIndex = 0;\n    key = keys[i++];\n    name = key.name;\n    paramVal = req.params[name];\n    paramCallbacks = params[name];\n    paramCalled = called[name];\n\n    if (paramVal === undefined || !paramCallbacks) {\n      return param();\n    }\n\n    // param previously called with same value or error occurred\n    if (paramCalled && (paramCalled.match === paramVal\n      || (paramCalled.error && paramCalled.error !== 'route'))) {\n      // restore value\n      req.params[name] = paramCalled.value;\n\n      // next param\n      return param(paramCalled.error);\n    }\n\n    called[name] = paramCalled = {\n      error: null,\n      match: paramVal,\n      value: paramVal\n    };\n\n    paramCallback();\n  }\n\n  // single param callbacks\n  function paramCallback(err) {\n    var fn = paramCallbacks[paramIndex++];\n\n    // store updated value\n    paramCalled.value = req.params[key.name];\n\n    if (err) {\n      // store error\n      paramCalled.error = err;\n      param(err);\n      return;\n    }\n\n    if (!fn) return param();\n\n    try {\n      fn(req, res, paramCallback, paramVal, key.name);\n    } catch (e) {\n      paramCallback(e);\n    }\n  }\n\n  param();\n};\n\n/**\n * Use the given middleware function, with optional path, defaulting to \"/\".\n *\n * Use (like `.all`) will run for any http METHOD, but it will not add\n * handlers for those methods so OPTIONS requests will not consider `.use`\n * functions even if they could respond.\n *\n * The other difference is that _route_ path is stripped and not visible\n * to the handler function. The main effect of this feature is that mounted\n * handlers can operate without any code changes regardless of the \"prefix\"\n * pathname.\n *\n * @public\n */\n\nproto.use = function use(fn) {\n  var offset = 0;\n  var path = '/';\n\n  // default path to '/'\n  // disambiguate router.use([fn])\n  if (typeof fn !== 'function') {\n    var arg = fn;\n\n    while (Array.isArray(arg) && arg.length !== 0) {\n      arg = arg[0];\n    }\n\n    // first arg is the path\n    if (typeof arg !== 'function') {\n      offset = 1;\n      path = fn;\n    }\n  }\n\n  var callbacks = flatten(slice.call(arguments, offset));\n\n  if (callbacks.length === 0) {\n    throw new TypeError('Router.use() requires a middleware function')\n  }\n\n  for (var i = 0; i < callbacks.length; i++) {\n    var fn = callbacks[i];\n\n    if (typeof fn !== 'function') {\n      throw new TypeError('Router.use() requires a middleware function but got a ' + gettype(fn))\n    }\n\n    // add the middleware\n    debug('use %o %s', path, fn.name || '<anonymous>')\n\n    var layer = new Layer(path, {\n      sensitive: this.caseSensitive,\n      strict: false,\n      end: false\n    }, fn);\n\n    layer.route = undefined;\n\n    this.stack.push(layer);\n  }\n\n  return this;\n};\n\n/**\n * Create a new Route for the given path.\n *\n * Each route contains a separate middleware stack and VERB handlers.\n *\n * See the Route api documentation for details on adding handlers\n * and middleware to routes.\n *\n * @param {String} path\n * @return {Route}\n * @public\n */\n\nproto.route = function route(path) {\n  var route = new Route(path);\n\n  var layer = new Layer(path, {\n    sensitive: this.caseSensitive,\n    strict: this.strict,\n    end: true\n  }, route.dispatch.bind(route));\n\n  layer.route = route;\n\n  this.stack.push(layer);\n  return route;\n};\n\n// create Router#VERB functions\nmethods.concat('all').forEach(function(method){\n  proto[method] = function(path){\n    var route = this.route(path)\n    route[method].apply(route, slice.call(arguments, 1));\n    return this;\n  };\n});\n\n// append methods to a list of methods\nfunction appendMethods(list, addition) {\n  for (var i = 0; i < addition.length; i++) {\n    var method = addition[i];\n    if (list.indexOf(method) === -1) {\n      list.push(method);\n    }\n  }\n}\n\n// get pathname of request\nfunction getPathname(req) {\n  try {\n    return parseUrl(req).pathname;\n  } catch (err) {\n    return undefined;\n  }\n}\n\n// Get get protocol + host for a URL\nfunction getProtohost(url) {\n  if (typeof url !== 'string' || url.length === 0 || url[0] === '/') {\n    return undefined\n  }\n\n  var searchIndex = url.indexOf('?')\n  var pathLength = searchIndex !== -1\n    ? searchIndex\n    : url.length\n  var fqdnIndex = url.slice(0, pathLength).indexOf('://')\n\n  return fqdnIndex !== -1\n    ? url.substring(0, url.indexOf('/', 3 + fqdnIndex))\n    : undefined\n}\n\n// get type for error message\nfunction gettype(obj) {\n  var type = typeof obj;\n\n  if (type !== 'object') {\n    return type;\n  }\n\n  // inspect [[Class]] for objects\n  return toString.call(obj)\n    .replace(objectRegExp, '$1');\n}\n\n/**\n * Match path to a layer.\n *\n * @param {Layer} layer\n * @param {string} path\n * @private\n */\n\nfunction matchLayer(layer, path) {\n  try {\n    return layer.match(path);\n  } catch (err) {\n    return err;\n  }\n}\n\n// merge params with parent params\nfunction mergeParams(params, parent) {\n  if (typeof parent !== 'object' || !parent) {\n    return params;\n  }\n\n  // make copy of parent for base\n  var obj = mixin({}, parent);\n\n  // simple non-numeric merging\n  if (!(0 in params) || !(0 in parent)) {\n    return mixin(obj, params);\n  }\n\n  var i = 0;\n  var o = 0;\n\n  // determine numeric gaps\n  while (i in params) {\n    i++;\n  }\n\n  while (o in parent) {\n    o++;\n  }\n\n  // offset numeric indices in params before merge\n  for (i--; i >= 0; i--) {\n    params[i + o] = params[i];\n\n    // create holes for the merge when necessary\n    if (i < o) {\n      delete params[i];\n    }\n  }\n\n  return mixin(obj, params);\n}\n\n// restore obj props after function\nfunction restore(fn, obj) {\n  var props = new Array(arguments.length - 2);\n  var vals = new Array(arguments.length - 2);\n\n  for (var i = 0; i < props.length; i++) {\n    props[i] = arguments[i + 2];\n    vals[i] = obj[props[i]];\n  }\n\n  return function () {\n    // restore vals\n    for (var i = 0; i < props.length; i++) {\n      obj[props[i]] = vals[i];\n    }\n\n    return fn.apply(this, arguments);\n  };\n}\n\n// send an OPTIONS response\nfunction sendOptionsResponse(res, options, next) {\n  try {\n    var body = options.join(',');\n    res.set('Allow', body);\n    res.send(body);\n  } catch (err) {\n    next(err);\n  }\n}\n\n// wrap a function\nfunction wrap(old, fn) {\n  return function proxy() {\n    var args = new Array(arguments.length + 1);\n\n    args[0] = old;\n    for (var i = 0, len = arguments.length; i < len; i++) {\n      args[i + 1] = arguments[i];\n    }\n\n    fn.apply(this, args);\n  };\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\router\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 502,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\router\\route.js",
    "source": "/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar debug = require('debug')('express:router:route');\nvar flatten = require('array-flatten');\nvar Layer = require('./layer');\nvar methods = require('methods');\n\n/**\n * Module variables.\n * @private\n */\n\nvar slice = Array.prototype.slice;\nvar toString = Object.prototype.toString;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Route;\n\n/**\n * Initialize `Route` with the given `path`,\n *\n * @param {String} path\n * @public\n */\n\nfunction Route(path) {\n  this.path = path;\n  this.stack = [];\n\n  debug('new %o', path)\n\n  // route handlers for various http methods\n  this.methods = {};\n}\n\n/**\n * Determine if the route handles a given method.\n * @private\n */\n\nRoute.prototype._handles_method = function _handles_method(method) {\n  if (this.methods._all) {\n    return true;\n  }\n\n  var name = method.toLowerCase();\n\n  if (name === 'head' && !this.methods['head']) {\n    name = 'get';\n  }\n\n  return Boolean(this.methods[name]);\n};\n\n/**\n * @return {Array} supported HTTP methods\n * @private\n */\n\nRoute.prototype._options = function _options() {\n  var methods = Object.keys(this.methods);\n\n  // append automatic head\n  if (this.methods.get && !this.methods.head) {\n    methods.push('head');\n  }\n\n  for (var i = 0; i < methods.length; i++) {\n    // make upper case\n    methods[i] = methods[i].toUpperCase();\n  }\n\n  return methods;\n};\n\n/**\n * dispatch req, res into this route\n * @private\n */\n\nRoute.prototype.dispatch = function dispatch(req, res, done) {\n  var idx = 0;\n  var stack = this.stack;\n  var sync = 0\n\n  if (stack.length === 0) {\n    return done();\n  }\n\n  var method = req.method.toLowerCase();\n  if (method === 'head' && !this.methods['head']) {\n    method = 'get';\n  }\n\n  req.route = this;\n\n  next();\n\n  function next(err) {\n    // signal to exit route\n    if (err && err === 'route') {\n      return done();\n    }\n\n    // signal to exit router\n    if (err && err === 'router') {\n      return done(err)\n    }\n\n    // max sync stack\n    if (++sync > 100) {\n      return setImmediate(next, err)\n    }\n\n    var layer = stack[idx++]\n\n    // end of layers\n    if (!layer) {\n      return done(err)\n    }\n\n    if (layer.method && layer.method !== method) {\n      next(err)\n    } else if (err) {\n      layer.handle_error(err, req, res, next);\n    } else {\n      layer.handle_request(req, res, next);\n    }\n\n    sync = 0\n  }\n};\n\n/**\n * Add a handler for all HTTP verbs to this route.\n *\n * Behaves just like middleware and can respond or call `next`\n * to continue processing.\n *\n * You can use multiple `.all` call to add multiple handlers.\n *\n *   function check_something(req, res, next){\n *     next();\n *   };\n *\n *   function validate_user(req, res, next){\n *     next();\n *   };\n *\n *   route\n *   .all(validate_user)\n *   .all(check_something)\n *   .get(function(req, res, next){\n *     res.send('hello world');\n *   });\n *\n * @param {function} handler\n * @return {Route} for chaining\n * @api public\n */\n\nRoute.prototype.all = function all() {\n  var handles = flatten(slice.call(arguments));\n\n  for (var i = 0; i < handles.length; i++) {\n    var handle = handles[i];\n\n    if (typeof handle !== 'function') {\n      var type = toString.call(handle);\n      var msg = 'Route.all() requires a callback function but got a ' + type\n      throw new TypeError(msg);\n    }\n\n    var layer = Layer('/', {}, handle);\n    layer.method = undefined;\n\n    this.methods._all = true;\n    this.stack.push(layer);\n  }\n\n  return this;\n};\n\nmethods.forEach(function(method){\n  Route.prototype[method] = function(){\n    var handles = flatten(slice.call(arguments));\n\n    for (var i = 0; i < handles.length; i++) {\n      var handle = handles[i];\n\n      if (typeof handle !== 'function') {\n        var type = toString.call(handle);\n        var msg = 'Route.' + method + '() requires a callback function but got a ' + type\n        throw new Error(msg);\n      }\n\n      debug('%s %o', method, this.path)\n\n      var layer = Layer('/', {}, handle);\n      layer.method = method;\n\n      this.methods[method] = true;\n      this.stack.push(layer);\n    }\n\n    return this;\n  };\n});\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\router\\route.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 503,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\array-flatten\\array-flatten.js",
    "source": "'use strict'\n\n/**\n * Expose `arrayFlatten`.\n */\nmodule.exports = arrayFlatten\n\n/**\n * Recursive flatten function with depth.\n *\n * @param  {Array}  array\n * @param  {Array}  result\n * @param  {Number} depth\n * @return {Array}\n */\nfunction flattenWithDepth (array, result, depth) {\n  for (var i = 0; i < array.length; i++) {\n    var value = array[i]\n\n    if (depth > 0 && Array.isArray(value)) {\n      flattenWithDepth(value, result, depth - 1)\n    } else {\n      result.push(value)\n    }\n  }\n\n  return result\n}\n\n/**\n * Recursive flatten function. Omitting depth is slightly faster.\n *\n * @param  {Array} array\n * @param  {Array} result\n * @return {Array}\n */\nfunction flattenForever (array, result) {\n  for (var i = 0; i < array.length; i++) {\n    var value = array[i]\n\n    if (Array.isArray(value)) {\n      flattenForever(value, result)\n    } else {\n      result.push(value)\n    }\n  }\n\n  return result\n}\n\n/**\n * Flatten an array, with the ability to define a depth.\n *\n * @param  {Array}  array\n * @param  {Number} depth\n * @return {Array}\n */\nfunction arrayFlatten (array, depth) {\n  if (depth == null) {\n    return flattenForever(array, [])\n  }\n\n  return flattenWithDepth(array, [], depth)\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\array-flatten\\array-flatten.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 504,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\router\\layer.js",
    "source": "/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar pathRegexp = require('path-to-regexp');\nvar debug = require('debug')('express:router:layer');\n\n/**\n * Module variables.\n * @private\n */\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Layer;\n\nfunction Layer(path, options, fn) {\n  if (!(this instanceof Layer)) {\n    return new Layer(path, options, fn);\n  }\n\n  debug('new %o', path)\n  var opts = options || {};\n\n  this.handle = fn;\n  this.name = fn.name || '<anonymous>';\n  this.params = undefined;\n  this.path = undefined;\n  this.regexp = pathRegexp(path, this.keys = [], opts);\n\n  // set fast path flags\n  this.regexp.fast_star = path === '*'\n  this.regexp.fast_slash = path === '/' && opts.end === false\n}\n\n/**\n * Handle the error for the layer.\n *\n * @param {Error} error\n * @param {Request} req\n * @param {Response} res\n * @param {function} next\n * @api private\n */\n\nLayer.prototype.handle_error = function handle_error(error, req, res, next) {\n  var fn = this.handle;\n\n  if (fn.length !== 4) {\n    // not a standard error handler\n    return next(error);\n  }\n\n  try {\n    fn(error, req, res, next);\n  } catch (err) {\n    next(err);\n  }\n};\n\n/**\n * Handle the request for the layer.\n *\n * @param {Request} req\n * @param {Response} res\n * @param {function} next\n * @api private\n */\n\nLayer.prototype.handle_request = function handle(req, res, next) {\n  var fn = this.handle;\n\n  if (fn.length > 3) {\n    // not a standard request handler\n    return next();\n  }\n\n  try {\n    fn(req, res, next);\n  } catch (err) {\n    next(err);\n  }\n};\n\n/**\n * Check if this route matches `path`, if so\n * populate `.params`.\n *\n * @param {String} path\n * @return {Boolean}\n * @api private\n */\n\nLayer.prototype.match = function match(path) {\n  var match\n\n  if (path != null) {\n    // fast path non-ending match for / (any path matches)\n    if (this.regexp.fast_slash) {\n      this.params = {}\n      this.path = ''\n      return true\n    }\n\n    // fast path for * (everything matched in a param)\n    if (this.regexp.fast_star) {\n      this.params = {'0': decode_param(path)}\n      this.path = path\n      return true\n    }\n\n    // match the path\n    match = this.regexp.exec(path)\n  }\n\n  if (!match) {\n    this.params = undefined;\n    this.path = undefined;\n    return false;\n  }\n\n  // store values\n  this.params = {};\n  this.path = match[0]\n\n  var keys = this.keys;\n  var params = this.params;\n\n  for (var i = 1; i < match.length; i++) {\n    var key = keys[i - 1];\n    var prop = key.name;\n    var val = decode_param(match[i])\n\n    if (val !== undefined || !(hasOwnProperty.call(params, prop))) {\n      params[prop] = val;\n    }\n  }\n\n  return true;\n};\n\n/**\n * Decode param value.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction decode_param(val) {\n  if (typeof val !== 'string' || val.length === 0) {\n    return val;\n  }\n\n  try {\n    return decodeURIComponent(val);\n  } catch (err) {\n    if (err instanceof URIError) {\n      err.message = 'Failed to decode param \\'' + val + '\\'';\n      err.status = err.statusCode = 400;\n    }\n\n    throw err;\n  }\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\router\\layer.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 505,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\path-to-regexp\\index.js",
    "source": "/**\n * Expose `pathtoRegexp`.\n */\n\nmodule.exports = pathtoRegexp;\n\n/**\n * Match matching groups in a regular expression.\n */\nvar MATCHING_GROUP_REGEXP = /\\((?!\\?)/g;\n\n/**\n * Normalize the given path string,\n * returning a regular expression.\n *\n * An empty array should be passed,\n * which will contain the placeholder\n * key names. For example \"/user/:id\" will\n * then contain [\"id\"].\n *\n * @param  {String|RegExp|Array} path\n * @param  {Array} keys\n * @param  {Object} options\n * @return {RegExp}\n * @api private\n */\n\nfunction pathtoRegexp(path, keys, options) {\n  options = options || {};\n  keys = keys || [];\n  var strict = options.strict;\n  var end = options.end !== false;\n  var flags = options.sensitive ? '' : 'i';\n  var extraOffset = 0;\n  var keysOffset = keys.length;\n  var i = 0;\n  var name = 0;\n  var m;\n\n  if (path instanceof RegExp) {\n    while (m = MATCHING_GROUP_REGEXP.exec(path.source)) {\n      keys.push({\n        name: name++,\n        optional: false,\n        offset: m.index\n      });\n    }\n\n    return path;\n  }\n\n  if (Array.isArray(path)) {\n    // Map array parts into regexps and return their source. We also pass\n    // the same keys and options instance into every generation to get\n    // consistent matching groups before we join the sources together.\n    path = path.map(function (value) {\n      return pathtoRegexp(value, keys, options).source;\n    });\n\n    return new RegExp('(?:' + path.join('|') + ')', flags);\n  }\n\n  path = ('^' + path + (strict ? '' : path[path.length - 1] === '/' ? '?' : '/?'))\n    .replace(/\\/\\(/g, '/(?:')\n    .replace(/([\\/\\.])/g, '\\\\$1')\n    .replace(/(\\\\\\/)?(\\\\\\.)?:(\\w+)(\\(.*?\\))?(\\*)?(\\?)?/g, function (match, slash, format, key, capture, star, optional, offset) {\n      slash = slash || '';\n      format = format || '';\n      capture = capture || '([^\\\\/' + format + ']+?)';\n      optional = optional || '';\n\n      keys.push({\n        name: key,\n        optional: !!optional,\n        offset: offset + extraOffset\n      });\n\n      var result = ''\n        + (optional ? '' : slash)\n        + '(?:'\n        + format + (optional ? slash : '') + capture\n        + (star ? '((?:[\\\\/' + format + '].+?)?)' : '')\n        + ')'\n        + optional;\n\n      extraOffset += result.length - match.length;\n\n      return result;\n    })\n    .replace(/\\*/g, function (star, index) {\n      var len = keys.length\n\n      while (len-- > keysOffset && keys[len].offset > index) {\n        keys[len].offset += 3; // Replacement length minus asterisk length.\n      }\n\n      return '(.*)';\n    });\n\n  // This is a workaround for handling unnamed matching groups.\n  while (m = MATCHING_GROUP_REGEXP.exec(path)) {\n    var escapeCount = 0;\n    var index = m.index;\n\n    while (path.charAt(--index) === '\\\\') {\n      escapeCount++;\n    }\n\n    // It's possible to escape the bracket.\n    if (escapeCount % 2 === 1) {\n      continue;\n    }\n\n    if (keysOffset + i === keys.length || keys[keysOffset + i].offset > m.index) {\n      keys.splice(keysOffset + i, 0, {\n        name: name++, // Unnamed matching groups must be consistently linear.\n        optional: false,\n        offset: m.index\n      });\n    }\n\n    i++;\n  }\n\n  // If the path is non-ending, match until the end or a slash.\n  path += (end ? '$' : (path[path.length - 1] === '/' ? '' : '(?=\\\\/|$)'));\n\n  return new RegExp(path, flags);\n};\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\path-to-regexp\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 506,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\methods\\index.js",
    "source": "/*!\n * methods\n * Copyright(c) 2013-2014 TJ Holowaychuk\n * Copyright(c) 2015-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar http = require('http');\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = getCurrentNodeMethods() || getBasicNodeMethods();\n\n/**\n * Get the current Node.js methods.\n * @private\n */\n\nfunction getCurrentNodeMethods() {\n  return http.METHODS && http.METHODS.map(function lowerCaseMethod(method) {\n    return method.toLowerCase();\n  });\n}\n\n/**\n * Get the \"basic\" Node.js methods, a snapshot from Node.js 0.10.\n * @private\n */\n\nfunction getBasicNodeMethods() {\n  return [\n    'get',\n    'post',\n    'put',\n    'head',\n    'delete',\n    'options',\n    'trace',\n    'copy',\n    'lock',\n    'mkcol',\n    'move',\n    'purge',\n    'propfind',\n    'proppatch',\n    'unlock',\n    'report',\n    'mkactivity',\n    'checkout',\n    'merge',\n    'm-search',\n    'notify',\n    'subscribe',\n    'unsubscribe',\n    'patch',\n    'search',\n    'connect'\n  ];\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\methods\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 507,
    "sourcePositions": []
  },
  {
    "url": "node:http",
    "source": "// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n'use strict';\r\n\r\nconst {\r\n  ArrayPrototypeSlice,\r\n  ArrayPrototypeSort,\r\n  ObjectDefineProperty,\r\n} = primordials;\r\n\r\nconst { validateInteger } = require('internal/validators');\r\nconst httpAgent = require('_http_agent');\r\nconst { ClientRequest } = require('_http_client');\r\nconst { methods, parsers } = require('_http_common');\r\nconst { IncomingMessage } = require('_http_incoming');\r\nconst {\r\n  validateHeaderName,\r\n  validateHeaderValue,\r\n  OutgoingMessage\r\n} = require('_http_outgoing');\r\nconst {\r\n  _connectionListener,\r\n  STATUS_CODES,\r\n  Server,\r\n  ServerResponse\r\n} = require('_http_server');\r\nlet maxHeaderSize;\r\n\r\n/**\r\n * Returns a new instance of `http.Server`.\r\n * @param {{\r\n *   IncomingMessage?: IncomingMessage;\r\n *   ServerResponse?: ServerResponse;\r\n *   insecureHTTPParser?: boolean;\r\n *   maxHeaderSize?: number;\r\n *   joinDuplicateHeaders?: boolean;\r\n *   }} [opts]\r\n * @param {Function} [requestListener]\r\n * @returns {Server}\r\n */\r\nfunction createServer(opts, requestListener) {\r\n  return new Server(opts, requestListener);\r\n}\r\n\r\n/**\r\n * @typedef {object} HTTPRequestOptions\r\n * @property {httpAgent.Agent | boolean} [agent] Controls Agent behavior.\r\n * @property {string} [auth] Basic authentication ('user:password') to compute an Authorization header.\r\n * @property {Function} [createConnection] Produces a socket/stream to use when the agent option is not used.\r\n * @property {number} [defaultPort] Default port for the protocol.\r\n * @property {number} [family] IP address family to use when resolving host or hostname.\r\n * @property {object} [headers] An object containing request headers.\r\n * @property {number} [hints] Optional dns.lookup() hints.\r\n * @property {string} [host] A domain name or IP address of the server to issue the request to.\r\n * @property {string} [hostname] Alias for host.\r\n * @property {boolean} [insecureHTTPParser] Use an insecure HTTP parser that accepts invalid HTTP headers when true.\r\n * @property {string} [localAddress] Local interface to bind for network connections.\r\n * @property {number} [localPort] Local port to connect from.\r\n * @property {Function} [lookup] Custom lookup function. Default: dns.lookup().\r\n * @property {number} [maxHeaderSize] Overrides the --max-http-header-size value for responses received from the server.\r\n * @property {string} [method] A string specifying the HTTP request method.\r\n * @property {string} [path] Request path.\r\n * @property {number} [port] Port of remote server.\r\n * @property {string} [protocol] Protocol to use.\r\n * @property {boolean} [setHost] Specifies whether or not to automatically add the Host header.\r\n * @property {AbortSignal} [signal] An AbortSignal that may be used to abort an ongoing request.\r\n * @property {string} [socketPath] Unix domain socket.\r\n * @property {number} [timeout] A number specifying the socket timeout in milliseconds.\r\n */\r\n\r\n/**\r\n * Makes an HTTP request.\r\n * @param {string | URL} url\r\n * @param {HTTPRequestOptions} [options]\r\n * @param {Function} [cb]\r\n * @returns {ClientRequest}\r\n */\r\nfunction request(url, options, cb) {\r\n  return new ClientRequest(url, options, cb);\r\n}\r\n\r\n/**\r\n * Makes a `GET` HTTP request.\r\n * @param {string | URL} url\r\n * @param {HTTPRequestOptions} [options]\r\n * @param {Function} [cb]\r\n * @returns {ClientRequest}\r\n */\r\nfunction get(url, options, cb) {\r\n  const req = request(url, options, cb);\r\n  req.end();\r\n  return req;\r\n}\r\n\r\nmodule.exports = {\r\n  _connectionListener,\r\n  METHODS: ArrayPrototypeSort(ArrayPrototypeSlice(methods)),\r\n  STATUS_CODES,\r\n  Agent: httpAgent.Agent,\r\n  ClientRequest,\r\n  IncomingMessage,\r\n  OutgoingMessage,\r\n  Server,\r\n  ServerResponse,\r\n  createServer,\r\n  validateHeaderName,\r\n  validateHeaderValue,\r\n  get,\r\n  request,\r\n  setMaxIdleHTTPParsers(max) {\r\n    validateInteger(max, 'max', 1);\r\n    parsers.max = max;\r\n  }\r\n};\r\n\r\nObjectDefineProperty(module.exports, 'maxHeaderSize', {\r\n  __proto__: null,\r\n  configurable: true,\r\n  enumerable: true,\r\n  get() {\r\n    if (maxHeaderSize === undefined) {\r\n      const { getOptionValue } = require('internal/options');\r\n      maxHeaderSize = getOptionValue('--max-http-header-size');\r\n    }\r\n\r\n    return maxHeaderSize;\r\n  }\r\n});\r\n\r\nObjectDefineProperty(module.exports, 'globalAgent', {\r\n  __proto__: null,\r\n  configurable: true,\r\n  enumerable: true,\r\n  get() {\r\n    return httpAgent.globalAgent;\r\n  },\r\n  set(value) {\r\n    httpAgent.globalAgent = value;\r\n  }\r\n});\r\n",
    "name": "node:http",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 508,
    "sourcePositions": []
  },
  {
    "url": "node:_http_agent",
    "source": "// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n'use strict';\r\n\r\nconst {\r\n  ArrayPrototypeIncludes,\r\n  ArrayPrototypeIndexOf,\r\n  ArrayPrototypePop,\r\n  ArrayPrototypePush,\r\n  ArrayPrototypeShift,\r\n  ArrayPrototypeSome,\r\n  ArrayPrototypeSplice,\r\n  FunctionPrototypeCall,\r\n  ObjectCreate,\r\n  ObjectKeys,\r\n  ObjectSetPrototypeOf,\r\n  ObjectValues,\r\n  StringPrototypeIndexOf,\r\n  StringPrototypeSplit,\r\n  StringPrototypeStartsWith,\r\n  StringPrototypeSubstr,\r\n  Symbol,\r\n} = primordials;\r\n\r\nconst net = require('net');\r\nconst EventEmitter = require('events');\r\nlet debug = require('internal/util/debuglog').debuglog('http', (fn) => {\r\n  debug = fn;\r\n});\r\nconst { AsyncResource } = require('async_hooks');\r\nconst { async_id_symbol } = require('internal/async_hooks').symbols;\r\nconst {\r\n  kEmptyObject,\r\n  once,\r\n} = require('internal/util');\r\nconst {\r\n  validateNumber,\r\n  validateOneOf,\r\n  validateString,\r\n} = require('internal/validators');\r\n\r\nconst kOnKeylog = Symbol('onkeylog');\r\nconst kRequestOptions = Symbol('requestOptions');\r\nconst kRequestAsyncResource = Symbol('requestAsyncResource');\r\n// New Agent code.\r\n\r\n// The largest departure from the previous implementation is that\r\n// an Agent instance holds connections for a variable number of host:ports.\r\n// Surprisingly, this is still API compatible as far as third parties are\r\n// concerned. The only code that really notices the difference is the\r\n// request object.\r\n\r\n// Another departure is that all code related to HTTP parsing is in\r\n// ClientRequest.onSocket(). The Agent is now *strictly*\r\n// concerned with managing a connection pool.\r\n\r\nclass ReusedHandle {\r\n  constructor(type, handle) {\r\n    this.type = type;\r\n    this.handle = handle;\r\n  }\r\n}\r\n\r\nfunction freeSocketErrorListener(err) {\r\n  const socket = this;\r\n  debug('SOCKET ERROR on FREE socket:', err.message, err.stack);\r\n  socket.destroy();\r\n  socket.emit('agentRemove');\r\n}\r\n\r\nfunction Agent(options) {\r\n  if (!(this instanceof Agent))\r\n    return new Agent(options);\r\n\r\n  FunctionPrototypeCall(EventEmitter, this);\r\n\r\n  this.defaultPort = 80;\r\n  this.protocol = 'http:';\r\n\r\n  this.options = { __proto__: null, ...options };\r\n\r\n  if (this.options.noDelay === undefined)\r\n    this.options.noDelay = true;\r\n\r\n  // Don't confuse net and make it think that we're connecting to a pipe\r\n  this.options.path = null;\r\n  this.requests = ObjectCreate(null);\r\n  this.sockets = ObjectCreate(null);\r\n  this.freeSockets = ObjectCreate(null);\r\n  this.keepAliveMsecs = this.options.keepAliveMsecs || 1000;\r\n  this.keepAlive = this.options.keepAlive || false;\r\n  this.maxSockets = this.options.maxSockets || Agent.defaultMaxSockets;\r\n  this.maxFreeSockets = this.options.maxFreeSockets || 256;\r\n  this.scheduling = this.options.scheduling || 'lifo';\r\n  this.maxTotalSockets = this.options.maxTotalSockets;\r\n  this.totalSocketCount = 0;\r\n\r\n  validateOneOf(this.scheduling, 'scheduling', ['fifo', 'lifo']);\r\n\r\n  if (this.maxTotalSockets !== undefined) {\r\n    validateNumber(this.maxTotalSockets, 'maxTotalSockets', 1);\r\n  } else {\r\n    this.maxTotalSockets = Infinity;\r\n  }\r\n\r\n  this.on('free', (socket, options) => {\r\n    const name = this.getName(options);\r\n    debug('agent.on(free)', name);\r\n\r\n    // TODO(ronag): socket.destroy(err) might have been called\r\n    // before coming here and have an 'error' scheduled. In the\r\n    // case of socket.destroy() below this 'error' has no handler\r\n    // and could cause unhandled exception.\r\n\r\n    if (!socket.writable) {\r\n      socket.destroy();\r\n      return;\r\n    }\r\n\r\n    const requests = this.requests[name];\r\n    if (requests && requests.length) {\r\n      const req = ArrayPrototypeShift(requests);\r\n      const reqAsyncRes = req[kRequestAsyncResource];\r\n      if (reqAsyncRes) {\r\n        // Run request within the original async context.\r\n        reqAsyncRes.runInAsyncScope(() => {\r\n          asyncResetHandle(socket);\r\n          setRequestSocket(this, req, socket);\r\n        });\r\n        req[kRequestAsyncResource] = null;\r\n      } else {\r\n        setRequestSocket(this, req, socket);\r\n      }\r\n      if (requests.length === 0) {\r\n        delete this.requests[name];\r\n      }\r\n      return;\r\n    }\r\n\r\n    // If there are no pending requests, then put it in\r\n    // the freeSockets pool, but only if we're allowed to do so.\r\n    const req = socket._httpMessage;\r\n    if (!req || !req.shouldKeepAlive || !this.keepAlive) {\r\n      socket.destroy();\r\n      return;\r\n    }\r\n\r\n    const freeSockets = this.freeSockets[name] || [];\r\n    const freeLen = freeSockets.length;\r\n    let count = freeLen;\r\n    if (this.sockets[name])\r\n      count += this.sockets[name].length;\r\n\r\n    if (this.totalSocketCount > this.maxTotalSockets ||\r\n        count > this.maxSockets ||\r\n        freeLen >= this.maxFreeSockets ||\r\n        !this.keepSocketAlive(socket)) {\r\n      socket.destroy();\r\n      return;\r\n    }\r\n\r\n    this.freeSockets[name] = freeSockets;\r\n    socket[async_id_symbol] = -1;\r\n    socket._httpMessage = null;\r\n    this.removeSocket(socket, options);\r\n\r\n    socket.once('error', freeSocketErrorListener);\r\n    ArrayPrototypePush(freeSockets, socket);\r\n  });\r\n\r\n  // Don't emit keylog events unless there is a listener for them.\r\n  this.on('newListener', maybeEnableKeylog);\r\n}\r\nObjectSetPrototypeOf(Agent.prototype, EventEmitter.prototype);\r\nObjectSetPrototypeOf(Agent, EventEmitter);\r\n\r\nfunction maybeEnableKeylog(eventName) {\r\n  if (eventName === 'keylog') {\r\n    this.removeListener('newListener', maybeEnableKeylog);\r\n    // Future sockets will listen on keylog at creation.\r\n    const agent = this;\r\n    this[kOnKeylog] = function onkeylog(keylog) {\r\n      agent.emit('keylog', keylog, this);\r\n    };\r\n    // Existing sockets will start listening on keylog now.\r\n    const sockets = ObjectValues(this.sockets);\r\n    for (let i = 0; i < sockets.length; i++) {\r\n      sockets[i].on('keylog', this[kOnKeylog]);\r\n    }\r\n  }\r\n}\r\n\r\nAgent.defaultMaxSockets = Infinity;\r\n\r\nAgent.prototype.createConnection = net.createConnection;\r\n\r\n// Get the key for a given set of request options\r\nAgent.prototype.getName = function getName(options = kEmptyObject) {\r\n  let name = options.host || 'localhost';\r\n\r\n  name += ':';\r\n  if (options.port)\r\n    name += options.port;\r\n\r\n  name += ':';\r\n  if (options.localAddress)\r\n    name += options.localAddress;\r\n\r\n  // Pacify parallel/test-http-agent-getname by only appending\r\n  // the ':' when options.family is set.\r\n  if (options.family === 4 || options.family === 6)\r\n    name += `:${options.family}`;\r\n\r\n  if (options.socketPath)\r\n    name += `:${options.socketPath}`;\r\n\r\n  return name;\r\n};\r\n\r\nAgent.prototype.addRequest = function addRequest(req, options, port/* legacy */,\r\n                                                 localAddress/* legacy */) {\r\n  // Legacy API: addRequest(req, host, port, localAddress)\r\n  if (typeof options === 'string') {\r\n    options = {\r\n      __proto__: null,\r\n      host: options,\r\n      port,\r\n      localAddress\r\n    };\r\n  }\r\n\r\n  options = { __proto__: null, ...options, ...this.options };\r\n  if (options.socketPath)\r\n    options.path = options.socketPath;\r\n\r\n  if (!options.servername && options.servername !== '')\r\n    options.servername = calculateServerName(options, req);\r\n\r\n  const name = this.getName(options);\r\n  if (!this.sockets[name]) {\r\n    this.sockets[name] = [];\r\n  }\r\n\r\n  const freeSockets = this.freeSockets[name];\r\n  let socket;\r\n  if (freeSockets) {\r\n    while (freeSockets.length && freeSockets[0].destroyed) {\r\n      ArrayPrototypeShift(freeSockets);\r\n    }\r\n    socket = this.scheduling === 'fifo' ?\r\n      ArrayPrototypeShift(freeSockets) :\r\n      ArrayPrototypePop(freeSockets);\r\n    if (!freeSockets.length)\r\n      delete this.freeSockets[name];\r\n  }\r\n\r\n  const freeLen = freeSockets ? freeSockets.length : 0;\r\n  const sockLen = freeLen + this.sockets[name].length;\r\n\r\n  if (socket) {\r\n    asyncResetHandle(socket);\r\n    this.reuseSocket(socket, req);\r\n    setRequestSocket(this, req, socket);\r\n    ArrayPrototypePush(this.sockets[name], socket);\r\n  } else if (sockLen < this.maxSockets &&\r\n             this.totalSocketCount < this.maxTotalSockets) {\r\n    debug('call onSocket', sockLen, freeLen);\r\n    // If we are under maxSockets create a new one.\r\n    this.createSocket(req, options, (err, socket) => {\r\n      if (err)\r\n        req.onSocket(socket, err);\r\n      else\r\n        setRequestSocket(this, req, socket);\r\n    });\r\n  } else {\r\n    debug('wait for socket');\r\n    // We are over limit so we'll add it to the queue.\r\n    if (!this.requests[name]) {\r\n      this.requests[name] = [];\r\n    }\r\n\r\n    // Used to create sockets for pending requests from different origin\r\n    req[kRequestOptions] = options;\r\n    // Used to capture the original async context.\r\n    req[kRequestAsyncResource] = new AsyncResource('QueuedRequest');\r\n\r\n    ArrayPrototypePush(this.requests[name], req);\r\n  }\r\n};\r\n\r\nAgent.prototype.createSocket = function createSocket(req, options, cb) {\r\n  options = { __proto__: null, ...options, ...this.options };\r\n  if (options.socketPath)\r\n    options.path = options.socketPath;\r\n\r\n  if (!options.servername && options.servername !== '')\r\n    options.servername = calculateServerName(options, req);\r\n\r\n  const name = this.getName(options);\r\n  options._agentKey = name;\r\n\r\n  debug('createConnection', name, options);\r\n  options.encoding = null;\r\n\r\n  const oncreate = once((err, s) => {\r\n    if (err)\r\n      return cb(err);\r\n    if (!this.sockets[name]) {\r\n      this.sockets[name] = [];\r\n    }\r\n    ArrayPrototypePush(this.sockets[name], s);\r\n    this.totalSocketCount++;\r\n    debug('sockets', name, this.sockets[name].length, this.totalSocketCount);\r\n    installListeners(this, s, options);\r\n    cb(null, s);\r\n  });\r\n  // When keepAlive is true, pass the related options to createConnection\r\n  if (this.keepAlive) {\r\n    options.keepAlive = this.keepAlive;\r\n    options.keepAliveInitialDelay = this.keepAliveMsecs;\r\n  }\r\n  const newSocket = this.createConnection(options, oncreate);\r\n  if (newSocket)\r\n    oncreate(null, newSocket);\r\n};\r\n\r\nfunction calculateServerName(options, req) {\r\n  let servername = options.host;\r\n  const hostHeader = req.getHeader('host');\r\n  if (hostHeader) {\r\n    validateString(hostHeader, 'options.headers.host');\r\n\r\n    // abc => abc\r\n    // abc:123 => abc\r\n    // [::1] => ::1\r\n    // [::1]:123 => ::1\r\n    if (StringPrototypeStartsWith(hostHeader, '[')) {\r\n      const index = StringPrototypeIndexOf(hostHeader, ']');\r\n      if (index === -1) {\r\n        // Leading '[', but no ']'. Need to do something...\r\n        servername = hostHeader;\r\n      } else {\r\n        servername = StringPrototypeSubstr(hostHeader, 1, index - 1);\r\n      }\r\n    } else {\r\n      servername = StringPrototypeSplit(hostHeader, ':', 1)[0];\r\n    }\r\n  }\r\n  // Don't implicitly set invalid (IP) servernames.\r\n  if (net.isIP(servername))\r\n    servername = '';\r\n  return servername;\r\n}\r\n\r\nfunction installListeners(agent, s, options) {\r\n  function onFree() {\r\n    debug('CLIENT socket onFree');\r\n    agent.emit('free', s, options);\r\n  }\r\n  s.on('free', onFree);\r\n\r\n  function onClose(err) {\r\n    debug('CLIENT socket onClose');\r\n    // This is the only place where sockets get removed from the Agent.\r\n    // If you want to remove a socket from the pool, just close it.\r\n    // All socket errors end in a close event anyway.\r\n    agent.totalSocketCount--;\r\n    agent.removeSocket(s, options);\r\n  }\r\n  s.on('close', onClose);\r\n\r\n  function onTimeout() {\r\n    debug('CLIENT socket onTimeout');\r\n\r\n    // Destroy if in free list.\r\n    // TODO(ronag): Always destroy, even if not in free list.\r\n    const sockets = agent.freeSockets;\r\n    if (ArrayPrototypeSome(ObjectKeys(sockets), (name) =>\r\n      ArrayPrototypeIncludes(sockets[name], s)\r\n    )) {\r\n      return s.destroy();\r\n    }\r\n  }\r\n  s.on('timeout', onTimeout);\r\n\r\n  function onRemove() {\r\n    // We need this function for cases like HTTP 'upgrade'\r\n    // (defined by WebSockets) where we need to remove a socket from the\r\n    // pool because it'll be locked up indefinitely\r\n    debug('CLIENT socket onRemove');\r\n    agent.totalSocketCount--;\r\n    agent.removeSocket(s, options);\r\n    s.removeListener('close', onClose);\r\n    s.removeListener('free', onFree);\r\n    s.removeListener('timeout', onTimeout);\r\n    s.removeListener('agentRemove', onRemove);\r\n  }\r\n  s.on('agentRemove', onRemove);\r\n\r\n  if (agent[kOnKeylog]) {\r\n    s.on('keylog', agent[kOnKeylog]);\r\n  }\r\n}\r\n\r\nAgent.prototype.removeSocket = function removeSocket(s, options) {\r\n  const name = this.getName(options);\r\n  debug('removeSocket', name, 'writable:', s.writable);\r\n  const sets = [this.sockets];\r\n\r\n  // If the socket was destroyed, remove it from the free buffers too.\r\n  if (!s.writable)\r\n    ArrayPrototypePush(sets, this.freeSockets);\r\n\r\n  for (let sk = 0; sk < sets.length; sk++) {\r\n    const sockets = sets[sk];\r\n\r\n    if (sockets[name]) {\r\n      const index = ArrayPrototypeIndexOf(sockets[name], s);\r\n      if (index !== -1) {\r\n        ArrayPrototypeSplice(sockets[name], index, 1);\r\n        // Don't leak\r\n        if (sockets[name].length === 0)\r\n          delete sockets[name];\r\n      }\r\n    }\r\n  }\r\n\r\n  let req;\r\n  if (this.requests[name] && this.requests[name].length) {\r\n    debug('removeSocket, have a request, make a socket');\r\n    req = this.requests[name][0];\r\n  } else {\r\n    // TODO(rickyes): this logic will not be FIFO across origins.\r\n    // There might be older requests in a different origin, but\r\n    // if the origin which releases the socket has pending requests\r\n    // that will be prioritized.\r\n    const keys = ObjectKeys(this.requests);\r\n    for (let i = 0; i < keys.length; i++) {\r\n      const prop = keys[i];\r\n      // Check whether this specific origin is already at maxSockets\r\n      if (this.sockets[prop] && this.sockets[prop].length) break;\r\n      debug('removeSocket, have a request with different origin,' +\r\n        ' make a socket');\r\n      req = this.requests[prop][0];\r\n      options = req[kRequestOptions];\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (req && options) {\r\n    req[kRequestOptions] = undefined;\r\n    // If we have pending requests and a socket gets closed make a new one\r\n    this.createSocket(req, options, (err, socket) => {\r\n      if (err)\r\n        req.onSocket(socket, err);\r\n      else\r\n        socket.emit('free');\r\n    });\r\n  }\r\n\r\n};\r\n\r\nAgent.prototype.keepSocketAlive = function keepSocketAlive(socket) {\r\n  socket.setKeepAlive(true, this.keepAliveMsecs);\r\n  socket.unref();\r\n\r\n  const agentTimeout = this.options.timeout || 0;\r\n  if (socket.timeout !== agentTimeout) {\r\n    socket.setTimeout(agentTimeout);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nAgent.prototype.reuseSocket = function reuseSocket(socket, req) {\r\n  debug('have free socket');\r\n  socket.removeListener('error', freeSocketErrorListener);\r\n  req.reusedSocket = true;\r\n  socket.ref();\r\n};\r\n\r\nAgent.prototype.destroy = function destroy() {\r\n  const sets = [this.freeSockets, this.sockets];\r\n  for (let s = 0; s < sets.length; s++) {\r\n    const set = sets[s];\r\n    const keys = ObjectKeys(set);\r\n    for (let v = 0; v < keys.length; v++) {\r\n      const setName = set[keys[v]];\r\n      for (let n = 0; n < setName.length; n++) {\r\n        setName[n].destroy();\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nfunction setRequestSocket(agent, req, socket) {\r\n  req.onSocket(socket);\r\n  const agentTimeout = agent.options.timeout || 0;\r\n  if (req.timeout === undefined || req.timeout === agentTimeout) {\r\n    return;\r\n  }\r\n  socket.setTimeout(req.timeout);\r\n}\r\n\r\nfunction asyncResetHandle(socket) {\r\n  // Guard against an uninitialized or user supplied Socket.\r\n  const handle = socket._handle;\r\n  if (handle && typeof handle.asyncReset === 'function') {\r\n    // Assign the handle a new asyncId and run any destroy()/init() hooks.\r\n    handle.asyncReset(new ReusedHandle(handle.getProviderType(), handle));\r\n    socket[async_id_symbol] = handle.getAsyncId();\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  Agent,\r\n  globalAgent: new Agent()\r\n};\r\n",
    "name": "node:_http_agent",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 509,
    "sourcePositions": []
  },
  {
    "url": "node:_http_client",
    "source": "// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n'use strict';\r\n\r\nconst {\r\n  ArrayIsArray,\r\n  Boolean,\r\n  Error,\r\n  FunctionPrototypeCall,\r\n  NumberIsFinite,\r\n  ObjectAssign,\r\n  ObjectKeys,\r\n  ObjectSetPrototypeOf,\r\n  ReflectApply,\r\n  RegExpPrototypeExec,\r\n  String,\r\n  StringPrototypeCharCodeAt,\r\n  StringPrototypeIncludes,\r\n  StringPrototypeIndexOf,\r\n  StringPrototypeToUpperCase,\r\n  Symbol,\r\n  TypedArrayPrototypeSlice,\r\n} = primordials;\r\n\r\nconst net = require('net');\r\nconst assert = require('internal/assert');\r\nconst {\r\n  kEmptyObject,\r\n  once,\r\n} = require('internal/util');\r\nconst {\r\n  _checkIsHttpToken: checkIsHttpToken,\r\n  freeParser,\r\n  parsers,\r\n  HTTPParser,\r\n  isLenient,\r\n  prepareError,\r\n} = require('_http_common');\r\nconst {\r\n  kUniqueHeaders,\r\n  parseUniqueHeadersOption,\r\n  OutgoingMessage\r\n} = require('_http_outgoing');\r\nconst Agent = require('_http_agent');\r\nconst { Buffer } = require('buffer');\r\nconst { defaultTriggerAsyncIdScope } = require('internal/async_hooks');\r\nconst { URL, urlToHttpOptions, searchParamsSymbol } = require('internal/url');\r\nconst {\r\n  kOutHeaders,\r\n  kNeedDrain,\r\n  isTraceHTTPEnabled,\r\n  traceBegin,\r\n  traceEnd,\r\n  getNextTraceEventId,\r\n} = require('internal/http');\r\nconst { connResetException, codes } = require('internal/errors');\r\nconst {\r\n  ERR_HTTP_HEADERS_SENT,\r\n  ERR_INVALID_ARG_TYPE,\r\n  ERR_INVALID_HTTP_TOKEN,\r\n  ERR_INVALID_PROTOCOL,\r\n  ERR_UNESCAPED_CHARACTERS\r\n} = codes;\r\nconst {\r\n  validateInteger,\r\n  validateBoolean,\r\n} = require('internal/validators');\r\nconst { getTimerDuration } = require('internal/timers');\r\nconst {\r\n  DTRACE_HTTP_CLIENT_REQUEST,\r\n  DTRACE_HTTP_CLIENT_RESPONSE\r\n} = require('internal/dtrace');\r\n\r\nconst {\r\n  hasObserver,\r\n  startPerf,\r\n  stopPerf,\r\n} = require('internal/perf/observe');\r\n\r\nconst kClientRequestStatistics = Symbol('ClientRequestStatistics');\r\n\r\nconst dc = require('diagnostics_channel');\r\nconst onClientRequestStartChannel = dc.channel('http.client.request.start');\r\nconst onClientResponseFinishChannel = dc.channel('http.client.response.finish');\r\n\r\nconst { addAbortSignal, finished } = require('stream');\r\n\r\nlet debug = require('internal/util/debuglog').debuglog('http', (fn) => {\r\n  debug = fn;\r\n});\r\n\r\nconst INVALID_PATH_REGEX = /[^\\u0021-\\u00ff]/;\r\nconst kError = Symbol('kError');\r\n\r\nconst kLenientAll = HTTPParser.kLenientAll | 0;\r\nconst kLenientNone = HTTPParser.kLenientNone | 0;\r\n\r\nconst HTTP_CLIENT_TRACE_EVENT_NAME = 'http.client.request';\r\n\r\nfunction validateHost(host, name) {\r\n  if (host !== null && host !== undefined && typeof host !== 'string') {\r\n    throw new ERR_INVALID_ARG_TYPE(`options.${name}`,\r\n                                   ['string', 'undefined', 'null'],\r\n                                   host);\r\n  }\r\n  return host;\r\n}\r\n\r\nclass HTTPClientAsyncResource {\r\n  constructor(type, req) {\r\n    this.type = type;\r\n    this.req = req;\r\n  }\r\n}\r\n\r\nfunction ClientRequest(input, options, cb) {\r\n  FunctionPrototypeCall(OutgoingMessage, this);\r\n\r\n  if (typeof input === 'string') {\r\n    const urlStr = input;\r\n    input = urlToHttpOptions(new URL(urlStr));\r\n  } else if (input && input[searchParamsSymbol] &&\r\n             input[searchParamsSymbol][searchParamsSymbol]) {\r\n    // url.URL instance\r\n    input = urlToHttpOptions(input);\r\n  } else {\r\n    cb = options;\r\n    options = input;\r\n    input = null;\r\n  }\r\n\r\n  if (typeof options === 'function') {\r\n    cb = options;\r\n    options = input || kEmptyObject;\r\n  } else {\r\n    options = ObjectAssign(input || {}, options);\r\n  }\r\n\r\n  let agent = options.agent;\r\n  const defaultAgent = options._defaultAgent || Agent.globalAgent;\r\n  if (agent === false) {\r\n    agent = new defaultAgent.constructor();\r\n  } else if (agent === null || agent === undefined) {\r\n    if (typeof options.createConnection !== 'function') {\r\n      agent = defaultAgent;\r\n    }\r\n    // Explicitly pass through this statement as agent will not be used\r\n    // when createConnection is provided.\r\n  } else if (typeof agent.addRequest !== 'function') {\r\n    throw new ERR_INVALID_ARG_TYPE('options.agent',\r\n                                   ['Agent-like Object', 'undefined', 'false'],\r\n                                   agent);\r\n  }\r\n  this.agent = agent;\r\n\r\n  const protocol = options.protocol || defaultAgent.protocol;\r\n  let expectedProtocol = defaultAgent.protocol;\r\n  if (this.agent && this.agent.protocol)\r\n    expectedProtocol = this.agent.protocol;\r\n\r\n  if (options.path) {\r\n    const path = String(options.path);\r\n    if (RegExpPrototypeExec(INVALID_PATH_REGEX, path) !== null) {\r\n      debug('Path contains unescaped characters: \"%s\"', path);\r\n      throw new ERR_UNESCAPED_CHARACTERS('Request path');\r\n    }\r\n  }\r\n\r\n  if (protocol !== expectedProtocol) {\r\n    throw new ERR_INVALID_PROTOCOL(protocol, expectedProtocol);\r\n  }\r\n\r\n  const defaultPort = options.defaultPort ||\r\n                    (this.agent && this.agent.defaultPort);\r\n\r\n  const port = options.port = options.port || defaultPort || 80;\r\n  const host = options.host = validateHost(options.hostname, 'hostname') ||\r\n                            validateHost(options.host, 'host') || 'localhost';\r\n\r\n  const setHost = (options.setHost === undefined || Boolean(options.setHost));\r\n\r\n  this.socketPath = options.socketPath;\r\n\r\n  if (options.timeout !== undefined)\r\n    this.timeout = getTimerDuration(options.timeout, 'timeout');\r\n\r\n  const signal = options.signal;\r\n  if (signal) {\r\n    addAbortSignal(signal, this);\r\n  }\r\n  let method = options.method;\r\n  const methodIsString = (typeof method === 'string');\r\n  if (method !== null && method !== undefined && !methodIsString) {\r\n    throw new ERR_INVALID_ARG_TYPE('options.method', 'string', method);\r\n  }\r\n\r\n  if (methodIsString && method) {\r\n    if (!checkIsHttpToken(method)) {\r\n      throw new ERR_INVALID_HTTP_TOKEN('Method', method);\r\n    }\r\n    method = this.method = StringPrototypeToUpperCase(method);\r\n  } else {\r\n    method = this.method = 'GET';\r\n  }\r\n\r\n  const maxHeaderSize = options.maxHeaderSize;\r\n  if (maxHeaderSize !== undefined)\r\n    validateInteger(maxHeaderSize, 'maxHeaderSize', 0);\r\n  this.maxHeaderSize = maxHeaderSize;\r\n\r\n  const insecureHTTPParser = options.insecureHTTPParser;\r\n  if (insecureHTTPParser !== undefined) {\r\n    validateBoolean(insecureHTTPParser, 'options.insecureHTTPParser');\r\n  }\r\n\r\n  this.insecureHTTPParser = insecureHTTPParser;\r\n\r\n  if (options.joinDuplicateHeaders !== undefined) {\r\n    validateBoolean(options.joinDuplicateHeaders, 'options.joinDuplicateHeaders');\r\n  }\r\n\r\n  this.joinDuplicateHeaders = options.joinDuplicateHeaders;\r\n\r\n  this.path = options.path || '/';\r\n  if (cb) {\r\n    this.once('response', cb);\r\n  }\r\n\r\n  if (method === 'GET' ||\r\n      method === 'HEAD' ||\r\n      method === 'DELETE' ||\r\n      method === 'OPTIONS' ||\r\n      method === 'TRACE' ||\r\n      method === 'CONNECT') {\r\n    this.useChunkedEncodingByDefault = false;\r\n  } else {\r\n    this.useChunkedEncodingByDefault = true;\r\n  }\r\n\r\n  this._ended = false;\r\n  this.res = null;\r\n  this.aborted = false;\r\n  this.timeoutCb = null;\r\n  this.upgradeOrConnect = false;\r\n  this.parser = null;\r\n  this.maxHeadersCount = null;\r\n  this.reusedSocket = false;\r\n  this.host = host;\r\n  this.protocol = protocol;\r\n\r\n  if (this.agent) {\r\n    // If there is an agent we should default to Connection:keep-alive,\r\n    // but only if the Agent will actually reuse the connection!\r\n    // If it's not a keepAlive agent, and the maxSockets==Infinity, then\r\n    // there's never a case where this socket will actually be reused\r\n    if (!this.agent.keepAlive && !NumberIsFinite(this.agent.maxSockets)) {\r\n      this._last = true;\r\n      this.shouldKeepAlive = false;\r\n    } else {\r\n      this._last = false;\r\n      this.shouldKeepAlive = true;\r\n    }\r\n  }\r\n\r\n  const headersArray = ArrayIsArray(options.headers);\r\n  if (!headersArray) {\r\n    if (options.headers) {\r\n      const keys = ObjectKeys(options.headers);\r\n      // Retain for(;;) loop for performance reasons\r\n      // Refs: https://github.com/nodejs/node/pull/30958\r\n      for (let i = 0; i < keys.length; i++) {\r\n        const key = keys[i];\r\n        this.setHeader(key, options.headers[key]);\r\n      }\r\n    }\r\n\r\n    if (host && !this.getHeader('host') && setHost) {\r\n      let hostHeader = host;\r\n\r\n      // For the Host header, ensure that IPv6 addresses are enclosed\r\n      // in square brackets, as defined by URI formatting\r\n      // https://tools.ietf.org/html/rfc3986#section-3.2.2\r\n      const posColon = StringPrototypeIndexOf(hostHeader, ':');\r\n      if (posColon !== -1 &&\r\n          StringPrototypeIncludes(hostHeader, ':', posColon + 1) &&\r\n          StringPrototypeCharCodeAt(hostHeader, 0) !== 91/* '[' */) {\r\n        hostHeader = `[${hostHeader}]`;\r\n      }\r\n\r\n      if (port && +port !== defaultPort) {\r\n        hostHeader += ':' + port;\r\n      }\r\n      this.setHeader('Host', hostHeader);\r\n    }\r\n\r\n    if (options.auth && !this.getHeader('Authorization')) {\r\n      this.setHeader('Authorization', 'Basic ' +\r\n                     Buffer.from(options.auth).toString('base64'));\r\n    }\r\n\r\n    if (this.getHeader('expect')) {\r\n      if (this._header) {\r\n        throw new ERR_HTTP_HEADERS_SENT('render');\r\n      }\r\n\r\n      this._storeHeader(this.method + ' ' + this.path + ' HTTP/1.1\\r\\n',\r\n                        this[kOutHeaders]);\r\n    }\r\n  } else {\r\n    this._storeHeader(this.method + ' ' + this.path + ' HTTP/1.1\\r\\n',\r\n                      options.headers);\r\n  }\r\n\r\n  this[kUniqueHeaders] = parseUniqueHeadersOption(options.uniqueHeaders);\r\n\r\n  let optsWithoutSignal = options;\r\n  if (optsWithoutSignal.signal) {\r\n    optsWithoutSignal = ObjectAssign({}, options);\r\n    delete optsWithoutSignal.signal;\r\n  }\r\n\r\n  // initiate connection\r\n  if (this.agent) {\r\n    this.agent.addRequest(this, optsWithoutSignal);\r\n  } else {\r\n    // No agent, default to Connection:close.\r\n    this._last = true;\r\n    this.shouldKeepAlive = false;\r\n    if (typeof optsWithoutSignal.createConnection === 'function') {\r\n      const oncreate = once((err, socket) => {\r\n        if (err) {\r\n          process.nextTick(() => this.emit('error', err));\r\n        } else {\r\n          this.onSocket(socket);\r\n        }\r\n      });\r\n\r\n      try {\r\n        const newSocket = optsWithoutSignal.createConnection(optsWithoutSignal,\r\n                                                             oncreate);\r\n        if (newSocket) {\r\n          oncreate(null, newSocket);\r\n        }\r\n      } catch (err) {\r\n        oncreate(err);\r\n      }\r\n    } else {\r\n      debug('CLIENT use net.createConnection', optsWithoutSignal);\r\n      this.onSocket(net.createConnection(optsWithoutSignal));\r\n    }\r\n  }\r\n}\r\nObjectSetPrototypeOf(ClientRequest.prototype, OutgoingMessage.prototype);\r\nObjectSetPrototypeOf(ClientRequest, OutgoingMessage);\r\n\r\nClientRequest.prototype._finish = function _finish() {\r\n  DTRACE_HTTP_CLIENT_REQUEST(this, this.socket);\r\n  FunctionPrototypeCall(OutgoingMessage.prototype._finish, this);\r\n  if (hasObserver('http')) {\r\n    startPerf(this, kClientRequestStatistics, {\r\n      type: 'http',\r\n      name: 'HttpClient',\r\n      detail: {\r\n        req: {\r\n          method: this.method,\r\n          url: `${this.protocol}//${this.host}${this.path}`,\r\n          headers: typeof this.getHeaders === 'function' ? this.getHeaders() : {},\r\n        },\r\n      },\r\n    });\r\n  }\r\n  if (onClientRequestStartChannel.hasSubscribers) {\r\n    onClientRequestStartChannel.publish({\r\n      request: this,\r\n    });\r\n  }\r\n  if (isTraceHTTPEnabled()) {\r\n    this._traceEventId = getNextTraceEventId();\r\n    traceBegin(HTTP_CLIENT_TRACE_EVENT_NAME, this._traceEventId);\r\n  }\r\n};\r\n\r\nClientRequest.prototype._implicitHeader = function _implicitHeader() {\r\n  if (this._header) {\r\n    throw new ERR_HTTP_HEADERS_SENT('render');\r\n  }\r\n  this._storeHeader(this.method + ' ' + this.path + ' HTTP/1.1\\r\\n',\r\n                    this[kOutHeaders]);\r\n};\r\n\r\nClientRequest.prototype.abort = function abort() {\r\n  if (this.aborted) {\r\n    return;\r\n  }\r\n  this.aborted = true;\r\n  process.nextTick(emitAbortNT, this);\r\n  this.destroy();\r\n};\r\n\r\nClientRequest.prototype.destroy = function destroy(err) {\r\n  if (this.destroyed) {\r\n    return this;\r\n  }\r\n  this.destroyed = true;\r\n\r\n  // If we're aborting, we don't care about any more response data.\r\n  if (this.res) {\r\n    this.res._dump();\r\n  }\r\n\r\n  this[kError] = err;\r\n  this.socket?.destroy(err);\r\n\r\n  return this;\r\n};\r\n\r\nfunction emitAbortNT(req) {\r\n  req.emit('abort');\r\n}\r\n\r\nfunction ondrain() {\r\n  const msg = this._httpMessage;\r\n  if (msg && !msg.finished && msg[kNeedDrain]) {\r\n    msg[kNeedDrain] = false;\r\n    msg.emit('drain');\r\n  }\r\n}\r\n\r\nfunction socketCloseListener() {\r\n  const socket = this;\r\n  const req = socket._httpMessage;\r\n  debug('HTTP socket close');\r\n\r\n  // NOTE: It's important to get parser here, because it could be freed by\r\n  // the `socketOnData`.\r\n  const parser = socket.parser;\r\n  const res = req.res;\r\n\r\n  req.destroyed = true;\r\n  if (res) {\r\n    // Socket closed before we emitted 'end' below.\r\n    if (!res.complete) {\r\n      res.destroy(connResetException('aborted'));\r\n    }\r\n    req._closed = true;\r\n    req.emit('close');\r\n    if (!res.aborted && res.readable) {\r\n      res.push(null);\r\n    }\r\n  } else {\r\n    if (!req.socket._hadError) {\r\n      // This socket error fired before we started to\r\n      // receive a response. The error needs to\r\n      // fire on the request.\r\n      req.socket._hadError = true;\r\n      req.emit('error', connResetException('socket hang up'));\r\n    }\r\n    req._closed = true;\r\n    req.emit('close');\r\n  }\r\n\r\n  // Too bad.  That output wasn't getting written.\r\n  // This is pretty terrible that it doesn't raise an error.\r\n  // Fixed better in v0.10\r\n  if (req.outputData)\r\n    req.outputData.length = 0;\r\n\r\n  if (parser) {\r\n    parser.finish();\r\n    freeParser(parser, req, socket);\r\n  }\r\n}\r\n\r\nfunction socketErrorListener(err) {\r\n  const socket = this;\r\n  const req = socket._httpMessage;\r\n  debug('SOCKET ERROR:', err.message, err.stack);\r\n\r\n  if (req) {\r\n    // For Safety. Some additional errors might fire later on\r\n    // and we need to make sure we don't double-fire the error event.\r\n    req.socket._hadError = true;\r\n    req.emit('error', err);\r\n  }\r\n\r\n  const parser = socket.parser;\r\n  if (parser) {\r\n    parser.finish();\r\n    freeParser(parser, req, socket);\r\n  }\r\n\r\n  // Ensure that no further data will come out of the socket\r\n  socket.removeListener('data', socketOnData);\r\n  socket.removeListener('end', socketOnEnd);\r\n  socket.destroy();\r\n}\r\n\r\nfunction socketOnEnd() {\r\n  const socket = this;\r\n  const req = this._httpMessage;\r\n  const parser = this.parser;\r\n\r\n  if (!req.res && !req.socket._hadError) {\r\n    // If we don't have a response then we know that the socket\r\n    // ended prematurely and we need to emit an error on the request.\r\n    req.socket._hadError = true;\r\n    req.emit('error', connResetException('socket hang up'));\r\n  }\r\n  if (parser) {\r\n    parser.finish();\r\n    freeParser(parser, req, socket);\r\n  }\r\n  socket.destroy();\r\n}\r\n\r\nfunction socketOnData(d) {\r\n  const socket = this;\r\n  const req = this._httpMessage;\r\n  const parser = this.parser;\r\n\r\n  assert(parser && parser.socket === socket);\r\n\r\n  const ret = parser.execute(d);\r\n  if (ret instanceof Error) {\r\n    prepareError(ret, parser, d);\r\n    debug('parse error', ret);\r\n    freeParser(parser, req, socket);\r\n    socket.removeListener('data', socketOnData);\r\n    socket.removeListener('end', socketOnEnd);\r\n    socket.destroy();\r\n    req.socket._hadError = true;\r\n    req.emit('error', ret);\r\n  } else if (parser.incoming && parser.incoming.upgrade) {\r\n    // Upgrade (if status code 101) or CONNECT\r\n    const bytesParsed = ret;\r\n    const res = parser.incoming;\r\n    req.res = res;\r\n\r\n    socket.removeListener('data', socketOnData);\r\n    socket.removeListener('end', socketOnEnd);\r\n    socket.removeListener('drain', ondrain);\r\n\r\n    if (req.timeoutCb) socket.removeListener('timeout', req.timeoutCb);\r\n    socket.removeListener('timeout', responseOnTimeout);\r\n\r\n    parser.finish();\r\n    freeParser(parser, req, socket);\r\n\r\n    const bodyHead = TypedArrayPrototypeSlice(d, bytesParsed, d.length);\r\n\r\n    const eventName = req.method === 'CONNECT' ? 'connect' : 'upgrade';\r\n    if (req.listenerCount(eventName) > 0) {\r\n      req.upgradeOrConnect = true;\r\n\r\n      // detach the socket\r\n      socket.emit('agentRemove');\r\n      socket.removeListener('close', socketCloseListener);\r\n      socket.removeListener('error', socketErrorListener);\r\n\r\n      socket._httpMessage = null;\r\n      socket.readableFlowing = null;\r\n\r\n      req.emit(eventName, res, socket, bodyHead);\r\n      req.destroyed = true;\r\n      req._closed = true;\r\n      req.emit('close');\r\n    } else {\r\n      // Requested Upgrade or used CONNECT method, but have no handler.\r\n      socket.destroy();\r\n    }\r\n  } else if (parser.incoming && parser.incoming.complete &&\r\n             // When the status code is informational (100, 102-199),\r\n             // the server will send a final response after this client\r\n             // sends a request body, so we must not free the parser.\r\n             // 101 (Switching Protocols) and all other status codes\r\n             // should be processed normally.\r\n             !statusIsInformational(parser.incoming.statusCode)) {\r\n    socket.removeListener('data', socketOnData);\r\n    socket.removeListener('end', socketOnEnd);\r\n    socket.removeListener('drain', ondrain);\r\n    freeParser(parser, req, socket);\r\n  }\r\n}\r\n\r\nfunction statusIsInformational(status) {\r\n  // 100 (Continue)    RFC7231 Section 6.2.1\r\n  // 102 (Processing)  RFC2518\r\n  // 103 (Early Hints) RFC8297\r\n  // 104-199 (Unassigned)\r\n  return (status < 200 && status >= 100 && status !== 101);\r\n}\r\n\r\n// client\r\nfunction parserOnIncomingClient(res, shouldKeepAlive) {\r\n  const socket = this.socket;\r\n  const req = socket._httpMessage;\r\n\r\n  debug('AGENT incoming response!');\r\n\r\n  if (req.res) {\r\n    // We already have a response object, this means the server\r\n    // sent a double response.\r\n    socket.destroy();\r\n    return 0;  // No special treatment.\r\n  }\r\n  req.res = res;\r\n\r\n  // Skip body and treat as Upgrade.\r\n  if (res.upgrade)\r\n    return 2;\r\n\r\n  // Responses to CONNECT request is handled as Upgrade.\r\n  const method = req.method;\r\n  if (method === 'CONNECT') {\r\n    res.upgrade = true;\r\n    return 2;  // Skip body and treat as Upgrade.\r\n  }\r\n\r\n  if (statusIsInformational(res.statusCode)) {\r\n    // Restart the parser, as this is a 1xx informational message.\r\n    req.res = null; // Clear res so that we don't hit double-responses.\r\n    // Maintain compatibility by sending 100-specific events\r\n    if (res.statusCode === 100) {\r\n      req.emit('continue');\r\n    }\r\n    // Send information events to all 1xx responses except 101 Upgrade.\r\n    req.emit('information', {\r\n      statusCode: res.statusCode,\r\n      statusMessage: res.statusMessage,\r\n      httpVersion: res.httpVersion,\r\n      httpVersionMajor: res.httpVersionMajor,\r\n      httpVersionMinor: res.httpVersionMinor,\r\n      headers: res.headers,\r\n      rawHeaders: res.rawHeaders\r\n    });\r\n\r\n    return 1;  // Skip body but don't treat as Upgrade.\r\n  }\r\n\r\n  if (req.shouldKeepAlive && !shouldKeepAlive && !req.upgradeOrConnect) {\r\n    // Server MUST respond with Connection:keep-alive for us to enable it.\r\n    // If we've been upgraded (via WebSockets) we also shouldn't try to\r\n    // keep the connection open.\r\n    req.shouldKeepAlive = false;\r\n  }\r\n\r\n  DTRACE_HTTP_CLIENT_RESPONSE(socket, req);\r\n  if (req[kClientRequestStatistics] && hasObserver('http')) {\r\n    stopPerf(req, kClientRequestStatistics, {\r\n      detail: {\r\n        res: {\r\n          statusCode: res.statusCode,\r\n          statusMessage: res.statusMessage,\r\n          headers: res.headers,\r\n        },\r\n      },\r\n    });\r\n  }\r\n  if (onClientResponseFinishChannel.hasSubscribers) {\r\n    onClientResponseFinishChannel.publish({\r\n      request: req,\r\n      response: res,\r\n    });\r\n  }\r\n  if (isTraceHTTPEnabled() && typeof req._traceEventId === 'number') {\r\n    traceEnd(HTTP_CLIENT_TRACE_EVENT_NAME, req._traceEventId, {\r\n      path: req.path,\r\n      statusCode: res.statusCode,\r\n    });\r\n  }\r\n  req.res = res;\r\n  res.req = req;\r\n\r\n  // Add our listener first, so that we guarantee socket cleanup\r\n  res.on('end', responseOnEnd);\r\n  req.on('finish', requestOnFinish);\r\n  socket.on('timeout', responseOnTimeout);\r\n\r\n  // If the user did not listen for the 'response' event, then they\r\n  // can't possibly read the data, so we ._dump() it into the void\r\n  // so that the socket doesn't hang there in a paused state.\r\n  if (req.aborted || !req.emit('response', res))\r\n    res._dump();\r\n\r\n  if (method === 'HEAD')\r\n    return 1;  // Skip body but don't treat as Upgrade.\r\n\r\n  if (res.statusCode === 304) {\r\n    res.complete = true;\r\n    return 1; // Skip body as there won't be any\r\n  }\r\n\r\n  return 0;  // No special treatment.\r\n}\r\n\r\n// client\r\nfunction responseKeepAlive(req) {\r\n  const socket = req.socket;\r\n\r\n  debug('AGENT socket keep-alive');\r\n  if (req.timeoutCb) {\r\n    socket.setTimeout(0, req.timeoutCb);\r\n    req.timeoutCb = null;\r\n  }\r\n  socket.removeListener('close', socketCloseListener);\r\n  socket.removeListener('error', socketErrorListener);\r\n  socket.removeListener('data', socketOnData);\r\n  socket.removeListener('end', socketOnEnd);\r\n\r\n  // TODO(ronag): Between here and emitFreeNT the socket\r\n  // has no 'error' handler.\r\n\r\n  // There are cases where _handle === null. Avoid those. Passing undefined to\r\n  // nextTick() will call getDefaultTriggerAsyncId() to retrieve the id.\r\n  const asyncId = socket._handle ? socket._handle.getAsyncId() : undefined;\r\n  // Mark this socket as available, AFTER user-added end\r\n  // handlers have a chance to run.\r\n  defaultTriggerAsyncIdScope(asyncId, process.nextTick, emitFreeNT, req);\r\n\r\n  req.destroyed = true;\r\n  if (req.res) {\r\n    // Detach socket from IncomingMessage to avoid destroying the freed\r\n    // socket in IncomingMessage.destroy().\r\n    req.res.socket = null;\r\n  }\r\n}\r\n\r\nfunction responseOnEnd() {\r\n  const req = this.req;\r\n  const socket = req.socket;\r\n\r\n  if (socket) {\r\n    if (req.timeoutCb) socket.removeListener('timeout', emitRequestTimeout);\r\n    socket.removeListener('timeout', responseOnTimeout);\r\n  }\r\n\r\n  req._ended = true;\r\n\r\n  if (!req.shouldKeepAlive) {\r\n    if (socket.writable) {\r\n      debug('AGENT socket.destroySoon()');\r\n      if (typeof socket.destroySoon === 'function')\r\n        socket.destroySoon();\r\n      else\r\n        socket.end();\r\n    }\r\n    assert(!socket.writable);\r\n  } else if (req.writableFinished && !this.aborted) {\r\n    assert(req.finished);\r\n    // We can assume `req.finished` means all data has been written since:\r\n    // - `'responseOnEnd'` means we have been assigned a socket.\r\n    // - when we have a socket we write directly to it without buffering.\r\n    // - `req.finished` means `end()` has been called and no further data.\r\n    //   can be written\r\n    // In addition, `req.writableFinished` means all data written has been\r\n    // accepted by the kernel. (i.e. the `req.socket` is drained).Without\r\n    // this constraint, we may assign a non drained socket to a request.\r\n    responseKeepAlive(req);\r\n  }\r\n}\r\n\r\nfunction responseOnTimeout() {\r\n  const req = this._httpMessage;\r\n  if (!req) return;\r\n  const res = req.res;\r\n  if (!res) return;\r\n  res.emit('timeout');\r\n}\r\n\r\n// This function is necessary in the case where we receive the entire reponse\r\n// from server before we finish sending out the request\r\nfunction requestOnFinish() {\r\n  const req = this;\r\n\r\n  if (req.shouldKeepAlive && req._ended)\r\n    responseKeepAlive(req);\r\n}\r\n\r\nfunction emitFreeNT(req) {\r\n  req._closed = true;\r\n  req.emit('close');\r\n  if (req.socket) {\r\n    req.socket.emit('free');\r\n  }\r\n}\r\n\r\nfunction tickOnSocket(req, socket) {\r\n  const parser = parsers.alloc();\r\n  req.socket = socket;\r\n  const lenient = req.insecureHTTPParser === undefined ?\r\n    isLenient() : req.insecureHTTPParser;\r\n  parser.initialize(HTTPParser.RESPONSE,\r\n                    new HTTPClientAsyncResource('HTTPINCOMINGMESSAGE', req),\r\n                    req.maxHeaderSize || 0,\r\n                    lenient ? kLenientAll : kLenientNone);\r\n  parser.socket = socket;\r\n  parser.outgoing = req;\r\n  req.parser = parser;\r\n\r\n  socket.parser = parser;\r\n  socket._httpMessage = req;\r\n\r\n  // Propagate headers limit from request object to parser\r\n  if (typeof req.maxHeadersCount === 'number') {\r\n    parser.maxHeaderPairs = req.maxHeadersCount << 1;\r\n  }\r\n\r\n  parser.joinDuplicateHeaders = req.joinDuplicateHeaders;\r\n\r\n  parser.onIncoming = parserOnIncomingClient;\r\n  socket.on('error', socketErrorListener);\r\n  socket.on('data', socketOnData);\r\n  socket.on('end', socketOnEnd);\r\n  socket.on('close', socketCloseListener);\r\n  socket.on('drain', ondrain);\r\n\r\n  if (\r\n    req.timeout !== undefined ||\r\n    (req.agent && req.agent.options && req.agent.options.timeout)\r\n  ) {\r\n    listenSocketTimeout(req);\r\n  }\r\n  req.emit('socket', socket);\r\n}\r\n\r\nfunction emitRequestTimeout() {\r\n  const req = this._httpMessage;\r\n  if (req) {\r\n    req.emit('timeout');\r\n  }\r\n}\r\n\r\nfunction listenSocketTimeout(req) {\r\n  if (req.timeoutCb) {\r\n    return;\r\n  }\r\n  // Set timeoutCb so it will get cleaned up on request end.\r\n  req.timeoutCb = emitRequestTimeout;\r\n  // Delegate socket timeout event.\r\n  if (req.socket) {\r\n    req.socket.once('timeout', emitRequestTimeout);\r\n  } else {\r\n    req.on('socket', (socket) => {\r\n      socket.once('timeout', emitRequestTimeout);\r\n    });\r\n  }\r\n}\r\n\r\nClientRequest.prototype.onSocket = function onSocket(socket, err) {\r\n  // TODO(ronag): Between here and onSocketNT the socket\r\n  // has no 'error' handler.\r\n  process.nextTick(onSocketNT, this, socket, err);\r\n};\r\n\r\nfunction onSocketNT(req, socket, err) {\r\n  if (req.destroyed || err) {\r\n    req.destroyed = true;\r\n\r\n    function _destroy(req, err) {\r\n      if (!req.aborted && !err) {\r\n        err = connResetException('socket hang up');\r\n      }\r\n      if (err) {\r\n        req.emit('error', err);\r\n      }\r\n      req._closed = true;\r\n      req.emit('close');\r\n    }\r\n\r\n    if (socket) {\r\n      if (!err && req.agent && !socket.destroyed) {\r\n        socket.emit('free');\r\n      } else {\r\n        finished(socket.destroy(err || req[kError]), (er) => {\r\n          if (er?.code === 'ERR_STREAM_PREMATURE_CLOSE') {\r\n            er = null;\r\n          }\r\n          _destroy(req, er || err);\r\n        });\r\n        return;\r\n      }\r\n    }\r\n\r\n    _destroy(req, err || req[kError]);\r\n  } else {\r\n    tickOnSocket(req, socket);\r\n    req._flush();\r\n  }\r\n}\r\n\r\nClientRequest.prototype._deferToConnect = _deferToConnect;\r\nfunction _deferToConnect(method, arguments_) {\r\n  // This function is for calls that need to happen once the socket is\r\n  // assigned to this request and writable. It's an important promisy\r\n  // thing for all the socket calls that happen either now\r\n  // (when a socket is assigned) or in the future (when a socket gets\r\n  // assigned out of the pool and is eventually writable).\r\n\r\n  const callSocketMethod = () => {\r\n    if (method)\r\n      ReflectApply(this.socket[method], this.socket, arguments_);\r\n  };\r\n\r\n  const onSocket = () => {\r\n    if (this.socket.writable) {\r\n      callSocketMethod();\r\n    } else {\r\n      this.socket.once('connect', callSocketMethod);\r\n    }\r\n  };\r\n\r\n  if (!this.socket) {\r\n    this.once('socket', onSocket);\r\n  } else {\r\n    onSocket();\r\n  }\r\n}\r\n\r\nClientRequest.prototype.setTimeout = function setTimeout(msecs, callback) {\r\n  if (this._ended) {\r\n    return this;\r\n  }\r\n\r\n  listenSocketTimeout(this);\r\n  msecs = getTimerDuration(msecs, 'msecs');\r\n  if (callback) this.once('timeout', callback);\r\n\r\n  if (this.socket) {\r\n    setSocketTimeout(this.socket, msecs);\r\n  } else {\r\n    this.once('socket', (sock) => setSocketTimeout(sock, msecs));\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\nfunction setSocketTimeout(sock, msecs) {\r\n  if (sock.connecting) {\r\n    sock.once('connect', function() {\r\n      sock.setTimeout(msecs);\r\n    });\r\n  } else {\r\n    sock.setTimeout(msecs);\r\n  }\r\n}\r\n\r\nClientRequest.prototype.setNoDelay = function setNoDelay(noDelay) {\r\n  this._deferToConnect('setNoDelay', [noDelay]);\r\n};\r\n\r\nClientRequest.prototype.setSocketKeepAlive =\r\n    function setSocketKeepAlive(enable, initialDelay) {\r\n      this._deferToConnect('setKeepAlive', [enable, initialDelay]);\r\n    };\r\n\r\nClientRequest.prototype.clearTimeout = function clearTimeout(cb) {\r\n  this.setTimeout(0, cb);\r\n};\r\n\r\nmodule.exports = {\r\n  ClientRequest\r\n};\r\n",
    "name": "node:_http_client",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 510,
    "sourcePositions": []
  },
  {
    "url": "node:_http_common",
    "source": "// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n'use strict';\r\n\r\nconst {\r\n  MathMin,\r\n  Symbol,\r\n  RegExpPrototypeExec,\r\n} = primordials;\r\nconst { setImmediate } = require('timers');\r\n\r\nconst { methods, HTTPParser } = internalBinding('http_parser');\r\nconst { getOptionValue } = require('internal/options');\r\nconst insecureHTTPParser = getOptionValue('--insecure-http-parser');\r\n\r\nconst FreeList = require('internal/freelist');\r\nconst incoming = require('_http_incoming');\r\nconst {\r\n  IncomingMessage,\r\n  readStart,\r\n  readStop\r\n} = incoming;\r\n\r\nconst kIncomingMessage = Symbol('IncomingMessage');\r\nconst kOnMessageBegin = HTTPParser.kOnMessageBegin | 0;\r\nconst kOnHeaders = HTTPParser.kOnHeaders | 0;\r\nconst kOnHeadersComplete = HTTPParser.kOnHeadersComplete | 0;\r\nconst kOnBody = HTTPParser.kOnBody | 0;\r\nconst kOnMessageComplete = HTTPParser.kOnMessageComplete | 0;\r\nconst kOnExecute = HTTPParser.kOnExecute | 0;\r\nconst kOnTimeout = HTTPParser.kOnTimeout | 0;\r\n\r\nconst MAX_HEADER_PAIRS = 2000;\r\n\r\n// Only called in the slow case where slow means\r\n// that the request headers were either fragmented\r\n// across multiple TCP packets or too large to be\r\n// processed in a single run. This method is also\r\n// called to process trailing HTTP headers.\r\nfunction parserOnHeaders(headers, url) {\r\n  // Once we exceeded headers limit - stop collecting them\r\n  if (this.maxHeaderPairs <= 0 ||\r\n      this._headers.length < this.maxHeaderPairs) {\r\n    this._headers.push(...headers);\r\n  }\r\n  this._url += url;\r\n}\r\n\r\n// `headers` and `url` are set only if .onHeaders() has not been called for\r\n// this request.\r\n// `url` is not set for response parsers but that's not applicable here since\r\n// all our parsers are request parsers.\r\nfunction parserOnHeadersComplete(versionMajor, versionMinor, headers, method,\r\n                                 url, statusCode, statusMessage, upgrade,\r\n                                 shouldKeepAlive) {\r\n  const parser = this;\r\n  const { socket } = parser;\r\n\r\n  if (headers === undefined) {\r\n    headers = parser._headers;\r\n    parser._headers = [];\r\n  }\r\n\r\n  if (url === undefined) {\r\n    url = parser._url;\r\n    parser._url = '';\r\n  }\r\n\r\n  // Parser is also used by http client\r\n  const ParserIncomingMessage = (socket && socket.server &&\r\n                                 socket.server[kIncomingMessage]) ||\r\n                                 IncomingMessage;\r\n\r\n  const incoming = parser.incoming = new ParserIncomingMessage(socket);\r\n  incoming.httpVersionMajor = versionMajor;\r\n  incoming.httpVersionMinor = versionMinor;\r\n  incoming.httpVersion = `${versionMajor}.${versionMinor}`;\r\n  incoming.joinDuplicateHeaders = socket?.server?.joinDuplicateHeaders ||\r\n                                  parser.joinDuplicateHeaders;\r\n  incoming.url = url;\r\n  incoming.upgrade = upgrade;\r\n\r\n  let n = headers.length;\r\n\r\n  // If parser.maxHeaderPairs <= 0 assume that there's no limit.\r\n  if (parser.maxHeaderPairs > 0)\r\n    n = MathMin(n, parser.maxHeaderPairs);\r\n\r\n  incoming._addHeaderLines(headers, n);\r\n\r\n  if (typeof method === 'number') {\r\n    // server only\r\n    incoming.method = methods[method];\r\n  } else {\r\n    // client only\r\n    incoming.statusCode = statusCode;\r\n    incoming.statusMessage = statusMessage;\r\n  }\r\n\r\n  return parser.onIncoming(incoming, shouldKeepAlive);\r\n}\r\n\r\nfunction parserOnBody(b) {\r\n  const stream = this.incoming;\r\n\r\n  // If the stream has already been removed, then drop it.\r\n  if (stream === null)\r\n    return;\r\n\r\n  // Pretend this was the result of a stream._read call.\r\n  if (!stream._dumped) {\r\n    const ret = stream.push(b);\r\n    if (!ret)\r\n      readStop(this.socket);\r\n  }\r\n}\r\n\r\nfunction parserOnMessageComplete() {\r\n  const parser = this;\r\n  const stream = parser.incoming;\r\n\r\n  if (stream !== null) {\r\n    stream.complete = true;\r\n    // Emit any trailing headers.\r\n    const headers = parser._headers;\r\n    if (headers.length) {\r\n      stream._addHeaderLines(headers, headers.length);\r\n      parser._headers = [];\r\n      parser._url = '';\r\n    }\r\n\r\n    // For emit end event\r\n    stream.push(null);\r\n  }\r\n\r\n  // Force to read the next incoming message\r\n  readStart(parser.socket);\r\n}\r\n\r\n\r\nconst parsers = new FreeList('parsers', 1000, function parsersCb() {\r\n  const parser = new HTTPParser();\r\n\r\n  cleanParser(parser);\r\n\r\n  parser[kOnHeaders] = parserOnHeaders;\r\n  parser[kOnHeadersComplete] = parserOnHeadersComplete;\r\n  parser[kOnBody] = parserOnBody;\r\n  parser[kOnMessageComplete] = parserOnMessageComplete;\r\n\r\n  return parser;\r\n});\r\n\r\nfunction closeParserInstance(parser) { parser.close(); }\r\n\r\n// Free the parser and also break any links that it\r\n// might have to any other things.\r\n// TODO: All parser data should be attached to a\r\n// single object, so that it can be easily cleaned\r\n// up by doing `parser.data = {}`, which should\r\n// be done in FreeList.free.  `parsers.free(parser)`\r\n// should be all that is needed.\r\nfunction freeParser(parser, req, socket) {\r\n  if (parser) {\r\n    if (parser._consumed)\r\n      parser.unconsume();\r\n    cleanParser(parser);\r\n    parser.remove();\r\n    if (parsers.free(parser) === false) {\r\n      // Make sure the parser's stack has unwound before deleting the\r\n      // corresponding C++ object through .close().\r\n      setImmediate(closeParserInstance, parser);\r\n    } else {\r\n      // Since the Parser destructor isn't going to run the destroy() callbacks\r\n      // it needs to be triggered manually.\r\n      parser.free();\r\n    }\r\n  }\r\n  if (req) {\r\n    req.parser = null;\r\n  }\r\n  if (socket) {\r\n    socket.parser = null;\r\n  }\r\n}\r\n\r\nconst tokenRegExp = /^[\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]+$/;\r\n/**\r\n * Verifies that the given val is a valid HTTP token\r\n * per the rules defined in RFC 7230\r\n * See https://tools.ietf.org/html/rfc7230#section-3.2.6\r\n */\r\nfunction checkIsHttpToken(val) {\r\n  return RegExpPrototypeExec(tokenRegExp, val) !== null;\r\n}\r\n\r\nconst headerCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\r\n/**\r\n * True if val contains an invalid field-vchar\r\n *  field-value    = *( field-content / obs-fold )\r\n *  field-content  = field-vchar [ 1*( SP / HTAB ) field-vchar ]\r\n *  field-vchar    = VCHAR / obs-text\r\n */\r\nfunction checkInvalidHeaderChar(val) {\r\n  return RegExpPrototypeExec(headerCharRegex, val) !== null;\r\n}\r\n\r\nfunction cleanParser(parser) {\r\n  parser._headers = [];\r\n  parser._url = '';\r\n  parser.socket = null;\r\n  parser.incoming = null;\r\n  parser.outgoing = null;\r\n  parser.maxHeaderPairs = MAX_HEADER_PAIRS;\r\n  parser[kOnMessageBegin] = null;\r\n  parser[kOnExecute] = null;\r\n  parser[kOnTimeout] = null;\r\n  parser._consumed = false;\r\n  parser.onIncoming = null;\r\n}\r\n\r\nfunction prepareError(err, parser, rawPacket) {\r\n  err.rawPacket = rawPacket || parser.getCurrentBuffer();\r\n  if (typeof err.reason === 'string')\r\n    err.message = `Parse Error: ${err.reason}`;\r\n}\r\n\r\nlet warnedLenient = false;\r\n\r\nfunction isLenient() {\r\n  if (insecureHTTPParser && !warnedLenient) {\r\n    warnedLenient = true;\r\n    process.emitWarning('Using insecure HTTP parsing');\r\n  }\r\n  return insecureHTTPParser;\r\n}\r\n\r\nmodule.exports = {\r\n  _checkInvalidHeaderChar: checkInvalidHeaderChar,\r\n  _checkIsHttpToken: checkIsHttpToken,\r\n  chunkExpression: /(?:^|\\W)chunked(?:$|\\W)/i,\r\n  continueExpression: /(?:^|\\W)100-continue(?:$|\\W)/i,\r\n  CRLF: '\\r\\n', // TODO: Deprecate this.\r\n  freeParser,\r\n  methods,\r\n  parsers,\r\n  kIncomingMessage,\r\n  HTTPParser,\r\n  isLenient,\r\n  prepareError,\r\n};\r\n",
    "name": "node:_http_common",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 511,
    "sourcePositions": []
  },
  {
    "url": "node:internal/freelist",
    "source": "'use strict';\r\n\r\nconst {\r\n  ReflectApply,\r\n} = primordials;\r\n\r\nclass FreeList {\r\n  constructor(name, max, ctor) {\r\n    this.name = name;\r\n    this.ctor = ctor;\r\n    this.max = max;\r\n    this.list = [];\r\n  }\r\n\r\n  alloc() {\r\n    return this.list.length > 0 ?\r\n      this.list.pop() :\r\n      ReflectApply(this.ctor, this, arguments);\r\n  }\r\n\r\n  free(obj) {\r\n    if (this.list.length < this.max) {\r\n      this.list.push(obj);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\nmodule.exports = FreeList;\r\n",
    "name": "freelist",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 512,
    "sourcePositions": []
  },
  {
    "url": "node:_http_incoming",
    "source": "// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n'use strict';\r\n\r\nconst {\r\n  ObjectDefineProperty,\r\n  ObjectSetPrototypeOf,\r\n  StringPrototypeCharCodeAt,\r\n  StringPrototypeSlice,\r\n  StringPrototypeToLowerCase,\r\n  Symbol\r\n} = primordials;\r\n\r\nconst { Readable, finished } = require('stream');\r\n\r\nconst kHeaders = Symbol('kHeaders');\r\nconst kHeadersDistinct = Symbol('kHeadersDistinct');\r\nconst kHeadersCount = Symbol('kHeadersCount');\r\nconst kTrailers = Symbol('kTrailers');\r\nconst kTrailersDistinct = Symbol('kTrailersDistinct');\r\nconst kTrailersCount = Symbol('kTrailersCount');\r\n\r\nfunction readStart(socket) {\r\n  if (socket && !socket._paused && socket.readable)\r\n    socket.resume();\r\n}\r\n\r\nfunction readStop(socket) {\r\n  if (socket)\r\n    socket.pause();\r\n}\r\n\r\n/* Abstract base class for ServerRequest and ClientResponse. */\r\nfunction IncomingMessage(socket) {\r\n  let streamOptions;\r\n\r\n  if (socket) {\r\n    streamOptions = {\r\n      highWaterMark: socket.readableHighWaterMark\r\n    };\r\n  }\r\n\r\n  Readable.call(this, streamOptions);\r\n\r\n  this._readableState.readingMore = true;\r\n\r\n  this.socket = socket;\r\n\r\n  this.httpVersionMajor = null;\r\n  this.httpVersionMinor = null;\r\n  this.httpVersion = null;\r\n  this.complete = false;\r\n  this[kHeaders] = null;\r\n  this[kHeadersCount] = 0;\r\n  this.rawHeaders = [];\r\n  this[kTrailers] = null;\r\n  this[kTrailersCount] = 0;\r\n  this.rawTrailers = [];\r\n  this.joinDuplicateHeaders = false;\r\n  this.aborted = false;\r\n\r\n  this.upgrade = null;\r\n\r\n  // request (server) only\r\n  this.url = '';\r\n  this.method = null;\r\n\r\n  // response (client) only\r\n  this.statusCode = null;\r\n  this.statusMessage = null;\r\n  this.client = socket;\r\n\r\n  this._consuming = false;\r\n  // Flag for when we decide that this message cannot possibly be\r\n  // read by the user, so there's no point continuing to handle it.\r\n  this._dumped = false;\r\n}\r\nObjectSetPrototypeOf(IncomingMessage.prototype, Readable.prototype);\r\nObjectSetPrototypeOf(IncomingMessage, Readable);\r\n\r\nObjectDefineProperty(IncomingMessage.prototype, 'connection', {\r\n  __proto__: null,\r\n  get: function() {\r\n    return this.socket;\r\n  },\r\n  set: function(val) {\r\n    this.socket = val;\r\n  }\r\n});\r\n\r\nObjectDefineProperty(IncomingMessage.prototype, 'headers', {\r\n  __proto__: null,\r\n  get: function() {\r\n    if (!this[kHeaders]) {\r\n      this[kHeaders] = {};\r\n\r\n      const src = this.rawHeaders;\r\n      const dst = this[kHeaders];\r\n\r\n      for (let n = 0; n < this[kHeadersCount]; n += 2) {\r\n        this._addHeaderLine(src[n + 0], src[n + 1], dst);\r\n      }\r\n    }\r\n    return this[kHeaders];\r\n  },\r\n  set: function(val) {\r\n    this[kHeaders] = val;\r\n  }\r\n});\r\n\r\nObjectDefineProperty(IncomingMessage.prototype, 'headersDistinct', {\r\n  __proto__: null,\r\n  get: function() {\r\n    if (!this[kHeadersDistinct]) {\r\n      this[kHeadersDistinct] = {};\r\n\r\n      const src = this.rawHeaders;\r\n      const dst = this[kHeadersDistinct];\r\n\r\n      for (let n = 0; n < this[kHeadersCount]; n += 2) {\r\n        this._addHeaderLineDistinct(src[n + 0], src[n + 1], dst);\r\n      }\r\n    }\r\n    return this[kHeadersDistinct];\r\n  },\r\n  set: function(val) {\r\n    this[kHeadersDistinct] = val;\r\n  }\r\n});\r\n\r\nObjectDefineProperty(IncomingMessage.prototype, 'trailers', {\r\n  __proto__: null,\r\n  get: function() {\r\n    if (!this[kTrailers]) {\r\n      this[kTrailers] = {};\r\n\r\n      const src = this.rawTrailers;\r\n      const dst = this[kTrailers];\r\n\r\n      for (let n = 0; n < this[kTrailersCount]; n += 2) {\r\n        this._addHeaderLine(src[n + 0], src[n + 1], dst);\r\n      }\r\n    }\r\n    return this[kTrailers];\r\n  },\r\n  set: function(val) {\r\n    this[kTrailers] = val;\r\n  }\r\n});\r\n\r\nObjectDefineProperty(IncomingMessage.prototype, 'trailersDistinct', {\r\n  __proto__: null,\r\n  get: function() {\r\n    if (!this[kTrailersDistinct]) {\r\n      this[kTrailersDistinct] = {};\r\n\r\n      const src = this.rawTrailers;\r\n      const dst = this[kTrailersDistinct];\r\n\r\n      for (let n = 0; n < this[kTrailersCount]; n += 2) {\r\n        this._addHeaderLineDistinct(src[n + 0], src[n + 1], dst);\r\n      }\r\n    }\r\n    return this[kTrailersDistinct];\r\n  },\r\n  set: function(val) {\r\n    this[kTrailersDistinct] = val;\r\n  }\r\n});\r\n\r\nIncomingMessage.prototype.setTimeout = function setTimeout(msecs, callback) {\r\n  if (callback)\r\n    this.on('timeout', callback);\r\n  this.socket.setTimeout(msecs);\r\n  return this;\r\n};\r\n\r\n// Argument n cannot be factored out due to the overhead of\r\n// argument adaptor frame creation inside V8 in case that number of actual\r\n// arguments is different from expected arguments.\r\n// Ref: https://bugs.chromium.org/p/v8/issues/detail?id=10201\r\n// NOTE: Argument adapt frame issue might be solved in V8 engine v8.9.\r\n// Refactoring `n` out might be possible when V8 is upgraded to that\r\n// version.\r\n// Ref: https://v8.dev/blog/v8-release-89\r\nIncomingMessage.prototype._read = function _read(n) {\r\n  if (!this._consuming) {\r\n    this._readableState.readingMore = false;\r\n    this._consuming = true;\r\n  }\r\n\r\n  // We actually do almost nothing here, because the parserOnBody\r\n  // function fills up our internal buffer directly.  However, we\r\n  // do need to unpause the underlying socket so that it flows.\r\n  if (this.socket.readable)\r\n    readStart(this.socket);\r\n};\r\n\r\n// It's possible that the socket will be destroyed, and removed from\r\n// any messages, before ever calling this.  In that case, just skip\r\n// it, since something else is destroying this connection anyway.\r\nIncomingMessage.prototype._destroy = function _destroy(err, cb) {\r\n  if (!this.readableEnded || !this.complete) {\r\n    this.aborted = true;\r\n    this.emit('aborted');\r\n  }\r\n\r\n  // If aborted and the underlying socket is not already destroyed,\r\n  // destroy it.\r\n  // We have to check if the socket is already destroyed because finished\r\n  // does not call the callback when this method is invoked from `_http_client`\r\n  // in `test/parallel/test-http-client-spurious-aborted.js`\r\n  if (this.socket && !this.socket.destroyed && this.aborted) {\r\n    this.socket.destroy(err);\r\n    const cleanup = finished(this.socket, (e) => {\r\n      if (e?.code === 'ERR_STREAM_PREMATURE_CLOSE') {\r\n        e = null;\r\n      }\r\n      cleanup();\r\n      process.nextTick(onError, this, e || err, cb);\r\n    });\r\n  } else {\r\n    process.nextTick(onError, this, err, cb);\r\n  }\r\n};\r\n\r\nIncomingMessage.prototype._addHeaderLines = _addHeaderLines;\r\nfunction _addHeaderLines(headers, n) {\r\n  if (headers && headers.length) {\r\n    let dest;\r\n    if (this.complete) {\r\n      this.rawTrailers = headers;\r\n      this[kTrailersCount] = n;\r\n      dest = this[kTrailers];\r\n    } else {\r\n      this.rawHeaders = headers;\r\n      this[kHeadersCount] = n;\r\n      dest = this[kHeaders];\r\n    }\r\n\r\n    if (dest) {\r\n      for (let i = 0; i < n; i += 2) {\r\n        this._addHeaderLine(headers[i], headers[i + 1], dest);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// This function is used to help avoid the lowercasing of a field name if it\r\n// matches a 'traditional cased' version of a field name. It then returns the\r\n// lowercased name to both avoid calling toLowerCase() a second time and to\r\n// indicate whether the field was a 'no duplicates' field. If a field is not a\r\n// 'no duplicates' field, a `0` byte is prepended as a flag. The one exception\r\n// to this is the Set-Cookie header which is indicated by a `1` byte flag, since\r\n// it is an 'array' field and thus is treated differently in _addHeaderLines().\r\n// TODO: perhaps http_parser could be returning both raw and lowercased versions\r\n// of known header names to avoid us having to call toLowerCase() for those\r\n// headers.\r\nfunction matchKnownFields(field, lowercased) {\r\n  switch (field.length) {\r\n    case 3:\r\n      if (field === 'Age' || field === 'age') return 'age';\r\n      break;\r\n    case 4:\r\n      if (field === 'Host' || field === 'host') return 'host';\r\n      if (field === 'From' || field === 'from') return 'from';\r\n      if (field === 'ETag' || field === 'etag') return 'etag';\r\n      if (field === 'Date' || field === 'date') return '\\u0000date';\r\n      if (field === 'Vary' || field === 'vary') return '\\u0000vary';\r\n      break;\r\n    case 6:\r\n      if (field === 'Server' || field === 'server') return 'server';\r\n      if (field === 'Cookie' || field === 'cookie') return '\\u0002cookie';\r\n      if (field === 'Origin' || field === 'origin') return '\\u0000origin';\r\n      if (field === 'Expect' || field === 'expect') return '\\u0000expect';\r\n      if (field === 'Accept' || field === 'accept') return '\\u0000accept';\r\n      break;\r\n    case 7:\r\n      if (field === 'Referer' || field === 'referer') return 'referer';\r\n      if (field === 'Expires' || field === 'expires') return 'expires';\r\n      if (field === 'Upgrade' || field === 'upgrade') return '\\u0000upgrade';\r\n      break;\r\n    case 8:\r\n      if (field === 'Location' || field === 'location')\r\n        return 'location';\r\n      if (field === 'If-Match' || field === 'if-match')\r\n        return '\\u0000if-match';\r\n      break;\r\n    case 10:\r\n      if (field === 'User-Agent' || field === 'user-agent')\r\n        return 'user-agent';\r\n      if (field === 'Set-Cookie' || field === 'set-cookie')\r\n        return '\\u0001';\r\n      if (field === 'Connection' || field === 'connection')\r\n        return '\\u0000connection';\r\n      break;\r\n    case 11:\r\n      if (field === 'Retry-After' || field === 'retry-after')\r\n        return 'retry-after';\r\n      break;\r\n    case 12:\r\n      if (field === 'Content-Type' || field === 'content-type')\r\n        return 'content-type';\r\n      if (field === 'Max-Forwards' || field === 'max-forwards')\r\n        return 'max-forwards';\r\n      break;\r\n    case 13:\r\n      if (field === 'Authorization' || field === 'authorization')\r\n        return 'authorization';\r\n      if (field === 'Last-Modified' || field === 'last-modified')\r\n        return 'last-modified';\r\n      if (field === 'Cache-Control' || field === 'cache-control')\r\n        return '\\u0000cache-control';\r\n      if (field === 'If-None-Match' || field === 'if-none-match')\r\n        return '\\u0000if-none-match';\r\n      break;\r\n    case 14:\r\n      if (field === 'Content-Length' || field === 'content-length')\r\n        return 'content-length';\r\n      break;\r\n    case 15:\r\n      if (field === 'Accept-Encoding' || field === 'accept-encoding')\r\n        return '\\u0000accept-encoding';\r\n      if (field === 'Accept-Language' || field === 'accept-language')\r\n        return '\\u0000accept-language';\r\n      if (field === 'X-Forwarded-For' || field === 'x-forwarded-for')\r\n        return '\\u0000x-forwarded-for';\r\n      break;\r\n    case 16:\r\n      if (field === 'Content-Encoding' || field === 'content-encoding')\r\n        return '\\u0000content-encoding';\r\n      if (field === 'X-Forwarded-Host' || field === 'x-forwarded-host')\r\n        return '\\u0000x-forwarded-host';\r\n      break;\r\n    case 17:\r\n      if (field === 'If-Modified-Since' || field === 'if-modified-since')\r\n        return 'if-modified-since';\r\n      if (field === 'Transfer-Encoding' || field === 'transfer-encoding')\r\n        return '\\u0000transfer-encoding';\r\n      if (field === 'X-Forwarded-Proto' || field === 'x-forwarded-proto')\r\n        return '\\u0000x-forwarded-proto';\r\n      break;\r\n    case 19:\r\n      if (field === 'Proxy-Authorization' || field === 'proxy-authorization')\r\n        return 'proxy-authorization';\r\n      if (field === 'If-Unmodified-Since' || field === 'if-unmodified-since')\r\n        return 'if-unmodified-since';\r\n      break;\r\n  }\r\n  if (lowercased) {\r\n    return '\\u0000' + field;\r\n  }\r\n  return matchKnownFields(StringPrototypeToLowerCase(field), true);\r\n}\r\n// Add the given (field, value) pair to the message\r\n//\r\n// Per RFC2616, section 4.2 it is acceptable to join multiple instances of the\r\n// same header with a ', ' if the header in question supports specification of\r\n// multiple values this way. The one exception to this is the Cookie header,\r\n// which has multiple values joined with a '; ' instead. If a header's values\r\n// cannot be joined in either of these ways, we declare the first instance the\r\n// winner and drop the second. Extended header fields (those beginning with\r\n// 'x-') are always joined.\r\nIncomingMessage.prototype._addHeaderLine = _addHeaderLine;\r\nfunction _addHeaderLine(field, value, dest) {\r\n  field = matchKnownFields(field);\r\n  const flag = StringPrototypeCharCodeAt(field, 0);\r\n  if (flag === 0 || flag === 2) {\r\n    field = StringPrototypeSlice(field, 1);\r\n    // Make a delimited list\r\n    if (typeof dest[field] === 'string') {\r\n      dest[field] += (flag === 0 ? ', ' : '; ') + value;\r\n    } else {\r\n      dest[field] = value;\r\n    }\r\n  } else if (flag === 1) {\r\n    // Array header -- only Set-Cookie at the moment\r\n    if (dest['set-cookie'] !== undefined) {\r\n      dest['set-cookie'].push(value);\r\n    } else {\r\n      dest['set-cookie'] = [value];\r\n    }\r\n  } else if (this.joinDuplicateHeaders) {\r\n    // RFC 9110 https://www.rfc-editor.org/rfc/rfc9110#section-5.2\r\n    // https://github.com/nodejs/node/issues/45699\r\n    // allow authorization multiple fields\r\n    // Make a delimited list\r\n    if (dest[field] === undefined) {\r\n      dest[field] = value;\r\n    } else {\r\n      dest[field] += ', ' + value;\r\n    }\r\n  } else if (dest[field] === undefined) {\r\n    // Drop duplicates\r\n    dest[field] = value;\r\n  }\r\n}\r\n\r\nIncomingMessage.prototype._addHeaderLineDistinct = _addHeaderLineDistinct;\r\nfunction _addHeaderLineDistinct(field, value, dest) {\r\n  field = StringPrototypeToLowerCase(field);\r\n  if (!dest[field]) {\r\n    dest[field] = [value];\r\n  } else {\r\n    dest[field].push(value);\r\n  }\r\n}\r\n\r\n\r\n// Call this instead of resume() if we want to just\r\n// dump all the data to /dev/null\r\nIncomingMessage.prototype._dump = function _dump() {\r\n  if (!this._dumped) {\r\n    this._dumped = true;\r\n    // If there is buffered data, it may trigger 'data' events.\r\n    // Remove 'data' event listeners explicitly.\r\n    this.removeAllListeners('data');\r\n    this.resume();\r\n  }\r\n};\r\n\r\nfunction onError(self, error, cb) {\r\n  // This is to keep backward compatible behavior.\r\n  // An error is emitted only if there are listeners attached to the event.\r\n  if (self.listenerCount('error') === 0) {\r\n    cb();\r\n  } else {\r\n    cb(error);\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  IncomingMessage,\r\n  readStart,\r\n  readStop\r\n};\r\n",
    "name": "node:_http_incoming",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 513,
    "sourcePositions": []
  },
  {
    "url": "node:_http_outgoing",
    "source": "// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n'use strict';\r\n\r\nconst {\r\n  Array,\r\n  ArrayIsArray,\r\n  ArrayPrototypeJoin,\r\n  MathAbs,\r\n  MathFloor,\r\n  NumberPrototypeToString,\r\n  ObjectCreate,\r\n  ObjectDefineProperty,\r\n  ObjectKeys,\r\n  ObjectValues,\r\n  ObjectPrototypeHasOwnProperty,\r\n  ObjectSetPrototypeOf,\r\n  RegExpPrototypeExec,\r\n  SafeSet,\r\n  StringPrototypeToLowerCase,\r\n  Symbol,\r\n} = primordials;\r\n\r\nconst { getDefaultHighWaterMark } = require('internal/streams/state');\r\nconst assert = require('internal/assert');\r\nconst EE = require('events');\r\nconst Stream = require('stream');\r\nconst internalUtil = require('internal/util');\r\nconst { kOutHeaders, utcDate, kNeedDrain } = require('internal/http');\r\nconst { Buffer } = require('buffer');\r\nconst {\r\n  _checkIsHttpToken: checkIsHttpToken,\r\n  _checkInvalidHeaderChar: checkInvalidHeaderChar,\r\n  chunkExpression: RE_TE_CHUNKED,\r\n} = require('_http_common');\r\nconst {\r\n  defaultTriggerAsyncIdScope,\r\n  symbols: { async_id_symbol }\r\n} = require('internal/async_hooks');\r\nconst {\r\n  codes: {\r\n    ERR_HTTP_CONTENT_LENGTH_MISMATCH,\r\n    ERR_HTTP_HEADERS_SENT,\r\n    ERR_HTTP_INVALID_HEADER_VALUE,\r\n    ERR_HTTP_TRAILER_INVALID,\r\n    ERR_INVALID_HTTP_TOKEN,\r\n    ERR_INVALID_ARG_TYPE,\r\n    ERR_INVALID_ARG_VALUE,\r\n    ERR_INVALID_CHAR,\r\n    ERR_METHOD_NOT_IMPLEMENTED,\r\n    ERR_STREAM_CANNOT_PIPE,\r\n    ERR_STREAM_ALREADY_FINISHED,\r\n    ERR_STREAM_WRITE_AFTER_END,\r\n    ERR_STREAM_NULL_VALUES,\r\n    ERR_STREAM_DESTROYED\r\n  },\r\n  hideStackFrames\r\n} = require('internal/errors');\r\nconst { validateString } = require('internal/validators');\r\nconst { isUint8Array } = require('internal/util/types');\r\n\r\nlet debug = require('internal/util/debuglog').debuglog('http', (fn) => {\r\n  debug = fn;\r\n});\r\n\r\nconst HIGH_WATER_MARK = getDefaultHighWaterMark();\r\n\r\nconst kCorked = Symbol('corked');\r\nconst kUniqueHeaders = Symbol('kUniqueHeaders');\r\nconst kBytesWritten = Symbol('kBytesWritten');\r\nconst kEndCalled = Symbol('kEndCalled');\r\nconst kErrored = Symbol('errored');\r\n\r\nconst nop = () => {};\r\n\r\nconst RE_CONN_CLOSE = /(?:^|\\W)close(?:$|\\W)/i;\r\n\r\n// isCookieField performs a case-insensitive comparison of a provided string\r\n// against the word \"cookie.\" As of V8 6.6 this is faster than handrolling or\r\n// using a case-insensitive RegExp.\r\nfunction isCookieField(s) {\r\n  return s.length === 6 && StringPrototypeToLowerCase(s) === 'cookie';\r\n}\r\n\r\nfunction OutgoingMessage() {\r\n  Stream.call(this);\r\n\r\n  // Queue that holds all currently pending data, until the response will be\r\n  // assigned to the socket (until it will its turn in the HTTP pipeline).\r\n  this.outputData = [];\r\n\r\n  // `outputSize` is an approximate measure of how much data is queued on this\r\n  // response. `_onPendingData` will be invoked to update similar global\r\n  // per-connection counter. That counter will be used to pause/unpause the\r\n  // TCP socket and HTTP Parser and thus handle the backpressure.\r\n  this.outputSize = 0;\r\n\r\n  this.writable = true;\r\n  this.destroyed = false;\r\n\r\n  this._last = false;\r\n  this.chunkedEncoding = false;\r\n  this.shouldKeepAlive = true;\r\n  this.maxRequestsOnConnectionReached = false;\r\n  this._defaultKeepAlive = true;\r\n  this.useChunkedEncodingByDefault = true;\r\n  this.sendDate = false;\r\n  this._removedConnection = false;\r\n  this._removedContLen = false;\r\n  this._removedTE = false;\r\n\r\n  this.strictContentLength = false;\r\n  this[kBytesWritten] = 0;\r\n  this[kEndCalled] = false;\r\n  this._contentLength = null;\r\n  this._hasBody = true;\r\n  this._trailer = '';\r\n  this[kNeedDrain] = false;\r\n\r\n  this.finished = false;\r\n  this._headerSent = false;\r\n  this[kCorked] = 0;\r\n  this._closed = false;\r\n\r\n  this.socket = null;\r\n  this._header = null;\r\n  this[kOutHeaders] = null;\r\n\r\n  this._keepAliveTimeout = 0;\r\n\r\n  this._onPendingData = nop;\r\n\r\n  this[kErrored] = null;\r\n}\r\nObjectSetPrototypeOf(OutgoingMessage.prototype, Stream.prototype);\r\nObjectSetPrototypeOf(OutgoingMessage, Stream);\r\n\r\nObjectDefineProperty(OutgoingMessage.prototype, 'errored', {\r\n  __proto__: null,\r\n  get() {\r\n    return this[kErrored];\r\n  },\r\n});\r\n\r\nObjectDefineProperty(OutgoingMessage.prototype, 'closed', {\r\n  __proto__: null,\r\n  get() {\r\n    return this._closed;\r\n  },\r\n});\r\n\r\nObjectDefineProperty(OutgoingMessage.prototype, 'writableFinished', {\r\n  __proto__: null,\r\n  get() {\r\n    return (\r\n      this.finished &&\r\n      this.outputSize === 0 &&\r\n      (!this.socket || this.socket.writableLength === 0)\r\n    );\r\n  }\r\n});\r\n\r\nObjectDefineProperty(OutgoingMessage.prototype, 'writableObjectMode', {\r\n  __proto__: null,\r\n  get() {\r\n    return false;\r\n  }\r\n});\r\n\r\nObjectDefineProperty(OutgoingMessage.prototype, 'writableLength', {\r\n  __proto__: null,\r\n  get() {\r\n    return this.outputSize + (this.socket ? this.socket.writableLength : 0);\r\n  }\r\n});\r\n\r\nObjectDefineProperty(OutgoingMessage.prototype, 'writableHighWaterMark', {\r\n  __proto__: null,\r\n  get() {\r\n    return this.socket ? this.socket.writableHighWaterMark : HIGH_WATER_MARK;\r\n  }\r\n});\r\n\r\nObjectDefineProperty(OutgoingMessage.prototype, 'writableCorked', {\r\n  __proto__: null,\r\n  get() {\r\n    const corked = this.socket ? this.socket.writableCorked : 0;\r\n    return corked + this[kCorked];\r\n  }\r\n});\r\n\r\nObjectDefineProperty(OutgoingMessage.prototype, '_headers', {\r\n  __proto__: null,\r\n  get: internalUtil.deprecate(function() {\r\n    return this.getHeaders();\r\n  }, 'OutgoingMessage.prototype._headers is deprecated', 'DEP0066'),\r\n  set: internalUtil.deprecate(function(val) {\r\n    if (val == null) {\r\n      this[kOutHeaders] = null;\r\n    } else if (typeof val === 'object') {\r\n      const headers = this[kOutHeaders] = ObjectCreate(null);\r\n      const keys = ObjectKeys(val);\r\n      // Retain for(;;) loop for performance reasons\r\n      // Refs: https://github.com/nodejs/node/pull/30958\r\n      for (let i = 0; i < keys.length; ++i) {\r\n        const name = keys[i];\r\n        headers[StringPrototypeToLowerCase(name)] = [name, val[name]];\r\n      }\r\n    }\r\n  }, 'OutgoingMessage.prototype._headers is deprecated', 'DEP0066')\r\n});\r\n\r\nObjectDefineProperty(OutgoingMessage.prototype, 'connection', {\r\n  __proto__: null,\r\n  get: function() {\r\n    return this.socket;\r\n  },\r\n  set: function(val) {\r\n    this.socket = val;\r\n  }\r\n});\r\n\r\nObjectDefineProperty(OutgoingMessage.prototype, '_headerNames', {\r\n  __proto__: null,\r\n  get: internalUtil.deprecate(function() {\r\n    const headers = this[kOutHeaders];\r\n    if (headers !== null) {\r\n      const out = ObjectCreate(null);\r\n      const keys = ObjectKeys(headers);\r\n      // Retain for(;;) loop for performance reasons\r\n      // Refs: https://github.com/nodejs/node/pull/30958\r\n      for (let i = 0; i < keys.length; ++i) {\r\n        const key = keys[i];\r\n        const val = headers[key][0];\r\n        out[key] = val;\r\n      }\r\n      return out;\r\n    }\r\n    return null;\r\n  }, 'OutgoingMessage.prototype._headerNames is deprecated', 'DEP0066'),\r\n  set: internalUtil.deprecate(function(val) {\r\n    if (typeof val === 'object' && val !== null) {\r\n      const headers = this[kOutHeaders];\r\n      if (!headers)\r\n        return;\r\n      const keys = ObjectKeys(val);\r\n      // Retain for(;;) loop for performance reasons\r\n      // Refs: https://github.com/nodejs/node/pull/30958\r\n      for (let i = 0; i < keys.length; ++i) {\r\n        const header = headers[keys[i]];\r\n        if (header)\r\n          header[0] = val[keys[i]];\r\n      }\r\n    }\r\n  }, 'OutgoingMessage.prototype._headerNames is deprecated', 'DEP0066')\r\n});\r\n\r\n\r\nOutgoingMessage.prototype._renderHeaders = function _renderHeaders() {\r\n  if (this._header) {\r\n    throw new ERR_HTTP_HEADERS_SENT('render');\r\n  }\r\n\r\n  const headersMap = this[kOutHeaders];\r\n  const headers = {};\r\n\r\n  if (headersMap !== null) {\r\n    const keys = ObjectKeys(headersMap);\r\n    // Retain for(;;) loop for performance reasons\r\n    // Refs: https://github.com/nodejs/node/pull/30958\r\n    for (let i = 0, l = keys.length; i < l; i++) {\r\n      const key = keys[i];\r\n      headers[headersMap[key][0]] = headersMap[key][1];\r\n    }\r\n  }\r\n  return headers;\r\n};\r\n\r\nOutgoingMessage.prototype.cork = function() {\r\n  if (this.socket) {\r\n    this.socket.cork();\r\n  } else {\r\n    this[kCorked]++;\r\n  }\r\n};\r\n\r\nOutgoingMessage.prototype.uncork = function() {\r\n  if (this.socket) {\r\n    this.socket.uncork();\r\n  } else if (this[kCorked]) {\r\n    this[kCorked]--;\r\n  }\r\n};\r\n\r\nOutgoingMessage.prototype.setTimeout = function setTimeout(msecs, callback) {\r\n\r\n  if (callback) {\r\n    this.on('timeout', callback);\r\n  }\r\n\r\n  if (!this.socket) {\r\n    this.once('socket', function socketSetTimeoutOnConnect(socket) {\r\n      socket.setTimeout(msecs);\r\n    });\r\n  } else {\r\n    this.socket.setTimeout(msecs);\r\n  }\r\n  return this;\r\n};\r\n\r\n\r\n// It's possible that the socket will be destroyed, and removed from\r\n// any messages, before ever calling this.  In that case, just skip\r\n// it, since something else is destroying this connection anyway.\r\nOutgoingMessage.prototype.destroy = function destroy(error) {\r\n  if (this.destroyed) {\r\n    return this;\r\n  }\r\n  this.destroyed = true;\r\n\r\n  this[kErrored] = error;\r\n\r\n  if (this.socket) {\r\n    this.socket.destroy(error);\r\n  } else {\r\n    this.once('socket', function socketDestroyOnConnect(socket) {\r\n      socket.destroy(error);\r\n    });\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n\r\n// This abstract either writing directly to the socket or buffering it.\r\nOutgoingMessage.prototype._send = function _send(data, encoding, callback) {\r\n  // This is a shameful hack to get the headers and first body chunk onto\r\n  // the same packet. Future versions of Node are going to take care of\r\n  // this at a lower level and in a more general way.\r\n  if (!this._headerSent && this._header !== null) {\r\n    // `this._header` can be null if OutgoingMessage is used without a proper Socket\r\n    // See: /test/parallel/test-http-outgoing-message-inheritance.js\r\n    if (typeof data === 'string' &&\r\n        (encoding === 'utf8' || encoding === 'latin1' || !encoding)) {\r\n      data = this._header + data;\r\n    } else {\r\n      const header = this._header;\r\n      this.outputData.unshift({\r\n        data: header,\r\n        encoding: 'latin1',\r\n        callback: null\r\n      });\r\n      this.outputSize += header.length;\r\n      this._onPendingData(header.length);\r\n    }\r\n    this._headerSent = true;\r\n  }\r\n  return this._writeRaw(data, encoding, callback);\r\n};\r\n\r\nfunction _getMessageBodySize(chunk, headers, encoding) {\r\n  if (Buffer.isBuffer(chunk)) return chunk.length;\r\n  const chunkLength = chunk ? Buffer.byteLength(chunk, encoding) : 0;\r\n  const headerLength = headers ? headers.length : 0;\r\n  if (headerLength === chunkLength) return 0;\r\n  if (headerLength < chunkLength) return MathAbs(chunkLength - headerLength);\r\n  return chunkLength;\r\n}\r\n\r\nOutgoingMessage.prototype._writeRaw = _writeRaw;\r\nfunction _writeRaw(data, encoding, callback) {\r\n  const conn = this.socket;\r\n  if (conn && conn.destroyed) {\r\n    // The socket was destroyed. If we're still trying to write to it,\r\n    // then we haven't gotten the 'close' event yet.\r\n    return false;\r\n  }\r\n\r\n  if (typeof encoding === 'function') {\r\n    callback = encoding;\r\n    encoding = null;\r\n  }\r\n\r\n  // TODO(sidwebworks): flip the `strictContentLength` default to `true` in a future PR\r\n  if (this.strictContentLength && conn && conn.writable && !this._removedContLen && this._hasBody) {\r\n    const skip = conn._httpMessage.statusCode === 304 || (this.hasHeader('transfer-encoding') || this.chunkedEncoding);\r\n\r\n    if (typeof this._contentLength === 'number' && !skip) {\r\n      const size = _getMessageBodySize(data, conn._httpMessage._header, encoding);\r\n\r\n      if ((size + this[kBytesWritten]) > this._contentLength) {\r\n        throw new ERR_HTTP_CONTENT_LENGTH_MISMATCH(size + this[kBytesWritten], this._contentLength);\r\n      }\r\n\r\n      if (this[kEndCalled] && (size + this[kBytesWritten]) !== this._contentLength) {\r\n        throw new ERR_HTTP_CONTENT_LENGTH_MISMATCH(size + this[kBytesWritten], this._contentLength);\r\n      }\r\n\r\n      this[kBytesWritten] += size;\r\n    }\r\n  }\r\n\r\n  if (conn && conn._httpMessage === this && conn.writable) {\r\n    // There might be pending data in the this.output buffer.\r\n    if (this.outputData.length) {\r\n      this._flushOutput(conn);\r\n    }\r\n    // Directly write to socket.\r\n    return conn.write(data, encoding, callback);\r\n  }\r\n  // Buffer, as long as we're not destroyed.\r\n  this.outputData.push({ data, encoding, callback });\r\n  this.outputSize += data.length;\r\n  this._onPendingData(data.length);\r\n  return this.outputSize < HIGH_WATER_MARK;\r\n}\r\n\r\n\r\nOutgoingMessage.prototype._storeHeader = _storeHeader;\r\nfunction _storeHeader(firstLine, headers) {\r\n  // firstLine in the case of request is: 'GET /index.html HTTP/1.1\\r\\n'\r\n  // in the case of response it is: 'HTTP/1.1 200 OK\\r\\n'\r\n  const state = {\r\n    connection: false,\r\n    contLen: false,\r\n    te: false,\r\n    date: false,\r\n    expect: false,\r\n    trailer: false,\r\n    header: firstLine\r\n  };\r\n\r\n  if (headers) {\r\n    if (headers === this[kOutHeaders]) {\r\n      for (const key in headers) {\r\n        const entry = headers[key];\r\n        processHeader(this, state, entry[0], entry[1], false);\r\n      }\r\n    } else if (ArrayIsArray(headers)) {\r\n      if (headers.length && ArrayIsArray(headers[0])) {\r\n        for (let i = 0; i < headers.length; i++) {\r\n          const entry = headers[i];\r\n          processHeader(this, state, entry[0], entry[1], true);\r\n        }\r\n      } else {\r\n        if (headers.length % 2 !== 0) {\r\n          throw new ERR_INVALID_ARG_VALUE('headers', headers);\r\n        }\r\n\r\n        for (let n = 0; n < headers.length; n += 2) {\r\n          processHeader(this, state, headers[n + 0], headers[n + 1], true);\r\n        }\r\n      }\r\n    } else {\r\n      for (const key in headers) {\r\n        if (ObjectPrototypeHasOwnProperty(headers, key)) {\r\n          processHeader(this, state, key, headers[key], true);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  let { header } = state;\r\n\r\n  // Date header\r\n  if (this.sendDate && !state.date) {\r\n    header += 'Date: ' + utcDate() + '\\r\\n';\r\n  }\r\n\r\n  // Force the connection to close when the response is a 204 No Content or\r\n  // a 304 Not Modified and the user has set a \"Transfer-Encoding: chunked\"\r\n  // header.\r\n  //\r\n  // RFC 2616 mandates that 204 and 304 responses MUST NOT have a body but\r\n  // node.js used to send out a zero chunk anyway to accommodate clients\r\n  // that don't have special handling for those responses.\r\n  //\r\n  // It was pointed out that this might confuse reverse proxies to the point\r\n  // of creating security liabilities, so suppress the zero chunk and force\r\n  // the connection to close.\r\n  if (this.chunkedEncoding && (this.statusCode === 204 ||\r\n                               this.statusCode === 304)) {\r\n    debug(this.statusCode + ' response should not use chunked encoding,' +\r\n          ' closing connection.');\r\n    this.chunkedEncoding = false;\r\n    this.shouldKeepAlive = false;\r\n  }\r\n\r\n  // keep-alive logic\r\n  if (this._removedConnection) {\r\n    this._last = true;\r\n    this.shouldKeepAlive = false;\r\n  } else if (!state.connection) {\r\n    const shouldSendKeepAlive = this.shouldKeepAlive &&\r\n        (state.contLen || this.useChunkedEncodingByDefault || this.agent);\r\n    if (shouldSendKeepAlive && this.maxRequestsOnConnectionReached) {\r\n      header += 'Connection: close\\r\\n';\r\n    } else if (shouldSendKeepAlive) {\r\n      header += 'Connection: keep-alive\\r\\n';\r\n      if (this._keepAliveTimeout && this._defaultKeepAlive) {\r\n        const timeoutSeconds = MathFloor(this._keepAliveTimeout / 1000);\r\n        let max = '';\r\n        if (~~this._maxRequestsPerSocket > 0) {\r\n          max = `, max=${this._maxRequestsPerSocket}`;\r\n        }\r\n        header += `Keep-Alive: timeout=${timeoutSeconds}${max}\\r\\n`;\r\n      }\r\n    } else {\r\n      this._last = true;\r\n      header += 'Connection: close\\r\\n';\r\n    }\r\n  }\r\n\r\n  if (!state.contLen && !state.te) {\r\n    if (!this._hasBody) {\r\n      // Make sure we don't end the 0\\r\\n\\r\\n at the end of the message.\r\n      this.chunkedEncoding = false;\r\n    } else if (!this.useChunkedEncodingByDefault) {\r\n      this._last = true;\r\n    } else if (!state.trailer &&\r\n               !this._removedContLen &&\r\n               typeof this._contentLength === 'number') {\r\n      header += 'Content-Length: ' + this._contentLength + '\\r\\n';\r\n    } else if (!this._removedTE) {\r\n      header += 'Transfer-Encoding: chunked\\r\\n';\r\n      this.chunkedEncoding = true;\r\n    } else {\r\n      // We should only be able to get here if both Content-Length and\r\n      // Transfer-Encoding are removed by the user.\r\n      // See: test/parallel/test-http-remove-header-stays-removed.js\r\n      debug('Both Content-Length and Transfer-Encoding are removed');\r\n    }\r\n  }\r\n\r\n  // Test non-chunked message does not have trailer header set,\r\n  // message will be terminated by the first empty line after the\r\n  // header fields, regardless of the header fields present in the\r\n  // message, and thus cannot contain a message body or 'trailers'.\r\n  if (this.chunkedEncoding !== true && state.trailer) {\r\n    throw new ERR_HTTP_TRAILER_INVALID();\r\n  }\r\n\r\n  this._header = header + '\\r\\n';\r\n  this._headerSent = false;\r\n\r\n  // Wait until the first body chunk, or close(), is sent to flush,\r\n  // UNLESS we're sending Expect: 100-continue.\r\n  if (state.expect) this._send('');\r\n}\r\n\r\nfunction processHeader(self, state, key, value, validate) {\r\n  if (validate)\r\n    validateHeaderName(key);\r\n  if (ArrayIsArray(value)) {\r\n    if (\r\n      (value.length < 2 || !isCookieField(key)) &&\r\n      (!self[kUniqueHeaders] || !self[kUniqueHeaders].has(StringPrototypeToLowerCase(key)))\r\n    ) {\r\n      // Retain for(;;) loop for performance reasons\r\n      // Refs: https://github.com/nodejs/node/pull/30958\r\n      for (let i = 0; i < value.length; i++)\r\n        storeHeader(self, state, key, value[i], validate);\r\n      return;\r\n    }\r\n    value = ArrayPrototypeJoin(value, '; ');\r\n  }\r\n  storeHeader(self, state, key, value, validate);\r\n}\r\n\r\nfunction storeHeader(self, state, key, value, validate) {\r\n  if (validate)\r\n    validateHeaderValue(key, value);\r\n  state.header += key + ': ' + value + '\\r\\n';\r\n  matchHeader(self, state, key, value);\r\n}\r\n\r\nfunction matchHeader(self, state, field, value) {\r\n  if (field.length < 4 || field.length > 17)\r\n    return;\r\n  field = StringPrototypeToLowerCase(field);\r\n  switch (field) {\r\n    case 'connection':\r\n      state.connection = true;\r\n      self._removedConnection = false;\r\n      if (RegExpPrototypeExec(RE_CONN_CLOSE, value) !== null)\r\n        self._last = true;\r\n      else\r\n        self.shouldKeepAlive = true;\r\n      break;\r\n    case 'transfer-encoding':\r\n      state.te = true;\r\n      self._removedTE = false;\r\n      if (RegExpPrototypeExec(RE_TE_CHUNKED, value) !== null)\r\n        self.chunkedEncoding = true;\r\n      break;\r\n    case 'content-length':\r\n      state.contLen = true;\r\n      self._contentLength = value;\r\n      self._removedContLen = false;\r\n      break;\r\n    case 'date':\r\n    case 'expect':\r\n    case 'trailer':\r\n      state[field] = true;\r\n      break;\r\n    case 'keep-alive':\r\n      self._defaultKeepAlive = false;\r\n      break;\r\n  }\r\n}\r\n\r\nconst validateHeaderName = hideStackFrames((name, label) => {\r\n  if (typeof name !== 'string' || !name || !checkIsHttpToken(name)) {\r\n    throw new ERR_INVALID_HTTP_TOKEN(label || 'Header name', name);\r\n  }\r\n});\r\n\r\nconst validateHeaderValue = hideStackFrames((name, value) => {\r\n  if (value === undefined) {\r\n    throw new ERR_HTTP_INVALID_HEADER_VALUE(value, name);\r\n  }\r\n  if (checkInvalidHeaderChar(value)) {\r\n    debug('Header \"%s\" contains invalid characters', name);\r\n    throw new ERR_INVALID_CHAR('header content', name);\r\n  }\r\n});\r\n\r\nfunction parseUniqueHeadersOption(headers) {\r\n  if (!ArrayIsArray(headers)) {\r\n    return null;\r\n  }\r\n\r\n  const unique = new SafeSet();\r\n  const l = headers.length;\r\n  for (let i = 0; i < l; i++) {\r\n    unique.add(StringPrototypeToLowerCase(headers[i]));\r\n  }\r\n\r\n  return unique;\r\n}\r\n\r\nOutgoingMessage.prototype.setHeader = function setHeader(name, value) {\r\n  if (this._header) {\r\n    throw new ERR_HTTP_HEADERS_SENT('set');\r\n  }\r\n  validateHeaderName(name);\r\n  validateHeaderValue(name, value);\r\n\r\n  let headers = this[kOutHeaders];\r\n  if (headers === null)\r\n    this[kOutHeaders] = headers = ObjectCreate(null);\r\n\r\n  headers[StringPrototypeToLowerCase(name)] = [name, value];\r\n  return this;\r\n};\r\n\r\nOutgoingMessage.prototype.setHeaders = function setHeaders(headers) {\r\n  if (this._header) {\r\n    throw new ERR_HTTP_HEADERS_SENT('set');\r\n  }\r\n\r\n\r\n  if (\r\n    !headers ||\r\n    ArrayIsArray(headers) ||\r\n    typeof headers.keys !== 'function' ||\r\n    typeof headers.get !== 'function'\r\n  ) {\r\n    throw new ERR_INVALID_ARG_TYPE('headers', ['Headers', 'Map'], headers);\r\n  }\r\n\r\n  for (const key of headers.keys()) {\r\n    this.setHeader(key, headers.get(key));\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\nOutgoingMessage.prototype.appendHeader = function appendHeader(name, value) {\r\n  if (this._header) {\r\n    throw new ERR_HTTP_HEADERS_SENT('append');\r\n  }\r\n  validateHeaderName(name);\r\n  validateHeaderValue(name, value);\r\n\r\n  const field = StringPrototypeToLowerCase(name);\r\n  const headers = this[kOutHeaders];\r\n  if (headers === null || !headers[field]) {\r\n    return this.setHeader(name, value);\r\n  }\r\n\r\n  // Prepare the field for appending, if required\r\n  if (!ArrayIsArray(headers[field][1])) {\r\n    headers[field][1] = [headers[field][1]];\r\n  }\r\n\r\n  const existingValues = headers[field][1];\r\n  if (ArrayIsArray(value)) {\r\n    for (let i = 0, length = value.length; i < length; i++) {\r\n      existingValues.push(value[i]);\r\n    }\r\n  } else {\r\n    existingValues.push(value);\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n\r\nOutgoingMessage.prototype.getHeader = function getHeader(name) {\r\n  validateString(name, 'name');\r\n\r\n  const headers = this[kOutHeaders];\r\n  if (headers === null)\r\n    return;\r\n\r\n  const entry = headers[StringPrototypeToLowerCase(name)];\r\n  return entry && entry[1];\r\n};\r\n\r\n\r\n// Returns an array of the names of the current outgoing headers.\r\nOutgoingMessage.prototype.getHeaderNames = function getHeaderNames() {\r\n  return this[kOutHeaders] !== null ? ObjectKeys(this[kOutHeaders]) : [];\r\n};\r\n\r\n\r\n// Returns an array of the names of the current outgoing raw headers.\r\nOutgoingMessage.prototype.getRawHeaderNames = function getRawHeaderNames() {\r\n  const headersMap = this[kOutHeaders];\r\n  if (headersMap === null) return [];\r\n\r\n  const values = ObjectValues(headersMap);\r\n  const headers = Array(values.length);\r\n  // Retain for(;;) loop for performance reasons\r\n  // Refs: https://github.com/nodejs/node/pull/30958\r\n  for (let i = 0, l = values.length; i < l; i++) {\r\n    headers[i] = values[i][0];\r\n  }\r\n\r\n  return headers;\r\n};\r\n\r\n\r\n// Returns a shallow copy of the current outgoing headers.\r\nOutgoingMessage.prototype.getHeaders = function getHeaders() {\r\n  const headers = this[kOutHeaders];\r\n  const ret = ObjectCreate(null);\r\n  if (headers) {\r\n    const keys = ObjectKeys(headers);\r\n    // Retain for(;;) loop for performance reasons\r\n    // Refs: https://github.com/nodejs/node/pull/30958\r\n    for (let i = 0; i < keys.length; ++i) {\r\n      const key = keys[i];\r\n      const val = headers[key][1];\r\n      ret[key] = val;\r\n    }\r\n  }\r\n  return ret;\r\n};\r\n\r\n\r\nOutgoingMessage.prototype.hasHeader = function hasHeader(name) {\r\n  validateString(name, 'name');\r\n  return this[kOutHeaders] !== null &&\r\n    !!this[kOutHeaders][StringPrototypeToLowerCase(name)];\r\n};\r\n\r\n\r\nOutgoingMessage.prototype.removeHeader = function removeHeader(name) {\r\n  validateString(name, 'name');\r\n\r\n  if (this._header) {\r\n    throw new ERR_HTTP_HEADERS_SENT('remove');\r\n  }\r\n\r\n  const key = StringPrototypeToLowerCase(name);\r\n\r\n  switch (key) {\r\n    case 'connection':\r\n      this._removedConnection = true;\r\n      break;\r\n    case 'content-length':\r\n      this._removedContLen = true;\r\n      break;\r\n    case 'transfer-encoding':\r\n      this._removedTE = true;\r\n      break;\r\n    case 'date':\r\n      this.sendDate = false;\r\n      break;\r\n  }\r\n\r\n  if (this[kOutHeaders] !== null) {\r\n    delete this[kOutHeaders][key];\r\n  }\r\n};\r\n\r\n\r\nOutgoingMessage.prototype._implicitHeader = function _implicitHeader() {\r\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_implicitHeader()');\r\n};\r\n\r\nObjectDefineProperty(OutgoingMessage.prototype, 'headersSent', {\r\n  __proto__: null,\r\n  configurable: true,\r\n  enumerable: true,\r\n  get: function() { return !!this._header; }\r\n});\r\n\r\nObjectDefineProperty(OutgoingMessage.prototype, 'writableEnded', {\r\n  __proto__: null,\r\n  get: function() { return this.finished; }\r\n});\r\n\r\nObjectDefineProperty(OutgoingMessage.prototype, 'writableNeedDrain', {\r\n  __proto__: null,\r\n  get: function() {\r\n    return !this.destroyed && !this.finished && this[kNeedDrain];\r\n  }\r\n});\r\n\r\nconst crlf_buf = Buffer.from('\\r\\n');\r\nOutgoingMessage.prototype.write = function write(chunk, encoding, callback) {\r\n  if (typeof encoding === 'function') {\r\n    callback = encoding;\r\n    encoding = null;\r\n  }\r\n\r\n  const ret = write_(this, chunk, encoding, callback, false);\r\n  if (!ret)\r\n    this[kNeedDrain] = true;\r\n  return ret;\r\n};\r\n\r\nfunction onError(msg, err, callback) {\r\n  const triggerAsyncId = msg.socket ? msg.socket[async_id_symbol] : undefined;\r\n  defaultTriggerAsyncIdScope(triggerAsyncId,\r\n                             process.nextTick,\r\n                             emitErrorNt,\r\n                             msg,\r\n                             err,\r\n                             callback);\r\n}\r\n\r\nfunction emitErrorNt(msg, err, callback) {\r\n  callback(err);\r\n  if (typeof msg.emit === 'function' && !msg._closed) {\r\n    msg.emit('error', err);\r\n  }\r\n}\r\n\r\nfunction write_(msg, chunk, encoding, callback, fromEnd) {\r\n  if (typeof callback !== 'function')\r\n    callback = nop;\r\n\r\n  let len;\r\n  if (chunk === null) {\r\n    throw new ERR_STREAM_NULL_VALUES();\r\n  } else if (typeof chunk === 'string') {\r\n    len = Buffer.byteLength(chunk, encoding);\r\n  } else if (isUint8Array(chunk)) {\r\n    len = chunk.length;\r\n  } else {\r\n    throw new ERR_INVALID_ARG_TYPE(\r\n      'chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\r\n  }\r\n\r\n  let err;\r\n  if (msg.finished) {\r\n    err = new ERR_STREAM_WRITE_AFTER_END();\r\n  } else if (msg.destroyed) {\r\n    err = new ERR_STREAM_DESTROYED('write');\r\n  }\r\n\r\n  if (err) {\r\n    if (!msg.destroyed) {\r\n      onError(msg, err, callback);\r\n    } else {\r\n      process.nextTick(callback, err);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  if (!msg._header) {\r\n    if (fromEnd) {\r\n      msg._contentLength = len;\r\n    }\r\n    msg._implicitHeader();\r\n  }\r\n\r\n  if (!msg._hasBody) {\r\n    debug('This type of response MUST NOT have a body. ' +\r\n          'Ignoring write() calls.');\r\n    process.nextTick(callback);\r\n    return true;\r\n  }\r\n\r\n  if (!fromEnd && msg.socket && !msg.socket.writableCorked) {\r\n    msg.socket.cork();\r\n    process.nextTick(connectionCorkNT, msg.socket);\r\n  }\r\n\r\n  let ret;\r\n  if (msg.chunkedEncoding && chunk.length !== 0) {\r\n    msg._send(NumberPrototypeToString(len, 16), 'latin1', null);\r\n    msg._send(crlf_buf, null, null);\r\n    msg._send(chunk, encoding, null);\r\n    ret = msg._send(crlf_buf, null, callback);\r\n  } else {\r\n    ret = msg._send(chunk, encoding, callback);\r\n  }\r\n\r\n  debug('write ret = ' + ret);\r\n  return ret;\r\n}\r\n\r\n\r\nfunction connectionCorkNT(conn) {\r\n  conn.uncork();\r\n}\r\n\r\nOutgoingMessage.prototype.addTrailers = function addTrailers(headers) {\r\n  this._trailer = '';\r\n  const keys = ObjectKeys(headers);\r\n  const isArray = ArrayIsArray(headers);\r\n  // Retain for(;;) loop for performance reasons\r\n  // Refs: https://github.com/nodejs/node/pull/30958\r\n  for (let i = 0, l = keys.length; i < l; i++) {\r\n    let field, value;\r\n    const key = keys[i];\r\n    if (isArray) {\r\n      field = headers[key][0];\r\n      value = headers[key][1];\r\n    } else {\r\n      field = key;\r\n      value = headers[key];\r\n    }\r\n    validateHeaderName(field, 'Trailer name');\r\n\r\n    // Check if the field must be sent several times\r\n    const isArrayValue = ArrayIsArray(value);\r\n    if (\r\n      isArrayValue && value.length > 1 &&\r\n      (!this[kUniqueHeaders] || !this[kUniqueHeaders].has(StringPrototypeToLowerCase(field)))\r\n    ) {\r\n      for (let j = 0, l = value.length; j < l; j++) {\r\n        if (checkInvalidHeaderChar(value[j])) {\r\n          debug('Trailer \"%s\"[%d] contains invalid characters', field, j);\r\n          throw new ERR_INVALID_CHAR('trailer content', field);\r\n        }\r\n        this._trailer += field + ': ' + value[j] + '\\r\\n';\r\n      }\r\n    } else {\r\n      if (isArrayValue) {\r\n        value = ArrayPrototypeJoin(value, '; ');\r\n      }\r\n\r\n      if (checkInvalidHeaderChar(value)) {\r\n        debug('Trailer \"%s\" contains invalid characters', field);\r\n        throw new ERR_INVALID_CHAR('trailer content', field);\r\n      }\r\n      this._trailer += field + ': ' + value + '\\r\\n';\r\n    }\r\n  }\r\n};\r\n\r\nfunction onFinish(outmsg) {\r\n  if (outmsg && outmsg.socket && outmsg.socket._hadError) return;\r\n  outmsg.emit('finish');\r\n}\r\n\r\nOutgoingMessage.prototype.end = function end(chunk, encoding, callback) {\r\n  if (typeof chunk === 'function') {\r\n    callback = chunk;\r\n    chunk = null;\r\n    encoding = null;\r\n  } else if (typeof encoding === 'function') {\r\n    callback = encoding;\r\n    encoding = null;\r\n  }\r\n\r\n  this[kEndCalled] = true;\r\n\r\n  if (chunk) {\r\n    if (this.finished) {\r\n      onError(this,\r\n              new ERR_STREAM_WRITE_AFTER_END(),\r\n              typeof callback !== 'function' ? nop : callback);\r\n      return this;\r\n    }\r\n\r\n    if (this.socket) {\r\n      this.socket.cork();\r\n    }\r\n\r\n    write_(this, chunk, encoding, null, true);\r\n  } else if (this.finished) {\r\n    if (typeof callback === 'function') {\r\n      if (!this.writableFinished) {\r\n        this.on('finish', callback);\r\n      } else {\r\n        callback(new ERR_STREAM_ALREADY_FINISHED('end'));\r\n      }\r\n    }\r\n    return this;\r\n  } else if (!this._header) {\r\n    if (this.socket) {\r\n      this.socket.cork();\r\n    }\r\n\r\n    this._contentLength = 0;\r\n    this._implicitHeader();\r\n  }\r\n\r\n  if (typeof callback === 'function')\r\n    this.once('finish', callback);\r\n\r\n  const finish = onFinish.bind(undefined, this);\r\n\r\n  if (this._hasBody && this.chunkedEncoding) {\r\n    this._send('0\\r\\n' + this._trailer + '\\r\\n', 'latin1', finish);\r\n  } else if (!this._headerSent || this.writableLength || chunk) {\r\n    this._send('', 'latin1', finish);\r\n  } else {\r\n    process.nextTick(finish);\r\n  }\r\n\r\n  if (this.socket) {\r\n    // Fully uncork connection on end().\r\n    this.socket._writableState.corked = 1;\r\n    this.socket.uncork();\r\n  }\r\n  this[kCorked] = 0;\r\n\r\n  this.finished = true;\r\n\r\n  // There is the first message on the outgoing queue, and we've sent\r\n  // everything to the socket.\r\n  debug('outgoing message end.');\r\n  if (this.outputData.length === 0 &&\r\n      this.socket &&\r\n      this.socket._httpMessage === this) {\r\n    this._finish();\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n\r\n// This function is called once all user data are flushed to the socket.\r\n// Note that it has a chance that the socket is not drained.\r\nOutgoingMessage.prototype._finish = function _finish() {\r\n  assert(this.socket);\r\n  this.emit('prefinish');\r\n};\r\n\r\n\r\n// This logic is probably a bit confusing. Let me explain a bit:\r\n//\r\n// In both HTTP servers and clients it is possible to queue up several\r\n// outgoing messages. This is easiest to imagine in the case of a client.\r\n// Take the following situation:\r\n//\r\n//    req1 = client.request('GET', '/');\r\n//    req2 = client.request('POST', '/');\r\n//\r\n// When the user does\r\n//\r\n//   req2.write('hello world\\n');\r\n//\r\n// it's possible that the first request has not been completely flushed to\r\n// the socket yet. Thus the outgoing messages need to be prepared to queue\r\n// up data internally before sending it on further to the socket's queue.\r\n//\r\n// This function, _flush(), is called by both the Server and Client\r\n// to attempt to flush any pending messages out to the socket.\r\nOutgoingMessage.prototype._flush = function _flush() {\r\n  const socket = this.socket;\r\n\r\n  if (socket && socket.writable) {\r\n    // There might be remaining data in this.output; write it out\r\n    const ret = this._flushOutput(socket);\r\n\r\n    if (this.finished) {\r\n      // This is a queue to the server or client to bring in the next this.\r\n      this._finish();\r\n    } else if (ret && this[kNeedDrain]) {\r\n      this[kNeedDrain] = false;\r\n      this.emit('drain');\r\n    }\r\n  }\r\n};\r\n\r\nOutgoingMessage.prototype._flushOutput = function _flushOutput(socket) {\r\n  while (this[kCorked]) {\r\n    this[kCorked]--;\r\n    socket.cork();\r\n  }\r\n\r\n  const outputLength = this.outputData.length;\r\n  if (outputLength <= 0)\r\n    return undefined;\r\n\r\n  const outputData = this.outputData;\r\n  socket.cork();\r\n  let ret;\r\n  // Retain for(;;) loop for performance reasons\r\n  // Refs: https://github.com/nodejs/node/pull/30958\r\n  for (let i = 0; i < outputLength; i++) {\r\n    const { data, encoding, callback } = outputData[i];\r\n    ret = socket.write(data, encoding, callback);\r\n  }\r\n  socket.uncork();\r\n\r\n  this.outputData = [];\r\n  this._onPendingData(-this.outputSize);\r\n  this.outputSize = 0;\r\n\r\n  return ret;\r\n};\r\n\r\n\r\nOutgoingMessage.prototype.flushHeaders = function flushHeaders() {\r\n  if (!this._header) {\r\n    this._implicitHeader();\r\n  }\r\n\r\n  // Force-flush the headers.\r\n  this._send('');\r\n};\r\n\r\nOutgoingMessage.prototype.pipe = function pipe() {\r\n  // OutgoingMessage should be write-only. Piping from it is disabled.\r\n  this.emit('error', new ERR_STREAM_CANNOT_PIPE());\r\n};\r\n\r\nOutgoingMessage.prototype[EE.captureRejectionSymbol] =\r\nfunction(err, event) {\r\n  this.destroy(err);\r\n};\r\n\r\nmodule.exports = {\r\n  kUniqueHeaders,\r\n  parseUniqueHeadersOption,\r\n  validateHeaderName,\r\n  validateHeaderValue,\r\n  OutgoingMessage\r\n};\r\n",
    "name": "node:_http_outgoing",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 514,
    "sourcePositions": []
  },
  {
    "url": "node:internal/http",
    "source": "'use strict';\r\n\r\nconst {\r\n  Symbol,\r\n  Date,\r\n  DatePrototypeGetMilliseconds,\r\n  DatePrototypeToUTCString,\r\n} = primordials;\r\n\r\nconst { setUnrefTimeout } = require('internal/timers');\r\nconst { trace, isTraceCategoryEnabled } = internalBinding('trace_events');\r\nconst {\r\n  CHAR_LOWERCASE_B,\r\n  CHAR_LOWERCASE_E,\r\n} = require('internal/constants');\r\n\r\nlet utcCache;\r\n\r\nfunction utcDate() {\r\n  if (!utcCache) cache();\r\n  return utcCache;\r\n}\r\n\r\nfunction cache() {\r\n  const d = new Date();\r\n  utcCache = DatePrototypeToUTCString(d);\r\n  setUnrefTimeout(resetCache, 1000 - DatePrototypeGetMilliseconds(d));\r\n}\r\n\r\nfunction resetCache() {\r\n  utcCache = undefined;\r\n}\r\n\r\nlet traceEventId = 0;\r\n\r\nfunction getNextTraceEventId() {\r\n  return ++traceEventId;\r\n}\r\n\r\nfunction isTraceHTTPEnabled() {\r\n  return isTraceCategoryEnabled('node.http');\r\n}\r\n\r\nconst traceEventCategory = 'node,node.http';\r\n\r\nfunction traceBegin(...args) {\r\n  trace(CHAR_LOWERCASE_B, traceEventCategory, ...args);\r\n}\r\n\r\nfunction traceEnd(...args) {\r\n  trace(CHAR_LOWERCASE_E, traceEventCategory, ...args);\r\n}\r\n\r\nmodule.exports = {\r\n  kOutHeaders: Symbol('kOutHeaders'),\r\n  kNeedDrain: Symbol('kNeedDrain'),\r\n  utcDate,\r\n  traceBegin,\r\n  traceEnd,\r\n  getNextTraceEventId,\r\n  isTraceHTTPEnabled,\r\n};\r\n",
    "name": "http",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 515,
    "sourcePositions": []
  },
  {
    "url": "node:diagnostics_channel",
    "source": "'use strict';\r\n\r\nconst {\r\n  ArrayPrototypeIndexOf,\r\n  ArrayPrototypePush,\r\n  ArrayPrototypeSplice,\r\n  ObjectCreate,\r\n  ObjectGetPrototypeOf,\r\n  ObjectSetPrototypeOf,\r\n  SymbolHasInstance,\r\n} = primordials;\r\n\r\nconst {\r\n  codes: {\r\n    ERR_INVALID_ARG_TYPE,\r\n  }\r\n} = require('internal/errors');\r\nconst {\r\n  validateFunction,\r\n} = require('internal/validators');\r\n\r\nconst { triggerUncaughtException } = internalBinding('errors');\r\n\r\nconst { WeakReference } = internalBinding('util');\r\n\r\n// TODO(qard): should there be a C++ channel interface?\r\nclass ActiveChannel {\r\n  subscribe(subscription) {\r\n    validateFunction(subscription, 'subscription');\r\n    ArrayPrototypePush(this._subscribers, subscription);\r\n  }\r\n\r\n  unsubscribe(subscription) {\r\n    const index = ArrayPrototypeIndexOf(this._subscribers, subscription);\r\n    if (index === -1) return false;\r\n\r\n    ArrayPrototypeSplice(this._subscribers, index, 1);\r\n\r\n    // When there are no more active subscribers, restore to fast prototype.\r\n    if (!this._subscribers.length) {\r\n      // eslint-disable-next-line no-use-before-define\r\n      ObjectSetPrototypeOf(this, Channel.prototype);\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  get hasSubscribers() {\r\n    return true;\r\n  }\r\n\r\n  publish(data) {\r\n    for (let i = 0; i < this._subscribers.length; i++) {\r\n      try {\r\n        const onMessage = this._subscribers[i];\r\n        onMessage(data, this.name);\r\n      } catch (err) {\r\n        process.nextTick(() => {\r\n          triggerUncaughtException(err, false);\r\n        });\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nclass Channel {\r\n  constructor(name) {\r\n    this._subscribers = undefined;\r\n    this.name = name;\r\n  }\r\n\r\n  static [SymbolHasInstance](instance) {\r\n    const prototype = ObjectGetPrototypeOf(instance);\r\n    return prototype === Channel.prototype ||\r\n           prototype === ActiveChannel.prototype;\r\n  }\r\n\r\n  subscribe(subscription) {\r\n    ObjectSetPrototypeOf(this, ActiveChannel.prototype);\r\n    this._subscribers = [];\r\n    this.subscribe(subscription);\r\n  }\r\n\r\n  unsubscribe() {\r\n    return false;\r\n  }\r\n\r\n  get hasSubscribers() {\r\n    return false;\r\n  }\r\n\r\n  publish() {}\r\n}\r\n\r\nconst channels = ObjectCreate(null);\r\n\r\nfunction channel(name) {\r\n  let channel;\r\n  const ref = channels[name];\r\n  if (ref) channel = ref.get();\r\n  if (channel) return channel;\r\n\r\n  if (typeof name !== 'string' && typeof name !== 'symbol') {\r\n    throw new ERR_INVALID_ARG_TYPE('channel', ['string', 'symbol'], name);\r\n  }\r\n\r\n  channel = new Channel(name);\r\n  channels[name] = new WeakReference(channel);\r\n  return channel;\r\n}\r\n\r\nfunction subscribe(name, subscription) {\r\n  const chan = channel(name);\r\n  channels[name].incRef();\r\n  chan.subscribe(subscription);\r\n}\r\n\r\nfunction unsubscribe(name, subscription) {\r\n  const chan = channel(name);\r\n  if (!chan.unsubscribe(subscription)) {\r\n    return false;\r\n  }\r\n\r\n  channels[name].decRef();\r\n  if (channels[name].getRef() === 0) {\r\n    delete channels[name];\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction hasSubscribers(name) {\r\n  let channel;\r\n  const ref = channels[name];\r\n  if (ref) channel = ref.get();\r\n  if (!channel) {\r\n    return false;\r\n  }\r\n\r\n  return channel.hasSubscribers;\r\n}\r\n\r\nmodule.exports = {\r\n  channel,\r\n  hasSubscribers,\r\n  subscribe,\r\n  unsubscribe,\r\n  Channel\r\n};\r\n",
    "name": "node:diagnostics_channel",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 516,
    "sourcePositions": []
  },
  {
    "url": "node:_http_server",
    "source": "// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n'use strict';\r\n\r\nconst {\r\n  ArrayIsArray,\r\n  Error,\r\n  MathMin,\r\n  ObjectKeys,\r\n  ObjectSetPrototypeOf,\r\n  RegExpPrototypeExec,\r\n  ReflectApply,\r\n  Symbol,\r\n  SymbolFor,\r\n} = primordials;\r\n\r\nconst net = require('net');\r\nconst EE = require('events');\r\nconst assert = require('internal/assert');\r\nconst {\r\n  parsers,\r\n  freeParser,\r\n  continueExpression,\r\n  chunkExpression,\r\n  kIncomingMessage,\r\n  HTTPParser,\r\n  isLenient,\r\n  _checkInvalidHeaderChar: checkInvalidHeaderChar,\r\n  prepareError,\r\n} = require('_http_common');\r\nconst { ConnectionsList } = internalBinding('http_parser');\r\nconst {\r\n  kUniqueHeaders,\r\n  parseUniqueHeadersOption,\r\n  OutgoingMessage\r\n} = require('_http_outgoing');\r\nconst {\r\n  kOutHeaders,\r\n  kNeedDrain,\r\n  isTraceHTTPEnabled,\r\n  traceBegin,\r\n  traceEnd,\r\n  getNextTraceEventId,\r\n} = require('internal/http');\r\nconst {\r\n  defaultTriggerAsyncIdScope,\r\n  getOrSetAsyncId\r\n} = require('internal/async_hooks');\r\nconst { IncomingMessage } = require('_http_incoming');\r\nconst {\r\n  connResetException,\r\n  codes\r\n} = require('internal/errors');\r\nconst {\r\n  ERR_HTTP_REQUEST_TIMEOUT,\r\n  ERR_HTTP_HEADERS_SENT,\r\n  ERR_HTTP_INVALID_STATUS_CODE,\r\n  ERR_HTTP_SOCKET_ENCODING,\r\n  ERR_INVALID_ARG_TYPE,\r\n  ERR_INVALID_ARG_VALUE,\r\n  ERR_INVALID_CHAR\r\n} = codes;\r\nconst {\r\n  validateInteger,\r\n  validateBoolean,\r\n  validateLinkHeaderValue,\r\n  validateObject\r\n} = require('internal/validators');\r\nconst Buffer = require('buffer').Buffer;\r\nconst {\r\n  DTRACE_HTTP_SERVER_REQUEST,\r\n  DTRACE_HTTP_SERVER_RESPONSE\r\n} = require('internal/dtrace');\r\nconst { setInterval, clearInterval } = require('timers');\r\nlet debug = require('internal/util/debuglog').debuglog('http', (fn) => {\r\n  debug = fn;\r\n});\r\n\r\nconst dc = require('diagnostics_channel');\r\nconst onRequestStartChannel = dc.channel('http.server.request.start');\r\nconst onResponseFinishChannel = dc.channel('http.server.response.finish');\r\n\r\nconst kServerResponse = Symbol('ServerResponse');\r\nconst kServerResponseStatistics = Symbol('ServerResponseStatistics');\r\n\r\nconst {\r\n  hasObserver,\r\n  startPerf,\r\n  stopPerf,\r\n} = require('internal/perf/observe');\r\n\r\nconst STATUS_CODES = {\r\n  100: 'Continue',                   // RFC 7231 6.2.1\r\n  101: 'Switching Protocols',        // RFC 7231 6.2.2\r\n  102: 'Processing',                 // RFC 2518 10.1 (obsoleted by RFC 4918)\r\n  103: 'Early Hints',                // RFC 8297 2\r\n  200: 'OK',                         // RFC 7231 6.3.1\r\n  201: 'Created',                    // RFC 7231 6.3.2\r\n  202: 'Accepted',                   // RFC 7231 6.3.3\r\n  203: 'Non-Authoritative Information', // RFC 7231 6.3.4\r\n  204: 'No Content',                 // RFC 7231 6.3.5\r\n  205: 'Reset Content',              // RFC 7231 6.3.6\r\n  206: 'Partial Content',            // RFC 7233 4.1\r\n  207: 'Multi-Status',               // RFC 4918 11.1\r\n  208: 'Already Reported',           // RFC 5842 7.1\r\n  226: 'IM Used',                    // RFC 3229 10.4.1\r\n  300: 'Multiple Choices',           // RFC 7231 6.4.1\r\n  301: 'Moved Permanently',          // RFC 7231 6.4.2\r\n  302: 'Found',                      // RFC 7231 6.4.3\r\n  303: 'See Other',                  // RFC 7231 6.4.4\r\n  304: 'Not Modified',               // RFC 7232 4.1\r\n  305: 'Use Proxy',                  // RFC 7231 6.4.5\r\n  307: 'Temporary Redirect',         // RFC 7231 6.4.7\r\n  308: 'Permanent Redirect',         // RFC 7238 3\r\n  400: 'Bad Request',                // RFC 7231 6.5.1\r\n  401: 'Unauthorized',               // RFC 7235 3.1\r\n  402: 'Payment Required',           // RFC 7231 6.5.2\r\n  403: 'Forbidden',                  // RFC 7231 6.5.3\r\n  404: 'Not Found',                  // RFC 7231 6.5.4\r\n  405: 'Method Not Allowed',         // RFC 7231 6.5.5\r\n  406: 'Not Acceptable',             // RFC 7231 6.5.6\r\n  407: 'Proxy Authentication Required', // RFC 7235 3.2\r\n  408: 'Request Timeout',            // RFC 7231 6.5.7\r\n  409: 'Conflict',                   // RFC 7231 6.5.8\r\n  410: 'Gone',                       // RFC 7231 6.5.9\r\n  411: 'Length Required',            // RFC 7231 6.5.10\r\n  412: 'Precondition Failed',        // RFC 7232 4.2\r\n  413: 'Payload Too Large',          // RFC 7231 6.5.11\r\n  414: 'URI Too Long',               // RFC 7231 6.5.12\r\n  415: 'Unsupported Media Type',     // RFC 7231 6.5.13\r\n  416: 'Range Not Satisfiable',      // RFC 7233 4.4\r\n  417: 'Expectation Failed',         // RFC 7231 6.5.14\r\n  418: 'I\\'m a Teapot',              // RFC 7168 2.3.3\r\n  421: 'Misdirected Request',        // RFC 7540 9.1.2\r\n  422: 'Unprocessable Entity',       // RFC 4918 11.2\r\n  423: 'Locked',                     // RFC 4918 11.3\r\n  424: 'Failed Dependency',          // RFC 4918 11.4\r\n  425: 'Too Early',                  // RFC 8470 5.2\r\n  426: 'Upgrade Required',           // RFC 2817 and RFC 7231 6.5.15\r\n  428: 'Precondition Required',      // RFC 6585 3\r\n  429: 'Too Many Requests',          // RFC 6585 4\r\n  431: 'Request Header Fields Too Large', // RFC 6585 5\r\n  451: 'Unavailable For Legal Reasons', // RFC 7725 3\r\n  500: 'Internal Server Error',      // RFC 7231 6.6.1\r\n  501: 'Not Implemented',            // RFC 7231 6.6.2\r\n  502: 'Bad Gateway',                // RFC 7231 6.6.3\r\n  503: 'Service Unavailable',        // RFC 7231 6.6.4\r\n  504: 'Gateway Timeout',            // RFC 7231 6.6.5\r\n  505: 'HTTP Version Not Supported', // RFC 7231 6.6.6\r\n  506: 'Variant Also Negotiates',    // RFC 2295 8.1\r\n  507: 'Insufficient Storage',       // RFC 4918 11.5\r\n  508: 'Loop Detected',              // RFC 5842 7.2\r\n  509: 'Bandwidth Limit Exceeded',\r\n  510: 'Not Extended',               // RFC 2774 7\r\n  511: 'Network Authentication Required' // RFC 6585 6\r\n};\r\n\r\nconst kOnExecute = HTTPParser.kOnExecute | 0;\r\nconst kOnTimeout = HTTPParser.kOnTimeout | 0;\r\nconst kLenientAll = HTTPParser.kLenientAll | 0;\r\nconst kLenientNone = HTTPParser.kLenientNone | 0;\r\nconst kConnections = Symbol('http.server.connections');\r\nconst kConnectionsCheckingInterval = Symbol('http.server.connectionsCheckingInterval');\r\n\r\nconst HTTP_SERVER_TRACE_EVENT_NAME = 'http.server.request';\r\n\r\nclass HTTPServerAsyncResource {\r\n  constructor(type, socket) {\r\n    this.type = type;\r\n    this.socket = socket;\r\n  }\r\n}\r\n\r\nfunction ServerResponse(req) {\r\n  OutgoingMessage.call(this);\r\n\r\n  if (req.method === 'HEAD') this._hasBody = false;\r\n\r\n  this.req = req;\r\n  this.sendDate = true;\r\n  this._sent100 = false;\r\n  this._expect_continue = false;\r\n\r\n  if (req.httpVersionMajor < 1 || req.httpVersionMinor < 1) {\r\n    this.useChunkedEncodingByDefault = RegExpPrototypeExec(chunkExpression,\r\n                                                           req.headers.te) !== null;\r\n    this.shouldKeepAlive = false;\r\n  }\r\n\r\n  if (hasObserver('http')) {\r\n    startPerf(this, kServerResponseStatistics, {\r\n      type: 'http',\r\n      name: 'HttpRequest',\r\n      detail: {\r\n        req: {\r\n          method: req.method,\r\n          url: req.url,\r\n          headers: req.headers,\r\n        },\r\n      },\r\n    });\r\n  }\r\n  if (isTraceHTTPEnabled()) {\r\n    this._traceEventId = getNextTraceEventId();\r\n    traceBegin(HTTP_SERVER_TRACE_EVENT_NAME, this._traceEventId);\r\n  }\r\n}\r\nObjectSetPrototypeOf(ServerResponse.prototype, OutgoingMessage.prototype);\r\nObjectSetPrototypeOf(ServerResponse, OutgoingMessage);\r\n\r\nServerResponse.prototype._finish = function _finish() {\r\n  DTRACE_HTTP_SERVER_RESPONSE(this.socket);\r\n  if (this[kServerResponseStatistics] && hasObserver('http')) {\r\n    stopPerf(this, kServerResponseStatistics, {\r\n      detail: {\r\n        res: {\r\n          statusCode: this.statusCode,\r\n          statusMessage: this.statusMessage,\r\n          headers: typeof this.getHeaders === 'function' ? this.getHeaders() : {},\r\n        },\r\n      },\r\n    });\r\n  }\r\n  OutgoingMessage.prototype._finish.call(this);\r\n  if (isTraceHTTPEnabled() && typeof this._traceEventId === 'number') {\r\n    const data = {\r\n      url: this.req?.url,\r\n      statusCode: this.statusCode,\r\n    };\r\n    traceEnd(HTTP_SERVER_TRACE_EVENT_NAME, this._traceEventId, data);\r\n  }\r\n};\r\n\r\n\r\nServerResponse.prototype.statusCode = 200;\r\nServerResponse.prototype.statusMessage = undefined;\r\n\r\nfunction onServerResponseClose() {\r\n  // EventEmitter.emit makes a copy of the 'close' listeners array before\r\n  // calling the listeners. detachSocket() unregisters onServerResponseClose\r\n  // but if detachSocket() is called, directly or indirectly, by a 'close'\r\n  // listener, onServerResponseClose is still in that copy of the listeners\r\n  // array. That is, in the example below, b still gets called even though\r\n  // it's been removed by a:\r\n  //\r\n  //   const EventEmitter = require('events');\r\n  //   const obj = new EventEmitter();\r\n  //   obj.on('event', a);\r\n  //   obj.on('event', b);\r\n  //   function a() { obj.removeListener('event', b) }\r\n  //   function b() { throw \"BAM!\" }\r\n  //   obj.emit('event');  // throws\r\n  //\r\n  // Ergo, we need to deal with stale 'close' events and handle the case\r\n  // where the ServerResponse object has already been deconstructed.\r\n  // Fortunately, that requires only a single if check. :-)\r\n  if (this._httpMessage) {\r\n    emitCloseNT(this._httpMessage);\r\n  }\r\n}\r\n\r\nServerResponse.prototype.assignSocket = function assignSocket(socket) {\r\n  assert(!socket._httpMessage);\r\n  socket._httpMessage = this;\r\n  socket.on('close', onServerResponseClose);\r\n  this.socket = socket;\r\n  this.emit('socket', socket);\r\n  this._flush();\r\n};\r\n\r\nServerResponse.prototype.detachSocket = function detachSocket(socket) {\r\n  assert(socket._httpMessage === this);\r\n  socket.removeListener('close', onServerResponseClose);\r\n  socket._httpMessage = null;\r\n  this.socket = null;\r\n};\r\n\r\nServerResponse.prototype.writeContinue = function writeContinue(cb) {\r\n  this._writeRaw('HTTP/1.1 100 Continue\\r\\n\\r\\n', 'ascii', cb);\r\n  this._sent100 = true;\r\n};\r\n\r\nServerResponse.prototype.writeProcessing = function writeProcessing(cb) {\r\n  this._writeRaw('HTTP/1.1 102 Processing\\r\\n\\r\\n', 'ascii', cb);\r\n};\r\n\r\nServerResponse.prototype.writeEarlyHints = function writeEarlyHints(hints, cb) {\r\n  let head = 'HTTP/1.1 103 Early Hints\\r\\n';\r\n\r\n  validateObject(hints, 'hints');\r\n\r\n  if (hints.link === null || hints.link === undefined) {\r\n    return;\r\n  }\r\n\r\n  const link = validateLinkHeaderValue(hints.link);\r\n\r\n  if (link.length === 0) {\r\n    return;\r\n  }\r\n\r\n  head += 'Link: ' + link + '\\r\\n';\r\n\r\n  for (const key of ObjectKeys(hints)) {\r\n    if (key !== 'link') {\r\n      head += key + ': ' + hints[key] + '\\r\\n';\r\n    }\r\n  }\r\n\r\n  head += '\\r\\n';\r\n\r\n  this._writeRaw(head, 'ascii', cb);\r\n};\r\n\r\nServerResponse.prototype._implicitHeader = function _implicitHeader() {\r\n  this.writeHead(this.statusCode);\r\n};\r\n\r\nServerResponse.prototype.writeHead = writeHead;\r\nfunction writeHead(statusCode, reason, obj) {\r\n  const originalStatusCode = statusCode;\r\n\r\n  statusCode |= 0;\r\n  if (statusCode < 100 || statusCode > 999) {\r\n    throw new ERR_HTTP_INVALID_STATUS_CODE(originalStatusCode);\r\n  }\r\n\r\n\r\n  if (typeof reason === 'string') {\r\n    // writeHead(statusCode, reasonPhrase[, headers])\r\n    this.statusMessage = reason;\r\n  } else {\r\n    // writeHead(statusCode[, headers])\r\n    if (!this.statusMessage)\r\n      this.statusMessage = STATUS_CODES[statusCode] || 'unknown';\r\n    obj ??= reason;\r\n  }\r\n  this.statusCode = statusCode;\r\n\r\n  let headers;\r\n  if (this[kOutHeaders]) {\r\n    // Slow-case: when progressive API and header fields are passed.\r\n    let k;\r\n    if (ArrayIsArray(obj)) {\r\n      if (obj.length % 2 !== 0) {\r\n        throw new ERR_INVALID_ARG_VALUE('headers', obj);\r\n      }\r\n\r\n      for (let n = 0; n < obj.length; n += 2) {\r\n        k = obj[n + 0];\r\n        if (k) this.setHeader(k, obj[n + 1]);\r\n      }\r\n    } else if (obj) {\r\n      const keys = ObjectKeys(obj);\r\n      // Retain for(;;) loop for performance reasons\r\n      // Refs: https://github.com/nodejs/node/pull/30958\r\n      for (let i = 0; i < keys.length; i++) {\r\n        k = keys[i];\r\n        if (k) this.setHeader(k, obj[k]);\r\n      }\r\n    }\r\n    if (k === undefined && this._header) {\r\n      throw new ERR_HTTP_HEADERS_SENT('render');\r\n    }\r\n    // Only progressive api is used\r\n    headers = this[kOutHeaders];\r\n  } else {\r\n    // Only writeHead() called\r\n    headers = obj;\r\n  }\r\n\r\n  if (checkInvalidHeaderChar(this.statusMessage))\r\n    throw new ERR_INVALID_CHAR('statusMessage');\r\n\r\n  const statusLine = `HTTP/1.1 ${statusCode} ${this.statusMessage}\\r\\n`;\r\n\r\n  if (statusCode === 204 || statusCode === 304 ||\r\n      (statusCode >= 100 && statusCode <= 199)) {\r\n    // RFC 2616, 10.2.5:\r\n    // The 204 response MUST NOT include a message-body, and thus is always\r\n    // terminated by the first empty line after the header fields.\r\n    // RFC 2616, 10.3.5:\r\n    // The 304 response MUST NOT contain a message-body, and thus is always\r\n    // terminated by the first empty line after the header fields.\r\n    // RFC 2616, 10.1 Informational 1xx:\r\n    // This class of status code indicates a provisional response,\r\n    // consisting only of the Status-Line and optional headers, and is\r\n    // terminated by an empty line.\r\n    this._hasBody = false;\r\n  }\r\n\r\n  // Don't keep alive connections where the client expects 100 Continue\r\n  // but we sent a final status; they may put extra bytes on the wire.\r\n  if (this._expect_continue && !this._sent100) {\r\n    this.shouldKeepAlive = false;\r\n  }\r\n\r\n  this._storeHeader(statusLine, headers);\r\n\r\n  return this;\r\n}\r\n\r\n// Docs-only deprecated: DEP0063\r\nServerResponse.prototype.writeHeader = ServerResponse.prototype.writeHead;\r\n\r\nfunction storeHTTPOptions(options) {\r\n  this[kIncomingMessage] = options.IncomingMessage || IncomingMessage;\r\n  this[kServerResponse] = options.ServerResponse || ServerResponse;\r\n\r\n  const maxHeaderSize = options.maxHeaderSize;\r\n  if (maxHeaderSize !== undefined)\r\n    validateInteger(maxHeaderSize, 'maxHeaderSize', 0);\r\n  this.maxHeaderSize = maxHeaderSize;\r\n\r\n  const insecureHTTPParser = options.insecureHTTPParser;\r\n  if (insecureHTTPParser !== undefined)\r\n    validateBoolean(insecureHTTPParser, 'options.insecureHTTPParser');\r\n  this.insecureHTTPParser = insecureHTTPParser;\r\n\r\n  if (options.noDelay === undefined)\r\n    options.noDelay = true;\r\n\r\n  const requestTimeout = options.requestTimeout;\r\n  if (requestTimeout !== undefined) {\r\n    validateInteger(requestTimeout, 'requestTimeout', 0);\r\n    this.requestTimeout = requestTimeout;\r\n  } else {\r\n    this.requestTimeout = 300_000; // 5 minutes\r\n  }\r\n\r\n  const headersTimeout = options.headersTimeout;\r\n  if (headersTimeout !== undefined) {\r\n    validateInteger(headersTimeout, 'headersTimeout', 0);\r\n    this.headersTimeout = headersTimeout;\r\n  } else {\r\n    this.headersTimeout = MathMin(60_000, this.requestTimeout); // Minimum between 60 seconds or requestTimeout\r\n  }\r\n\r\n  if (this.requestTimeout > 0 && this.headersTimeout > 0 && this.headersTimeout > this.requestTimeout) {\r\n    throw new codes.ERR_OUT_OF_RANGE('headersTimeout', '<= requestTimeout', headersTimeout);\r\n  }\r\n\r\n  const keepAliveTimeout = options.keepAliveTimeout;\r\n  if (keepAliveTimeout !== undefined) {\r\n    validateInteger(keepAliveTimeout, 'keepAliveTimeout', 0);\r\n    this.keepAliveTimeout = keepAliveTimeout;\r\n  } else {\r\n    this.keepAliveTimeout = 5_000; // 5 seconds;\r\n  }\r\n\r\n  const connectionsCheckingInterval = options.connectionsCheckingInterval;\r\n  if (connectionsCheckingInterval !== undefined) {\r\n    validateInteger(connectionsCheckingInterval, 'connectionsCheckingInterval', 0);\r\n    this.connectionsCheckingInterval = connectionsCheckingInterval;\r\n  } else {\r\n    this.connectionsCheckingInterval = 30_000; // 30 seconds\r\n  }\r\n\r\n  const joinDuplicateHeaders = options.joinDuplicateHeaders;\r\n  if (joinDuplicateHeaders !== undefined) {\r\n    validateBoolean(joinDuplicateHeaders, 'options.joinDuplicateHeaders');\r\n  }\r\n  this.joinDuplicateHeaders = joinDuplicateHeaders;\r\n}\r\n\r\nfunction setupConnectionsTracking(server) {\r\n  // Start connection handling\r\n  server[kConnections] = new ConnectionsList();\r\n\r\n  // This checker is started without checking whether any headersTimeout or requestTimeout is non zero\r\n  // otherwise it would not be started if such timeouts are modified after createServer.\r\n  server[kConnectionsCheckingInterval] =\r\n    setInterval(checkConnections.bind(server), server.connectionsCheckingInterval).unref();\r\n}\r\n\r\nfunction Server(options, requestListener) {\r\n  if (!(this instanceof Server)) return new Server(options, requestListener);\r\n\r\n  if (typeof options === 'function') {\r\n    requestListener = options;\r\n    options = {};\r\n  } else if (options == null || typeof options === 'object') {\r\n    options = { ...options };\r\n  } else {\r\n    throw new ERR_INVALID_ARG_TYPE('options', 'object', options);\r\n  }\r\n\r\n  storeHTTPOptions.call(this, options);\r\n  net.Server.call(\r\n    this,\r\n    { allowHalfOpen: true, noDelay: options.noDelay,\r\n      keepAlive: options.keepAlive,\r\n      keepAliveInitialDelay: options.keepAliveInitialDelay });\r\n\r\n  if (requestListener) {\r\n    this.on('request', requestListener);\r\n  }\r\n\r\n  // Similar option to this. Too lazy to write my own docs.\r\n  // http://www.squid-cache.org/Doc/config/half_closed_clients/\r\n  // https://wiki.squid-cache.org/SquidFaq/InnerWorkings#What_is_a_half-closed_filedescriptor.3F\r\n  this.httpAllowHalfOpen = false;\r\n\r\n  this.on('connection', connectionListener);\r\n\r\n  this.timeout = 0;\r\n  this.maxHeadersCount = null;\r\n  this.maxRequestsPerSocket = 0;\r\n  setupConnectionsTracking(this);\r\n  this[kUniqueHeaders] = parseUniqueHeadersOption(options.uniqueHeaders);\r\n}\r\nObjectSetPrototypeOf(Server.prototype, net.Server.prototype);\r\nObjectSetPrototypeOf(Server, net.Server);\r\n\r\nServer.prototype.close = function() {\r\n  clearInterval(this[kConnectionsCheckingInterval]);\r\n  ReflectApply(net.Server.prototype.close, this, arguments);\r\n};\r\n\r\nServer.prototype.closeAllConnections = function() {\r\n  const connections = this[kConnections].all();\r\n\r\n  for (let i = 0, l = connections.length; i < l; i++) {\r\n    connections[i].socket.destroy();\r\n  }\r\n};\r\n\r\nServer.prototype.closeIdleConnections = function() {\r\n  const connections = this[kConnections].idle();\r\n\r\n  for (let i = 0, l = connections.length; i < l; i++) {\r\n    if (connections[i].socket._httpMessage && !connections[i].socket._httpMessage.finished) {\r\n      continue;\r\n    }\r\n\r\n    connections[i].socket.destroy();\r\n  }\r\n};\r\n\r\nServer.prototype.setTimeout = function setTimeout(msecs, callback) {\r\n  this.timeout = msecs;\r\n  if (callback)\r\n    this.on('timeout', callback);\r\n  return this;\r\n};\r\n\r\nServer.prototype[EE.captureRejectionSymbol] = function(err, event, ...args) {\r\n  switch (event) {\r\n    case 'request': {\r\n      const { 1: res } = args;\r\n      if (!res.headersSent && !res.writableEnded) {\r\n        // Don't leak headers.\r\n        const names = res.getHeaderNames();\r\n        for (let i = 0; i < names.length; i++) {\r\n          res.removeHeader(names[i]);\r\n        }\r\n        res.statusCode = 500;\r\n        res.end(STATUS_CODES[500]);\r\n      } else {\r\n        res.destroy();\r\n      }\r\n      break;\r\n    }\r\n    default:\r\n      net.Server.prototype[SymbolFor('nodejs.rejection')]\r\n        .apply(this, arguments);\r\n  }\r\n};\r\n\r\nfunction checkConnections() {\r\n  if (this.headersTimeout === 0 && this.requestTimeout === 0) {\r\n    return;\r\n  }\r\n\r\n  const expired = this[kConnections].expired(this.headersTimeout, this.requestTimeout);\r\n\r\n  for (let i = 0; i < expired.length; i++) {\r\n    const socket = expired[i].socket;\r\n\r\n    if (socket) {\r\n      onRequestTimeout(socket);\r\n    }\r\n  }\r\n}\r\n\r\nfunction connectionListener(socket) {\r\n  defaultTriggerAsyncIdScope(\r\n    getOrSetAsyncId(socket), connectionListenerInternal, this, socket\r\n  );\r\n}\r\n\r\nfunction connectionListenerInternal(server, socket) {\r\n  debug('SERVER new http connection');\r\n\r\n  // Ensure that the server property of the socket is correctly set.\r\n  // See https://github.com/nodejs/node/issues/13435\r\n  socket.server = server;\r\n\r\n  // If the user has added a listener to the server,\r\n  // request, or response, then it's their responsibility.\r\n  // otherwise, destroy on timeout by default\r\n  if (server.timeout && typeof socket.setTimeout === 'function')\r\n    socket.setTimeout(server.timeout);\r\n  socket.on('timeout', socketOnTimeout);\r\n\r\n  const parser = parsers.alloc();\r\n\r\n  const lenient = server.insecureHTTPParser === undefined ?\r\n    isLenient() : server.insecureHTTPParser;\r\n\r\n  // TODO(addaleax): This doesn't play well with the\r\n  // `async_hooks.currentResource()` proposal, see\r\n  // https://github.com/nodejs/node/pull/21313\r\n  parser.initialize(\r\n    HTTPParser.REQUEST,\r\n    new HTTPServerAsyncResource('HTTPINCOMINGMESSAGE', socket),\r\n    server.maxHeaderSize || 0,\r\n    lenient ? kLenientAll : kLenientNone,\r\n    server[kConnections],\r\n  );\r\n  parser.socket = socket;\r\n  socket.parser = parser;\r\n\r\n  // Propagate headers limit from server instance to parser\r\n  if (typeof server.maxHeadersCount === 'number') {\r\n    parser.maxHeaderPairs = server.maxHeadersCount << 1;\r\n  }\r\n\r\n  const state = {\r\n    onData: null,\r\n    onEnd: null,\r\n    onClose: null,\r\n    onDrain: null,\r\n    outgoing: [],\r\n    incoming: [],\r\n    // `outgoingData` is an approximate amount of bytes queued through all\r\n    // inactive responses. If more data than the high watermark is queued - we\r\n    // need to pause TCP socket/HTTP parser, and wait until the data will be\r\n    // sent to the client.\r\n    outgoingData: 0,\r\n    requestsCount: 0,\r\n    keepAliveTimeoutSet: false\r\n  };\r\n  state.onData = socketOnData.bind(undefined,\r\n                                   server, socket, parser, state);\r\n  state.onEnd = socketOnEnd.bind(undefined,\r\n                                 server, socket, parser, state);\r\n  state.onClose = socketOnClose.bind(undefined,\r\n                                     socket, state);\r\n  state.onDrain = socketOnDrain.bind(undefined,\r\n                                     socket, state);\r\n  socket.on('data', state.onData);\r\n  socket.on('error', socketOnError);\r\n  socket.on('end', state.onEnd);\r\n  socket.on('close', state.onClose);\r\n  socket.on('drain', state.onDrain);\r\n  parser.onIncoming = parserOnIncoming.bind(undefined,\r\n                                            server, socket, state);\r\n\r\n  // We are consuming socket, so it won't get any actual data\r\n  socket.on('resume', onSocketResume);\r\n  socket.on('pause', onSocketPause);\r\n\r\n  // Overrides to unconsume on `data`, `readable` listeners\r\n  socket.on = generateSocketListenerWrapper('on');\r\n  socket.addListener = generateSocketListenerWrapper('addListener');\r\n  socket.prependListener = generateSocketListenerWrapper('prependListener');\r\n  socket.setEncoding = socketSetEncoding;\r\n\r\n  // We only consume the socket if it has never been consumed before.\r\n  if (socket._handle && socket._handle.isStreamBase &&\r\n      !socket._handle._consumed) {\r\n    parser._consumed = true;\r\n    socket._handle._consumed = true;\r\n    parser.consume(socket._handle);\r\n  }\r\n  parser[kOnExecute] =\r\n    onParserExecute.bind(undefined,\r\n                         server, socket, parser, state);\r\n\r\n  parser[kOnTimeout] =\r\n    onParserTimeout.bind(undefined,\r\n                         server, socket);\r\n\r\n  socket._paused = false;\r\n}\r\n\r\nfunction socketSetEncoding() {\r\n  throw new ERR_HTTP_SOCKET_ENCODING();\r\n}\r\n\r\nfunction updateOutgoingData(socket, state, delta) {\r\n  state.outgoingData += delta;\r\n  socketOnDrain(socket, state);\r\n}\r\n\r\nfunction socketOnDrain(socket, state) {\r\n  const needPause = state.outgoingData > socket.writableHighWaterMark;\r\n\r\n  // If we previously paused, then start reading again.\r\n  if (socket._paused && !needPause) {\r\n    socket._paused = false;\r\n    if (socket.parser)\r\n      socket.parser.resume();\r\n    socket.resume();\r\n  }\r\n\r\n  const msg = socket._httpMessage;\r\n  if (msg && !msg.finished && msg[kNeedDrain]) {\r\n    msg[kNeedDrain] = false;\r\n    msg.emit('drain');\r\n  }\r\n}\r\n\r\nfunction socketOnTimeout() {\r\n  const req = this.parser && this.parser.incoming;\r\n  const reqTimeout = req && !req.complete && req.emit('timeout', this);\r\n  const res = this._httpMessage;\r\n  const resTimeout = res && res.emit('timeout', this);\r\n  const serverTimeout = this.server.emit('timeout', this);\r\n\r\n  if (!reqTimeout && !resTimeout && !serverTimeout)\r\n    this.destroy();\r\n}\r\n\r\nfunction socketOnClose(socket, state) {\r\n  debug('server socket close');\r\n  freeParser(socket.parser, null, socket);\r\n  abortIncoming(state.incoming);\r\n}\r\n\r\nfunction abortIncoming(incoming) {\r\n  while (incoming.length) {\r\n    const req = incoming.shift();\r\n    req.destroy(connResetException('aborted'));\r\n  }\r\n  // Abort socket._httpMessage ?\r\n}\r\n\r\nfunction socketOnEnd(server, socket, parser, state) {\r\n  const ret = parser.finish();\r\n\r\n  if (ret instanceof Error) {\r\n    debug('parse error');\r\n    // socketOnError has additional logic and will call socket.destroy(err).\r\n    socketOnError.call(socket, ret);\r\n  } else if (!server.httpAllowHalfOpen) {\r\n    socket.end();\r\n  } else if (state.outgoing.length) {\r\n    state.outgoing[state.outgoing.length - 1]._last = true;\r\n  } else if (socket._httpMessage) {\r\n    socket._httpMessage._last = true;\r\n  } else {\r\n    socket.end();\r\n  }\r\n}\r\n\r\nfunction socketOnData(server, socket, parser, state, d) {\r\n  assert(!socket._paused);\r\n  debug('SERVER socketOnData %d', d.length);\r\n\r\n  const ret = parser.execute(d);\r\n  onParserExecuteCommon(server, socket, parser, state, ret, d);\r\n}\r\n\r\nfunction onRequestTimeout(socket) {\r\n  // socketOnError has additional logic and will call socket.destroy(err).\r\n  socketOnError.call(socket, new ERR_HTTP_REQUEST_TIMEOUT());\r\n}\r\n\r\nfunction onParserExecute(server, socket, parser, state, ret) {\r\n  // When underlying `net.Socket` instance is consumed - no\r\n  // `data` events are emitted, and thus `socket.setTimeout` fires the\r\n  // callback even if the data is constantly flowing into the socket.\r\n  // See, https://github.com/nodejs/node/commit/ec2822adaad76b126b5cccdeaa1addf2376c9aa6\r\n  socket._unrefTimer();\r\n  debug('SERVER socketOnParserExecute %d', ret);\r\n  onParserExecuteCommon(server, socket, parser, state, ret, undefined);\r\n}\r\n\r\nfunction onParserTimeout(server, socket) {\r\n  const serverTimeout = server.emit('timeout', socket);\r\n\r\n  if (!serverTimeout)\r\n    socket.destroy();\r\n}\r\n\r\nconst noop = () => {};\r\nconst badRequestResponse = Buffer.from(\r\n  `HTTP/1.1 400 ${STATUS_CODES[400]}\\r\\n` +\r\n  'Connection: close\\r\\n\\r\\n', 'ascii'\r\n);\r\nconst requestTimeoutResponse = Buffer.from(\r\n  `HTTP/1.1 408 ${STATUS_CODES[408]}\\r\\n` +\r\n  'Connection: close\\r\\n\\r\\n', 'ascii'\r\n);\r\nconst requestHeaderFieldsTooLargeResponse = Buffer.from(\r\n  `HTTP/1.1 431 ${STATUS_CODES[431]}\\r\\n` +\r\n  'Connection: close\\r\\n\\r\\n', 'ascii'\r\n);\r\nfunction socketOnError(e) {\r\n  // Ignore further errors\r\n  this.removeListener('error', socketOnError);\r\n  this.on('error', noop);\r\n\r\n  if (!this.server.emit('clientError', e, this)) {\r\n    // Caution must be taken to avoid corrupting the remote peer.\r\n    // Reply an error segment if there is no in-flight `ServerResponse`,\r\n    // or no data of the in-flight one has been written yet to this socket.\r\n    if (this.writable &&\r\n        (!this._httpMessage || !this._httpMessage._headerSent)) {\r\n      let response;\r\n\r\n      switch (e.code) {\r\n        case 'HPE_HEADER_OVERFLOW':\r\n          response = requestHeaderFieldsTooLargeResponse;\r\n          break;\r\n        case 'ERR_HTTP_REQUEST_TIMEOUT':\r\n          response = requestTimeoutResponse;\r\n          break;\r\n        default:\r\n          response = badRequestResponse;\r\n          break;\r\n      }\r\n\r\n      this.write(response);\r\n    }\r\n    this.destroy(e);\r\n  }\r\n}\r\n\r\nfunction onParserExecuteCommon(server, socket, parser, state, ret, d) {\r\n  resetSocketTimeout(server, socket, state);\r\n\r\n  if (ret instanceof Error) {\r\n    prepareError(ret, parser, d);\r\n    debug('parse error', ret);\r\n    socketOnError.call(socket, ret);\r\n  } else if (parser.incoming && parser.incoming.upgrade) {\r\n    // Upgrade or CONNECT\r\n    const req = parser.incoming;\r\n    debug('SERVER upgrade or connect', req.method);\r\n\r\n    if (!d)\r\n      d = parser.getCurrentBuffer();\r\n\r\n    socket.removeListener('data', state.onData);\r\n    socket.removeListener('end', state.onEnd);\r\n    socket.removeListener('close', state.onClose);\r\n    socket.removeListener('drain', state.onDrain);\r\n    socket.removeListener('error', socketOnError);\r\n    socket.removeListener('timeout', socketOnTimeout);\r\n    unconsume(parser, socket);\r\n    parser.finish();\r\n    freeParser(parser, req, socket);\r\n    parser = null;\r\n\r\n    const eventName = req.method === 'CONNECT' ? 'connect' : 'upgrade';\r\n    if (eventName === 'upgrade' || server.listenerCount(eventName) > 0) {\r\n      debug('SERVER have listener for %s', eventName);\r\n      const bodyHead = d.slice(ret, d.length);\r\n\r\n      socket.readableFlowing = null;\r\n\r\n      server.emit(eventName, req, socket, bodyHead);\r\n    } else {\r\n      // Got CONNECT method, but have no handler.\r\n      socket.destroy();\r\n    }\r\n  } else if (parser.incoming && parser.incoming.method === 'PRI') {\r\n    debug('SERVER got PRI request');\r\n    socket.destroy();\r\n  }\r\n\r\n  if (socket._paused && socket.parser) {\r\n    // onIncoming paused the socket, we should pause the parser as well\r\n    debug('pause parser');\r\n    socket.parser.pause();\r\n  }\r\n}\r\n\r\nfunction clearIncoming(req) {\r\n  req = req || this;\r\n  const parser = req.socket && req.socket.parser;\r\n  // Reset the .incoming property so that the request object can be gc'ed.\r\n  if (parser && parser.incoming === req) {\r\n    if (req.readableEnded) {\r\n      parser.incoming = null;\r\n    } else {\r\n      req.on('end', clearIncoming);\r\n    }\r\n  }\r\n}\r\n\r\nfunction resOnFinish(req, res, socket, state, server) {\r\n  if (onResponseFinishChannel.hasSubscribers) {\r\n    onResponseFinishChannel.publish({\r\n      request: req,\r\n      response: res,\r\n      socket,\r\n      server\r\n    });\r\n  }\r\n\r\n  // Usually the first incoming element should be our request.  it may\r\n  // be that in the case abortIncoming() was called that the incoming\r\n  // array will be empty.\r\n  assert(state.incoming.length === 0 || state.incoming[0] === req);\r\n\r\n  state.incoming.shift();\r\n\r\n  // If the user never called req.read(), and didn't pipe() or\r\n  // .resume() or .on('data'), then we call req._dump() so that the\r\n  // bytes will be pulled off the wire.\r\n  if (!req._consuming && !req._readableState.resumeScheduled)\r\n    req._dump();\r\n\r\n  res.detachSocket(socket);\r\n  clearIncoming(req);\r\n  process.nextTick(emitCloseNT, res);\r\n\r\n  if (res._last) {\r\n    if (typeof socket.destroySoon === 'function') {\r\n      socket.destroySoon();\r\n    } else {\r\n      socket.end();\r\n    }\r\n  } else if (state.outgoing.length === 0) {\r\n    if (server.keepAliveTimeout && typeof socket.setTimeout === 'function') {\r\n      socket.setTimeout(server.keepAliveTimeout);\r\n      state.keepAliveTimeoutSet = true;\r\n    }\r\n  } else {\r\n    // Start sending the next message\r\n    const m = state.outgoing.shift();\r\n    if (m) {\r\n      m.assignSocket(socket);\r\n    }\r\n  }\r\n}\r\n\r\nfunction emitCloseNT(self) {\r\n  if (!self._closed) {\r\n    self.destroyed = true;\r\n    self._closed = true;\r\n    self.emit('close');\r\n  }\r\n}\r\n\r\n// The following callback is issued after the headers have been read on a\r\n// new message. In this callback we setup the response object and pass it\r\n// to the user.\r\nfunction parserOnIncoming(server, socket, state, req, keepAlive) {\r\n  resetSocketTimeout(server, socket, state);\r\n\r\n  if (req.upgrade) {\r\n    req.upgrade = req.method === 'CONNECT' ||\r\n                  server.listenerCount('upgrade') > 0;\r\n    if (req.upgrade)\r\n      return 2;\r\n  }\r\n\r\n  state.incoming.push(req);\r\n\r\n  // If the writable end isn't consuming, then stop reading\r\n  // so that we don't become overwhelmed by a flood of\r\n  // pipelined requests that may never be resolved.\r\n  if (!socket._paused) {\r\n    const ws = socket._writableState;\r\n    if (ws.needDrain || state.outgoingData >= socket.writableHighWaterMark) {\r\n      socket._paused = true;\r\n      // We also need to pause the parser, but don't do that until after\r\n      // the call to execute, because we may still be processing the last\r\n      // chunk.\r\n      socket.pause();\r\n    }\r\n  }\r\n\r\n  const res = new server[kServerResponse](req);\r\n  res._keepAliveTimeout = server.keepAliveTimeout;\r\n  res._maxRequestsPerSocket = server.maxRequestsPerSocket;\r\n  res._onPendingData = updateOutgoingData.bind(undefined,\r\n                                               socket, state);\r\n\r\n  res.shouldKeepAlive = keepAlive;\r\n  res[kUniqueHeaders] = server[kUniqueHeaders];\r\n  DTRACE_HTTP_SERVER_REQUEST(req, socket);\r\n\r\n  if (onRequestStartChannel.hasSubscribers) {\r\n    onRequestStartChannel.publish({\r\n      request: req,\r\n      response: res,\r\n      socket,\r\n      server\r\n    });\r\n  }\r\n\r\n  if (socket._httpMessage) {\r\n    // There are already pending outgoing res, append.\r\n    state.outgoing.push(res);\r\n  } else {\r\n    res.assignSocket(socket);\r\n  }\r\n\r\n  // When we're finished writing the response, check if this is the last\r\n  // response, if so destroy the socket.\r\n  res.on('finish',\r\n         resOnFinish.bind(undefined,\r\n                          req, res, socket, state, server));\r\n\r\n  let handled = false;\r\n\r\n  if (req.httpVersionMajor === 1 && req.httpVersionMinor === 1) {\r\n    const isRequestsLimitSet = (\r\n      typeof server.maxRequestsPerSocket === 'number' &&\r\n      server.maxRequestsPerSocket > 0\r\n    );\r\n\r\n    if (isRequestsLimitSet) {\r\n      state.requestsCount++;\r\n      res.maxRequestsOnConnectionReached = (\r\n        server.maxRequestsPerSocket <= state.requestsCount);\r\n    }\r\n\r\n    if (isRequestsLimitSet &&\r\n      (server.maxRequestsPerSocket < state.requestsCount)) {\r\n      handled = true;\r\n      server.emit('dropRequest', req, socket);\r\n      res.writeHead(503);\r\n      res.end();\r\n    } else if (req.headers.expect !== undefined) {\r\n      handled = true;\r\n\r\n      if (RegExpPrototypeExec(continueExpression, req.headers.expect) !== null) {\r\n        res._expect_continue = true;\r\n\r\n        if (server.listenerCount('checkContinue') > 0) {\r\n          server.emit('checkContinue', req, res);\r\n        } else {\r\n          res.writeContinue();\r\n          server.emit('request', req, res);\r\n        }\r\n      } else if (server.listenerCount('checkExpectation') > 0) {\r\n        server.emit('checkExpectation', req, res);\r\n      } else {\r\n        res.writeHead(417);\r\n        res.end();\r\n      }\r\n    }\r\n  }\r\n\r\n  if (!handled) {\r\n    server.emit('request', req, res);\r\n  }\r\n\r\n  return 0;  // No special treatment.\r\n}\r\n\r\nfunction resetSocketTimeout(server, socket, state) {\r\n  if (!state.keepAliveTimeoutSet)\r\n    return;\r\n\r\n  socket.setTimeout(server.timeout || 0);\r\n  state.keepAliveTimeoutSet = false;\r\n}\r\n\r\nfunction onSocketResume() {\r\n  // It may seem that the socket is resumed, but this is an enemy's trick to\r\n  // deceive us! `resume` is emitted asynchronously, and may be called from\r\n  // `incoming.readStart()`. Stop the socket again here, just to preserve the\r\n  // state.\r\n  //\r\n  // We don't care about stream semantics for the consumed socket anyway.\r\n  if (this._paused) {\r\n    this.pause();\r\n    return;\r\n  }\r\n\r\n  if (this._handle && !this._handle.reading) {\r\n    this._handle.reading = true;\r\n    this._handle.readStart();\r\n  }\r\n}\r\n\r\nfunction onSocketPause() {\r\n  if (this._handle && this._handle.reading) {\r\n    this._handle.reading = false;\r\n    this._handle.readStop();\r\n  }\r\n}\r\n\r\nfunction unconsume(parser, socket) {\r\n  if (socket._handle) {\r\n    if (parser._consumed)\r\n      parser.unconsume();\r\n    parser._consumed = false;\r\n    socket.removeListener('pause', onSocketPause);\r\n    socket.removeListener('resume', onSocketResume);\r\n  }\r\n}\r\n\r\nfunction generateSocketListenerWrapper(originalFnName) {\r\n  return function socketListenerWrap(ev, fn) {\r\n    const res = net.Socket.prototype[originalFnName].call(this,\r\n                                                          ev, fn);\r\n    if (!this.parser) {\r\n      this.on = net.Socket.prototype.on;\r\n      this.addListener = net.Socket.prototype.addListener;\r\n      this.prependListener = net.Socket.prototype.prependListener;\r\n      return res;\r\n    }\r\n\r\n    if (ev === 'data' || ev === 'readable')\r\n      unconsume(this.parser, this);\r\n\r\n    return res;\r\n  };\r\n}\r\n\r\nmodule.exports = {\r\n  STATUS_CODES,\r\n  Server,\r\n  ServerResponse,\r\n  setupConnectionsTracking,\r\n  storeHTTPOptions,\r\n  _connectionListener: connectionListener,\r\n  kServerResponse\r\n};\r\n",
    "name": "node:_http_server",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 517,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\utils-merge\\index.js",
    "source": "/**\n * Merge object b with object a.\n *\n *     var a = { foo: 'bar' }\n *       , b = { bar: 'baz' };\n *\n *     merge(a, b);\n *     // => { foo: 'bar', bar: 'baz' }\n *\n * @param {Object} a\n * @param {Object} b\n * @return {Object}\n * @api public\n */\n\nexports = module.exports = function(a, b){\n  if (a && b) {\n    for (var key in b) {\n      a[key] = b[key];\n    }\n  }\n  return a;\n};\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\utils-merge\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 518,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\setprototypeof\\index.js",
    "source": "'use strict'\n/* eslint no-proto: 0 */\nmodule.exports = Object.setPrototypeOf || ({ __proto__: [] } instanceof Array ? setProtoOf : mixinProperties)\n\nfunction setProtoOf (obj, proto) {\n  obj.__proto__ = proto\n  return obj\n}\n\nfunction mixinProperties (obj, proto) {\n  for (var prop in proto) {\n    if (!Object.prototype.hasOwnProperty.call(obj, prop)) {\n      obj[prop] = proto[prop]\n    }\n  }\n  return obj\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\setprototypeof\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 519,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\middleware\\init.js",
    "source": "/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar setPrototypeOf = require('setprototypeof')\n\n/**\n * Initialization middleware, exposing the\n * request and response to each other, as well\n * as defaulting the X-Powered-By header field.\n *\n * @param {Function} app\n * @return {Function}\n * @api private\n */\n\nexports.init = function(app){\n  return function expressInit(req, res, next){\n    if (app.enabled('x-powered-by')) res.setHeader('X-Powered-By', 'Express');\n    req.res = res;\n    res.req = req;\n    req.next = next;\n\n    setPrototypeOf(req, app.request)\n    setPrototypeOf(res, app.response)\n\n    res.locals = res.locals || Object.create(null);\n\n    next();\n  };\n};\n\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\middleware\\init.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 520,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\middleware\\query.js",
    "source": "/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n */\n\nvar merge = require('utils-merge')\nvar parseUrl = require('parseurl');\nvar qs = require('qs');\n\n/**\n * @param {Object} options\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function query(options) {\n  var opts = merge({}, options)\n  var queryparse = qs.parse;\n\n  if (typeof options === 'function') {\n    queryparse = options;\n    opts = undefined;\n  }\n\n  if (opts !== undefined && opts.allowPrototypes === undefined) {\n    // back-compat for qs module\n    opts.allowPrototypes = true;\n  }\n\n  return function query(req, res, next){\n    if (!req.query) {\n      var val = parseUrl(req).query;\n      req.query = queryparse(val, opts);\n    }\n\n    next();\n  };\n};\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\middleware\\query.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 521,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\qs\\lib\\index.js",
    "source": "'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\qs\\lib\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 522,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\qs\\lib\\stringify.js",
    "source": "'use strict';\n\nvar getSideChannel = require('side-channel');\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) {\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) {\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar split = String.prototype.split;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    format: defaultFormat,\n    formatter: formats.formatters[defaultFormat],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) {\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) {\n    return typeof v === 'string'\n        || typeof v === 'number'\n        || typeof v === 'boolean'\n        || typeof v === 'symbol'\n        || typeof v === 'bigint';\n};\n\nvar sentinel = {};\n\nvar stringify = function stringify(\n    object,\n    prefix,\n    generateArrayPrefix,\n    commaRoundTrip,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    format,\n    formatter,\n    encodeValuesOnly,\n    charset,\n    sideChannel\n) {\n    var obj = object;\n\n    var tmpSc = sideChannel;\n    var step = 0;\n    var findFlag = false;\n    while ((tmpSc = tmpSc.get(sentinel)) !== void undefined && !findFlag) {\n        // Where object last appeared in the ref tree\n        var pos = tmpSc.get(object);\n        step += 1;\n        if (typeof pos !== 'undefined') {\n            if (pos === step) {\n                throw new RangeError('Cyclic object value');\n            } else {\n                findFlag = true; // Break while\n            }\n        }\n        if (typeof tmpSc.get(sentinel) === 'undefined') {\n            step = 0;\n        }\n    }\n\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = utils.maybeMap(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate(value);\n            }\n            return value;\n        });\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key', format) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key', format);\n            if (generateArrayPrefix === 'comma' && encodeValuesOnly) {\n                var valuesArray = split.call(String(obj), ',');\n                var valuesJoined = '';\n                for (var i = 0; i < valuesArray.length; ++i) {\n                    valuesJoined += (i === 0 ? '' : ',') + formatter(encoder(valuesArray[i], defaults.encoder, charset, 'value', format));\n                }\n                return [formatter(keyValue) + (commaRoundTrip && isArray(obj) && valuesArray.length === 1 ? '[]' : '') + '=' + valuesJoined];\n            }\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value', format))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        // we need to join elements in\n        objKeys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];\n    } else if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    var adjustedPrefix = commaRoundTrip && isArray(obj) && obj.length === 1 ? prefix + '[]' : prefix;\n\n    for (var j = 0; j < objKeys.length; ++j) {\n        var key = objKeys[j];\n        var value = typeof key === 'object' && typeof key.value !== 'undefined' ? key.value : obj[key];\n\n        if (skipNulls && value === null) {\n            continue;\n        }\n\n        var keyPrefix = isArray(obj)\n            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(adjustedPrefix, key) : adjustedPrefix\n            : adjustedPrefix + (allowDots ? '.' + key : '[' + key + ']');\n\n        sideChannel.set(object, step);\n        var valueSideChannel = getSideChannel();\n        valueSideChannel.set(sentinel, sideChannel);\n        pushToArray(values, stringify(\n            value,\n            keyPrefix,\n            generateArrayPrefix,\n            commaRoundTrip,\n            strictNullHandling,\n            skipNulls,\n            encoder,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            format,\n            formatter,\n            encodeValuesOnly,\n            charset,\n            valueSideChannel\n        ));\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (opts && opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if (opts && 'indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n    if (opts && 'commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {\n        throw new TypeError('`commaRoundTrip` must be a boolean, or absent');\n    }\n    var commaRoundTrip = generateArrayPrefix === 'comma' && opts && opts.commaRoundTrip;\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    var sideChannel = getSideChannel();\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            commaRoundTrip,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.format,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset,\n            sideChannel\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\qs\\lib\\stringify.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 523,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\side-channel\\index.js",
    "source": "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bind/callBound');\nvar inspect = require('object-inspect');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $WeakMap = GetIntrinsic('%WeakMap%', true);\nvar $Map = GetIntrinsic('%Map%', true);\n\nvar $weakMapGet = callBound('WeakMap.prototype.get', true);\nvar $weakMapSet = callBound('WeakMap.prototype.set', true);\nvar $weakMapHas = callBound('WeakMap.prototype.has', true);\nvar $mapGet = callBound('Map.prototype.get', true);\nvar $mapSet = callBound('Map.prototype.set', true);\nvar $mapHas = callBound('Map.prototype.has', true);\n\n/*\n * This function traverses the list returning the node corresponding to the\n * given key.\n *\n * That node is also moved to the head of the list, so that if it's accessed\n * again we don't need to traverse the whole list. By doing so, all the recently\n * used nodes can be accessed relatively quickly.\n */\nvar listGetNode = function (list, key) { // eslint-disable-line consistent-return\n\tfor (var prev = list, curr; (curr = prev.next) !== null; prev = curr) {\n\t\tif (curr.key === key) {\n\t\t\tprev.next = curr.next;\n\t\t\tcurr.next = list.next;\n\t\t\tlist.next = curr; // eslint-disable-line no-param-reassign\n\t\t\treturn curr;\n\t\t}\n\t}\n};\n\nvar listGet = function (objects, key) {\n\tvar node = listGetNode(objects, key);\n\treturn node && node.value;\n};\nvar listSet = function (objects, key, value) {\n\tvar node = listGetNode(objects, key);\n\tif (node) {\n\t\tnode.value = value;\n\t} else {\n\t\t// Prepend the new node to the beginning of the list\n\t\tobjects.next = { // eslint-disable-line no-param-reassign\n\t\t\tkey: key,\n\t\t\tnext: objects.next,\n\t\t\tvalue: value\n\t\t};\n\t}\n};\nvar listHas = function (objects, key) {\n\treturn !!listGetNode(objects, key);\n};\n\nmodule.exports = function getSideChannel() {\n\tvar $wm;\n\tvar $m;\n\tvar $o;\n\tvar channel = {\n\t\tassert: function (key) {\n\t\t\tif (!channel.has(key)) {\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t}\n\t\t},\n\t\tget: function (key) { // eslint-disable-line consistent-return\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif ($wm) {\n\t\t\t\t\treturn $weakMapGet($wm, key);\n\t\t\t\t}\n\t\t\t} else if ($Map) {\n\t\t\t\tif ($m) {\n\t\t\t\t\treturn $mapGet($m, key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\n\t\t\t\t\treturn listGet($o, key);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\thas: function (key) {\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif ($wm) {\n\t\t\t\t\treturn $weakMapHas($wm, key);\n\t\t\t\t}\n\t\t\t} else if ($Map) {\n\t\t\t\tif ($m) {\n\t\t\t\t\treturn $mapHas($m, key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\n\t\t\t\t\treturn listHas($o, key);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif (!$wm) {\n\t\t\t\t\t$wm = new $WeakMap();\n\t\t\t\t}\n\t\t\t\t$weakMapSet($wm, key, value);\n\t\t\t} else if ($Map) {\n\t\t\t\tif (!$m) {\n\t\t\t\t\t$m = new $Map();\n\t\t\t\t}\n\t\t\t\t$mapSet($m, key, value);\n\t\t\t} else {\n\t\t\t\tif (!$o) {\n\t\t\t\t\t/*\n\t\t\t\t\t * Initialize the linked list as an empty node, so that we don't have\n\t\t\t\t\t * to special-case handling of the first node: we can always refer to\n\t\t\t\t\t * it as (previous node).next, instead of something like (list).head\n\t\t\t\t\t */\n\t\t\t\t\t$o = { key: {}, next: null };\n\t\t\t\t}\n\t\t\t\tlistSet($o, key, value);\n\t\t\t}\n\t\t}\n\t};\n\treturn channel;\n};\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\side-channel\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 524,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\get-intrinsic\\index.js",
    "source": "'use strict';\n\nvar undefined;\n\nvar $SyntaxError = SyntaxError;\nvar $Function = Function;\nvar $TypeError = TypeError;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = Object.getOwnPropertyDescriptor;\nif ($gOPD) {\n\ttry {\n\t\t$gOPD({}, '');\n\t} catch (e) {\n\t\t$gOPD = null; // this is IE 8, which has a broken gOPD\n\t}\n}\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\n\nvar getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,\n\t'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': EvalError,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': Object,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': RangeError,\n\t'%ReferenceError%': ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\n};\n\ntry {\n\tnull.error; // eslint-disable-line no-unused-expressions\n} catch (e) {\n\t// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229\n\tvar errorProto = getProto(getProto(e));\n\tINTRINSICS['%Error.prototype%'] = errorProto;\n}\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('has');\nvar $concat = bind.call(Function.call, Array.prototype.concat);\nvar $spliceApply = bind.call(Function.apply, Array.prototype.splice);\nvar $replace = bind.call(Function.call, String.prototype.replace);\nvar $strSlice = bind.call(Function.call, String.prototype.slice);\nvar $exec = bind.call(Function.call, RegExp.prototype.exec);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tif ($exec(/^%?[^%]*%?$/, name) === null) {\n\t\tthrow new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\n\t}\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\get-intrinsic\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 525,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\has-symbols\\index.js",
    "source": "'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\has-symbols\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 526,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\has-symbols\\shams.js",
    "source": "'use strict';\n\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\has-symbols\\shams.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 527,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\function-bind\\index.js",
    "source": "'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\function-bind\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 528,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\function-bind\\implementation.js",
    "source": "'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slice.call(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                args.concat(slice.call(arguments))\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        } else {\n            return target.apply(\n                that,\n                args.concat(slice.call(arguments))\n            );\n        }\n    };\n\n    var boundLength = Math.max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs.push('$' + i);\n    }\n\n    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\function-bind\\implementation.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 529,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\has\\src\\index.js",
    "source": "'use strict';\n\nvar bind = require('function-bind');\n\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\has\\src\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 530,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\call-bind\\callBound.js",
    "source": "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBind = require('./');\n\nvar $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));\n\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\tvar intrinsic = GetIntrinsic(name, !!allowMissing);\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBind(intrinsic);\n\t}\n\treturn intrinsic;\n};\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\call-bind\\callBound.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 531,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\call-bind\\index.js",
    "source": "'use strict';\n\nvar bind = require('function-bind');\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $apply = GetIntrinsic('%Function.prototype.apply%');\nvar $call = GetIntrinsic('%Function.prototype.call%');\nvar $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\nvar $max = GetIntrinsic('%Math.max%');\n\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = null;\n\t}\n}\n\nmodule.exports = function callBind(originalFunction) {\n\tvar func = $reflectApply(bind, $call, arguments);\n\tif ($gOPD && $defineProperty) {\n\t\tvar desc = $gOPD(func, 'length');\n\t\tif (desc.configurable) {\n\t\t\t// original length, plus the receiver, minus any additional arguments (after the receiver)\n\t\t\t$defineProperty(\n\t\t\t\tfunc,\n\t\t\t\t'length',\n\t\t\t\t{ value: 1 + $max(0, originalFunction.length - (arguments.length - 1)) }\n\t\t\t);\n\t\t}\n\t}\n\treturn func;\n};\n\nvar applyBind = function applyBind() {\n\treturn $reflectApply(bind, $apply, arguments);\n};\n\nif ($defineProperty) {\n\t$defineProperty(module.exports, 'apply', { value: applyBind });\n} else {\n\tmodule.exports.apply = applyBind;\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\call-bind\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 532,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\object-inspect\\index.js",
    "source": "var hasMap = typeof Map === 'function' && Map.prototype;\nvar mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;\nvar mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;\nvar mapForEach = hasMap && Map.prototype.forEach;\nvar hasSet = typeof Set === 'function' && Set.prototype;\nvar setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;\nvar setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;\nvar setForEach = hasSet && Set.prototype.forEach;\nvar hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;\nvar weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;\nvar hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;\nvar weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;\nvar hasWeakRef = typeof WeakRef === 'function' && WeakRef.prototype;\nvar weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;\nvar booleanValueOf = Boolean.prototype.valueOf;\nvar objectToString = Object.prototype.toString;\nvar functionToString = Function.prototype.toString;\nvar $match = String.prototype.match;\nvar $slice = String.prototype.slice;\nvar $replace = String.prototype.replace;\nvar $toUpperCase = String.prototype.toUpperCase;\nvar $toLowerCase = String.prototype.toLowerCase;\nvar $test = RegExp.prototype.test;\nvar $concat = Array.prototype.concat;\nvar $join = Array.prototype.join;\nvar $arrSlice = Array.prototype.slice;\nvar $floor = Math.floor;\nvar bigIntValueOf = typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;\nvar gOPS = Object.getOwnPropertySymbols;\nvar symToString = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? Symbol.prototype.toString : null;\nvar hasShammedSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'object';\n// ie, `has-tostringtag/shams\nvar toStringTag = typeof Symbol === 'function' && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? 'object' : 'symbol')\n    ? Symbol.toStringTag\n    : null;\nvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\nvar gPO = (typeof Reflect === 'function' ? Reflect.getPrototypeOf : Object.getPrototypeOf) || (\n    [].__proto__ === Array.prototype // eslint-disable-line no-proto\n        ? function (O) {\n            return O.__proto__; // eslint-disable-line no-proto\n        }\n        : null\n);\n\nfunction addNumericSeparator(num, str) {\n    if (\n        num === Infinity\n        || num === -Infinity\n        || num !== num\n        || (num && num > -1000 && num < 1000)\n        || $test.call(/e/, str)\n    ) {\n        return str;\n    }\n    var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;\n    if (typeof num === 'number') {\n        var int = num < 0 ? -$floor(-num) : $floor(num); // trunc(num)\n        if (int !== num) {\n            var intStr = String(int);\n            var dec = $slice.call(str, intStr.length + 1);\n            return $replace.call(intStr, sepRegex, '$&_') + '.' + $replace.call($replace.call(dec, /([0-9]{3})/g, '$&_'), /_$/, '');\n        }\n    }\n    return $replace.call(str, sepRegex, '$&_');\n}\n\nvar utilInspect = require('./util.inspect');\nvar inspectCustom = utilInspect.custom;\nvar inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;\n\nmodule.exports = function inspect_(obj, options, depth, seen) {\n    var opts = options || {};\n\n    if (has(opts, 'quoteStyle') && (opts.quoteStyle !== 'single' && opts.quoteStyle !== 'double')) {\n        throw new TypeError('option \"quoteStyle\" must be \"single\" or \"double\"');\n    }\n    if (\n        has(opts, 'maxStringLength') && (typeof opts.maxStringLength === 'number'\n            ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity\n            : opts.maxStringLength !== null\n        )\n    ) {\n        throw new TypeError('option \"maxStringLength\", if provided, must be a positive integer, Infinity, or `null`');\n    }\n    var customInspect = has(opts, 'customInspect') ? opts.customInspect : true;\n    if (typeof customInspect !== 'boolean' && customInspect !== 'symbol') {\n        throw new TypeError('option \"customInspect\", if provided, must be `true`, `false`, or `\\'symbol\\'`');\n    }\n\n    if (\n        has(opts, 'indent')\n        && opts.indent !== null\n        && opts.indent !== '\\t'\n        && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)\n    ) {\n        throw new TypeError('option \"indent\" must be \"\\\\t\", an integer > 0, or `null`');\n    }\n    if (has(opts, 'numericSeparator') && typeof opts.numericSeparator !== 'boolean') {\n        throw new TypeError('option \"numericSeparator\", if provided, must be `true` or `false`');\n    }\n    var numericSeparator = opts.numericSeparator;\n\n    if (typeof obj === 'undefined') {\n        return 'undefined';\n    }\n    if (obj === null) {\n        return 'null';\n    }\n    if (typeof obj === 'boolean') {\n        return obj ? 'true' : 'false';\n    }\n\n    if (typeof obj === 'string') {\n        return inspectString(obj, opts);\n    }\n    if (typeof obj === 'number') {\n        if (obj === 0) {\n            return Infinity / obj > 0 ? '0' : '-0';\n        }\n        var str = String(obj);\n        return numericSeparator ? addNumericSeparator(obj, str) : str;\n    }\n    if (typeof obj === 'bigint') {\n        var bigIntStr = String(obj) + 'n';\n        return numericSeparator ? addNumericSeparator(obj, bigIntStr) : bigIntStr;\n    }\n\n    var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;\n    if (typeof depth === 'undefined') { depth = 0; }\n    if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {\n        return isArray(obj) ? '[Array]' : '[Object]';\n    }\n\n    var indent = getIndent(opts, depth);\n\n    if (typeof seen === 'undefined') {\n        seen = [];\n    } else if (indexOf(seen, obj) >= 0) {\n        return '[Circular]';\n    }\n\n    function inspect(value, from, noIndent) {\n        if (from) {\n            seen = $arrSlice.call(seen);\n            seen.push(from);\n        }\n        if (noIndent) {\n            var newOpts = {\n                depth: opts.depth\n            };\n            if (has(opts, 'quoteStyle')) {\n                newOpts.quoteStyle = opts.quoteStyle;\n            }\n            return inspect_(value, newOpts, depth + 1, seen);\n        }\n        return inspect_(value, opts, depth + 1, seen);\n    }\n\n    if (typeof obj === 'function' && !isRegExp(obj)) { // in older engines, regexes are callable\n        var name = nameOf(obj);\n        var keys = arrObjKeys(obj, inspect);\n        return '[Function' + (name ? ': ' + name : ' (anonymous)') + ']' + (keys.length > 0 ? ' { ' + $join.call(keys, ', ') + ' }' : '');\n    }\n    if (isSymbol(obj)) {\n        var symString = hasShammedSymbols ? $replace.call(String(obj), /^(Symbol\\(.*\\))_[^)]*$/, '$1') : symToString.call(obj);\n        return typeof obj === 'object' && !hasShammedSymbols ? markBoxed(symString) : symString;\n    }\n    if (isElement(obj)) {\n        var s = '<' + $toLowerCase.call(String(obj.nodeName));\n        var attrs = obj.attributes || [];\n        for (var i = 0; i < attrs.length; i++) {\n            s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value), 'double', opts);\n        }\n        s += '>';\n        if (obj.childNodes && obj.childNodes.length) { s += '...'; }\n        s += '</' + $toLowerCase.call(String(obj.nodeName)) + '>';\n        return s;\n    }\n    if (isArray(obj)) {\n        if (obj.length === 0) { return '[]'; }\n        var xs = arrObjKeys(obj, inspect);\n        if (indent && !singleLineValues(xs)) {\n            return '[' + indentedJoin(xs, indent) + ']';\n        }\n        return '[ ' + $join.call(xs, ', ') + ' ]';\n    }\n    if (isError(obj)) {\n        var parts = arrObjKeys(obj, inspect);\n        if (!('cause' in Error.prototype) && 'cause' in obj && !isEnumerable.call(obj, 'cause')) {\n            return '{ [' + String(obj) + '] ' + $join.call($concat.call('[cause]: ' + inspect(obj.cause), parts), ', ') + ' }';\n        }\n        if (parts.length === 0) { return '[' + String(obj) + ']'; }\n        return '{ [' + String(obj) + '] ' + $join.call(parts, ', ') + ' }';\n    }\n    if (typeof obj === 'object' && customInspect) {\n        if (inspectSymbol && typeof obj[inspectSymbol] === 'function' && utilInspect) {\n            return utilInspect(obj, { depth: maxDepth - depth });\n        } else if (customInspect !== 'symbol' && typeof obj.inspect === 'function') {\n            return obj.inspect();\n        }\n    }\n    if (isMap(obj)) {\n        var mapParts = [];\n        if (mapForEach) {\n            mapForEach.call(obj, function (value, key) {\n                mapParts.push(inspect(key, obj, true) + ' => ' + inspect(value, obj));\n            });\n        }\n        return collectionOf('Map', mapSize.call(obj), mapParts, indent);\n    }\n    if (isSet(obj)) {\n        var setParts = [];\n        if (setForEach) {\n            setForEach.call(obj, function (value) {\n                setParts.push(inspect(value, obj));\n            });\n        }\n        return collectionOf('Set', setSize.call(obj), setParts, indent);\n    }\n    if (isWeakMap(obj)) {\n        return weakCollectionOf('WeakMap');\n    }\n    if (isWeakSet(obj)) {\n        return weakCollectionOf('WeakSet');\n    }\n    if (isWeakRef(obj)) {\n        return weakCollectionOf('WeakRef');\n    }\n    if (isNumber(obj)) {\n        return markBoxed(inspect(Number(obj)));\n    }\n    if (isBigInt(obj)) {\n        return markBoxed(inspect(bigIntValueOf.call(obj)));\n    }\n    if (isBoolean(obj)) {\n        return markBoxed(booleanValueOf.call(obj));\n    }\n    if (isString(obj)) {\n        return markBoxed(inspect(String(obj)));\n    }\n    if (!isDate(obj) && !isRegExp(obj)) {\n        var ys = arrObjKeys(obj, inspect);\n        var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;\n        var protoTag = obj instanceof Object ? '' : 'null prototype';\n        var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj), 8, -1) : protoTag ? 'Object' : '';\n        var constructorTag = isPlainObject || typeof obj.constructor !== 'function' ? '' : obj.constructor.name ? obj.constructor.name + ' ' : '';\n        var tag = constructorTag + (stringTag || protoTag ? '[' + $join.call($concat.call([], stringTag || [], protoTag || []), ': ') + '] ' : '');\n        if (ys.length === 0) { return tag + '{}'; }\n        if (indent) {\n            return tag + '{' + indentedJoin(ys, indent) + '}';\n        }\n        return tag + '{ ' + $join.call(ys, ', ') + ' }';\n    }\n    return String(obj);\n};\n\nfunction wrapQuotes(s, defaultStyle, opts) {\n    var quoteChar = (opts.quoteStyle || defaultStyle) === 'double' ? '\"' : \"'\";\n    return quoteChar + s + quoteChar;\n}\n\nfunction quote(s) {\n    return $replace.call(String(s), /\"/g, '&quot;');\n}\n\nfunction isArray(obj) { return toStr(obj) === '[object Array]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isDate(obj) { return toStr(obj) === '[object Date]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isRegExp(obj) { return toStr(obj) === '[object RegExp]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isError(obj) { return toStr(obj) === '[object Error]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isString(obj) { return toStr(obj) === '[object String]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isNumber(obj) { return toStr(obj) === '[object Number]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isBoolean(obj) { return toStr(obj) === '[object Boolean]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\n\n// Symbol and BigInt do have Symbol.toStringTag by spec, so that can't be used to eliminate false positives\nfunction isSymbol(obj) {\n    if (hasShammedSymbols) {\n        return obj && typeof obj === 'object' && obj instanceof Symbol;\n    }\n    if (typeof obj === 'symbol') {\n        return true;\n    }\n    if (!obj || typeof obj !== 'object' || !symToString) {\n        return false;\n    }\n    try {\n        symToString.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isBigInt(obj) {\n    if (!obj || typeof obj !== 'object' || !bigIntValueOf) {\n        return false;\n    }\n    try {\n        bigIntValueOf.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nvar hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };\nfunction has(obj, key) {\n    return hasOwn.call(obj, key);\n}\n\nfunction toStr(obj) {\n    return objectToString.call(obj);\n}\n\nfunction nameOf(f) {\n    if (f.name) { return f.name; }\n    var m = $match.call(functionToString.call(f), /^function\\s*([\\w$]+)/);\n    if (m) { return m[1]; }\n    return null;\n}\n\nfunction indexOf(xs, x) {\n    if (xs.indexOf) { return xs.indexOf(x); }\n    for (var i = 0, l = xs.length; i < l; i++) {\n        if (xs[i] === x) { return i; }\n    }\n    return -1;\n}\n\nfunction isMap(x) {\n    if (!mapSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        mapSize.call(x);\n        try {\n            setSize.call(x);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof Map; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakMap(x) {\n    if (!weakMapHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakMapHas.call(x, weakMapHas);\n        try {\n            weakSetHas.call(x, weakSetHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakMap; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakRef(x) {\n    if (!weakRefDeref || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakRefDeref.call(x);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isSet(x) {\n    if (!setSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        setSize.call(x);\n        try {\n            mapSize.call(x);\n        } catch (m) {\n            return true;\n        }\n        return x instanceof Set; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakSet(x) {\n    if (!weakSetHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakSetHas.call(x, weakSetHas);\n        try {\n            weakMapHas.call(x, weakMapHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakSet; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isElement(x) {\n    if (!x || typeof x !== 'object') { return false; }\n    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {\n        return true;\n    }\n    return typeof x.nodeName === 'string' && typeof x.getAttribute === 'function';\n}\n\nfunction inspectString(str, opts) {\n    if (str.length > opts.maxStringLength) {\n        var remaining = str.length - opts.maxStringLength;\n        var trailer = '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');\n        return inspectString($slice.call(str, 0, opts.maxStringLength), opts) + trailer;\n    }\n    // eslint-disable-next-line no-control-regex\n    var s = $replace.call($replace.call(str, /(['\\\\])/g, '\\\\$1'), /[\\x00-\\x1f]/g, lowbyte);\n    return wrapQuotes(s, 'single', opts);\n}\n\nfunction lowbyte(c) {\n    var n = c.charCodeAt(0);\n    var x = {\n        8: 'b',\n        9: 't',\n        10: 'n',\n        12: 'f',\n        13: 'r'\n    }[n];\n    if (x) { return '\\\\' + x; }\n    return '\\\\x' + (n < 0x10 ? '0' : '') + $toUpperCase.call(n.toString(16));\n}\n\nfunction markBoxed(str) {\n    return 'Object(' + str + ')';\n}\n\nfunction weakCollectionOf(type) {\n    return type + ' { ? }';\n}\n\nfunction collectionOf(type, size, entries, indent) {\n    var joinedEntries = indent ? indentedJoin(entries, indent) : $join.call(entries, ', ');\n    return type + ' (' + size + ') {' + joinedEntries + '}';\n}\n\nfunction singleLineValues(xs) {\n    for (var i = 0; i < xs.length; i++) {\n        if (indexOf(xs[i], '\\n') >= 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction getIndent(opts, depth) {\n    var baseIndent;\n    if (opts.indent === '\\t') {\n        baseIndent = '\\t';\n    } else if (typeof opts.indent === 'number' && opts.indent > 0) {\n        baseIndent = $join.call(Array(opts.indent + 1), ' ');\n    } else {\n        return null;\n    }\n    return {\n        base: baseIndent,\n        prev: $join.call(Array(depth + 1), baseIndent)\n    };\n}\n\nfunction indentedJoin(xs, indent) {\n    if (xs.length === 0) { return ''; }\n    var lineJoiner = '\\n' + indent.prev + indent.base;\n    return lineJoiner + $join.call(xs, ',' + lineJoiner) + '\\n' + indent.prev;\n}\n\nfunction arrObjKeys(obj, inspect) {\n    var isArr = isArray(obj);\n    var xs = [];\n    if (isArr) {\n        xs.length = obj.length;\n        for (var i = 0; i < obj.length; i++) {\n            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';\n        }\n    }\n    var syms = typeof gOPS === 'function' ? gOPS(obj) : [];\n    var symMap;\n    if (hasShammedSymbols) {\n        symMap = {};\n        for (var k = 0; k < syms.length; k++) {\n            symMap['$' + syms[k]] = syms[k];\n        }\n    }\n\n    for (var key in obj) { // eslint-disable-line no-restricted-syntax\n        if (!has(obj, key)) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (isArr && String(Number(key)) === key && key < obj.length) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (hasShammedSymbols && symMap['$' + key] instanceof Symbol) {\n            // this is to prevent shammed Symbols, which are stored as strings, from being included in the string key section\n            continue; // eslint-disable-line no-restricted-syntax, no-continue\n        } else if ($test.call(/[^\\w$]/, key)) {\n            xs.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));\n        } else {\n            xs.push(key + ': ' + inspect(obj[key], obj));\n        }\n    }\n    if (typeof gOPS === 'function') {\n        for (var j = 0; j < syms.length; j++) {\n            if (isEnumerable.call(obj, syms[j])) {\n                xs.push('[' + inspect(syms[j]) + ']: ' + inspect(obj[syms[j]], obj));\n            }\n        }\n    }\n    return xs;\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\object-inspect\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 533,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\object-inspect\\util.inspect.js",
    "source": "module.exports = require('util').inspect;\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\object-inspect\\util.inspect.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 534,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\qs\\lib\\utils.js",
    "source": "'use strict';\n\nvar formats = require('./formats');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    /* eslint no-param-reassign: 0 */\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, decoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar encode = function encode(str, defaultEncoder, charset, kind, format) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== 'string') {\n        string = String(str);\n    }\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n            || (format === formats.RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        /* eslint operator-linebreak: [2, \"before\"] */\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nvar maybeMap = function maybeMap(val, fn) {\n    if (isArray(val)) {\n        var mapped = [];\n        for (var i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    maybeMap: maybeMap,\n    merge: merge\n};\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\qs\\lib\\utils.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 535,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\qs\\lib\\formats.js",
    "source": "'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nvar Format = {\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\nmodule.exports = {\n    'default': Format.RFC3986,\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return String(value);\n        }\n    },\n    RFC1738: Format.RFC1738,\n    RFC3986: Format.RFC3986\n};\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\qs\\lib\\formats.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 536,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\qs\\lib\\parse.js",
    "source": "'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    allowSparse: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\nvar parseArrayValue = function (val, options) {\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\n        return val.split(',');\n    }\n\n    return val;\n};\n\n// This is what browsers will submit when the ✓ character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the ✓ character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = {};\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset, 'key');\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\n            val = utils.maybeMap(\n                parseArrayValue(part.slice(pos + 1), options),\n                function (encodedVal) {\n                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');\n                }\n            );\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (part.indexOf('[]=') > -1) {\n            val = isArray(val) ? [val] : val;\n        }\n\n        if (has.call(obj, key)) {\n            obj[key] = utils.combine(obj[key], val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options, valuesParsed) {\n    var leaf = valuesParsed ? val : parseArrayValue(val, options);\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (!options.parseArrays && cleanRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else if (cleanRoot !== '__proto__') {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options, valuesParsed);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    return {\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        allowSparse: typeof opts.allowSparse === 'boolean' ? opts.allowSparse : defaults.allowSparse,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    if (options.allowSparse === true) {\n        return obj;\n    }\n\n    return utils.compact(obj);\n};\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\qs\\lib\\parse.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 537,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\view.js",
    "source": "/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar debug = require('debug')('express:view');\nvar path = require('path');\nvar fs = require('fs');\n\n/**\n * Module variables.\n * @private\n */\n\nvar dirname = path.dirname;\nvar basename = path.basename;\nvar extname = path.extname;\nvar join = path.join;\nvar resolve = path.resolve;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = View;\n\n/**\n * Initialize a new `View` with the given `name`.\n *\n * Options:\n *\n *   - `defaultEngine` the default template engine name\n *   - `engines` template engine require() cache\n *   - `root` root path for view lookup\n *\n * @param {string} name\n * @param {object} options\n * @public\n */\n\nfunction View(name, options) {\n  var opts = options || {};\n\n  this.defaultEngine = opts.defaultEngine;\n  this.ext = extname(name);\n  this.name = name;\n  this.root = opts.root;\n\n  if (!this.ext && !this.defaultEngine) {\n    throw new Error('No default engine was specified and no extension was provided.');\n  }\n\n  var fileName = name;\n\n  if (!this.ext) {\n    // get extension from default engine name\n    this.ext = this.defaultEngine[0] !== '.'\n      ? '.' + this.defaultEngine\n      : this.defaultEngine;\n\n    fileName += this.ext;\n  }\n\n  if (!opts.engines[this.ext]) {\n    // load engine\n    var mod = this.ext.slice(1)\n    debug('require \"%s\"', mod)\n\n    // default engine export\n    var fn = require(mod).__express\n\n    if (typeof fn !== 'function') {\n      throw new Error('Module \"' + mod + '\" does not provide a view engine.')\n    }\n\n    opts.engines[this.ext] = fn\n  }\n\n  // store loaded engine\n  this.engine = opts.engines[this.ext];\n\n  // lookup path\n  this.path = this.lookup(fileName);\n}\n\n/**\n * Lookup view by the given `name`\n *\n * @param {string} name\n * @private\n */\n\nView.prototype.lookup = function lookup(name) {\n  var path;\n  var roots = [].concat(this.root);\n\n  debug('lookup \"%s\"', name);\n\n  for (var i = 0; i < roots.length && !path; i++) {\n    var root = roots[i];\n\n    // resolve the path\n    var loc = resolve(root, name);\n    var dir = dirname(loc);\n    var file = basename(loc);\n\n    // resolve the file\n    path = this.resolve(dir, file);\n  }\n\n  return path;\n};\n\n/**\n * Render with the given options.\n *\n * @param {object} options\n * @param {function} callback\n * @private\n */\n\nView.prototype.render = function render(options, callback) {\n  debug('render \"%s\"', this.path);\n  this.engine(this.path, options, callback);\n};\n\n/**\n * Resolve the file within the given directory.\n *\n * @param {string} dir\n * @param {string} file\n * @private\n */\n\nView.prototype.resolve = function resolve(dir, file) {\n  var ext = this.ext;\n\n  // <path>.<ext>\n  var path = join(dir, file);\n  var stat = tryStat(path);\n\n  if (stat && stat.isFile()) {\n    return path;\n  }\n\n  // <path>/index.<ext>\n  path = join(dir, basename(file, ext), 'index' + ext);\n  stat = tryStat(path);\n\n  if (stat && stat.isFile()) {\n    return path;\n  }\n};\n\n/**\n * Return a stat, maybe.\n *\n * @param {string} path\n * @return {fs.Stats}\n * @private\n */\n\nfunction tryStat(path) {\n  debug('stat \"%s\"', path);\n\n  try {\n    return fs.statSync(path);\n  } catch (e) {\n    return undefined;\n  }\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\view.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 538,
    "sourcePositions": []
  },
  {
    "url": "node:internal/fs/streams",
    "source": "'use strict';\r\n\r\nconst {\r\n  Array,\r\n  FunctionPrototypeBind,\r\n  MathMin,\r\n  ObjectDefineProperty,\r\n  ObjectSetPrototypeOf,\r\n  PromisePrototypeThen,\r\n  ReflectApply,\r\n  Symbol,\r\n} = primordials;\r\n\r\nconst {\r\n  ERR_INVALID_ARG_TYPE,\r\n  ERR_OUT_OF_RANGE,\r\n  ERR_METHOD_NOT_IMPLEMENTED,\r\n} = require('internal/errors').codes;\r\nconst {\r\n  deprecate,\r\n  kEmptyObject,\r\n} = require('internal/util');\r\nconst {\r\n  validateFunction,\r\n  validateInteger,\r\n} = require('internal/validators');\r\nconst { errorOrDestroy } = require('internal/streams/destroy');\r\nconst fs = require('fs');\r\nconst { kRef, kUnref, FileHandle } = require('internal/fs/promises');\r\nconst { Buffer } = require('buffer');\r\nconst {\r\n  copyObject,\r\n  getOptions,\r\n  getValidatedFd,\r\n  validatePath,\r\n} = require('internal/fs/utils');\r\nconst { Readable, Writable, finished } = require('stream');\r\nconst { toPathIfFileURL } = require('internal/url');\r\nconst kIoDone = Symbol('kIoDone');\r\nconst kIsPerformingIO = Symbol('kIsPerformingIO');\r\n\r\nconst kFs = Symbol('kFs');\r\nconst kHandle = Symbol('kHandle');\r\n\r\nfunction _construct(callback) {\r\n  const stream = this;\r\n  if (typeof stream.fd === 'number') {\r\n    callback();\r\n    return;\r\n  }\r\n\r\n  if (stream.open !== openWriteFs && stream.open !== openReadFs) {\r\n    // Backwards compat for monkey patching open().\r\n    const orgEmit = stream.emit;\r\n    stream.emit = function(...args) {\r\n      if (args[0] === 'open') {\r\n        this.emit = orgEmit;\r\n        callback();\r\n        ReflectApply(orgEmit, this, args);\r\n      } else if (args[0] === 'error') {\r\n        this.emit = orgEmit;\r\n        callback(args[1]);\r\n      } else {\r\n        ReflectApply(orgEmit, this, args);\r\n      }\r\n    };\r\n    stream.open();\r\n  } else {\r\n    stream[kFs].open(stream.path, stream.flags, stream.mode, (er, fd) => {\r\n      if (er) {\r\n        callback(er);\r\n      } else {\r\n        stream.fd = fd;\r\n        callback();\r\n        stream.emit('open', stream.fd);\r\n        stream.emit('ready');\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n// This generates an fs operations structure for a FileHandle\r\nconst FileHandleOperations = (handle) => {\r\n  return {\r\n    open: (path, flags, mode, cb) => {\r\n      throw new ERR_METHOD_NOT_IMPLEMENTED('open()');\r\n    },\r\n    close: (fd, cb) => {\r\n      handle[kUnref]();\r\n      PromisePrototypeThen(handle.close(),\r\n                           () => cb(), cb);\r\n    },\r\n    read: (fd, buf, offset, length, pos, cb) => {\r\n      PromisePrototypeThen(handle.read(buf, offset, length, pos),\r\n                           (r) => cb(null, r.bytesRead, r.buffer),\r\n                           (err) => cb(err, 0, buf));\r\n    },\r\n    write: (fd, buf, offset, length, pos, cb) => {\r\n      PromisePrototypeThen(handle.write(buf, offset, length, pos),\r\n                           (r) => cb(null, r.bytesWritten, r.buffer),\r\n                           (err) => cb(err, 0, buf));\r\n    },\r\n    writev: (fd, buffers, pos, cb) => {\r\n      PromisePrototypeThen(handle.writev(buffers, pos),\r\n                           (r) => cb(null, r.bytesWritten, r.buffers),\r\n                           (err) => cb(err, 0, buffers));\r\n    }\r\n  };\r\n};\r\n\r\nfunction close(stream, err, cb) {\r\n  if (!stream.fd) {\r\n    cb(err);\r\n  } else {\r\n    stream[kFs].close(stream.fd, (er) => {\r\n      cb(er || err);\r\n    });\r\n    stream.fd = null;\r\n  }\r\n}\r\n\r\nfunction importFd(stream, options) {\r\n  if (typeof options.fd === 'number') {\r\n    // When fd is a raw descriptor, we must keep our fingers crossed\r\n    // that the descriptor won't get closed, or worse, replaced with\r\n    // another one\r\n    // https://github.com/nodejs/node/issues/35862\r\n    stream[kFs] = options.fs || fs;\r\n    return options.fd;\r\n  } else if (typeof options.fd === 'object' &&\r\n             options.fd instanceof FileHandle) {\r\n    // When fd is a FileHandle we can listen for 'close' events\r\n    if (options.fs) {\r\n      // FileHandle is not supported with custom fs operations\r\n      throw new ERR_METHOD_NOT_IMPLEMENTED('FileHandle with fs');\r\n    }\r\n    stream[kHandle] = options.fd;\r\n    stream[kFs] = FileHandleOperations(stream[kHandle]);\r\n    stream[kHandle][kRef]();\r\n    options.fd.on('close', FunctionPrototypeBind(stream.close, stream));\r\n    return options.fd.fd;\r\n  }\r\n\r\n  throw ERR_INVALID_ARG_TYPE('options.fd',\r\n                             ['number', 'FileHandle'], options.fd);\r\n}\r\n\r\nfunction ReadStream(path, options) {\r\n  if (!(this instanceof ReadStream))\r\n    return new ReadStream(path, options);\r\n\r\n  // A little bit bigger buffer and water marks by default\r\n  options = copyObject(getOptions(options, kEmptyObject));\r\n  if (options.highWaterMark === undefined)\r\n    options.highWaterMark = 64 * 1024;\r\n\r\n  if (options.autoDestroy === undefined) {\r\n    options.autoDestroy = false;\r\n  }\r\n\r\n  if (options.fd == null) {\r\n    this.fd = null;\r\n    this[kFs] = options.fs || fs;\r\n    validateFunction(this[kFs].open, 'options.fs.open');\r\n\r\n    // Path will be ignored when fd is specified, so it can be falsy\r\n    this.path = toPathIfFileURL(path);\r\n    this.flags = options.flags === undefined ? 'r' : options.flags;\r\n    this.mode = options.mode === undefined ? 0o666 : options.mode;\r\n\r\n    validatePath(this.path);\r\n  } else {\r\n    this.fd = getValidatedFd(importFd(this, options));\r\n  }\r\n\r\n  options.autoDestroy = options.autoClose === undefined ?\r\n    true : options.autoClose;\r\n\r\n  validateFunction(this[kFs].read, 'options.fs.read');\r\n\r\n  if (options.autoDestroy) {\r\n    validateFunction(this[kFs].close, 'options.fs.close');\r\n  }\r\n\r\n  this.start = options.start;\r\n  this.end = options.end;\r\n  this.pos = undefined;\r\n  this.bytesRead = 0;\r\n  this[kIsPerformingIO] = false;\r\n\r\n  if (this.start !== undefined) {\r\n    validateInteger(this.start, 'start', 0);\r\n\r\n    this.pos = this.start;\r\n  }\r\n\r\n\r\n  if (this.end === undefined) {\r\n    this.end = Infinity;\r\n  } else if (this.end !== Infinity) {\r\n    validateInteger(this.end, 'end', 0);\r\n\r\n    if (this.start !== undefined && this.start > this.end) {\r\n      throw new ERR_OUT_OF_RANGE(\r\n        'start',\r\n        `<= \"end\" (here: ${this.end})`,\r\n        this.start\r\n      );\r\n    }\r\n  }\r\n\r\n  ReflectApply(Readable, this, [options]);\r\n}\r\nObjectSetPrototypeOf(ReadStream.prototype, Readable.prototype);\r\nObjectSetPrototypeOf(ReadStream, Readable);\r\n\r\nObjectDefineProperty(ReadStream.prototype, 'autoClose', {\r\n  __proto__: null,\r\n  get() {\r\n    return this._readableState.autoDestroy;\r\n  },\r\n  set(val) {\r\n    this._readableState.autoDestroy = val;\r\n  }\r\n});\r\n\r\nconst openReadFs = deprecate(function() {\r\n  // Noop.\r\n}, 'ReadStream.prototype.open() is deprecated', 'DEP0135');\r\nReadStream.prototype.open = openReadFs;\r\n\r\nReadStream.prototype._construct = _construct;\r\n\r\nReadStream.prototype._read = function(n) {\r\n  n = this.pos !== undefined ?\r\n    MathMin(this.end - this.pos + 1, n) :\r\n    MathMin(this.end - this.bytesRead + 1, n);\r\n\r\n  if (n <= 0) {\r\n    this.push(null);\r\n    return;\r\n  }\r\n\r\n  const buf = Buffer.allocUnsafeSlow(n);\r\n\r\n  this[kIsPerformingIO] = true;\r\n  this[kFs]\r\n    .read(this.fd, buf, 0, n, this.pos, (er, bytesRead, buf) => {\r\n      this[kIsPerformingIO] = false;\r\n\r\n      // Tell ._destroy() that it's safe to close the fd now.\r\n      if (this.destroyed) {\r\n        this.emit(kIoDone, er);\r\n        return;\r\n      }\r\n\r\n      if (er) {\r\n        errorOrDestroy(this, er);\r\n      } else if (bytesRead > 0) {\r\n        if (this.pos !== undefined) {\r\n          this.pos += bytesRead;\r\n        }\r\n\r\n        this.bytesRead += bytesRead;\r\n\r\n        if (bytesRead !== buf.length) {\r\n          // Slow path. Shrink to fit.\r\n          // Copy instead of slice so that we don't retain\r\n          // large backing buffer for small reads.\r\n          const dst = Buffer.allocUnsafeSlow(bytesRead);\r\n          buf.copy(dst, 0, 0, bytesRead);\r\n          buf = dst;\r\n        }\r\n\r\n        this.push(buf);\r\n      } else {\r\n        this.push(null);\r\n      }\r\n    });\r\n};\r\n\r\nReadStream.prototype._destroy = function(err, cb) {\r\n  // Usually for async IO it is safe to close a file descriptor\r\n  // even when there are pending operations. However, due to platform\r\n  // differences file IO is implemented using synchronous operations\r\n  // running in a thread pool. Therefore, file descriptors are not safe\r\n  // to close while used in a pending read or write operation. Wait for\r\n  // any pending IO (kIsPerformingIO) to complete (kIoDone).\r\n  if (this[kIsPerformingIO]) {\r\n    this.once(kIoDone, (er) => close(this, err || er, cb));\r\n  } else {\r\n    close(this, err, cb);\r\n  }\r\n};\r\n\r\nReadStream.prototype.close = function(cb) {\r\n  if (typeof cb === 'function') finished(this, cb);\r\n  this.destroy();\r\n};\r\n\r\nObjectDefineProperty(ReadStream.prototype, 'pending', {\r\n  __proto__: null,\r\n  get() { return this.fd === null; },\r\n  configurable: true\r\n});\r\n\r\nfunction WriteStream(path, options) {\r\n  if (!(this instanceof WriteStream))\r\n    return new WriteStream(path, options);\r\n\r\n  options = copyObject(getOptions(options, kEmptyObject));\r\n\r\n  // Only buffers are supported.\r\n  options.decodeStrings = true;\r\n\r\n  if (options.fd == null) {\r\n    this.fd = null;\r\n    this[kFs] = options.fs || fs;\r\n    validateFunction(this[kFs].open, 'options.fs.open');\r\n\r\n    // Path will be ignored when fd is specified, so it can be falsy\r\n    this.path = toPathIfFileURL(path);\r\n    this.flags = options.flags === undefined ? 'w' : options.flags;\r\n    this.mode = options.mode === undefined ? 0o666 : options.mode;\r\n\r\n    validatePath(this.path);\r\n  } else {\r\n    this.fd = getValidatedFd(importFd(this, options));\r\n  }\r\n\r\n  options.autoDestroy = options.autoClose === undefined ?\r\n    true : options.autoClose;\r\n\r\n  if (!this[kFs].write && !this[kFs].writev) {\r\n    throw new ERR_INVALID_ARG_TYPE('options.fs.write', 'function',\r\n                                   this[kFs].write);\r\n  }\r\n\r\n  if (this[kFs].write) {\r\n    validateFunction(this[kFs].write, 'options.fs.write');\r\n  }\r\n\r\n  if (this[kFs].writev) {\r\n    validateFunction(this[kFs].writev, 'options.fs.writev');\r\n  }\r\n\r\n  if (options.autoDestroy) {\r\n    validateFunction(this[kFs].close, 'options.fs.close');\r\n  }\r\n\r\n  // It's enough to override either, in which case only one will be used.\r\n  if (!this[kFs].write) {\r\n    this._write = null;\r\n  }\r\n  if (!this[kFs].writev) {\r\n    this._writev = null;\r\n  }\r\n\r\n  this.start = options.start;\r\n  this.pos = undefined;\r\n  this.bytesWritten = 0;\r\n  this[kIsPerformingIO] = false;\r\n\r\n  if (this.start !== undefined) {\r\n    validateInteger(this.start, 'start', 0);\r\n\r\n    this.pos = this.start;\r\n  }\r\n\r\n  ReflectApply(Writable, this, [options]);\r\n\r\n  if (options.encoding)\r\n    this.setDefaultEncoding(options.encoding);\r\n}\r\nObjectSetPrototypeOf(WriteStream.prototype, Writable.prototype);\r\nObjectSetPrototypeOf(WriteStream, Writable);\r\n\r\nObjectDefineProperty(WriteStream.prototype, 'autoClose', {\r\n  __proto__: null,\r\n  get() {\r\n    return this._writableState.autoDestroy;\r\n  },\r\n  set(val) {\r\n    this._writableState.autoDestroy = val;\r\n  }\r\n});\r\n\r\nconst openWriteFs = deprecate(function() {\r\n  // Noop.\r\n}, 'WriteStream.prototype.open() is deprecated', 'DEP0135');\r\nWriteStream.prototype.open = openWriteFs;\r\n\r\nWriteStream.prototype._construct = _construct;\r\n\r\nWriteStream.prototype._write = function(data, encoding, cb) {\r\n  this[kIsPerformingIO] = true;\r\n  this[kFs].write(this.fd, data, 0, data.length, this.pos, (er, bytes) => {\r\n    this[kIsPerformingIO] = false;\r\n    if (this.destroyed) {\r\n      // Tell ._destroy() that it's safe to close the fd now.\r\n      cb(er);\r\n      return this.emit(kIoDone, er);\r\n    }\r\n\r\n    if (er) {\r\n      return cb(er);\r\n    }\r\n\r\n    this.bytesWritten += bytes;\r\n    cb();\r\n  });\r\n\r\n  if (this.pos !== undefined)\r\n    this.pos += data.length;\r\n};\r\n\r\nWriteStream.prototype._writev = function(data, cb) {\r\n  const len = data.length;\r\n  const chunks = new Array(len);\r\n  let size = 0;\r\n\r\n  for (let i = 0; i < len; i++) {\r\n    const chunk = data[i].chunk;\r\n\r\n    chunks[i] = chunk;\r\n    size += chunk.length;\r\n  }\r\n\r\n  this[kIsPerformingIO] = true;\r\n  this[kFs].writev(this.fd, chunks, this.pos, (er, bytes) => {\r\n    this[kIsPerformingIO] = false;\r\n    if (this.destroyed) {\r\n      // Tell ._destroy() that it's safe to close the fd now.\r\n      cb(er);\r\n      return this.emit(kIoDone, er);\r\n    }\r\n\r\n    if (er) {\r\n      return cb(er);\r\n    }\r\n\r\n    this.bytesWritten += bytes;\r\n    cb();\r\n  });\r\n\r\n  if (this.pos !== undefined)\r\n    this.pos += size;\r\n};\r\n\r\nWriteStream.prototype._destroy = function(err, cb) {\r\n  // Usually for async IO it is safe to close a file descriptor\r\n  // even when there are pending operations. However, due to platform\r\n  // differences file IO is implemented using synchronous operations\r\n  // running in a thread pool. Therefore, file descriptors are not safe\r\n  // to close while used in a pending read or write operation. Wait for\r\n  // any pending IO (kIsPerformingIO) to complete (kIoDone).\r\n  if (this[kIsPerformingIO]) {\r\n    this.once(kIoDone, (er) => close(this, err || er, cb));\r\n  } else {\r\n    close(this, err, cb);\r\n  }\r\n};\r\n\r\nWriteStream.prototype.close = function(cb) {\r\n  if (cb) {\r\n    if (this.closed) {\r\n      process.nextTick(cb);\r\n      return;\r\n    }\r\n    this.on('close', cb);\r\n  }\r\n\r\n  // If we are not autoClosing, we should call\r\n  // destroy on 'finish'.\r\n  if (!this.autoClose) {\r\n    this.on('finish', this.destroy);\r\n  }\r\n\r\n  // We use end() instead of destroy() because of\r\n  // https://github.com/nodejs/node/issues/2006\r\n  this.end();\r\n};\r\n\r\n// There is no shutdown() for files.\r\nWriteStream.prototype.destroySoon = WriteStream.prototype.end;\r\n\r\nObjectDefineProperty(WriteStream.prototype, 'pending', {\r\n  __proto__: null,\r\n  get() { return this.fd === null; },\r\n  configurable: true\r\n});\r\n\r\nmodule.exports = {\r\n  ReadStream,\r\n  WriteStream\r\n};\r\n",
    "name": "streams",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 539,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\utils.js",
    "source": "/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @api private\n */\n\nvar Buffer = require('safe-buffer').Buffer\nvar contentDisposition = require('content-disposition');\nvar contentType = require('content-type');\nvar deprecate = require('depd')('express');\nvar flatten = require('array-flatten');\nvar mime = require('send').mime;\nvar etag = require('etag');\nvar proxyaddr = require('proxy-addr');\nvar qs = require('qs');\nvar querystring = require('querystring');\n\n/**\n * Return strong ETag for `body`.\n *\n * @param {String|Buffer} body\n * @param {String} [encoding]\n * @return {String}\n * @api private\n */\n\nexports.etag = createETagGenerator({ weak: false })\n\n/**\n * Return weak ETag for `body`.\n *\n * @param {String|Buffer} body\n * @param {String} [encoding]\n * @return {String}\n * @api private\n */\n\nexports.wetag = createETagGenerator({ weak: true })\n\n/**\n * Check if `path` looks absolute.\n *\n * @param {String} path\n * @return {Boolean}\n * @api private\n */\n\nexports.isAbsolute = function(path){\n  if ('/' === path[0]) return true;\n  if (':' === path[1] && ('\\\\' === path[2] || '/' === path[2])) return true; // Windows device path\n  if ('\\\\\\\\' === path.substring(0, 2)) return true; // Microsoft Azure absolute path\n};\n\n/**\n * Flatten the given `arr`.\n *\n * @param {Array} arr\n * @return {Array}\n * @api private\n */\n\nexports.flatten = deprecate.function(flatten,\n  'utils.flatten: use array-flatten npm module instead');\n\n/**\n * Normalize the given `type`, for example \"html\" becomes \"text/html\".\n *\n * @param {String} type\n * @return {Object}\n * @api private\n */\n\nexports.normalizeType = function(type){\n  return ~type.indexOf('/')\n    ? acceptParams(type)\n    : { value: mime.lookup(type), params: {} };\n};\n\n/**\n * Normalize `types`, for example \"html\" becomes \"text/html\".\n *\n * @param {Array} types\n * @return {Array}\n * @api private\n */\n\nexports.normalizeTypes = function(types){\n  var ret = [];\n\n  for (var i = 0; i < types.length; ++i) {\n    ret.push(exports.normalizeType(types[i]));\n  }\n\n  return ret;\n};\n\n/**\n * Generate Content-Disposition header appropriate for the filename.\n * non-ascii filenames are urlencoded and a filename* parameter is added\n *\n * @param {String} filename\n * @return {String}\n * @api private\n */\n\nexports.contentDisposition = deprecate.function(contentDisposition,\n  'utils.contentDisposition: use content-disposition npm module instead');\n\n/**\n * Parse accept params `str` returning an\n * object with `.value`, `.quality` and `.params`.\n * also includes `.originalIndex` for stable sorting\n *\n * @param {String} str\n * @param {Number} index\n * @return {Object}\n * @api private\n */\n\nfunction acceptParams(str, index) {\n  var parts = str.split(/ *; */);\n  var ret = { value: parts[0], quality: 1, params: {}, originalIndex: index };\n\n  for (var i = 1; i < parts.length; ++i) {\n    var pms = parts[i].split(/ *= */);\n    if ('q' === pms[0]) {\n      ret.quality = parseFloat(pms[1]);\n    } else {\n      ret.params[pms[0]] = pms[1];\n    }\n  }\n\n  return ret;\n}\n\n/**\n * Compile \"etag\" value to function.\n *\n * @param  {Boolean|String|Function} val\n * @return {Function}\n * @api private\n */\n\nexports.compileETag = function(val) {\n  var fn;\n\n  if (typeof val === 'function') {\n    return val;\n  }\n\n  switch (val) {\n    case true:\n    case 'weak':\n      fn = exports.wetag;\n      break;\n    case false:\n      break;\n    case 'strong':\n      fn = exports.etag;\n      break;\n    default:\n      throw new TypeError('unknown value for etag function: ' + val);\n  }\n\n  return fn;\n}\n\n/**\n * Compile \"query parser\" value to function.\n *\n * @param  {String|Function} val\n * @return {Function}\n * @api private\n */\n\nexports.compileQueryParser = function compileQueryParser(val) {\n  var fn;\n\n  if (typeof val === 'function') {\n    return val;\n  }\n\n  switch (val) {\n    case true:\n    case 'simple':\n      fn = querystring.parse;\n      break;\n    case false:\n      fn = newObject;\n      break;\n    case 'extended':\n      fn = parseExtendedQueryString;\n      break;\n    default:\n      throw new TypeError('unknown value for query parser function: ' + val);\n  }\n\n  return fn;\n}\n\n/**\n * Compile \"proxy trust\" value to function.\n *\n * @param  {Boolean|String|Number|Array|Function} val\n * @return {Function}\n * @api private\n */\n\nexports.compileTrust = function(val) {\n  if (typeof val === 'function') return val;\n\n  if (val === true) {\n    // Support plain true/false\n    return function(){ return true };\n  }\n\n  if (typeof val === 'number') {\n    // Support trusting hop count\n    return function(a, i){ return i < val };\n  }\n\n  if (typeof val === 'string') {\n    // Support comma-separated values\n    val = val.split(',')\n      .map(function (v) { return v.trim() })\n  }\n\n  return proxyaddr.compile(val || []);\n}\n\n/**\n * Set the charset in a given Content-Type string.\n *\n * @param {String} type\n * @param {String} charset\n * @return {String}\n * @api private\n */\n\nexports.setCharset = function setCharset(type, charset) {\n  if (!type || !charset) {\n    return type;\n  }\n\n  // parse type\n  var parsed = contentType.parse(type);\n\n  // set charset\n  parsed.parameters.charset = charset;\n\n  // format type\n  return contentType.format(parsed);\n};\n\n/**\n * Create an ETag generator function, generating ETags with\n * the given options.\n *\n * @param {object} options\n * @return {function}\n * @private\n */\n\nfunction createETagGenerator (options) {\n  return function generateETag (body, encoding) {\n    var buf = !Buffer.isBuffer(body)\n      ? Buffer.from(body, encoding)\n      : body\n\n    return etag(buf, options)\n  }\n}\n\n/**\n * Parse an extended query string with qs.\n *\n * @return {Object}\n * @private\n */\n\nfunction parseExtendedQueryString(str) {\n  return qs.parse(str, {\n    allowPrototypes: true\n  });\n}\n\n/**\n * Return new empty object.\n *\n * @return {Object}\n * @api private\n */\n\nfunction newObject() {\n  return {};\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\utils.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 540,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\safe-buffer\\index.js",
    "source": "/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\safe-buffer\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 541,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\content-disposition\\index.js",
    "source": "/*!\n * content-disposition\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = contentDisposition\nmodule.exports.parse = parse\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar basename = require('path').basename\nvar Buffer = require('safe-buffer').Buffer\n\n/**\n * RegExp to match non attr-char, *after* encodeURIComponent (i.e. not including \"%\")\n * @private\n */\n\nvar ENCODE_URL_ATTR_CHAR_REGEXP = /[\\x00-\\x20\"'()*,/:;<=>?@[\\\\\\]{}\\x7f]/g // eslint-disable-line no-control-regex\n\n/**\n * RegExp to match percent encoding escape.\n * @private\n */\n\nvar HEX_ESCAPE_REGEXP = /%[0-9A-Fa-f]{2}/\nvar HEX_ESCAPE_REPLACE_REGEXP = /%([0-9A-Fa-f]{2})/g\n\n/**\n * RegExp to match non-latin1 characters.\n * @private\n */\n\nvar NON_LATIN1_REGEXP = /[^\\x20-\\x7e\\xa0-\\xff]/g\n\n/**\n * RegExp to match quoted-pair in RFC 2616\n *\n * quoted-pair = \"\\\" CHAR\n * CHAR        = <any US-ASCII character (octets 0 - 127)>\n * @private\n */\n\nvar QESC_REGEXP = /\\\\([\\u0000-\\u007f])/g // eslint-disable-line no-control-regex\n\n/**\n * RegExp to match chars that must be quoted-pair in RFC 2616\n * @private\n */\n\nvar QUOTE_REGEXP = /([\\\\\"])/g\n\n/**\n * RegExp for various RFC 2616 grammar\n *\n * parameter     = token \"=\" ( token | quoted-string )\n * token         = 1*<any CHAR except CTLs or separators>\n * separators    = \"(\" | \")\" | \"<\" | \">\" | \"@\"\n *               | \",\" | \";\" | \":\" | \"\\\" | <\">\n *               | \"/\" | \"[\" | \"]\" | \"?\" | \"=\"\n *               | \"{\" | \"}\" | SP | HT\n * quoted-string = ( <\"> *(qdtext | quoted-pair ) <\"> )\n * qdtext        = <any TEXT except <\">>\n * quoted-pair   = \"\\\" CHAR\n * CHAR          = <any US-ASCII character (octets 0 - 127)>\n * TEXT          = <any OCTET except CTLs, but including LWS>\n * LWS           = [CRLF] 1*( SP | HT )\n * CRLF          = CR LF\n * CR            = <US-ASCII CR, carriage return (13)>\n * LF            = <US-ASCII LF, linefeed (10)>\n * SP            = <US-ASCII SP, space (32)>\n * HT            = <US-ASCII HT, horizontal-tab (9)>\n * CTL           = <any US-ASCII control character (octets 0 - 31) and DEL (127)>\n * OCTET         = <any 8-bit sequence of data>\n * @private\n */\n\nvar PARAM_REGEXP = /;[\\x09\\x20]*([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\\x09\\x20]*=[\\x09\\x20]*(\"(?:[\\x20!\\x23-\\x5b\\x5d-\\x7e\\x80-\\xff]|\\\\[\\x20-\\x7e])*\"|[!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\\x09\\x20]*/g // eslint-disable-line no-control-regex\nvar TEXT_REGEXP = /^[\\x20-\\x7e\\x80-\\xff]+$/\nvar TOKEN_REGEXP = /^[!#$%&'*+.0-9A-Z^_`a-z|~-]+$/\n\n/**\n * RegExp for various RFC 5987 grammar\n *\n * ext-value     = charset  \"'\" [ language ] \"'\" value-chars\n * charset       = \"UTF-8\" / \"ISO-8859-1\" / mime-charset\n * mime-charset  = 1*mime-charsetc\n * mime-charsetc = ALPHA / DIGIT\n *               / \"!\" / \"#\" / \"$\" / \"%\" / \"&\"\n *               / \"+\" / \"-\" / \"^\" / \"_\" / \"`\"\n *               / \"{\" / \"}\" / \"~\"\n * language      = ( 2*3ALPHA [ extlang ] )\n *               / 4ALPHA\n *               / 5*8ALPHA\n * extlang       = *3( \"-\" 3ALPHA )\n * value-chars   = *( pct-encoded / attr-char )\n * pct-encoded   = \"%\" HEXDIG HEXDIG\n * attr-char     = ALPHA / DIGIT\n *               / \"!\" / \"#\" / \"$\" / \"&\" / \"+\" / \"-\" / \".\"\n *               / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n * @private\n */\n\nvar EXT_VALUE_REGEXP = /^([A-Za-z0-9!#$%&+\\-^_`{}~]+)'(?:[A-Za-z]{2,3}(?:-[A-Za-z]{3}){0,3}|[A-Za-z]{4,8}|)'((?:%[0-9A-Fa-f]{2}|[A-Za-z0-9!#$&+.^_`|~-])+)$/\n\n/**\n * RegExp for various RFC 6266 grammar\n *\n * disposition-type = \"inline\" | \"attachment\" | disp-ext-type\n * disp-ext-type    = token\n * disposition-parm = filename-parm | disp-ext-parm\n * filename-parm    = \"filename\" \"=\" value\n *                  | \"filename*\" \"=\" ext-value\n * disp-ext-parm    = token \"=\" value\n *                  | ext-token \"=\" ext-value\n * ext-token        = <the characters in token, followed by \"*\">\n * @private\n */\n\nvar DISPOSITION_TYPE_REGEXP = /^([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\\x09\\x20]*(?:$|;)/ // eslint-disable-line no-control-regex\n\n/**\n * Create an attachment Content-Disposition header.\n *\n * @param {string} [filename]\n * @param {object} [options]\n * @param {string} [options.type=attachment]\n * @param {string|boolean} [options.fallback=true]\n * @return {string}\n * @public\n */\n\nfunction contentDisposition (filename, options) {\n  var opts = options || {}\n\n  // get type\n  var type = opts.type || 'attachment'\n\n  // get parameters\n  var params = createparams(filename, opts.fallback)\n\n  // format into string\n  return format(new ContentDisposition(type, params))\n}\n\n/**\n * Create parameters object from filename and fallback.\n *\n * @param {string} [filename]\n * @param {string|boolean} [fallback=true]\n * @return {object}\n * @private\n */\n\nfunction createparams (filename, fallback) {\n  if (filename === undefined) {\n    return\n  }\n\n  var params = {}\n\n  if (typeof filename !== 'string') {\n    throw new TypeError('filename must be a string')\n  }\n\n  // fallback defaults to true\n  if (fallback === undefined) {\n    fallback = true\n  }\n\n  if (typeof fallback !== 'string' && typeof fallback !== 'boolean') {\n    throw new TypeError('fallback must be a string or boolean')\n  }\n\n  if (typeof fallback === 'string' && NON_LATIN1_REGEXP.test(fallback)) {\n    throw new TypeError('fallback must be ISO-8859-1 string')\n  }\n\n  // restrict to file base name\n  var name = basename(filename)\n\n  // determine if name is suitable for quoted string\n  var isQuotedString = TEXT_REGEXP.test(name)\n\n  // generate fallback name\n  var fallbackName = typeof fallback !== 'string'\n    ? fallback && getlatin1(name)\n    : basename(fallback)\n  var hasFallback = typeof fallbackName === 'string' && fallbackName !== name\n\n  // set extended filename parameter\n  if (hasFallback || !isQuotedString || HEX_ESCAPE_REGEXP.test(name)) {\n    params['filename*'] = name\n  }\n\n  // set filename parameter\n  if (isQuotedString || hasFallback) {\n    params.filename = hasFallback\n      ? fallbackName\n      : name\n  }\n\n  return params\n}\n\n/**\n * Format object to Content-Disposition header.\n *\n * @param {object} obj\n * @param {string} obj.type\n * @param {object} [obj.parameters]\n * @return {string}\n * @private\n */\n\nfunction format (obj) {\n  var parameters = obj.parameters\n  var type = obj.type\n\n  if (!type || typeof type !== 'string' || !TOKEN_REGEXP.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  // start with normalized type\n  var string = String(type).toLowerCase()\n\n  // append parameters\n  if (parameters && typeof parameters === 'object') {\n    var param\n    var params = Object.keys(parameters).sort()\n\n    for (var i = 0; i < params.length; i++) {\n      param = params[i]\n\n      var val = param.substr(-1) === '*'\n        ? ustring(parameters[param])\n        : qstring(parameters[param])\n\n      string += '; ' + param + '=' + val\n    }\n  }\n\n  return string\n}\n\n/**\n * Decode a RFC 5987 field value (gracefully).\n *\n * @param {string} str\n * @return {string}\n * @private\n */\n\nfunction decodefield (str) {\n  var match = EXT_VALUE_REGEXP.exec(str)\n\n  if (!match) {\n    throw new TypeError('invalid extended field value')\n  }\n\n  var charset = match[1].toLowerCase()\n  var encoded = match[2]\n  var value\n\n  // to binary string\n  var binary = encoded.replace(HEX_ESCAPE_REPLACE_REGEXP, pdecode)\n\n  switch (charset) {\n    case 'iso-8859-1':\n      value = getlatin1(binary)\n      break\n    case 'utf-8':\n      value = Buffer.from(binary, 'binary').toString('utf8')\n      break\n    default:\n      throw new TypeError('unsupported charset in extended field')\n  }\n\n  return value\n}\n\n/**\n * Get ISO-8859-1 version of string.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction getlatin1 (val) {\n  // simple Unicode -> ISO-8859-1 transformation\n  return String(val).replace(NON_LATIN1_REGEXP, '?')\n}\n\n/**\n * Parse Content-Disposition header string.\n *\n * @param {string} string\n * @return {object}\n * @public\n */\n\nfunction parse (string) {\n  if (!string || typeof string !== 'string') {\n    throw new TypeError('argument string is required')\n  }\n\n  var match = DISPOSITION_TYPE_REGEXP.exec(string)\n\n  if (!match) {\n    throw new TypeError('invalid type format')\n  }\n\n  // normalize type\n  var index = match[0].length\n  var type = match[1].toLowerCase()\n\n  var key\n  var names = []\n  var params = {}\n  var value\n\n  // calculate index to start at\n  index = PARAM_REGEXP.lastIndex = match[0].substr(-1) === ';'\n    ? index - 1\n    : index\n\n  // match parameters\n  while ((match = PARAM_REGEXP.exec(string))) {\n    if (match.index !== index) {\n      throw new TypeError('invalid parameter format')\n    }\n\n    index += match[0].length\n    key = match[1].toLowerCase()\n    value = match[2]\n\n    if (names.indexOf(key) !== -1) {\n      throw new TypeError('invalid duplicate parameter')\n    }\n\n    names.push(key)\n\n    if (key.indexOf('*') + 1 === key.length) {\n      // decode extended value\n      key = key.slice(0, -1)\n      value = decodefield(value)\n\n      // overwrite existing value\n      params[key] = value\n      continue\n    }\n\n    if (typeof params[key] === 'string') {\n      continue\n    }\n\n    if (value[0] === '\"') {\n      // remove quotes and escapes\n      value = value\n        .substr(1, value.length - 2)\n        .replace(QESC_REGEXP, '$1')\n    }\n\n    params[key] = value\n  }\n\n  if (index !== -1 && index !== string.length) {\n    throw new TypeError('invalid parameter format')\n  }\n\n  return new ContentDisposition(type, params)\n}\n\n/**\n * Percent decode a single character.\n *\n * @param {string} str\n * @param {string} hex\n * @return {string}\n * @private\n */\n\nfunction pdecode (str, hex) {\n  return String.fromCharCode(parseInt(hex, 16))\n}\n\n/**\n * Percent encode a single character.\n *\n * @param {string} char\n * @return {string}\n * @private\n */\n\nfunction pencode (char) {\n  return '%' + String(char)\n    .charCodeAt(0)\n    .toString(16)\n    .toUpperCase()\n}\n\n/**\n * Quote a string for HTTP.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction qstring (val) {\n  var str = String(val)\n\n  return '\"' + str.replace(QUOTE_REGEXP, '\\\\$1') + '\"'\n}\n\n/**\n * Encode a Unicode string for HTTP (RFC 5987).\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction ustring (val) {\n  var str = String(val)\n\n  // percent encode as UTF-8\n  var encoded = encodeURIComponent(str)\n    .replace(ENCODE_URL_ATTR_CHAR_REGEXP, pencode)\n\n  return 'UTF-8\\'\\'' + encoded\n}\n\n/**\n * Class for parsed Content-Disposition header for v8 optimization\n *\n * @public\n * @param {string} type\n * @param {object} parameters\n * @constructor\n */\n\nfunction ContentDisposition (type, parameters) {\n  this.type = type\n  this.parameters = parameters\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\content-disposition\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 542,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\content-type\\index.js",
    "source": "/*!\n * content-type\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * RegExp to match *( \";\" parameter ) in RFC 7231 sec 3.1.1.1\n *\n * parameter     = token \"=\" ( token / quoted-string )\n * token         = 1*tchar\n * tchar         = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\"\n *               / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n *               / DIGIT / ALPHA\n *               ; any VCHAR, except delimiters\n * quoted-string = DQUOTE *( qdtext / quoted-pair ) DQUOTE\n * qdtext        = HTAB / SP / %x21 / %x23-5B / %x5D-7E / obs-text\n * obs-text      = %x80-FF\n * quoted-pair   = \"\\\" ( HTAB / SP / VCHAR / obs-text )\n */\nvar PARAM_REGEXP = /; *([!#$%&'*+.^_`|~0-9A-Za-z-]+) *= *(\"(?:[\\u000b\\u0020\\u0021\\u0023-\\u005b\\u005d-\\u007e\\u0080-\\u00ff]|\\\\[\\u000b\\u0020-\\u00ff])*\"|[!#$%&'*+.^_`|~0-9A-Za-z-]+) */g // eslint-disable-line no-control-regex\nvar TEXT_REGEXP = /^[\\u000b\\u0020-\\u007e\\u0080-\\u00ff]+$/ // eslint-disable-line no-control-regex\nvar TOKEN_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+$/\n\n/**\n * RegExp to match quoted-pair in RFC 7230 sec 3.2.6\n *\n * quoted-pair = \"\\\" ( HTAB / SP / VCHAR / obs-text )\n * obs-text    = %x80-FF\n */\nvar QESC_REGEXP = /\\\\([\\u000b\\u0020-\\u00ff])/g // eslint-disable-line no-control-regex\n\n/**\n * RegExp to match chars that must be quoted-pair in RFC 7230 sec 3.2.6\n */\nvar QUOTE_REGEXP = /([\\\\\"])/g\n\n/**\n * RegExp to match type in RFC 7231 sec 3.1.1.1\n *\n * media-type = type \"/\" subtype\n * type       = token\n * subtype    = token\n */\nvar TYPE_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+\\/[!#$%&'*+.^_`|~0-9A-Za-z-]+$/\n\n/**\n * Module exports.\n * @public\n */\n\nexports.format = format\nexports.parse = parse\n\n/**\n * Format object to media type.\n *\n * @param {object} obj\n * @return {string}\n * @public\n */\n\nfunction format (obj) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('argument obj is required')\n  }\n\n  var parameters = obj.parameters\n  var type = obj.type\n\n  if (!type || !TYPE_REGEXP.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  var string = type\n\n  // append parameters\n  if (parameters && typeof parameters === 'object') {\n    var param\n    var params = Object.keys(parameters).sort()\n\n    for (var i = 0; i < params.length; i++) {\n      param = params[i]\n\n      if (!TOKEN_REGEXP.test(param)) {\n        throw new TypeError('invalid parameter name')\n      }\n\n      string += '; ' + param + '=' + qstring(parameters[param])\n    }\n  }\n\n  return string\n}\n\n/**\n * Parse media type to object.\n *\n * @param {string|object} string\n * @return {Object}\n * @public\n */\n\nfunction parse (string) {\n  if (!string) {\n    throw new TypeError('argument string is required')\n  }\n\n  // support req/res-like objects as argument\n  var header = typeof string === 'object'\n    ? getcontenttype(string)\n    : string\n\n  if (typeof header !== 'string') {\n    throw new TypeError('argument string is required to be a string')\n  }\n\n  var index = header.indexOf(';')\n  var type = index !== -1\n    ? header.slice(0, index).trim()\n    : header.trim()\n\n  if (!TYPE_REGEXP.test(type)) {\n    throw new TypeError('invalid media type')\n  }\n\n  var obj = new ContentType(type.toLowerCase())\n\n  // parse parameters\n  if (index !== -1) {\n    var key\n    var match\n    var value\n\n    PARAM_REGEXP.lastIndex = index\n\n    while ((match = PARAM_REGEXP.exec(header))) {\n      if (match.index !== index) {\n        throw new TypeError('invalid parameter format')\n      }\n\n      index += match[0].length\n      key = match[1].toLowerCase()\n      value = match[2]\n\n      if (value.charCodeAt(0) === 0x22 /* \" */) {\n        // remove quotes\n        value = value.slice(1, -1)\n\n        // remove escapes\n        if (value.indexOf('\\\\') !== -1) {\n          value = value.replace(QESC_REGEXP, '$1')\n        }\n      }\n\n      obj.parameters[key] = value\n    }\n\n    if (index !== header.length) {\n      throw new TypeError('invalid parameter format')\n    }\n  }\n\n  return obj\n}\n\n/**\n * Get content-type from req/res objects.\n *\n * @param {object}\n * @return {Object}\n * @private\n */\n\nfunction getcontenttype (obj) {\n  var header\n\n  if (typeof obj.getHeader === 'function') {\n    // res-like\n    header = obj.getHeader('content-type')\n  } else if (typeof obj.headers === 'object') {\n    // req-like\n    header = obj.headers && obj.headers['content-type']\n  }\n\n  if (typeof header !== 'string') {\n    throw new TypeError('content-type header is missing from object')\n  }\n\n  return header\n}\n\n/**\n * Quote a string if necessary.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction qstring (val) {\n  var str = String(val)\n\n  // no need to quote tokens\n  if (TOKEN_REGEXP.test(str)) {\n    return str\n  }\n\n  if (str.length > 0 && !TEXT_REGEXP.test(str)) {\n    throw new TypeError('invalid parameter value')\n  }\n\n  return '\"' + str.replace(QUOTE_REGEXP, '\\\\$1') + '\"'\n}\n\n/**\n * Class to represent a content type.\n * @private\n */\nfunction ContentType (type) {\n  this.parameters = Object.create(null)\n  this.type = type\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\content-type\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 543,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\send\\index.js",
    "source": "/*!\n * send\n * Copyright(c) 2012 TJ Holowaychuk\n * Copyright(c) 2014-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar createError = require('http-errors')\nvar debug = require('debug')('send')\nvar deprecate = require('depd')('send')\nvar destroy = require('destroy')\nvar encodeUrl = require('encodeurl')\nvar escapeHtml = require('escape-html')\nvar etag = require('etag')\nvar fresh = require('fresh')\nvar fs = require('fs')\nvar mime = require('mime')\nvar ms = require('ms')\nvar onFinished = require('on-finished')\nvar parseRange = require('range-parser')\nvar path = require('path')\nvar statuses = require('statuses')\nvar Stream = require('stream')\nvar util = require('util')\n\n/**\n * Path function references.\n * @private\n */\n\nvar extname = path.extname\nvar join = path.join\nvar normalize = path.normalize\nvar resolve = path.resolve\nvar sep = path.sep\n\n/**\n * Regular expression for identifying a bytes Range header.\n * @private\n */\n\nvar BYTES_RANGE_REGEXP = /^ *bytes=/\n\n/**\n * Maximum value allowed for the max age.\n * @private\n */\n\nvar MAX_MAXAGE = 60 * 60 * 24 * 365 * 1000 // 1 year\n\n/**\n * Regular expression to match a path with a directory up component.\n * @private\n */\n\nvar UP_PATH_REGEXP = /(?:^|[\\\\/])\\.\\.(?:[\\\\/]|$)/\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = send\nmodule.exports.mime = mime\n\n/**\n * Return a `SendStream` for `req` and `path`.\n *\n * @param {object} req\n * @param {string} path\n * @param {object} [options]\n * @return {SendStream}\n * @public\n */\n\nfunction send (req, path, options) {\n  return new SendStream(req, path, options)\n}\n\n/**\n * Initialize a `SendStream` with the given `path`.\n *\n * @param {Request} req\n * @param {String} path\n * @param {object} [options]\n * @private\n */\n\nfunction SendStream (req, path, options) {\n  Stream.call(this)\n\n  var opts = options || {}\n\n  this.options = opts\n  this.path = path\n  this.req = req\n\n  this._acceptRanges = opts.acceptRanges !== undefined\n    ? Boolean(opts.acceptRanges)\n    : true\n\n  this._cacheControl = opts.cacheControl !== undefined\n    ? Boolean(opts.cacheControl)\n    : true\n\n  this._etag = opts.etag !== undefined\n    ? Boolean(opts.etag)\n    : true\n\n  this._dotfiles = opts.dotfiles !== undefined\n    ? opts.dotfiles\n    : 'ignore'\n\n  if (this._dotfiles !== 'ignore' && this._dotfiles !== 'allow' && this._dotfiles !== 'deny') {\n    throw new TypeError('dotfiles option must be \"allow\", \"deny\", or \"ignore\"')\n  }\n\n  this._hidden = Boolean(opts.hidden)\n\n  if (opts.hidden !== undefined) {\n    deprecate('hidden: use dotfiles: \\'' + (this._hidden ? 'allow' : 'ignore') + '\\' instead')\n  }\n\n  // legacy support\n  if (opts.dotfiles === undefined) {\n    this._dotfiles = undefined\n  }\n\n  this._extensions = opts.extensions !== undefined\n    ? normalizeList(opts.extensions, 'extensions option')\n    : []\n\n  this._immutable = opts.immutable !== undefined\n    ? Boolean(opts.immutable)\n    : false\n\n  this._index = opts.index !== undefined\n    ? normalizeList(opts.index, 'index option')\n    : ['index.html']\n\n  this._lastModified = opts.lastModified !== undefined\n    ? Boolean(opts.lastModified)\n    : true\n\n  this._maxage = opts.maxAge || opts.maxage\n  this._maxage = typeof this._maxage === 'string'\n    ? ms(this._maxage)\n    : Number(this._maxage)\n  this._maxage = !isNaN(this._maxage)\n    ? Math.min(Math.max(0, this._maxage), MAX_MAXAGE)\n    : 0\n\n  this._root = opts.root\n    ? resolve(opts.root)\n    : null\n\n  if (!this._root && opts.from) {\n    this.from(opts.from)\n  }\n}\n\n/**\n * Inherits from `Stream`.\n */\n\nutil.inherits(SendStream, Stream)\n\n/**\n * Enable or disable etag generation.\n *\n * @param {Boolean} val\n * @return {SendStream}\n * @api public\n */\n\nSendStream.prototype.etag = deprecate.function(function etag (val) {\n  this._etag = Boolean(val)\n  debug('etag %s', this._etag)\n  return this\n}, 'send.etag: pass etag as option')\n\n/**\n * Enable or disable \"hidden\" (dot) files.\n *\n * @param {Boolean} path\n * @return {SendStream}\n * @api public\n */\n\nSendStream.prototype.hidden = deprecate.function(function hidden (val) {\n  this._hidden = Boolean(val)\n  this._dotfiles = undefined\n  debug('hidden %s', this._hidden)\n  return this\n}, 'send.hidden: use dotfiles option')\n\n/**\n * Set index `paths`, set to a falsy\n * value to disable index support.\n *\n * @param {String|Boolean|Array} paths\n * @return {SendStream}\n * @api public\n */\n\nSendStream.prototype.index = deprecate.function(function index (paths) {\n  var index = !paths ? [] : normalizeList(paths, 'paths argument')\n  debug('index %o', paths)\n  this._index = index\n  return this\n}, 'send.index: pass index as option')\n\n/**\n * Set root `path`.\n *\n * @param {String} path\n * @return {SendStream}\n * @api public\n */\n\nSendStream.prototype.root = function root (path) {\n  this._root = resolve(String(path))\n  debug('root %s', this._root)\n  return this\n}\n\nSendStream.prototype.from = deprecate.function(SendStream.prototype.root,\n  'send.from: pass root as option')\n\nSendStream.prototype.root = deprecate.function(SendStream.prototype.root,\n  'send.root: pass root as option')\n\n/**\n * Set max-age to `maxAge`.\n *\n * @param {Number} maxAge\n * @return {SendStream}\n * @api public\n */\n\nSendStream.prototype.maxage = deprecate.function(function maxage (maxAge) {\n  this._maxage = typeof maxAge === 'string'\n    ? ms(maxAge)\n    : Number(maxAge)\n  this._maxage = !isNaN(this._maxage)\n    ? Math.min(Math.max(0, this._maxage), MAX_MAXAGE)\n    : 0\n  debug('max-age %d', this._maxage)\n  return this\n}, 'send.maxage: pass maxAge as option')\n\n/**\n * Emit error with `status`.\n *\n * @param {number} status\n * @param {Error} [err]\n * @private\n */\n\nSendStream.prototype.error = function error (status, err) {\n  // emit if listeners instead of responding\n  if (hasListeners(this, 'error')) {\n    return this.emit('error', createHttpError(status, err))\n  }\n\n  var res = this.res\n  var msg = statuses.message[status] || String(status)\n  var doc = createHtmlDocument('Error', escapeHtml(msg))\n\n  // clear existing headers\n  clearHeaders(res)\n\n  // add error headers\n  if (err && err.headers) {\n    setHeaders(res, err.headers)\n  }\n\n  // send basic response\n  res.statusCode = status\n  res.setHeader('Content-Type', 'text/html; charset=UTF-8')\n  res.setHeader('Content-Length', Buffer.byteLength(doc))\n  res.setHeader('Content-Security-Policy', \"default-src 'none'\")\n  res.setHeader('X-Content-Type-Options', 'nosniff')\n  res.end(doc)\n}\n\n/**\n * Check if the pathname ends with \"/\".\n *\n * @return {boolean}\n * @private\n */\n\nSendStream.prototype.hasTrailingSlash = function hasTrailingSlash () {\n  return this.path[this.path.length - 1] === '/'\n}\n\n/**\n * Check if this is a conditional GET request.\n *\n * @return {Boolean}\n * @api private\n */\n\nSendStream.prototype.isConditionalGET = function isConditionalGET () {\n  return this.req.headers['if-match'] ||\n    this.req.headers['if-unmodified-since'] ||\n    this.req.headers['if-none-match'] ||\n    this.req.headers['if-modified-since']\n}\n\n/**\n * Check if the request preconditions failed.\n *\n * @return {boolean}\n * @private\n */\n\nSendStream.prototype.isPreconditionFailure = function isPreconditionFailure () {\n  var req = this.req\n  var res = this.res\n\n  // if-match\n  var match = req.headers['if-match']\n  if (match) {\n    var etag = res.getHeader('ETag')\n    return !etag || (match !== '*' && parseTokenList(match).every(function (match) {\n      return match !== etag && match !== 'W/' + etag && 'W/' + match !== etag\n    }))\n  }\n\n  // if-unmodified-since\n  var unmodifiedSince = parseHttpDate(req.headers['if-unmodified-since'])\n  if (!isNaN(unmodifiedSince)) {\n    var lastModified = parseHttpDate(res.getHeader('Last-Modified'))\n    return isNaN(lastModified) || lastModified > unmodifiedSince\n  }\n\n  return false\n}\n\n/**\n * Strip various content header fields for a change in entity.\n *\n * @private\n */\n\nSendStream.prototype.removeContentHeaderFields = function removeContentHeaderFields () {\n  var res = this.res\n\n  res.removeHeader('Content-Encoding')\n  res.removeHeader('Content-Language')\n  res.removeHeader('Content-Length')\n  res.removeHeader('Content-Range')\n  res.removeHeader('Content-Type')\n}\n\n/**\n * Respond with 304 not modified.\n *\n * @api private\n */\n\nSendStream.prototype.notModified = function notModified () {\n  var res = this.res\n  debug('not modified')\n  this.removeContentHeaderFields()\n  res.statusCode = 304\n  res.end()\n}\n\n/**\n * Raise error that headers already sent.\n *\n * @api private\n */\n\nSendStream.prototype.headersAlreadySent = function headersAlreadySent () {\n  var err = new Error('Can\\'t set headers after they are sent.')\n  debug('headers already sent')\n  this.error(500, err)\n}\n\n/**\n * Check if the request is cacheable, aka\n * responded with 2xx or 304 (see RFC 2616 section 14.2{5,6}).\n *\n * @return {Boolean}\n * @api private\n */\n\nSendStream.prototype.isCachable = function isCachable () {\n  var statusCode = this.res.statusCode\n  return (statusCode >= 200 && statusCode < 300) ||\n    statusCode === 304\n}\n\n/**\n * Handle stat() error.\n *\n * @param {Error} error\n * @private\n */\n\nSendStream.prototype.onStatError = function onStatError (error) {\n  switch (error.code) {\n    case 'ENAMETOOLONG':\n    case 'ENOENT':\n    case 'ENOTDIR':\n      this.error(404, error)\n      break\n    default:\n      this.error(500, error)\n      break\n  }\n}\n\n/**\n * Check if the cache is fresh.\n *\n * @return {Boolean}\n * @api private\n */\n\nSendStream.prototype.isFresh = function isFresh () {\n  return fresh(this.req.headers, {\n    etag: this.res.getHeader('ETag'),\n    'last-modified': this.res.getHeader('Last-Modified')\n  })\n}\n\n/**\n * Check if the range is fresh.\n *\n * @return {Boolean}\n * @api private\n */\n\nSendStream.prototype.isRangeFresh = function isRangeFresh () {\n  var ifRange = this.req.headers['if-range']\n\n  if (!ifRange) {\n    return true\n  }\n\n  // if-range as etag\n  if (ifRange.indexOf('\"') !== -1) {\n    var etag = this.res.getHeader('ETag')\n    return Boolean(etag && ifRange.indexOf(etag) !== -1)\n  }\n\n  // if-range as modified date\n  var lastModified = this.res.getHeader('Last-Modified')\n  return parseHttpDate(lastModified) <= parseHttpDate(ifRange)\n}\n\n/**\n * Redirect to path.\n *\n * @param {string} path\n * @private\n */\n\nSendStream.prototype.redirect = function redirect (path) {\n  var res = this.res\n\n  if (hasListeners(this, 'directory')) {\n    this.emit('directory', res, path)\n    return\n  }\n\n  if (this.hasTrailingSlash()) {\n    this.error(403)\n    return\n  }\n\n  var loc = encodeUrl(collapseLeadingSlashes(this.path + '/'))\n  var doc = createHtmlDocument('Redirecting', 'Redirecting to <a href=\"' + escapeHtml(loc) + '\">' +\n    escapeHtml(loc) + '</a>')\n\n  // redirect\n  res.statusCode = 301\n  res.setHeader('Content-Type', 'text/html; charset=UTF-8')\n  res.setHeader('Content-Length', Buffer.byteLength(doc))\n  res.setHeader('Content-Security-Policy', \"default-src 'none'\")\n  res.setHeader('X-Content-Type-Options', 'nosniff')\n  res.setHeader('Location', loc)\n  res.end(doc)\n}\n\n/**\n * Pipe to `res.\n *\n * @param {Stream} res\n * @return {Stream} res\n * @api public\n */\n\nSendStream.prototype.pipe = function pipe (res) {\n  // root path\n  var root = this._root\n\n  // references\n  this.res = res\n\n  // decode the path\n  var path = decode(this.path)\n  if (path === -1) {\n    this.error(400)\n    return res\n  }\n\n  // null byte(s)\n  if (~path.indexOf('\\0')) {\n    this.error(400)\n    return res\n  }\n\n  var parts\n  if (root !== null) {\n    // normalize\n    if (path) {\n      path = normalize('.' + sep + path)\n    }\n\n    // malicious path\n    if (UP_PATH_REGEXP.test(path)) {\n      debug('malicious path \"%s\"', path)\n      this.error(403)\n      return res\n    }\n\n    // explode path parts\n    parts = path.split(sep)\n\n    // join / normalize from optional root dir\n    path = normalize(join(root, path))\n  } else {\n    // \"..\" is malicious without \"root\"\n    if (UP_PATH_REGEXP.test(path)) {\n      debug('malicious path \"%s\"', path)\n      this.error(403)\n      return res\n    }\n\n    // explode path parts\n    parts = normalize(path).split(sep)\n\n    // resolve the path\n    path = resolve(path)\n  }\n\n  // dotfile handling\n  if (containsDotFile(parts)) {\n    var access = this._dotfiles\n\n    // legacy support\n    if (access === undefined) {\n      access = parts[parts.length - 1][0] === '.'\n        ? (this._hidden ? 'allow' : 'ignore')\n        : 'allow'\n    }\n\n    debug('%s dotfile \"%s\"', access, path)\n    switch (access) {\n      case 'allow':\n        break\n      case 'deny':\n        this.error(403)\n        return res\n      case 'ignore':\n      default:\n        this.error(404)\n        return res\n    }\n  }\n\n  // index file support\n  if (this._index.length && this.hasTrailingSlash()) {\n    this.sendIndex(path)\n    return res\n  }\n\n  this.sendFile(path)\n  return res\n}\n\n/**\n * Transfer `path`.\n *\n * @param {String} path\n * @api public\n */\n\nSendStream.prototype.send = function send (path, stat) {\n  var len = stat.size\n  var options = this.options\n  var opts = {}\n  var res = this.res\n  var req = this.req\n  var ranges = req.headers.range\n  var offset = options.start || 0\n\n  if (headersSent(res)) {\n    // impossible to send now\n    this.headersAlreadySent()\n    return\n  }\n\n  debug('pipe \"%s\"', path)\n\n  // set header fields\n  this.setHeader(path, stat)\n\n  // set content-type\n  this.type(path)\n\n  // conditional GET support\n  if (this.isConditionalGET()) {\n    if (this.isPreconditionFailure()) {\n      this.error(412)\n      return\n    }\n\n    if (this.isCachable() && this.isFresh()) {\n      this.notModified()\n      return\n    }\n  }\n\n  // adjust len to start/end options\n  len = Math.max(0, len - offset)\n  if (options.end !== undefined) {\n    var bytes = options.end - offset + 1\n    if (len > bytes) len = bytes\n  }\n\n  // Range support\n  if (this._acceptRanges && BYTES_RANGE_REGEXP.test(ranges)) {\n    // parse\n    ranges = parseRange(len, ranges, {\n      combine: true\n    })\n\n    // If-Range support\n    if (!this.isRangeFresh()) {\n      debug('range stale')\n      ranges = -2\n    }\n\n    // unsatisfiable\n    if (ranges === -1) {\n      debug('range unsatisfiable')\n\n      // Content-Range\n      res.setHeader('Content-Range', contentRange('bytes', len))\n\n      // 416 Requested Range Not Satisfiable\n      return this.error(416, {\n        headers: { 'Content-Range': res.getHeader('Content-Range') }\n      })\n    }\n\n    // valid (syntactically invalid/multiple ranges are treated as a regular response)\n    if (ranges !== -2 && ranges.length === 1) {\n      debug('range %j', ranges)\n\n      // Content-Range\n      res.statusCode = 206\n      res.setHeader('Content-Range', contentRange('bytes', len, ranges[0]))\n\n      // adjust for requested range\n      offset += ranges[0].start\n      len = ranges[0].end - ranges[0].start + 1\n    }\n  }\n\n  // clone options\n  for (var prop in options) {\n    opts[prop] = options[prop]\n  }\n\n  // set read options\n  opts.start = offset\n  opts.end = Math.max(offset, offset + len - 1)\n\n  // content-length\n  res.setHeader('Content-Length', len)\n\n  // HEAD support\n  if (req.method === 'HEAD') {\n    res.end()\n    return\n  }\n\n  this.stream(path, opts)\n}\n\n/**\n * Transfer file for `path`.\n *\n * @param {String} path\n * @api private\n */\nSendStream.prototype.sendFile = function sendFile (path) {\n  var i = 0\n  var self = this\n\n  debug('stat \"%s\"', path)\n  fs.stat(path, function onstat (err, stat) {\n    if (err && err.code === 'ENOENT' && !extname(path) && path[path.length - 1] !== sep) {\n      // not found, check extensions\n      return next(err)\n    }\n    if (err) return self.onStatError(err)\n    if (stat.isDirectory()) return self.redirect(path)\n    self.emit('file', path, stat)\n    self.send(path, stat)\n  })\n\n  function next (err) {\n    if (self._extensions.length <= i) {\n      return err\n        ? self.onStatError(err)\n        : self.error(404)\n    }\n\n    var p = path + '.' + self._extensions[i++]\n\n    debug('stat \"%s\"', p)\n    fs.stat(p, function (err, stat) {\n      if (err) return next(err)\n      if (stat.isDirectory()) return next()\n      self.emit('file', p, stat)\n      self.send(p, stat)\n    })\n  }\n}\n\n/**\n * Transfer index for `path`.\n *\n * @param {String} path\n * @api private\n */\nSendStream.prototype.sendIndex = function sendIndex (path) {\n  var i = -1\n  var self = this\n\n  function next (err) {\n    if (++i >= self._index.length) {\n      if (err) return self.onStatError(err)\n      return self.error(404)\n    }\n\n    var p = join(path, self._index[i])\n\n    debug('stat \"%s\"', p)\n    fs.stat(p, function (err, stat) {\n      if (err) return next(err)\n      if (stat.isDirectory()) return next()\n      self.emit('file', p, stat)\n      self.send(p, stat)\n    })\n  }\n\n  next()\n}\n\n/**\n * Stream `path` to the response.\n *\n * @param {String} path\n * @param {Object} options\n * @api private\n */\n\nSendStream.prototype.stream = function stream (path, options) {\n  var self = this\n  var res = this.res\n\n  // pipe\n  var stream = fs.createReadStream(path, options)\n  this.emit('stream', stream)\n  stream.pipe(res)\n\n  // cleanup\n  function cleanup () {\n    destroy(stream, true)\n  }\n\n  // response finished, cleanup\n  onFinished(res, cleanup)\n\n  // error handling\n  stream.on('error', function onerror (err) {\n    // clean up stream early\n    cleanup()\n\n    // error\n    self.onStatError(err)\n  })\n\n  // end\n  stream.on('end', function onend () {\n    self.emit('end')\n  })\n}\n\n/**\n * Set content-type based on `path`\n * if it hasn't been explicitly set.\n *\n * @param {String} path\n * @api private\n */\n\nSendStream.prototype.type = function type (path) {\n  var res = this.res\n\n  if (res.getHeader('Content-Type')) return\n\n  var type = mime.lookup(path)\n\n  if (!type) {\n    debug('no content-type')\n    return\n  }\n\n  var charset = mime.charsets.lookup(type)\n\n  debug('content-type %s', type)\n  res.setHeader('Content-Type', type + (charset ? '; charset=' + charset : ''))\n}\n\n/**\n * Set response header fields, most\n * fields may be pre-defined.\n *\n * @param {String} path\n * @param {Object} stat\n * @api private\n */\n\nSendStream.prototype.setHeader = function setHeader (path, stat) {\n  var res = this.res\n\n  this.emit('headers', res, path, stat)\n\n  if (this._acceptRanges && !res.getHeader('Accept-Ranges')) {\n    debug('accept ranges')\n    res.setHeader('Accept-Ranges', 'bytes')\n  }\n\n  if (this._cacheControl && !res.getHeader('Cache-Control')) {\n    var cacheControl = 'public, max-age=' + Math.floor(this._maxage / 1000)\n\n    if (this._immutable) {\n      cacheControl += ', immutable'\n    }\n\n    debug('cache-control %s', cacheControl)\n    res.setHeader('Cache-Control', cacheControl)\n  }\n\n  if (this._lastModified && !res.getHeader('Last-Modified')) {\n    var modified = stat.mtime.toUTCString()\n    debug('modified %s', modified)\n    res.setHeader('Last-Modified', modified)\n  }\n\n  if (this._etag && !res.getHeader('ETag')) {\n    var val = etag(stat)\n    debug('etag %s', val)\n    res.setHeader('ETag', val)\n  }\n}\n\n/**\n * Clear all headers from a response.\n *\n * @param {object} res\n * @private\n */\n\nfunction clearHeaders (res) {\n  var headers = getHeaderNames(res)\n\n  for (var i = 0; i < headers.length; i++) {\n    res.removeHeader(headers[i])\n  }\n}\n\n/**\n * Collapse all leading slashes into a single slash\n *\n * @param {string} str\n * @private\n */\nfunction collapseLeadingSlashes (str) {\n  for (var i = 0; i < str.length; i++) {\n    if (str[i] !== '/') {\n      break\n    }\n  }\n\n  return i > 1\n    ? '/' + str.substr(i)\n    : str\n}\n\n/**\n * Determine if path parts contain a dotfile.\n *\n * @api private\n */\n\nfunction containsDotFile (parts) {\n  for (var i = 0; i < parts.length; i++) {\n    var part = parts[i]\n    if (part.length > 1 && part[0] === '.') {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Create a Content-Range header.\n *\n * @param {string} type\n * @param {number} size\n * @param {array} [range]\n */\n\nfunction contentRange (type, size, range) {\n  return type + ' ' + (range ? range.start + '-' + range.end : '*') + '/' + size\n}\n\n/**\n * Create a minimal HTML document.\n *\n * @param {string} title\n * @param {string} body\n * @private\n */\n\nfunction createHtmlDocument (title, body) {\n  return '<!DOCTYPE html>\\n' +\n    '<html lang=\"en\">\\n' +\n    '<head>\\n' +\n    '<meta charset=\"utf-8\">\\n' +\n    '<title>' + title + '</title>\\n' +\n    '</head>\\n' +\n    '<body>\\n' +\n    '<pre>' + body + '</pre>\\n' +\n    '</body>\\n' +\n    '</html>\\n'\n}\n\n/**\n * Create a HttpError object from simple arguments.\n *\n * @param {number} status\n * @param {Error|object} err\n * @private\n */\n\nfunction createHttpError (status, err) {\n  if (!err) {\n    return createError(status)\n  }\n\n  return err instanceof Error\n    ? createError(status, err, { expose: false })\n    : createError(status, err)\n}\n\n/**\n * decodeURIComponent.\n *\n * Allows V8 to only deoptimize this fn instead of all\n * of send().\n *\n * @param {String} path\n * @api private\n */\n\nfunction decode (path) {\n  try {\n    return decodeURIComponent(path)\n  } catch (err) {\n    return -1\n  }\n}\n\n/**\n * Get the header names on a respnse.\n *\n * @param {object} res\n * @returns {array[string]}\n * @private\n */\n\nfunction getHeaderNames (res) {\n  return typeof res.getHeaderNames !== 'function'\n    ? Object.keys(res._headers || {})\n    : res.getHeaderNames()\n}\n\n/**\n * Determine if emitter has listeners of a given type.\n *\n * The way to do this check is done three different ways in Node.js >= 0.8\n * so this consolidates them into a minimal set using instance methods.\n *\n * @param {EventEmitter} emitter\n * @param {string} type\n * @returns {boolean}\n * @private\n */\n\nfunction hasListeners (emitter, type) {\n  var count = typeof emitter.listenerCount !== 'function'\n    ? emitter.listeners(type).length\n    : emitter.listenerCount(type)\n\n  return count > 0\n}\n\n/**\n * Determine if the response headers have been sent.\n *\n * @param {object} res\n * @returns {boolean}\n * @private\n */\n\nfunction headersSent (res) {\n  return typeof res.headersSent !== 'boolean'\n    ? Boolean(res._header)\n    : res.headersSent\n}\n\n/**\n * Normalize the index option into an array.\n *\n * @param {boolean|string|array} val\n * @param {string} name\n * @private\n */\n\nfunction normalizeList (val, name) {\n  var list = [].concat(val || [])\n\n  for (var i = 0; i < list.length; i++) {\n    if (typeof list[i] !== 'string') {\n      throw new TypeError(name + ' must be array of strings or false')\n    }\n  }\n\n  return list\n}\n\n/**\n * Parse an HTTP Date into a number.\n *\n * @param {string} date\n * @private\n */\n\nfunction parseHttpDate (date) {\n  var timestamp = date && Date.parse(date)\n\n  return typeof timestamp === 'number'\n    ? timestamp\n    : NaN\n}\n\n/**\n * Parse a HTTP token list.\n *\n * @param {string} str\n * @private\n */\n\nfunction parseTokenList (str) {\n  var end = 0\n  var list = []\n  var start = 0\n\n  // gather tokens\n  for (var i = 0, len = str.length; i < len; i++) {\n    switch (str.charCodeAt(i)) {\n      case 0x20: /*   */\n        if (start === end) {\n          start = end = i + 1\n        }\n        break\n      case 0x2c: /* , */\n        if (start !== end) {\n          list.push(str.substring(start, end))\n        }\n        start = end = i + 1\n        break\n      default:\n        end = i + 1\n        break\n    }\n  }\n\n  // final token\n  if (start !== end) {\n    list.push(str.substring(start, end))\n  }\n\n  return list\n}\n\n/**\n * Set an object of headers on a response.\n *\n * @param {object} res\n * @param {object} headers\n * @private\n */\n\nfunction setHeaders (res, headers) {\n  var keys = Object.keys(headers)\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i]\n    res.setHeader(key, headers[key])\n  }\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\send\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 544,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\http-errors\\index.js",
    "source": "/*!\n * http-errors\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar deprecate = require('depd')('http-errors')\nvar setPrototypeOf = require('setprototypeof')\nvar statuses = require('statuses')\nvar inherits = require('inherits')\nvar toIdentifier = require('toidentifier')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = createError\nmodule.exports.HttpError = createHttpErrorConstructor()\nmodule.exports.isHttpError = createIsHttpErrorFunction(module.exports.HttpError)\n\n// Populate exports for all constructors\npopulateConstructorExports(module.exports, statuses.codes, module.exports.HttpError)\n\n/**\n * Get the code class of a status code.\n * @private\n */\n\nfunction codeClass (status) {\n  return Number(String(status).charAt(0) + '00')\n}\n\n/**\n * Create a new HTTP Error.\n *\n * @returns {Error}\n * @public\n */\n\nfunction createError () {\n  // so much arity going on ~_~\n  var err\n  var msg\n  var status = 500\n  var props = {}\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i]\n    var type = typeof arg\n    if (type === 'object' && arg instanceof Error) {\n      err = arg\n      status = err.status || err.statusCode || status\n    } else if (type === 'number' && i === 0) {\n      status = arg\n    } else if (type === 'string') {\n      msg = arg\n    } else if (type === 'object') {\n      props = arg\n    } else {\n      throw new TypeError('argument #' + (i + 1) + ' unsupported type ' + type)\n    }\n  }\n\n  if (typeof status === 'number' && (status < 400 || status >= 600)) {\n    deprecate('non-error status code; use only 4xx or 5xx status codes')\n  }\n\n  if (typeof status !== 'number' ||\n    (!statuses.message[status] && (status < 400 || status >= 600))) {\n    status = 500\n  }\n\n  // constructor\n  var HttpError = createError[status] || createError[codeClass(status)]\n\n  if (!err) {\n    // create error\n    err = HttpError\n      ? new HttpError(msg)\n      : new Error(msg || statuses.message[status])\n    Error.captureStackTrace(err, createError)\n  }\n\n  if (!HttpError || !(err instanceof HttpError) || err.status !== status) {\n    // add properties to generic error\n    err.expose = status < 500\n    err.status = err.statusCode = status\n  }\n\n  for (var key in props) {\n    if (key !== 'status' && key !== 'statusCode') {\n      err[key] = props[key]\n    }\n  }\n\n  return err\n}\n\n/**\n * Create HTTP error abstract base class.\n * @private\n */\n\nfunction createHttpErrorConstructor () {\n  function HttpError () {\n    throw new TypeError('cannot construct abstract class')\n  }\n\n  inherits(HttpError, Error)\n\n  return HttpError\n}\n\n/**\n * Create a constructor for a client error.\n * @private\n */\n\nfunction createClientErrorConstructor (HttpError, name, code) {\n  var className = toClassName(name)\n\n  function ClientError (message) {\n    // create the error object\n    var msg = message != null ? message : statuses.message[code]\n    var err = new Error(msg)\n\n    // capture a stack trace to the construction point\n    Error.captureStackTrace(err, ClientError)\n\n    // adjust the [[Prototype]]\n    setPrototypeOf(err, ClientError.prototype)\n\n    // redefine the error message\n    Object.defineProperty(err, 'message', {\n      enumerable: true,\n      configurable: true,\n      value: msg,\n      writable: true\n    })\n\n    // redefine the error name\n    Object.defineProperty(err, 'name', {\n      enumerable: false,\n      configurable: true,\n      value: className,\n      writable: true\n    })\n\n    return err\n  }\n\n  inherits(ClientError, HttpError)\n  nameFunc(ClientError, className)\n\n  ClientError.prototype.status = code\n  ClientError.prototype.statusCode = code\n  ClientError.prototype.expose = true\n\n  return ClientError\n}\n\n/**\n * Create function to test is a value is a HttpError.\n * @private\n */\n\nfunction createIsHttpErrorFunction (HttpError) {\n  return function isHttpError (val) {\n    if (!val || typeof val !== 'object') {\n      return false\n    }\n\n    if (val instanceof HttpError) {\n      return true\n    }\n\n    return val instanceof Error &&\n      typeof val.expose === 'boolean' &&\n      typeof val.statusCode === 'number' && val.status === val.statusCode\n  }\n}\n\n/**\n * Create a constructor for a server error.\n * @private\n */\n\nfunction createServerErrorConstructor (HttpError, name, code) {\n  var className = toClassName(name)\n\n  function ServerError (message) {\n    // create the error object\n    var msg = message != null ? message : statuses.message[code]\n    var err = new Error(msg)\n\n    // capture a stack trace to the construction point\n    Error.captureStackTrace(err, ServerError)\n\n    // adjust the [[Prototype]]\n    setPrototypeOf(err, ServerError.prototype)\n\n    // redefine the error message\n    Object.defineProperty(err, 'message', {\n      enumerable: true,\n      configurable: true,\n      value: msg,\n      writable: true\n    })\n\n    // redefine the error name\n    Object.defineProperty(err, 'name', {\n      enumerable: false,\n      configurable: true,\n      value: className,\n      writable: true\n    })\n\n    return err\n  }\n\n  inherits(ServerError, HttpError)\n  nameFunc(ServerError, className)\n\n  ServerError.prototype.status = code\n  ServerError.prototype.statusCode = code\n  ServerError.prototype.expose = false\n\n  return ServerError\n}\n\n/**\n * Set the name of a function, if possible.\n * @private\n */\n\nfunction nameFunc (func, name) {\n  var desc = Object.getOwnPropertyDescriptor(func, 'name')\n\n  if (desc && desc.configurable) {\n    desc.value = name\n    Object.defineProperty(func, 'name', desc)\n  }\n}\n\n/**\n * Populate the exports object with constructors for every error class.\n * @private\n */\n\nfunction populateConstructorExports (exports, codes, HttpError) {\n  codes.forEach(function forEachCode (code) {\n    var CodeError\n    var name = toIdentifier(statuses.message[code])\n\n    switch (codeClass(code)) {\n      case 400:\n        CodeError = createClientErrorConstructor(HttpError, name, code)\n        break\n      case 500:\n        CodeError = createServerErrorConstructor(HttpError, name, code)\n        break\n    }\n\n    if (CodeError) {\n      // export the constructor\n      exports[code] = CodeError\n      exports[name] = CodeError\n    }\n  })\n}\n\n/**\n * Get a class name from a name identifier.\n * @private\n */\n\nfunction toClassName (name) {\n  return name.substr(-5) !== 'Error'\n    ? name + 'Error'\n    : name\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\http-errors\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 545,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\inherits\\inherits.js",
    "source": "try {\n  var util = require('util');\n  /* istanbul ignore next */\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  /* istanbul ignore next */\n  module.exports = require('./inherits_browser.js');\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\inherits\\inherits.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 546,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\toidentifier\\index.js",
    "source": "/*!\n * toidentifier\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = toIdentifier\n\n/**\n * Trasform the given string into a JavaScript identifier\n *\n * @param {string} str\n * @returns {string}\n * @public\n */\n\nfunction toIdentifier (str) {\n  return str\n    .split(' ')\n    .map(function (token) {\n      return token.slice(0, 1).toUpperCase() + token.slice(1)\n    })\n    .join('')\n    .replace(/[^ _0-9a-z]/gi, '')\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\toidentifier\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 547,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\destroy\\index.js",
    "source": "/*!\n * destroy\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar EventEmitter = require('events').EventEmitter\nvar ReadStream = require('fs').ReadStream\nvar Stream = require('stream')\nvar Zlib = require('zlib')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = destroy\n\n/**\n * Destroy the given stream, and optionally suppress any future `error` events.\n *\n * @param {object} stream\n * @param {boolean} suppress\n * @public\n */\n\nfunction destroy (stream, suppress) {\n  if (isFsReadStream(stream)) {\n    destroyReadStream(stream)\n  } else if (isZlibStream(stream)) {\n    destroyZlibStream(stream)\n  } else if (hasDestroy(stream)) {\n    stream.destroy()\n  }\n\n  if (isEventEmitter(stream) && suppress) {\n    stream.removeAllListeners('error')\n    stream.addListener('error', noop)\n  }\n\n  return stream\n}\n\n/**\n * Destroy a ReadStream.\n *\n * @param {object} stream\n * @private\n */\n\nfunction destroyReadStream (stream) {\n  stream.destroy()\n\n  if (typeof stream.close === 'function') {\n    // node.js core bug work-around\n    stream.on('open', onOpenClose)\n  }\n}\n\n/**\n * Close a Zlib stream.\n *\n * Zlib streams below Node.js 4.5.5 have a buggy implementation\n * of .close() when zlib encountered an error.\n *\n * @param {object} stream\n * @private\n */\n\nfunction closeZlibStream (stream) {\n  if (stream._hadError === true) {\n    var prop = stream._binding === null\n      ? '_binding'\n      : '_handle'\n\n    stream[prop] = {\n      close: function () { this[prop] = null }\n    }\n  }\n\n  stream.close()\n}\n\n/**\n * Destroy a Zlib stream.\n *\n * Zlib streams don't have a destroy function in Node.js 6. On top of that\n * simply calling destroy on a zlib stream in Node.js 8+ will result in a\n * memory leak. So until that is fixed, we need to call both close AND destroy.\n *\n * PR to fix memory leak: https://github.com/nodejs/node/pull/23734\n *\n * In Node.js 6+8, it's important that destroy is called before close as the\n * stream would otherwise emit the error 'zlib binding closed'.\n *\n * @param {object} stream\n * @private\n */\n\nfunction destroyZlibStream (stream) {\n  if (typeof stream.destroy === 'function') {\n    // node.js core bug work-around\n    // istanbul ignore if: node.js 0.8\n    if (stream._binding) {\n      // node.js < 0.10.0\n      stream.destroy()\n      if (stream._processing) {\n        stream._needDrain = true\n        stream.once('drain', onDrainClearBinding)\n      } else {\n        stream._binding.clear()\n      }\n    } else if (stream._destroy && stream._destroy !== Stream.Transform.prototype._destroy) {\n      // node.js >= 12, ^11.1.0, ^10.15.1\n      stream.destroy()\n    } else if (stream._destroy && typeof stream.close === 'function') {\n      // node.js 7, 8\n      stream.destroyed = true\n      stream.close()\n    } else {\n      // fallback\n      // istanbul ignore next\n      stream.destroy()\n    }\n  } else if (typeof stream.close === 'function') {\n    // node.js < 8 fallback\n    closeZlibStream(stream)\n  }\n}\n\n/**\n * Determine if stream has destroy.\n * @private\n */\n\nfunction hasDestroy (stream) {\n  return stream instanceof Stream &&\n    typeof stream.destroy === 'function'\n}\n\n/**\n * Determine if val is EventEmitter.\n * @private\n */\n\nfunction isEventEmitter (val) {\n  return val instanceof EventEmitter\n}\n\n/**\n * Determine if stream is fs.ReadStream stream.\n * @private\n */\n\nfunction isFsReadStream (stream) {\n  return stream instanceof ReadStream\n}\n\n/**\n * Determine if stream is Zlib stream.\n * @private\n */\n\nfunction isZlibStream (stream) {\n  return stream instanceof Zlib.Gzip ||\n    stream instanceof Zlib.Gunzip ||\n    stream instanceof Zlib.Deflate ||\n    stream instanceof Zlib.DeflateRaw ||\n    stream instanceof Zlib.Inflate ||\n    stream instanceof Zlib.InflateRaw ||\n    stream instanceof Zlib.Unzip\n}\n\n/**\n * No-op function.\n * @private\n */\n\nfunction noop () {}\n\n/**\n * On drain handler to clear binding.\n * @private\n */\n\n// istanbul ignore next: node.js 0.8\nfunction onDrainClearBinding () {\n  this._binding.clear()\n}\n\n/**\n * On open handler to close stream.\n * @private\n */\n\nfunction onOpenClose () {\n  if (typeof this.fd === 'number') {\n    // actually close down the fd\n    this.close()\n  }\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\destroy\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 548,
    "sourcePositions": []
  },
  {
    "url": "node:zlib",
    "source": "// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n'use strict';\r\n\r\nconst {\r\n  ArrayBuffer,\r\n  ArrayPrototypeForEach,\r\n  ArrayPrototypeMap,\r\n  ArrayPrototypePush,\r\n  FunctionPrototypeBind,\r\n  MathMaxApply,\r\n  NumberIsFinite,\r\n  NumberIsNaN,\r\n  ObjectDefineProperties,\r\n  ObjectDefineProperty,\r\n  ObjectFreeze,\r\n  ObjectKeys,\r\n  ObjectSetPrototypeOf,\r\n  ReflectApply,\r\n  StringPrototypeStartsWith,\r\n  Symbol,\r\n  TypedArrayPrototypeFill,\r\n  Uint32Array,\r\n} = primordials;\r\n\r\nconst {\r\n  codes: {\r\n    ERR_BROTLI_INVALID_PARAM,\r\n    ERR_BUFFER_TOO_LARGE,\r\n    ERR_INVALID_ARG_TYPE,\r\n    ERR_OUT_OF_RANGE,\r\n    ERR_ZLIB_INITIALIZATION_FAILED,\r\n  },\r\n  genericNodeError,\r\n  hideStackFrames,\r\n} = require('internal/errors');\r\nconst { Transform, finished } = require('stream');\r\nconst {\r\n  deprecate\r\n} = require('internal/util');\r\nconst {\r\n  isArrayBufferView,\r\n  isAnyArrayBuffer,\r\n  isUint8Array,\r\n} = require('internal/util/types');\r\nconst binding = internalBinding('zlib');\r\nconst assert = require('internal/assert');\r\nconst {\r\n  Buffer,\r\n  kMaxLength\r\n} = require('buffer');\r\nconst { owner_symbol } = require('internal/async_hooks').symbols;\r\nconst {\r\n  validateFunction,\r\n  validateNumber,\r\n} = require('internal/validators');\r\n\r\nconst kFlushFlag = Symbol('kFlushFlag');\r\nconst kError = Symbol('kError');\r\n\r\nconst constants = internalBinding('constants').zlib;\r\nconst {\r\n  // Zlib flush levels\r\n  Z_NO_FLUSH, Z_BLOCK, Z_PARTIAL_FLUSH, Z_SYNC_FLUSH, Z_FULL_FLUSH, Z_FINISH,\r\n  // Zlib option values\r\n  Z_MIN_CHUNK, Z_MIN_WINDOWBITS, Z_MAX_WINDOWBITS, Z_MIN_LEVEL, Z_MAX_LEVEL,\r\n  Z_MIN_MEMLEVEL, Z_MAX_MEMLEVEL, Z_DEFAULT_CHUNK, Z_DEFAULT_COMPRESSION,\r\n  Z_DEFAULT_STRATEGY, Z_DEFAULT_WINDOWBITS, Z_DEFAULT_MEMLEVEL, Z_FIXED,\r\n  // Node's compression stream modes (node_zlib_mode)\r\n  DEFLATE, DEFLATERAW, INFLATE, INFLATERAW, GZIP, GUNZIP, UNZIP,\r\n  BROTLI_DECODE, BROTLI_ENCODE,\r\n  // Brotli operations (~flush levels)\r\n  BROTLI_OPERATION_PROCESS, BROTLI_OPERATION_FLUSH,\r\n  BROTLI_OPERATION_FINISH, BROTLI_OPERATION_EMIT_METADATA,\r\n} = constants;\r\n\r\n// Translation table for return codes.\r\nconst codes = {\r\n  Z_OK: constants.Z_OK,\r\n  Z_STREAM_END: constants.Z_STREAM_END,\r\n  Z_NEED_DICT: constants.Z_NEED_DICT,\r\n  Z_ERRNO: constants.Z_ERRNO,\r\n  Z_STREAM_ERROR: constants.Z_STREAM_ERROR,\r\n  Z_DATA_ERROR: constants.Z_DATA_ERROR,\r\n  Z_MEM_ERROR: constants.Z_MEM_ERROR,\r\n  Z_BUF_ERROR: constants.Z_BUF_ERROR,\r\n  Z_VERSION_ERROR: constants.Z_VERSION_ERROR\r\n};\r\n\r\nfor (const ckey of ObjectKeys(codes)) {\r\n  codes[codes[ckey]] = ckey;\r\n}\r\n\r\nfunction zlibBuffer(engine, buffer, callback) {\r\n  validateFunction(callback, 'callback');\r\n  // Streams do not support non-Uint8Array ArrayBufferViews yet. Convert it to a\r\n  // Buffer without copying.\r\n  if (isArrayBufferView(buffer) && !isUint8Array(buffer)) {\r\n    buffer = Buffer.from(buffer.buffer, buffer.byteOffset, buffer.byteLength);\r\n  } else if (isAnyArrayBuffer(buffer)) {\r\n    buffer = Buffer.from(buffer);\r\n  }\r\n  engine.buffers = null;\r\n  engine.nread = 0;\r\n  engine.cb = callback;\r\n  engine.on('data', zlibBufferOnData);\r\n  engine.on('error', zlibBufferOnError);\r\n  engine.on('end', zlibBufferOnEnd);\r\n  engine.end(buffer);\r\n}\r\n\r\nfunction zlibBufferOnData(chunk) {\r\n  if (!this.buffers)\r\n    this.buffers = [chunk];\r\n  else\r\n    ArrayPrototypePush(this.buffers, chunk);\r\n  this.nread += chunk.length;\r\n  if (this.nread > this._maxOutputLength) {\r\n    this.close();\r\n    this.removeAllListeners('end');\r\n    this.cb(new ERR_BUFFER_TOO_LARGE(this._maxOutputLength));\r\n  }\r\n}\r\n\r\nfunction zlibBufferOnError(err) {\r\n  this.removeAllListeners('end');\r\n  this.cb(err);\r\n}\r\n\r\nfunction zlibBufferOnEnd() {\r\n  let buf;\r\n  if (this.nread === 0) {\r\n    buf = Buffer.alloc(0);\r\n  } else {\r\n    const bufs = this.buffers;\r\n    buf = (bufs.length === 1 ? bufs[0] : Buffer.concat(bufs, this.nread));\r\n  }\r\n  this.close();\r\n  if (this._info)\r\n    this.cb(null, { buffer: buf, engine: this });\r\n  else\r\n    this.cb(null, buf);\r\n}\r\n\r\nfunction zlibBufferSync(engine, buffer) {\r\n  if (typeof buffer === 'string') {\r\n    buffer = Buffer.from(buffer);\r\n  } else if (!isArrayBufferView(buffer)) {\r\n    if (isAnyArrayBuffer(buffer)) {\r\n      buffer = Buffer.from(buffer);\r\n    } else {\r\n      throw new ERR_INVALID_ARG_TYPE(\r\n        'buffer',\r\n        ['string', 'Buffer', 'TypedArray', 'DataView', 'ArrayBuffer'],\r\n        buffer\r\n      );\r\n    }\r\n  }\r\n  buffer = processChunkSync(engine, buffer, engine._finishFlushFlag);\r\n  if (engine._info)\r\n    return { buffer, engine };\r\n  return buffer;\r\n}\r\n\r\nfunction zlibOnError(message, errno, code) {\r\n  const self = this[owner_symbol];\r\n  // There is no way to cleanly recover.\r\n  // Continuing only obscures problems.\r\n\r\n  const error = genericNodeError(message, { errno, code });\r\n  error.errno = errno;\r\n  error.code = code;\r\n  self.destroy(error);\r\n  self[kError] = error;\r\n}\r\n\r\n// 1. Returns false for undefined and NaN\r\n// 2. Returns true for finite numbers\r\n// 3. Throws ERR_INVALID_ARG_TYPE for non-numbers\r\n// 4. Throws ERR_OUT_OF_RANGE for infinite numbers\r\nconst checkFiniteNumber = hideStackFrames((number, name) => {\r\n  // Common case\r\n  if (number === undefined) {\r\n    return false;\r\n  }\r\n\r\n  if (NumberIsFinite(number)) {\r\n    return true; // Is a valid number\r\n  }\r\n\r\n  if (NumberIsNaN(number)) {\r\n    return false;\r\n  }\r\n\r\n  validateNumber(number, name);\r\n\r\n  // Infinite numbers\r\n  throw new ERR_OUT_OF_RANGE(name, 'a finite number', number);\r\n});\r\n\r\n// 1. Returns def for number when it's undefined or NaN\r\n// 2. Returns number for finite numbers >= lower and <= upper\r\n// 3. Throws ERR_INVALID_ARG_TYPE for non-numbers\r\n// 4. Throws ERR_OUT_OF_RANGE for infinite numbers or numbers > upper or < lower\r\nconst checkRangesOrGetDefault = hideStackFrames(\r\n  (number, name, lower, upper, def) => {\r\n    if (!checkFiniteNumber(number, name)) {\r\n      return def;\r\n    }\r\n    if (number < lower || number > upper) {\r\n      throw new ERR_OUT_OF_RANGE(name,\r\n                                 `>= ${lower} and <= ${upper}`, number);\r\n    }\r\n    return number;\r\n  }\r\n);\r\n\r\nconst FLUSH_BOUND = [\r\n  [ Z_NO_FLUSH, Z_BLOCK ],\r\n  [ BROTLI_OPERATION_PROCESS, BROTLI_OPERATION_EMIT_METADATA ],\r\n];\r\nconst FLUSH_BOUND_IDX_NORMAL = 0;\r\nconst FLUSH_BOUND_IDX_BROTLI = 1;\r\n\r\n// The base class for all Zlib-style streams.\r\nfunction ZlibBase(opts, mode, handle, { flush, finishFlush, fullFlush }) {\r\n  let chunkSize = Z_DEFAULT_CHUNK;\r\n  let maxOutputLength = kMaxLength;\r\n  // The ZlibBase class is not exported to user land, the mode should only be\r\n  // passed in by us.\r\n  assert(typeof mode === 'number');\r\n  assert(mode >= DEFLATE && mode <= BROTLI_ENCODE);\r\n\r\n  let flushBoundIdx;\r\n  if (mode !== BROTLI_ENCODE && mode !== BROTLI_DECODE) {\r\n    flushBoundIdx = FLUSH_BOUND_IDX_NORMAL;\r\n  } else {\r\n    flushBoundIdx = FLUSH_BOUND_IDX_BROTLI;\r\n  }\r\n\r\n  if (opts) {\r\n    chunkSize = opts.chunkSize;\r\n    if (!checkFiniteNumber(chunkSize, 'options.chunkSize')) {\r\n      chunkSize = Z_DEFAULT_CHUNK;\r\n    } else if (chunkSize < Z_MIN_CHUNK) {\r\n      throw new ERR_OUT_OF_RANGE('options.chunkSize',\r\n                                 `>= ${Z_MIN_CHUNK}`, chunkSize);\r\n    }\r\n\r\n    flush = checkRangesOrGetDefault(\r\n      opts.flush, 'options.flush',\r\n      FLUSH_BOUND[flushBoundIdx][0], FLUSH_BOUND[flushBoundIdx][1], flush);\r\n\r\n    finishFlush = checkRangesOrGetDefault(\r\n      opts.finishFlush, 'options.finishFlush',\r\n      FLUSH_BOUND[flushBoundIdx][0], FLUSH_BOUND[flushBoundIdx][1],\r\n      finishFlush);\r\n\r\n    maxOutputLength = checkRangesOrGetDefault(\r\n      opts.maxOutputLength, 'options.maxOutputLength',\r\n      1, kMaxLength, kMaxLength);\r\n\r\n    if (opts.encoding || opts.objectMode || opts.writableObjectMode) {\r\n      opts = { ...opts };\r\n      opts.encoding = null;\r\n      opts.objectMode = false;\r\n      opts.writableObjectMode = false;\r\n    }\r\n  }\r\n\r\n  ReflectApply(Transform, this, [{ autoDestroy: true, ...opts }]);\r\n  this[kError] = null;\r\n  this.bytesWritten = 0;\r\n  this._handle = handle;\r\n  handle[owner_symbol] = this;\r\n  // Used by processCallback() and zlibOnError()\r\n  handle.onerror = zlibOnError;\r\n  this._outBuffer = Buffer.allocUnsafe(chunkSize);\r\n  this._outOffset = 0;\r\n\r\n  this._chunkSize = chunkSize;\r\n  this._defaultFlushFlag = flush;\r\n  this._finishFlushFlag = finishFlush;\r\n  this._defaultFullFlushFlag = fullFlush;\r\n  this._info = opts && opts.info;\r\n  this._maxOutputLength = maxOutputLength;\r\n}\r\nObjectSetPrototypeOf(ZlibBase.prototype, Transform.prototype);\r\nObjectSetPrototypeOf(ZlibBase, Transform);\r\n\r\nObjectDefineProperty(ZlibBase.prototype, '_closed', {\r\n  __proto__: null,\r\n  configurable: true,\r\n  enumerable: true,\r\n  get() {\r\n    return !this._handle;\r\n  }\r\n});\r\n\r\n// `bytesRead` made sense as a name when looking from the zlib engine's\r\n// perspective, but it is inconsistent with all other streams exposed by Node.js\r\n// that have this concept, where it stands for the number of bytes read\r\n// *from* the stream (that is, net.Socket/tls.Socket & file system streams).\r\nObjectDefineProperty(ZlibBase.prototype, 'bytesRead', {\r\n  __proto__: null,\r\n  configurable: true,\r\n  enumerable: true,\r\n  get: deprecate(function() {\r\n    return this.bytesWritten;\r\n  }, 'zlib.bytesRead is deprecated and will change its meaning in the ' +\r\n     'future. Use zlib.bytesWritten instead.', 'DEP0108'),\r\n  set: deprecate(function(value) {\r\n    this.bytesWritten = value;\r\n  }, 'Setting zlib.bytesRead is deprecated. ' +\r\n     'This feature will be removed in the future.', 'DEP0108')\r\n});\r\n\r\nZlibBase.prototype.reset = function() {\r\n  if (!this._handle)\r\n    assert(false, 'zlib binding closed');\r\n  return this._handle.reset();\r\n};\r\n\r\n// This is the _flush function called by the transform class,\r\n// internally, when the last chunk has been written.\r\nZlibBase.prototype._flush = function(callback) {\r\n  this._transform(Buffer.alloc(0), '', callback);\r\n};\r\n\r\n// Force Transform compat behavior.\r\nZlibBase.prototype._final = function(callback) {\r\n  callback();\r\n};\r\n\r\n// If a flush is scheduled while another flush is still pending, a way to figure\r\n// out which one is the \"stronger\" flush is needed.\r\n// This is currently only used to figure out which flush flag to use for the\r\n// last chunk.\r\n// Roughly, the following holds:\r\n// Z_NO_FLUSH (< Z_TREES) < Z_BLOCK < Z_PARTIAL_FLUSH <\r\n//     Z_SYNC_FLUSH < Z_FULL_FLUSH < Z_FINISH\r\nconst flushiness = [];\r\nlet i = 0;\r\nconst kFlushFlagList = [Z_NO_FLUSH, Z_BLOCK, Z_PARTIAL_FLUSH,\r\n                        Z_SYNC_FLUSH, Z_FULL_FLUSH, Z_FINISH];\r\nfor (const flushFlag of kFlushFlagList) {\r\n  flushiness[flushFlag] = i++;\r\n}\r\n\r\nfunction maxFlush(a, b) {\r\n  return flushiness[a] > flushiness[b] ? a : b;\r\n}\r\n\r\n// Set up a list of 'special' buffers that can be written using .write()\r\n// from the .flush() code as a way of introducing flushing operations into the\r\n// write sequence.\r\nconst kFlushBuffers = [];\r\n{\r\n  const dummyArrayBuffer = new ArrayBuffer();\r\n  for (const flushFlag of kFlushFlagList) {\r\n    kFlushBuffers[flushFlag] = Buffer.from(dummyArrayBuffer);\r\n    kFlushBuffers[flushFlag][kFlushFlag] = flushFlag;\r\n  }\r\n}\r\n\r\nZlibBase.prototype.flush = function(kind, callback) {\r\n  if (typeof kind === 'function' || (kind === undefined && !callback)) {\r\n    callback = kind;\r\n    kind = this._defaultFullFlushFlag;\r\n  }\r\n\r\n  if (this.writableFinished) {\r\n    if (callback)\r\n      process.nextTick(callback);\r\n  } else if (this.writableEnded) {\r\n    if (callback)\r\n      this.once('end', callback);\r\n  } else {\r\n    this.write(kFlushBuffers[kind], '', callback);\r\n  }\r\n};\r\n\r\nZlibBase.prototype.close = function(callback) {\r\n  if (callback) finished(this, callback);\r\n  this.destroy();\r\n};\r\n\r\nZlibBase.prototype._destroy = function(err, callback) {\r\n  _close(this);\r\n  callback(err);\r\n};\r\n\r\nZlibBase.prototype._transform = function(chunk, encoding, cb) {\r\n  let flushFlag = this._defaultFlushFlag;\r\n  // We use a 'fake' zero-length chunk to carry information about flushes from\r\n  // the public API to the actual stream implementation.\r\n  if (typeof chunk[kFlushFlag] === 'number') {\r\n    flushFlag = chunk[kFlushFlag];\r\n  }\r\n\r\n  // For the last chunk, also apply `_finishFlushFlag`.\r\n  if (this.writableEnded && this.writableLength === chunk.byteLength) {\r\n    flushFlag = maxFlush(flushFlag, this._finishFlushFlag);\r\n  }\r\n  processChunk(this, chunk, flushFlag, cb);\r\n};\r\n\r\nZlibBase.prototype._processChunk = function(chunk, flushFlag, cb) {\r\n  // _processChunk() is left for backwards compatibility\r\n  if (typeof cb === 'function')\r\n    processChunk(this, chunk, flushFlag, cb);\r\n  else\r\n    return processChunkSync(this, chunk, flushFlag);\r\n};\r\n\r\nfunction processChunkSync(self, chunk, flushFlag) {\r\n  let availInBefore = chunk.byteLength;\r\n  let availOutBefore = self._chunkSize - self._outOffset;\r\n  let inOff = 0;\r\n  let availOutAfter;\r\n  let availInAfter;\r\n\r\n  let buffers = null;\r\n  let nread = 0;\r\n  let inputRead = 0;\r\n  const state = self._writeState;\r\n  const handle = self._handle;\r\n  let buffer = self._outBuffer;\r\n  let offset = self._outOffset;\r\n  const chunkSize = self._chunkSize;\r\n\r\n  let error;\r\n  self.on('error', function onError(er) {\r\n    error = er;\r\n  });\r\n\r\n  while (true) {\r\n    handle.writeSync(flushFlag,\r\n                     chunk, // in\r\n                     inOff, // in_off\r\n                     availInBefore, // in_len\r\n                     buffer, // out\r\n                     offset, // out_off\r\n                     availOutBefore); // out_len\r\n    if (error)\r\n      throw error;\r\n    else if (self[kError])\r\n      throw self[kError];\r\n\r\n    availOutAfter = state[0];\r\n    availInAfter = state[1];\r\n\r\n    const inDelta = (availInBefore - availInAfter);\r\n    inputRead += inDelta;\r\n\r\n    const have = availOutBefore - availOutAfter;\r\n    if (have > 0) {\r\n      const out = buffer.slice(offset, offset + have);\r\n      offset += have;\r\n      if (!buffers)\r\n        buffers = [out];\r\n      else\r\n        ArrayPrototypePush(buffers, out);\r\n      nread += out.byteLength;\r\n\r\n      if (nread > self._maxOutputLength) {\r\n        _close(self);\r\n        throw new ERR_BUFFER_TOO_LARGE(self._maxOutputLength);\r\n      }\r\n\r\n    } else {\r\n      assert(have === 0, 'have should not go down');\r\n    }\r\n\r\n    // Exhausted the output buffer, or used all the input create a new one.\r\n    if (availOutAfter === 0 || offset >= chunkSize) {\r\n      availOutBefore = chunkSize;\r\n      offset = 0;\r\n      buffer = Buffer.allocUnsafe(chunkSize);\r\n    }\r\n\r\n    if (availOutAfter === 0) {\r\n      // Not actually done. Need to reprocess.\r\n      // Also, update the availInBefore to the availInAfter value,\r\n      // so that if we have to hit it a third (fourth, etc.) time,\r\n      // it'll have the correct byte counts.\r\n      inOff += inDelta;\r\n      availInBefore = availInAfter;\r\n    } else {\r\n      break;\r\n    }\r\n  }\r\n\r\n  self.bytesWritten = inputRead;\r\n  _close(self);\r\n\r\n  if (nread === 0)\r\n    return Buffer.alloc(0);\r\n\r\n  return (buffers.length === 1 ? buffers[0] : Buffer.concat(buffers, nread));\r\n}\r\n\r\nfunction processChunk(self, chunk, flushFlag, cb) {\r\n  const handle = self._handle;\r\n  if (!handle) return process.nextTick(cb);\r\n\r\n  handle.buffer = chunk;\r\n  handle.cb = cb;\r\n  handle.availOutBefore = self._chunkSize - self._outOffset;\r\n  handle.availInBefore = chunk.byteLength;\r\n  handle.inOff = 0;\r\n  handle.flushFlag = flushFlag;\r\n\r\n  handle.write(flushFlag,\r\n               chunk, // in\r\n               0, // in_off\r\n               handle.availInBefore, // in_len\r\n               self._outBuffer, // out\r\n               self._outOffset, // out_off\r\n               handle.availOutBefore); // out_len\r\n}\r\n\r\nfunction processCallback() {\r\n  // This callback's context (`this`) is the `_handle` (ZCtx) object. It is\r\n  // important to null out the values once they are no longer needed since\r\n  // `_handle` can stay in memory long after the buffer is needed.\r\n  const handle = this;\r\n  const self = this[owner_symbol];\r\n  const state = self._writeState;\r\n\r\n  if (self.destroyed) {\r\n    this.buffer = null;\r\n    this.cb();\r\n    return;\r\n  }\r\n\r\n  const availOutAfter = state[0];\r\n  const availInAfter = state[1];\r\n\r\n  const inDelta = handle.availInBefore - availInAfter;\r\n  self.bytesWritten += inDelta;\r\n\r\n  const have = handle.availOutBefore - availOutAfter;\r\n  if (have > 0) {\r\n    const out = self._outBuffer.slice(self._outOffset, self._outOffset + have);\r\n    self._outOffset += have;\r\n    self.push(out);\r\n  } else {\r\n    assert(have === 0, 'have should not go down');\r\n  }\r\n\r\n  if (self.destroyed) {\r\n    this.cb();\r\n    return;\r\n  }\r\n\r\n  // Exhausted the output buffer, or used all the input create a new one.\r\n  if (availOutAfter === 0 || self._outOffset >= self._chunkSize) {\r\n    handle.availOutBefore = self._chunkSize;\r\n    self._outOffset = 0;\r\n    self._outBuffer = Buffer.allocUnsafe(self._chunkSize);\r\n  }\r\n\r\n  if (availOutAfter === 0) {\r\n    // Not actually done. Need to reprocess.\r\n    // Also, update the availInBefore to the availInAfter value,\r\n    // so that if we have to hit it a third (fourth, etc.) time,\r\n    // it'll have the correct byte counts.\r\n    handle.inOff += inDelta;\r\n    handle.availInBefore = availInAfter;\r\n\r\n    this.write(handle.flushFlag,\r\n               this.buffer, // in\r\n               handle.inOff, // in_off\r\n               handle.availInBefore, // in_len\r\n               self._outBuffer, // out\r\n               self._outOffset, // out_off\r\n               self._chunkSize); // out_len\r\n    return;\r\n  }\r\n\r\n  if (availInAfter > 0) {\r\n    // If we have more input that should be written, but we also have output\r\n    // space available, that means that the compression library was not\r\n    // interested in receiving more data, and in particular that the input\r\n    // stream has ended early.\r\n    // This applies to streams where we don't check data past the end of\r\n    // what was consumed; that is, everything except Gunzip/Unzip.\r\n    self.push(null);\r\n  }\r\n\r\n  // Finished with the chunk.\r\n  this.buffer = null;\r\n  this.cb();\r\n}\r\n\r\nfunction _close(engine) {\r\n  // Caller may invoke .close after a zlib error (which will null _handle).\r\n  if (!engine._handle)\r\n    return;\r\n\r\n  engine._handle.close();\r\n  engine._handle = null;\r\n}\r\n\r\nconst zlibDefaultOpts = {\r\n  flush: Z_NO_FLUSH,\r\n  finishFlush: Z_FINISH,\r\n  fullFlush: Z_FULL_FLUSH\r\n};\r\n// Base class for all streams actually backed by zlib and using zlib-specific\r\n// parameters.\r\nfunction Zlib(opts, mode) {\r\n  let windowBits = Z_DEFAULT_WINDOWBITS;\r\n  let level = Z_DEFAULT_COMPRESSION;\r\n  let memLevel = Z_DEFAULT_MEMLEVEL;\r\n  let strategy = Z_DEFAULT_STRATEGY;\r\n  let dictionary;\r\n\r\n  if (opts) {\r\n    // windowBits is special. On the compression side, 0 is an invalid value.\r\n    // But on the decompression side, a value of 0 for windowBits tells zlib\r\n    // to use the window size in the zlib header of the compressed stream.\r\n    if ((opts.windowBits == null || opts.windowBits === 0) &&\r\n        (mode === INFLATE ||\r\n         mode === GUNZIP ||\r\n         mode === UNZIP)) {\r\n      windowBits = 0;\r\n    } else {\r\n      // `{ windowBits: 8 }` is valid for deflate but not gzip.\r\n      const min = Z_MIN_WINDOWBITS + (mode === GZIP ? 1 : 0);\r\n      windowBits = checkRangesOrGetDefault(\r\n        opts.windowBits, 'options.windowBits',\r\n        min, Z_MAX_WINDOWBITS, Z_DEFAULT_WINDOWBITS);\r\n    }\r\n\r\n    level = checkRangesOrGetDefault(\r\n      opts.level, 'options.level',\r\n      Z_MIN_LEVEL, Z_MAX_LEVEL, Z_DEFAULT_COMPRESSION);\r\n\r\n    memLevel = checkRangesOrGetDefault(\r\n      opts.memLevel, 'options.memLevel',\r\n      Z_MIN_MEMLEVEL, Z_MAX_MEMLEVEL, Z_DEFAULT_MEMLEVEL);\r\n\r\n    strategy = checkRangesOrGetDefault(\r\n      opts.strategy, 'options.strategy',\r\n      Z_DEFAULT_STRATEGY, Z_FIXED, Z_DEFAULT_STRATEGY);\r\n\r\n    dictionary = opts.dictionary;\r\n    if (dictionary !== undefined && !isArrayBufferView(dictionary)) {\r\n      if (isAnyArrayBuffer(dictionary)) {\r\n        dictionary = Buffer.from(dictionary);\r\n      } else {\r\n        throw new ERR_INVALID_ARG_TYPE(\r\n          'options.dictionary',\r\n          ['Buffer', 'TypedArray', 'DataView', 'ArrayBuffer'],\r\n          dictionary\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  const handle = new binding.Zlib(mode);\r\n  // Ideally, we could let ZlibBase() set up _writeState. I haven't been able\r\n  // to come up with a good solution that doesn't break our internal API,\r\n  // and with it all supported npm versions at the time of writing.\r\n  this._writeState = new Uint32Array(2);\r\n  handle.init(windowBits,\r\n              level,\r\n              memLevel,\r\n              strategy,\r\n              this._writeState,\r\n              processCallback,\r\n              dictionary);\r\n\r\n  ReflectApply(ZlibBase, this, [opts, mode, handle, zlibDefaultOpts]);\r\n\r\n  this._level = level;\r\n  this._strategy = strategy;\r\n}\r\nObjectSetPrototypeOf(Zlib.prototype, ZlibBase.prototype);\r\nObjectSetPrototypeOf(Zlib, ZlibBase);\r\n\r\n// This callback is used by `.params()` to wait until a full flush happened\r\n// before adjusting the parameters. In particular, the call to the native\r\n// `params()` function should not happen while a write is currently in progress\r\n// on the threadpool.\r\nfunction paramsAfterFlushCallback(level, strategy, callback) {\r\n  assert(this._handle, 'zlib binding closed');\r\n  this._handle.params(level, strategy);\r\n  if (!this.destroyed) {\r\n    this._level = level;\r\n    this._strategy = strategy;\r\n    if (callback) callback();\r\n  }\r\n}\r\n\r\nZlib.prototype.params = function params(level, strategy, callback) {\r\n  checkRangesOrGetDefault(level, 'level', Z_MIN_LEVEL, Z_MAX_LEVEL);\r\n  checkRangesOrGetDefault(strategy, 'strategy', Z_DEFAULT_STRATEGY, Z_FIXED);\r\n\r\n  if (this._level !== level || this._strategy !== strategy) {\r\n    this.flush(Z_SYNC_FLUSH,\r\n               FunctionPrototypeBind(paramsAfterFlushCallback, this,\r\n                                     level, strategy, callback));\r\n  } else {\r\n    process.nextTick(callback);\r\n  }\r\n};\r\n\r\n// generic zlib\r\n// minimal 2-byte header\r\nfunction Deflate(opts) {\r\n  if (!(this instanceof Deflate))\r\n    return new Deflate(opts);\r\n  ReflectApply(Zlib, this, [opts, DEFLATE]);\r\n}\r\nObjectSetPrototypeOf(Deflate.prototype, Zlib.prototype);\r\nObjectSetPrototypeOf(Deflate, Zlib);\r\n\r\nfunction Inflate(opts) {\r\n  if (!(this instanceof Inflate))\r\n    return new Inflate(opts);\r\n  ReflectApply(Zlib, this, [opts, INFLATE]);\r\n}\r\nObjectSetPrototypeOf(Inflate.prototype, Zlib.prototype);\r\nObjectSetPrototypeOf(Inflate, Zlib);\r\n\r\nfunction Gzip(opts) {\r\n  if (!(this instanceof Gzip))\r\n    return new Gzip(opts);\r\n  ReflectApply(Zlib, this, [opts, GZIP]);\r\n}\r\nObjectSetPrototypeOf(Gzip.prototype, Zlib.prototype);\r\nObjectSetPrototypeOf(Gzip, Zlib);\r\n\r\nfunction Gunzip(opts) {\r\n  if (!(this instanceof Gunzip))\r\n    return new Gunzip(opts);\r\n  ReflectApply(Zlib, this, [opts, GUNZIP]);\r\n}\r\nObjectSetPrototypeOf(Gunzip.prototype, Zlib.prototype);\r\nObjectSetPrototypeOf(Gunzip, Zlib);\r\n\r\nfunction DeflateRaw(opts) {\r\n  if (opts && opts.windowBits === 8) opts.windowBits = 9;\r\n  if (!(this instanceof DeflateRaw))\r\n    return new DeflateRaw(opts);\r\n  ReflectApply(Zlib, this, [opts, DEFLATERAW]);\r\n}\r\nObjectSetPrototypeOf(DeflateRaw.prototype, Zlib.prototype);\r\nObjectSetPrototypeOf(DeflateRaw, Zlib);\r\n\r\nfunction InflateRaw(opts) {\r\n  if (!(this instanceof InflateRaw))\r\n    return new InflateRaw(opts);\r\n  ReflectApply(Zlib, this, [opts, INFLATERAW]);\r\n}\r\nObjectSetPrototypeOf(InflateRaw.prototype, Zlib.prototype);\r\nObjectSetPrototypeOf(InflateRaw, Zlib);\r\n\r\nfunction Unzip(opts) {\r\n  if (!(this instanceof Unzip))\r\n    return new Unzip(opts);\r\n  ReflectApply(Zlib, this, [opts, UNZIP]);\r\n}\r\nObjectSetPrototypeOf(Unzip.prototype, Zlib.prototype);\r\nObjectSetPrototypeOf(Unzip, Zlib);\r\n\r\nfunction createConvenienceMethod(ctor, sync) {\r\n  if (sync) {\r\n    return function syncBufferWrapper(buffer, opts) {\r\n      return zlibBufferSync(new ctor(opts), buffer);\r\n    };\r\n  }\r\n  return function asyncBufferWrapper(buffer, opts, callback) {\r\n    if (typeof opts === 'function') {\r\n      callback = opts;\r\n      opts = {};\r\n    }\r\n    return zlibBuffer(new ctor(opts), buffer, callback);\r\n  };\r\n}\r\n\r\nconst kMaxBrotliParam = MathMaxApply(ArrayPrototypeMap(\r\n  ObjectKeys(constants),\r\n  (key) => (StringPrototypeStartsWith(key, 'BROTLI_PARAM_') ?\r\n    constants[key] :\r\n    0)\r\n));\r\n\r\nconst brotliInitParamsArray = new Uint32Array(kMaxBrotliParam + 1);\r\n\r\nconst brotliDefaultOpts = {\r\n  flush: BROTLI_OPERATION_PROCESS,\r\n  finishFlush: BROTLI_OPERATION_FINISH,\r\n  fullFlush: BROTLI_OPERATION_FLUSH\r\n};\r\nfunction Brotli(opts, mode) {\r\n  assert(mode === BROTLI_DECODE || mode === BROTLI_ENCODE);\r\n\r\n  TypedArrayPrototypeFill(brotliInitParamsArray, -1);\r\n  if (opts?.params) {\r\n    ArrayPrototypeForEach(ObjectKeys(opts.params), (origKey) => {\r\n      const key = +origKey;\r\n      if (NumberIsNaN(key) || key < 0 || key > kMaxBrotliParam ||\r\n          (brotliInitParamsArray[key] | 0) !== -1) {\r\n        throw new ERR_BROTLI_INVALID_PARAM(origKey);\r\n      }\r\n\r\n      const value = opts.params[origKey];\r\n      if (typeof value !== 'number' && typeof value !== 'boolean') {\r\n        throw new ERR_INVALID_ARG_TYPE('options.params[key]',\r\n                                       'number', opts.params[origKey]);\r\n      }\r\n      brotliInitParamsArray[key] = value;\r\n    });\r\n  }\r\n\r\n  const handle = mode === BROTLI_DECODE ?\r\n    new binding.BrotliDecoder(mode) : new binding.BrotliEncoder(mode);\r\n\r\n  this._writeState = new Uint32Array(2);\r\n  // TODO(addaleax): Sometimes we generate better error codes in C++ land,\r\n  // e.g. ERR_BROTLI_PARAM_SET_FAILED -- it's hard to access them with\r\n  // the current bindings setup, though.\r\n  if (!handle.init(brotliInitParamsArray,\r\n                   this._writeState,\r\n                   processCallback)) {\r\n    throw new ERR_ZLIB_INITIALIZATION_FAILED();\r\n  }\r\n\r\n  ReflectApply(ZlibBase, this, [opts, mode, handle, brotliDefaultOpts]);\r\n}\r\nObjectSetPrototypeOf(Brotli.prototype, Zlib.prototype);\r\nObjectSetPrototypeOf(Brotli, Zlib);\r\n\r\nfunction BrotliCompress(opts) {\r\n  if (!(this instanceof BrotliCompress))\r\n    return new BrotliCompress(opts);\r\n  ReflectApply(Brotli, this, [opts, BROTLI_ENCODE]);\r\n}\r\nObjectSetPrototypeOf(BrotliCompress.prototype, Brotli.prototype);\r\nObjectSetPrototypeOf(BrotliCompress, Brotli);\r\n\r\nfunction BrotliDecompress(opts) {\r\n  if (!(this instanceof BrotliDecompress))\r\n    return new BrotliDecompress(opts);\r\n  ReflectApply(Brotli, this, [opts, BROTLI_DECODE]);\r\n}\r\nObjectSetPrototypeOf(BrotliDecompress.prototype, Brotli.prototype);\r\nObjectSetPrototypeOf(BrotliDecompress, Brotli);\r\n\r\n\r\nfunction createProperty(ctor) {\r\n  return {\r\n    __proto__: null,\r\n    configurable: true,\r\n    enumerable: true,\r\n    value: function(options) {\r\n      return new ctor(options);\r\n    }\r\n  };\r\n}\r\n\r\n// Legacy alias on the C++ wrapper object. This is not public API, so we may\r\n// want to runtime-deprecate it at some point. There's no hurry, though.\r\nObjectDefineProperty(binding.Zlib.prototype, 'jsref', {\r\n  __proto__: null,\r\n  get() { return this[owner_symbol]; },\r\n  set(v) { return this[owner_symbol] = v; }\r\n});\r\n\r\nmodule.exports = {\r\n  Deflate,\r\n  Inflate,\r\n  Gzip,\r\n  Gunzip,\r\n  DeflateRaw,\r\n  InflateRaw,\r\n  Unzip,\r\n  BrotliCompress,\r\n  BrotliDecompress,\r\n\r\n  // Convenience methods.\r\n  // compress/decompress a string or buffer in one step.\r\n  deflate: createConvenienceMethod(Deflate, false),\r\n  deflateSync: createConvenienceMethod(Deflate, true),\r\n  gzip: createConvenienceMethod(Gzip, false),\r\n  gzipSync: createConvenienceMethod(Gzip, true),\r\n  deflateRaw: createConvenienceMethod(DeflateRaw, false),\r\n  deflateRawSync: createConvenienceMethod(DeflateRaw, true),\r\n  unzip: createConvenienceMethod(Unzip, false),\r\n  unzipSync: createConvenienceMethod(Unzip, true),\r\n  inflate: createConvenienceMethod(Inflate, false),\r\n  inflateSync: createConvenienceMethod(Inflate, true),\r\n  gunzip: createConvenienceMethod(Gunzip, false),\r\n  gunzipSync: createConvenienceMethod(Gunzip, true),\r\n  inflateRaw: createConvenienceMethod(InflateRaw, false),\r\n  inflateRawSync: createConvenienceMethod(InflateRaw, true),\r\n  brotliCompress: createConvenienceMethod(BrotliCompress, false),\r\n  brotliCompressSync: createConvenienceMethod(BrotliCompress, true),\r\n  brotliDecompress: createConvenienceMethod(BrotliDecompress, false),\r\n  brotliDecompressSync: createConvenienceMethod(BrotliDecompress, true),\r\n};\r\n\r\nObjectDefineProperties(module.exports, {\r\n  createDeflate: createProperty(Deflate),\r\n  createInflate: createProperty(Inflate),\r\n  createDeflateRaw: createProperty(DeflateRaw),\r\n  createInflateRaw: createProperty(InflateRaw),\r\n  createGzip: createProperty(Gzip),\r\n  createGunzip: createProperty(Gunzip),\r\n  createUnzip: createProperty(Unzip),\r\n  createBrotliCompress: createProperty(BrotliCompress),\r\n  createBrotliDecompress: createProperty(BrotliDecompress),\r\n  constants: {\r\n    __proto__: null,\r\n    configurable: false,\r\n    enumerable: true,\r\n    value: constants\r\n  },\r\n  codes: {\r\n    __proto__: null,\r\n    enumerable: true,\r\n    writable: false,\r\n    value: ObjectFreeze(codes)\r\n  }\r\n});\r\n\r\n// These should be considered deprecated\r\n// expose all the zlib constants\r\nfor (const bkey of ObjectKeys(constants)) {\r\n  if (StringPrototypeStartsWith(bkey, 'BROTLI')) continue;\r\n  ObjectDefineProperty(module.exports, bkey, {\r\n    __proto__: null,\r\n    enumerable: false, value: constants[bkey], writable: false\r\n  });\r\n}\r\n",
    "name": "node:zlib",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 549,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\etag\\index.js",
    "source": "/*!\n * etag\n * Copyright(c) 2014-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = etag\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar crypto = require('crypto')\nvar Stats = require('fs').Stats\n\n/**\n * Module variables.\n * @private\n */\n\nvar toString = Object.prototype.toString\n\n/**\n * Generate an entity tag.\n *\n * @param {Buffer|string} entity\n * @return {string}\n * @private\n */\n\nfunction entitytag (entity) {\n  if (entity.length === 0) {\n    // fast-path empty\n    return '\"0-2jmj7l5rSw0yVb/vlWAYkK/YBwk\"'\n  }\n\n  // compute hash of entity\n  var hash = crypto\n    .createHash('sha1')\n    .update(entity, 'utf8')\n    .digest('base64')\n    .substring(0, 27)\n\n  // compute length of entity\n  var len = typeof entity === 'string'\n    ? Buffer.byteLength(entity, 'utf8')\n    : entity.length\n\n  return '\"' + len.toString(16) + '-' + hash + '\"'\n}\n\n/**\n * Create a simple ETag.\n *\n * @param {string|Buffer|Stats} entity\n * @param {object} [options]\n * @param {boolean} [options.weak]\n * @return {String}\n * @public\n */\n\nfunction etag (entity, options) {\n  if (entity == null) {\n    throw new TypeError('argument entity is required')\n  }\n\n  // support fs.Stats object\n  var isStats = isstats(entity)\n  var weak = options && typeof options.weak === 'boolean'\n    ? options.weak\n    : isStats\n\n  // validate argument\n  if (!isStats && typeof entity !== 'string' && !Buffer.isBuffer(entity)) {\n    throw new TypeError('argument entity must be string, Buffer, or fs.Stats')\n  }\n\n  // generate entity tag\n  var tag = isStats\n    ? stattag(entity)\n    : entitytag(entity)\n\n  return weak\n    ? 'W/' + tag\n    : tag\n}\n\n/**\n * Determine if object is a Stats object.\n *\n * @param {object} obj\n * @return {boolean}\n * @api private\n */\n\nfunction isstats (obj) {\n  // genuine fs.Stats\n  if (typeof Stats === 'function' && obj instanceof Stats) {\n    return true\n  }\n\n  // quack quack\n  return obj && typeof obj === 'object' &&\n    'ctime' in obj && toString.call(obj.ctime) === '[object Date]' &&\n    'mtime' in obj && toString.call(obj.mtime) === '[object Date]' &&\n    'ino' in obj && typeof obj.ino === 'number' &&\n    'size' in obj && typeof obj.size === 'number'\n}\n\n/**\n * Generate a tag for a stat.\n *\n * @param {object} stat\n * @return {string}\n * @private\n */\n\nfunction stattag (stat) {\n  var mtime = stat.mtime.getTime().toString(16)\n  var size = stat.size.toString(16)\n\n  return '\"' + size + '-' + mtime + '\"'\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\etag\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 550,
    "sourcePositions": []
  },
  {
    "url": "node:internal/crypto/webcrypto",
    "source": "'use strict';\r\n\r\nconst {\r\n  ArrayPrototypeIncludes,\r\n  JSONParse,\r\n  JSONStringify,\r\n  ObjectDefineProperties,\r\n  ReflectApply,\r\n  ReflectConstruct,\r\n  SafeSet,\r\n  SymbolToStringTag,\r\n  StringPrototypeRepeat,\r\n} = primordials;\r\n\r\nconst {\r\n  kWebCryptoKeyFormatRaw,\r\n  kWebCryptoKeyFormatPKCS8,\r\n  kWebCryptoKeyFormatSPKI,\r\n  kWebCryptoCipherEncrypt,\r\n  kWebCryptoCipherDecrypt,\r\n} = internalBinding('crypto');\r\n\r\nconst {\r\n  validateArray,\r\n  validateBoolean,\r\n  validateObject,\r\n  validateOneOf,\r\n  validateString,\r\n} = require('internal/validators');\r\n\r\nconst { TextDecoder, TextEncoder } = require('internal/encoding');\r\n\r\nconst {\r\n  codes: {\r\n    ERR_ILLEGAL_CONSTRUCTOR,\r\n    ERR_INVALID_ARG_TYPE,\r\n    ERR_INVALID_THIS,\r\n  }\r\n} = require('internal/errors');\r\n\r\nconst {\r\n  CryptoKey,\r\n  InternalCryptoKey,\r\n  createSecretKey,\r\n  isCryptoKey,\r\n} = require('internal/crypto/keys');\r\n\r\nconst {\r\n  asyncDigest,\r\n} = require('internal/crypto/hash');\r\n\r\nconst {\r\n  getArrayBufferOrView,\r\n  getBlockSize,\r\n  hasAnyNotIn,\r\n  normalizeAlgorithm,\r\n  normalizeHashName,\r\n  validateMaxBufferLength,\r\n  kExportFormats,\r\n  kHandle,\r\n  kKeyObject,\r\n} = require('internal/crypto/util');\r\n\r\nconst {\r\n  kEnumerableProperty,\r\n  lazyDOMException,\r\n} = require('internal/util');\r\n\r\nconst {\r\n  getRandomValues: _getRandomValues,\r\n  randomUUID: _randomUUID,\r\n} = require('internal/crypto/random');\r\n\r\nasync function digest(algorithm, data) {\r\n  if (this !== subtle) throw new ERR_INVALID_THIS('SubtleCrypto');\r\n  return ReflectApply(asyncDigest, this, arguments);\r\n}\r\n\r\nfunction randomUUID() {\r\n  if (this !== crypto) throw new ERR_INVALID_THIS('Crypto');\r\n  return _randomUUID();\r\n}\r\n\r\nasync function generateKey(\r\n  algorithm,\r\n  extractable,\r\n  keyUsages) {\r\n  if (this !== subtle) throw new ERR_INVALID_THIS('SubtleCrypto');\r\n  algorithm = normalizeAlgorithm(algorithm);\r\n  validateBoolean(extractable, 'extractable');\r\n  validateArray(keyUsages, 'keyUsages');\r\n  let result;\r\n  let resultType;\r\n  switch (algorithm.name) {\r\n    case 'RSASSA-PKCS1-v1_5':\r\n      // Fall through\r\n    case 'RSA-PSS':\r\n      // Fall through\r\n    case 'RSA-OAEP':\r\n      resultType = 'CryptoKeyPair';\r\n      result = await require('internal/crypto/rsa')\r\n        .rsaKeyGenerate(algorithm, extractable, keyUsages);\r\n      break;\r\n    case 'Ed25519':\r\n      // Fall through\r\n    case 'Ed448':\r\n      // Fall through\r\n    case 'X25519':\r\n      // Fall through\r\n    case 'X448':\r\n      resultType = 'CryptoKeyPair';\r\n      result = await require('internal/crypto/cfrg')\r\n        .cfrgGenerateKey(algorithm, extractable, keyUsages);\r\n      break;\r\n    case 'ECDSA':\r\n      // Fall through\r\n    case 'ECDH':\r\n      resultType = 'CryptoKeyPair';\r\n      result = await require('internal/crypto/ec')\r\n        .ecGenerateKey(algorithm, extractable, keyUsages);\r\n      break;\r\n    case 'HMAC':\r\n      resultType = 'CryptoKey';\r\n      result = await require('internal/crypto/mac')\r\n        .hmacGenerateKey(algorithm, extractable, keyUsages);\r\n      break;\r\n    case 'AES-CTR':\r\n      // Fall through\r\n    case 'AES-CBC':\r\n      // Fall through\r\n    case 'AES-GCM':\r\n      // Fall through\r\n    case 'AES-KW':\r\n      resultType = 'CryptoKey';\r\n      result = await require('internal/crypto/aes')\r\n        .aesGenerateKey(algorithm, extractable, keyUsages);\r\n      break;\r\n    default:\r\n      throw lazyDOMException('Unrecognized name.');\r\n  }\r\n\r\n  if (\r\n    (resultType === 'CryptoKey' &&\r\n      (result.type === 'secret' || result.type === 'private') &&\r\n      result.usages.length === 0) ||\r\n    (resultType === 'CryptoKeyPair' && result.privateKey.usages.length === 0)\r\n  ) {\r\n    throw lazyDOMException(\r\n      'Usages cannot be empty when creating a key.',\r\n      'SyntaxError');\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nasync function deriveBits(algorithm, baseKey, length) {\r\n  if (this !== subtle) throw new ERR_INVALID_THIS('SubtleCrypto');\r\n  algorithm = normalizeAlgorithm(algorithm);\r\n  if (!isCryptoKey(baseKey))\r\n    throw new ERR_INVALID_ARG_TYPE('baseKey', 'CryptoKey', baseKey);\r\n  if (!ArrayPrototypeIncludes(baseKey.usages, 'deriveBits')) {\r\n    throw lazyDOMException(\r\n      'baseKey does not have deriveBits usage',\r\n      'InvalidAccessError');\r\n  }\r\n  if (baseKey.algorithm.name !== algorithm.name)\r\n    throw lazyDOMException('Key algorithm mismatch', 'InvalidAccessError');\r\n  switch (algorithm.name) {\r\n    case 'X25519':\r\n      // Fall through\r\n    case 'X448':\r\n      // Fall through\r\n    case 'ECDH':\r\n      return require('internal/crypto/diffiehellman')\r\n        .ecdhDeriveBits(algorithm, baseKey, length);\r\n    case 'HKDF':\r\n      return require('internal/crypto/hkdf')\r\n        .hkdfDeriveBits(algorithm, baseKey, length);\r\n    case 'PBKDF2':\r\n      return require('internal/crypto/pbkdf2')\r\n        .pbkdf2DeriveBits(algorithm, baseKey, length);\r\n  }\r\n  throw lazyDOMException('Unrecognized name.');\r\n}\r\n\r\nfunction getKeyLength({ name, length, hash }) {\r\n  switch (name) {\r\n    case 'AES-CTR':\r\n    case 'AES-CBC':\r\n    case 'AES-GCM':\r\n    case 'AES-KW':\r\n      if (length !== 128 && length !== 192 && length !== 256)\r\n        throw lazyDOMException('Invalid key length', 'OperationError');\r\n\r\n      return length;\r\n    case 'HMAC':\r\n      if (length === undefined) {\r\n        return getBlockSize(hash?.name);\r\n      }\r\n\r\n      if (typeof length === 'number' && length !== 0) {\r\n        return length;\r\n      }\r\n\r\n      throw lazyDOMException('Invalid key length', 'OperationError');\r\n    case 'HKDF':\r\n    case 'PBKDF2':\r\n      return null;\r\n  }\r\n}\r\n\r\nasync function deriveKey(\r\n  algorithm,\r\n  baseKey,\r\n  derivedKeyAlgorithm,\r\n  extractable,\r\n  keyUsages) {\r\n  if (this !== subtle) throw new ERR_INVALID_THIS('SubtleCrypto');\r\n  algorithm = normalizeAlgorithm(algorithm);\r\n  derivedKeyAlgorithm = normalizeAlgorithm(derivedKeyAlgorithm);\r\n  if (!isCryptoKey(baseKey))\r\n    throw new ERR_INVALID_ARG_TYPE('baseKey', 'CryptoKey', baseKey);\r\n  if (!ArrayPrototypeIncludes(baseKey.usages, 'deriveKey')) {\r\n    throw lazyDOMException(\r\n      'baseKey does not have deriveKey usage',\r\n      'InvalidAccessError');\r\n  }\r\n  if (baseKey.algorithm.name !== algorithm.name)\r\n    throw lazyDOMException('Key algorithm mismatch', 'InvalidAccessError');\r\n  validateObject(derivedKeyAlgorithm, 'derivedKeyAlgorithm', {\r\n    allowArray: true, allowFunction: true,\r\n  });\r\n  validateBoolean(extractable, 'extractable');\r\n  validateArray(keyUsages, 'keyUsages');\r\n\r\n  const length = getKeyLength(derivedKeyAlgorithm);\r\n  let bits;\r\n  switch (algorithm.name) {\r\n    case 'X25519':\r\n      // Fall through\r\n    case 'X448':\r\n      // Fall through\r\n    case 'ECDH':\r\n      bits = await require('internal/crypto/diffiehellman')\r\n        .ecdhDeriveBits(algorithm, baseKey, length);\r\n      break;\r\n    case 'HKDF':\r\n      bits = await require('internal/crypto/hkdf')\r\n        .hkdfDeriveBits(algorithm, baseKey, length);\r\n      break;\r\n    case 'PBKDF2':\r\n      bits = await require('internal/crypto/pbkdf2')\r\n        .pbkdf2DeriveBits(algorithm, baseKey, length);\r\n      break;\r\n    default:\r\n      throw lazyDOMException('Unrecognized name.');\r\n  }\r\n\r\n  return ReflectApply(\r\n    importKey,\r\n    this,\r\n    ['raw', bits, derivedKeyAlgorithm, extractable, keyUsages],\r\n  );\r\n}\r\n\r\nasync function exportKeySpki(key) {\r\n  switch (key.algorithm.name) {\r\n    case 'RSASSA-PKCS1-v1_5':\r\n      // Fall through\r\n    case 'RSA-PSS':\r\n      // Fall through\r\n    case 'RSA-OAEP':\r\n      if (key.type === 'public') {\r\n        return require('internal/crypto/rsa')\r\n          .rsaExportKey(key, kWebCryptoKeyFormatSPKI);\r\n      }\r\n      break;\r\n    case 'ECDSA':\r\n      // Fall through\r\n    case 'ECDH':\r\n      if (key.type === 'public') {\r\n        return require('internal/crypto/ec')\r\n          .ecExportKey(key, kWebCryptoKeyFormatSPKI);\r\n      }\r\n      break;\r\n    case 'Ed25519':\r\n      // Fall through\r\n    case 'Ed448':\r\n      // Fall through\r\n    case 'X25519':\r\n      // Fall through\r\n    case 'X448':\r\n      if (key.type === 'public') {\r\n        return require('internal/crypto/cfrg')\r\n          .cfrgExportKey(key, kWebCryptoKeyFormatSPKI);\r\n      }\r\n      break;\r\n  }\r\n\r\n  throw lazyDOMException(\r\n    `Unable to export a raw ${key.algorithm.name} ${key.type} key`,\r\n    'InvalidAccessError');\r\n}\r\n\r\nasync function exportKeyPkcs8(key) {\r\n  switch (key.algorithm.name) {\r\n    case 'RSASSA-PKCS1-v1_5':\r\n      // Fall through\r\n    case 'RSA-PSS':\r\n      // Fall through\r\n    case 'RSA-OAEP':\r\n      if (key.type === 'private') {\r\n        return require('internal/crypto/rsa')\r\n          .rsaExportKey(key, kWebCryptoKeyFormatPKCS8);\r\n      }\r\n      break;\r\n    case 'ECDSA':\r\n      // Fall through\r\n    case 'ECDH':\r\n      if (key.type === 'private') {\r\n        return require('internal/crypto/ec')\r\n          .ecExportKey(key, kWebCryptoKeyFormatPKCS8);\r\n      }\r\n      break;\r\n    case 'Ed25519':\r\n      // Fall through\r\n    case 'Ed448':\r\n      // Fall through\r\n    case 'X25519':\r\n      // Fall through\r\n    case 'X448':\r\n      if (key.type === 'private') {\r\n        return require('internal/crypto/cfrg')\r\n          .cfrgExportKey(key, kWebCryptoKeyFormatPKCS8);\r\n      }\r\n      break;\r\n  }\r\n\r\n  throw lazyDOMException(\r\n    `Unable to export a pkcs8 ${key.algorithm.name} ${key.type} key`,\r\n    'InvalidAccessError');\r\n}\r\n\r\nasync function exportKeyRaw(key) {\r\n  switch (key.algorithm.name) {\r\n    case 'ECDSA':\r\n      // Fall through\r\n    case 'ECDH':\r\n      if (key.type === 'public') {\r\n        return require('internal/crypto/ec')\r\n          .ecExportKey(key, kWebCryptoKeyFormatRaw);\r\n      }\r\n      break;\r\n    case 'Ed25519':\r\n      // Fall through\r\n    case 'Ed448':\r\n      // Fall through\r\n    case 'X25519':\r\n      // Fall through\r\n    case 'X448':\r\n      if (key.type === 'public') {\r\n        return require('internal/crypto/cfrg')\r\n          .cfrgExportKey(key, kWebCryptoKeyFormatRaw);\r\n      }\r\n      break;\r\n    case 'AES-CTR':\r\n      // Fall through\r\n    case 'AES-CBC':\r\n      // Fall through\r\n    case 'AES-GCM':\r\n      // Fall through\r\n    case 'AES-KW':\r\n      // Fall through\r\n    case 'HMAC':\r\n      return key[kKeyObject].export().buffer;\r\n  }\r\n\r\n  throw lazyDOMException(\r\n    `Unable to export a raw ${key.algorithm.name} ${key.type} key`,\r\n    'InvalidAccessError');\r\n}\r\n\r\nasync function exportKeyJWK(key) {\r\n  const jwk = key[kKeyObject][kHandle].exportJwk({\r\n    key_ops: key.usages,\r\n    ext: key.extractable,\r\n  }, true);\r\n  switch (key.algorithm.name) {\r\n    case 'RSASSA-PKCS1-v1_5':\r\n      jwk.alg = normalizeHashName(\r\n        key.algorithm.hash.name,\r\n        normalizeHashName.kContextJwkRsa);\r\n      return jwk;\r\n    case 'RSA-PSS':\r\n      jwk.alg = normalizeHashName(\r\n        key.algorithm.hash.name,\r\n        normalizeHashName.kContextJwkRsaPss);\r\n      return jwk;\r\n    case 'RSA-OAEP':\r\n      jwk.alg = normalizeHashName(\r\n        key.algorithm.hash.name,\r\n        normalizeHashName.kContextJwkRsaOaep);\r\n      return jwk;\r\n    case 'ECDSA':\r\n      // Fall through\r\n    case 'ECDH':\r\n      jwk.crv ||= key.algorithm.namedCurve;\r\n      return jwk;\r\n    case 'X25519':\r\n      // Fall through\r\n    case 'X448':\r\n      jwk.crv ||= key.algorithm.name;\r\n      return jwk;\r\n    case 'Ed25519':\r\n      // Fall through\r\n    case 'Ed448':\r\n      jwk.crv ||= key.algorithm.name;\r\n      jwk.alg = 'EdDSA';\r\n      return jwk;\r\n    case 'AES-CTR':\r\n      // Fall through\r\n    case 'AES-CBC':\r\n      // Fall through\r\n    case 'AES-GCM':\r\n      // Fall through\r\n    case 'AES-KW':\r\n      jwk.alg = require('internal/crypto/aes')\r\n        .getAlgorithmName(key.algorithm.name, key.algorithm.length);\r\n      return jwk;\r\n    case 'HMAC':\r\n      jwk.alg = normalizeHashName(\r\n        key.algorithm.hash.name,\r\n        normalizeHashName.kContextJwkHmac);\r\n      return jwk;\r\n    default:\r\n      // Fall through\r\n  }\r\n\r\n  throw lazyDOMException('Not yet supported', 'NotSupportedError');\r\n}\r\n\r\nasync function exportKey(format, key) {\r\n  if (this !== subtle) throw new ERR_INVALID_THIS('SubtleCrypto');\r\n  validateString(format, 'format');\r\n  validateOneOf(format, 'format', kExportFormats);\r\n  if (!isCryptoKey(key))\r\n    throw new ERR_INVALID_ARG_TYPE('key', 'CryptoKey', key);\r\n\r\n  if (!key.extractable)\r\n    throw lazyDOMException('key is not extractable', 'InvalidAccessException');\r\n\r\n  switch (format) {\r\n    case 'spki': return exportKeySpki(key);\r\n    case 'pkcs8': return exportKeyPkcs8(key);\r\n    case 'jwk': return exportKeyJWK(key);\r\n    case 'raw': return exportKeyRaw(key);\r\n  }\r\n  throw lazyDOMException(\r\n    'Export format is unsupported', 'NotSupportedError');\r\n}\r\n\r\nasync function importGenericSecretKey(\r\n  { name, length },\r\n  format,\r\n  keyData,\r\n  extractable,\r\n  keyUsages) {\r\n  const usagesSet = new SafeSet(keyUsages);\r\n  if (extractable)\r\n    throw lazyDOMException(`${name} keys are not extractable`, 'SyntaxError');\r\n\r\n  if (hasAnyNotIn(usagesSet, ['deriveKey', 'deriveBits'])) {\r\n    throw lazyDOMException(\r\n      `Unsupported key usage for a ${name} key`,\r\n      'SyntaxError');\r\n  }\r\n\r\n  switch (format) {\r\n    case 'raw': {\r\n      if (hasAnyNotIn(usagesSet, ['deriveKey', 'deriveBits'])) {\r\n        throw lazyDOMException(\r\n          `Unsupported key usage for a ${name} key`,\r\n          'SyntaxError');\r\n      }\r\n\r\n      const checkLength = keyData.byteLength * 8;\r\n\r\n      // The Web Crypto spec allows for key lengths that are not multiples of\r\n      // 8. We don't. Our check here is stricter than that defined by the spec\r\n      // in that we require that algorithm.length match keyData.length * 8 if\r\n      // algorithm.length is specified.\r\n      if (length !== undefined && length !== checkLength) {\r\n        throw lazyDOMException('Invalid key length', 'DataError');\r\n      }\r\n\r\n      const keyObject = createSecretKey(keyData);\r\n      return new InternalCryptoKey(keyObject, { name }, keyUsages, false);\r\n    }\r\n  }\r\n\r\n  throw lazyDOMException(\r\n    `Unable to import ${name} key with format ${format}`,\r\n    'NotSupportedError');\r\n}\r\n\r\nasync function importKey(\r\n  format,\r\n  keyData,\r\n  algorithm,\r\n  extractable,\r\n  keyUsages) {\r\n  if (this !== subtle) throw new ERR_INVALID_THIS('SubtleCrypto');\r\n  validateString(format, 'format');\r\n  validateOneOf(format, 'format', kExportFormats);\r\n  if (format !== 'jwk')\r\n    keyData = getArrayBufferOrView(keyData, 'keyData');\r\n  algorithm = normalizeAlgorithm(algorithm);\r\n  validateBoolean(extractable, 'extractable');\r\n  validateArray(keyUsages, 'keyUsages');\r\n  switch (algorithm.name) {\r\n    case 'RSASSA-PKCS1-v1_5':\r\n      // Fall through\r\n    case 'RSA-PSS':\r\n      // Fall through\r\n    case 'RSA-OAEP':\r\n      return require('internal/crypto/rsa')\r\n        .rsaImportKey(format, keyData, algorithm, extractable, keyUsages);\r\n    case 'ECDSA':\r\n      // Fall through\r\n    case 'ECDH':\r\n      return require('internal/crypto/ec')\r\n        .ecImportKey(format, keyData, algorithm, extractable, keyUsages);\r\n    case 'Ed25519':\r\n      // Fall through\r\n    case 'Ed448':\r\n      // Fall through\r\n    case 'X25519':\r\n      // Fall through\r\n    case 'X448':\r\n      return require('internal/crypto/cfrg')\r\n        .cfrgImportKey(format, keyData, algorithm, extractable, keyUsages);\r\n    case 'HMAC':\r\n      return require('internal/crypto/mac')\r\n        .hmacImportKey(format, keyData, algorithm, extractable, keyUsages);\r\n    case 'AES-CTR':\r\n      // Fall through\r\n    case 'AES-CBC':\r\n      // Fall through\r\n    case 'AES-GCM':\r\n      // Fall through\r\n    case 'AES-KW':\r\n      return require('internal/crypto/aes')\r\n        .aesImportKey(algorithm, format, keyData, extractable, keyUsages);\r\n    case 'HKDF':\r\n      // Fall through\r\n    case 'PBKDF2':\r\n      return importGenericSecretKey(\r\n        algorithm,\r\n        format,\r\n        keyData,\r\n        extractable,\r\n        keyUsages);\r\n  }\r\n\r\n  throw lazyDOMException('Unrecognized name.', 'NotSupportedError');\r\n}\r\n\r\n// subtle.wrapKey() is essentially a subtle.exportKey() followed\r\n// by a subtle.encrypt().\r\nasync function wrapKey(format, key, wrappingKey, algorithm) {\r\n  if (this !== subtle) throw new ERR_INVALID_THIS('SubtleCrypto');\r\n  algorithm = normalizeAlgorithm(algorithm);\r\n  let keyData = await ReflectApply(exportKey, this, [format, key]);\r\n\r\n  if (format === 'jwk') {\r\n    if (keyData == null || typeof keyData !== 'object')\r\n      throw lazyDOMException('Invalid exported JWK key', 'DataError');\r\n    const ec = new TextEncoder();\r\n    const raw = JSONStringify(keyData);\r\n    keyData = ec.encode(raw + StringPrototypeRepeat(' ', 8 - (raw.length % 8)));\r\n  }\r\n\r\n  return cipherOrWrap(\r\n    kWebCryptoCipherEncrypt,\r\n    algorithm,\r\n    wrappingKey,\r\n    keyData,\r\n    'wrapKey');\r\n}\r\n\r\n// subtle.unwrapKey() is essentially a subtle.decrypt() followed\r\n// by a subtle.importKey().\r\nasync function unwrapKey(\r\n  format,\r\n  wrappedKey,\r\n  unwrappingKey,\r\n  unwrapAlgo,\r\n  unwrappedKeyAlgo,\r\n  extractable,\r\n  keyUsages) {\r\n  if (this !== subtle) throw new ERR_INVALID_THIS('SubtleCrypto');\r\n  wrappedKey = getArrayBufferOrView(wrappedKey, 'wrappedKey');\r\n  unwrapAlgo = normalizeAlgorithm(unwrapAlgo);\r\n  let keyData = await cipherOrWrap(\r\n    kWebCryptoCipherDecrypt,\r\n    unwrapAlgo,\r\n    unwrappingKey,\r\n    wrappedKey,\r\n    'unwrapKey');\r\n\r\n  if (format === 'jwk') {\r\n    // The fatal: true option is only supported in builds that have ICU.\r\n    const options = process.versions.icu !== undefined ?\r\n      { fatal: true } : undefined;\r\n    const dec = new TextDecoder('utf-8', options);\r\n    try {\r\n      keyData = JSONParse(dec.decode(keyData));\r\n    } catch {\r\n      throw lazyDOMException('Invalid imported JWK key', 'DataError');\r\n    }\r\n  }\r\n\r\n  return ReflectApply(\r\n    importKey,\r\n    this,\r\n    [format, keyData, unwrappedKeyAlgo, extractable, keyUsages],\r\n  );\r\n}\r\n\r\nfunction signVerify(algorithm, key, data, signature) {\r\n  algorithm = normalizeAlgorithm(algorithm);\r\n  if (!isCryptoKey(key))\r\n    throw new ERR_INVALID_ARG_TYPE('key', 'CryptoKey', key);\r\n  data = getArrayBufferOrView(data, 'data');\r\n  let usage = 'sign';\r\n  if (signature !== undefined) {\r\n    signature = getArrayBufferOrView(signature, 'signature');\r\n    usage = 'verify';\r\n  }\r\n\r\n  if (!ArrayPrototypeIncludes(key.usages, usage) ||\r\n      algorithm.name !== key.algorithm.name) {\r\n    throw lazyDOMException(\r\n      `Unable to use this key to ${usage}`,\r\n      'InvalidAccessError');\r\n  }\r\n\r\n  switch (algorithm.name) {\r\n    case 'RSA-PSS':\r\n      // Fall through\r\n    case 'RSASSA-PKCS1-v1_5':\r\n      return require('internal/crypto/rsa')\r\n        .rsaSignVerify(key, data, algorithm, signature);\r\n    case 'ECDSA':\r\n      return require('internal/crypto/ec')\r\n        .ecdsaSignVerify(key, data, algorithm, signature);\r\n    case 'Ed25519':\r\n      // Fall through\r\n    case 'Ed448':\r\n      // Fall through\r\n      return require('internal/crypto/cfrg')\r\n        .eddsaSignVerify(key, data, algorithm, signature);\r\n    case 'HMAC':\r\n      return require('internal/crypto/mac')\r\n        .hmacSignVerify(key, data, algorithm, signature);\r\n  }\r\n  throw lazyDOMException('Unrecognized named.', 'NotSupportedError');\r\n}\r\n\r\nasync function sign(algorithm, key, data) {\r\n  if (this !== subtle) throw new ERR_INVALID_THIS('SubtleCrypto');\r\n  return signVerify(algorithm, key, data);\r\n}\r\n\r\nasync function verify(algorithm, key, signature, data) {\r\n  if (this !== subtle) throw new ERR_INVALID_THIS('SubtleCrypto');\r\n  return signVerify(algorithm, key, data, signature);\r\n}\r\n\r\nasync function cipherOrWrap(mode, algorithm, key, data, op) {\r\n  algorithm = normalizeAlgorithm(algorithm);\r\n  // We use a Node.js style error here instead of a DOMException because\r\n  // the WebCrypto spec is not specific what kind of error is to be thrown\r\n  // in this case. Both Firefox and Chrome throw simple TypeErrors here.\r\n  if (!isCryptoKey(key))\r\n    throw new ERR_INVALID_ARG_TYPE('key', 'CryptoKey', key);\r\n  // The key algorithm and cipher algorithm must match, and the\r\n  // key must have the proper usage.\r\n  if (key.algorithm.name !== algorithm.name ||\r\n      !ArrayPrototypeIncludes(key.usages, op)) {\r\n    throw lazyDOMException(\r\n      'The requested operation is not valid for the provided key',\r\n      'InvalidAccessError');\r\n  }\r\n\r\n  // For the Web Crypto API, the input data can be any ArrayBuffer,\r\n  // TypedArray, or DataView.\r\n  data = getArrayBufferOrView(data, 'data');\r\n\r\n  // While WebCrypto allows for larger input buffer sizes, we limit\r\n  // those to sizes that can fit within uint32_t because of limitations\r\n  // in the OpenSSL API.\r\n  validateMaxBufferLength(data, 'data');\r\n\r\n  switch (algorithm.name) {\r\n    case 'RSA-OAEP':\r\n      return require('internal/crypto/rsa')\r\n        .rsaCipher(mode, key, data, algorithm);\r\n    case 'AES-CTR':\r\n      // Fall through\r\n    case 'AES-CBC':\r\n      // Fall through\r\n    case 'AES-GCM':\r\n      return require('internal/crypto/aes')\r\n        .aesCipher(mode, key, data, algorithm);\r\n    case 'AES-KW':\r\n      if (op === 'wrapKey' || op === 'unwrapKey') {\r\n        return require('internal/crypto/aes')\r\n          .aesCipher(mode, key, data, algorithm);\r\n      }\r\n  }\r\n  throw lazyDOMException('Unrecognized name.', 'NotSupportedError');\r\n}\r\n\r\nasync function encrypt(algorithm, key, data) {\r\n  if (this !== subtle) throw new ERR_INVALID_THIS('SubtleCrypto');\r\n  return cipherOrWrap(kWebCryptoCipherEncrypt, algorithm, key, data, 'encrypt');\r\n}\r\n\r\nasync function decrypt(algorithm, key, data) {\r\n  if (this !== subtle) throw new ERR_INVALID_THIS('SubtleCrypto');\r\n  return cipherOrWrap(kWebCryptoCipherDecrypt, algorithm, key, data, 'decrypt');\r\n}\r\n\r\n// The SubtleCrypto and Crypto classes are defined as part of the\r\n// Web Crypto API standard: https://www.w3.org/TR/WebCryptoAPI/\r\n\r\nclass SubtleCrypto {\r\n  constructor() {\r\n    throw new ERR_ILLEGAL_CONSTRUCTOR();\r\n  }\r\n}\r\nconst subtle = ReflectConstruct(function() {}, [], SubtleCrypto);\r\n\r\nclass Crypto {\r\n  constructor() {\r\n    throw new ERR_ILLEGAL_CONSTRUCTOR();\r\n  }\r\n\r\n  get subtle() {\r\n    if (this !== crypto) throw new ERR_INVALID_THIS('Crypto');\r\n    return subtle;\r\n  }\r\n}\r\nconst crypto = ReflectConstruct(function() {}, [], Crypto);\r\n\r\nfunction getRandomValues(array) {\r\n  if (this !== crypto) throw new ERR_INVALID_THIS('Crypto');\r\n  return ReflectApply(_getRandomValues, this, arguments);\r\n}\r\n\r\nObjectDefineProperties(\r\n  Crypto.prototype, {\r\n    [SymbolToStringTag]: {\r\n      __proto__: null,\r\n      enumerable: false,\r\n      configurable: true,\r\n      writable: false,\r\n      value: 'Crypto',\r\n    },\r\n    subtle: kEnumerableProperty,\r\n    getRandomValues: {\r\n      __proto__: null,\r\n      enumerable: true,\r\n      configurable: true,\r\n      writable: true,\r\n      value: getRandomValues,\r\n    },\r\n    randomUUID: {\r\n      __proto__: null,\r\n      enumerable: true,\r\n      configurable: true,\r\n      writable: true,\r\n      value: randomUUID,\r\n    },\r\n    CryptoKey: {\r\n      __proto__: null,\r\n      enumerable: true,\r\n      configurable: true,\r\n      writable: true,\r\n      value: CryptoKey,\r\n    }\r\n  });\r\n\r\nObjectDefineProperties(\r\n  SubtleCrypto.prototype, {\r\n    [SymbolToStringTag]: {\r\n      __proto__: null,\r\n      enumerable: false,\r\n      configurable: true,\r\n      writable: false,\r\n      value: 'SubtleCrypto',\r\n    },\r\n    encrypt: {\r\n      __proto__: null,\r\n      enumerable: true,\r\n      configurable: true,\r\n      writable: true,\r\n      value: encrypt,\r\n    },\r\n    decrypt: {\r\n      __proto__: null,\r\n      enumerable: true,\r\n      configurable: true,\r\n      writable: true,\r\n      value: decrypt,\r\n    },\r\n    sign: {\r\n      __proto__: null,\r\n      enumerable: true,\r\n      configurable: true,\r\n      writable: true,\r\n      value: sign,\r\n    },\r\n    verify: {\r\n      __proto__: null,\r\n      enumerable: true,\r\n      configurable: true,\r\n      writable: true,\r\n      value: verify,\r\n    },\r\n    digest: {\r\n      __proto__: null,\r\n      enumerable: true,\r\n      configurable: true,\r\n      writable: true,\r\n      value: digest,\r\n    },\r\n    generateKey: {\r\n      __proto__: null,\r\n      enumerable: true,\r\n      configurable: true,\r\n      writable: true,\r\n      value: generateKey,\r\n    },\r\n    deriveKey: {\r\n      __proto__: null,\r\n      enumerable: true,\r\n      configurable: true,\r\n      writable: true,\r\n      value: deriveKey,\r\n    },\r\n    deriveBits: {\r\n      __proto__: null,\r\n      enumerable: true,\r\n      configurable: true,\r\n      writable: true,\r\n      value: deriveBits,\r\n    },\r\n    importKey: {\r\n      __proto__: null,\r\n      enumerable: true,\r\n      configurable: true,\r\n      writable: true,\r\n      value: importKey,\r\n    },\r\n    exportKey: {\r\n      __proto__: null,\r\n      enumerable: true,\r\n      configurable: true,\r\n      writable: true,\r\n      value: exportKey,\r\n    },\r\n    wrapKey: {\r\n      __proto__: null,\r\n      enumerable: true,\r\n      configurable: true,\r\n      writable: true,\r\n      value: wrapKey,\r\n    },\r\n    unwrapKey: {\r\n      __proto__: null,\r\n      enumerable: true,\r\n      configurable: true,\r\n      writable: true,\r\n      value: unwrapKey,\r\n    }\r\n  });\r\n\r\nmodule.exports = {\r\n  Crypto,\r\n  CryptoKey,\r\n  SubtleCrypto,\r\n  crypto,\r\n};\r\n",
    "name": "webcrypto",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 551,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\fresh\\index.js",
    "source": "/*!\n * fresh\n * Copyright(c) 2012 TJ Holowaychuk\n * Copyright(c) 2016-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * RegExp to check for no-cache token in Cache-Control.\n * @private\n */\n\nvar CACHE_CONTROL_NO_CACHE_REGEXP = /(?:^|,)\\s*?no-cache\\s*?(?:,|$)/\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = fresh\n\n/**\n * Check freshness of the response using request and response headers.\n *\n * @param {Object} reqHeaders\n * @param {Object} resHeaders\n * @return {Boolean}\n * @public\n */\n\nfunction fresh (reqHeaders, resHeaders) {\n  // fields\n  var modifiedSince = reqHeaders['if-modified-since']\n  var noneMatch = reqHeaders['if-none-match']\n\n  // unconditional request\n  if (!modifiedSince && !noneMatch) {\n    return false\n  }\n\n  // Always return stale when Cache-Control: no-cache\n  // to support end-to-end reload requests\n  // https://tools.ietf.org/html/rfc2616#section-14.9.4\n  var cacheControl = reqHeaders['cache-control']\n  if (cacheControl && CACHE_CONTROL_NO_CACHE_REGEXP.test(cacheControl)) {\n    return false\n  }\n\n  // if-none-match\n  if (noneMatch && noneMatch !== '*') {\n    var etag = resHeaders['etag']\n\n    if (!etag) {\n      return false\n    }\n\n    var etagStale = true\n    var matches = parseTokenList(noneMatch)\n    for (var i = 0; i < matches.length; i++) {\n      var match = matches[i]\n      if (match === etag || match === 'W/' + etag || 'W/' + match === etag) {\n        etagStale = false\n        break\n      }\n    }\n\n    if (etagStale) {\n      return false\n    }\n  }\n\n  // if-modified-since\n  if (modifiedSince) {\n    var lastModified = resHeaders['last-modified']\n    var modifiedStale = !lastModified || !(parseHttpDate(lastModified) <= parseHttpDate(modifiedSince))\n\n    if (modifiedStale) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * Parse an HTTP Date into a number.\n *\n * @param {string} date\n * @private\n */\n\nfunction parseHttpDate (date) {\n  var timestamp = date && Date.parse(date)\n\n  // istanbul ignore next: guard against date.js Date.parse patching\n  return typeof timestamp === 'number'\n    ? timestamp\n    : NaN\n}\n\n/**\n * Parse a HTTP token list.\n *\n * @param {string} str\n * @private\n */\n\nfunction parseTokenList (str) {\n  var end = 0\n  var list = []\n  var start = 0\n\n  // gather tokens\n  for (var i = 0, len = str.length; i < len; i++) {\n    switch (str.charCodeAt(i)) {\n      case 0x20: /*   */\n        if (start === end) {\n          start = end = i + 1\n        }\n        break\n      case 0x2c: /* , */\n        list.push(str.substring(start, end))\n        start = end = i + 1\n        break\n      default:\n        end = i + 1\n        break\n    }\n  }\n\n  // final token\n  list.push(str.substring(start, end))\n\n  return list\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\fresh\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 552,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\mime\\mime.js",
    "source": "var path = require('path');\nvar fs = require('fs');\n\nfunction Mime() {\n  // Map of extension -> mime type\n  this.types = Object.create(null);\n\n  // Map of mime type -> extension\n  this.extensions = Object.create(null);\n}\n\n/**\n * Define mimetype -> extension mappings.  Each key is a mime-type that maps\n * to an array of extensions associated with the type.  The first extension is\n * used as the default extension for the type.\n *\n * e.g. mime.define({'audio/ogg', ['oga', 'ogg', 'spx']});\n *\n * @param map (Object) type definitions\n */\nMime.prototype.define = function (map) {\n  for (var type in map) {\n    var exts = map[type];\n    for (var i = 0; i < exts.length; i++) {\n      if (process.env.DEBUG_MIME && this.types[exts[i]]) {\n        console.warn((this._loading || \"define()\").replace(/.*\\//, ''), 'changes \"' + exts[i] + '\" extension type from ' +\n          this.types[exts[i]] + ' to ' + type);\n      }\n\n      this.types[exts[i]] = type;\n    }\n\n    // Default extension is the first one we encounter\n    if (!this.extensions[type]) {\n      this.extensions[type] = exts[0];\n    }\n  }\n};\n\n/**\n * Load an Apache2-style \".types\" file\n *\n * This may be called multiple times (it's expected).  Where files declare\n * overlapping types/extensions, the last file wins.\n *\n * @param file (String) path of file to load.\n */\nMime.prototype.load = function(file) {\n  this._loading = file;\n  // Read file and split into lines\n  var map = {},\n      content = fs.readFileSync(file, 'ascii'),\n      lines = content.split(/[\\r\\n]+/);\n\n  lines.forEach(function(line) {\n    // Clean up whitespace/comments, and split into fields\n    var fields = line.replace(/\\s*#.*|^\\s*|\\s*$/g, '').split(/\\s+/);\n    map[fields.shift()] = fields;\n  });\n\n  this.define(map);\n\n  this._loading = null;\n};\n\n/**\n * Lookup a mime type based on extension\n */\nMime.prototype.lookup = function(path, fallback) {\n  var ext = path.replace(/^.*[\\.\\/\\\\]/, '').toLowerCase();\n\n  return this.types[ext] || fallback || this.default_type;\n};\n\n/**\n * Return file extension associated with a mime type\n */\nMime.prototype.extension = function(mimeType) {\n  var type = mimeType.match(/^\\s*([^;\\s]*)(?:;|\\s|$)/)[1].toLowerCase();\n  return this.extensions[type];\n};\n\n// Default instance\nvar mime = new Mime();\n\n// Define built-in types\nmime.define(require('./types.json'));\n\n// Default type\nmime.default_type = mime.lookup('bin');\n\n//\n// Additional API specific to the default instance\n//\n\nmime.Mime = Mime;\n\n/**\n * Lookup a charset based on mime type.\n */\nmime.charsets = {\n  lookup: function(mimeType, fallback) {\n    // Assume text types are utf8\n    return (/^text\\/|^application\\/(javascript|json)/).test(mimeType) ? 'UTF-8' : fallback;\n  }\n};\n\nmodule.exports = mime;\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\mime\\mime.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 553,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\send\\node_modules\\ms\\index.js",
    "source": "/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\send\\node_modules\\ms\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 554,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\range-parser\\index.js",
    "source": "/*!\n * range-parser\n * Copyright(c) 2012-2014 TJ Holowaychuk\n * Copyright(c) 2015-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = rangeParser\n\n/**\n * Parse \"Range\" header `str` relative to the given file `size`.\n *\n * @param {Number} size\n * @param {String} str\n * @param {Object} [options]\n * @return {Array}\n * @public\n */\n\nfunction rangeParser (size, str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string')\n  }\n\n  var index = str.indexOf('=')\n\n  if (index === -1) {\n    return -2\n  }\n\n  // split the range string\n  var arr = str.slice(index + 1).split(',')\n  var ranges = []\n\n  // add ranges type\n  ranges.type = str.slice(0, index)\n\n  // parse all ranges\n  for (var i = 0; i < arr.length; i++) {\n    var range = arr[i].split('-')\n    var start = parseInt(range[0], 10)\n    var end = parseInt(range[1], 10)\n\n    // -nnn\n    if (isNaN(start)) {\n      start = size - end\n      end = size - 1\n    // nnn-\n    } else if (isNaN(end)) {\n      end = size - 1\n    }\n\n    // limit last-byte-pos to current length\n    if (end > size - 1) {\n      end = size - 1\n    }\n\n    // invalid or unsatisifiable\n    if (isNaN(start) || isNaN(end) || start > end || start < 0) {\n      continue\n    }\n\n    // add range\n    ranges.push({\n      start: start,\n      end: end\n    })\n  }\n\n  if (ranges.length < 1) {\n    // unsatisifiable\n    return -1\n  }\n\n  return options && options.combine\n    ? combineRanges(ranges)\n    : ranges\n}\n\n/**\n * Combine overlapping & adjacent ranges.\n * @private\n */\n\nfunction combineRanges (ranges) {\n  var ordered = ranges.map(mapWithIndex).sort(sortByRangeStart)\n\n  for (var j = 0, i = 1; i < ordered.length; i++) {\n    var range = ordered[i]\n    var current = ordered[j]\n\n    if (range.start > current.end + 1) {\n      // next range\n      ordered[++j] = range\n    } else if (range.end > current.end) {\n      // extend range\n      current.end = range.end\n      current.index = Math.min(current.index, range.index)\n    }\n  }\n\n  // trim ordered array\n  ordered.length = j + 1\n\n  // generate combined range\n  var combined = ordered.sort(sortByRangeIndex).map(mapWithoutIndex)\n\n  // copy ranges type\n  combined.type = ranges.type\n\n  return combined\n}\n\n/**\n * Map function to add index value to ranges.\n * @private\n */\n\nfunction mapWithIndex (range, index) {\n  return {\n    start: range.start,\n    end: range.end,\n    index: index\n  }\n}\n\n/**\n * Map function to remove index value from ranges.\n * @private\n */\n\nfunction mapWithoutIndex (range) {\n  return {\n    start: range.start,\n    end: range.end\n  }\n}\n\n/**\n * Sort function to sort ranges by index.\n * @private\n */\n\nfunction sortByRangeIndex (a, b) {\n  return a.index - b.index\n}\n\n/**\n * Sort function to sort ranges by start position.\n * @private\n */\n\nfunction sortByRangeStart (a, b) {\n  return a.start - b.start\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\range-parser\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 555,
    "sourcePositions": []
  },
  {
    "url": "<unknown>",
    "source": "(function anonymous(fn,log,deprecate,message,site\n) {\n\"use strict\"\nreturn function (arg0) {log.call(deprecate, message, site)\nreturn fn.apply(this, arguments)\n}\n})",
    "name": "<unknown>",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 556,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\proxy-addr\\index.js",
    "source": "/*!\n * proxy-addr\n * Copyright(c) 2014-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = proxyaddr\nmodule.exports.all = alladdrs\nmodule.exports.compile = compile\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar forwarded = require('forwarded')\nvar ipaddr = require('ipaddr.js')\n\n/**\n * Variables.\n * @private\n */\n\nvar DIGIT_REGEXP = /^[0-9]+$/\nvar isip = ipaddr.isValid\nvar parseip = ipaddr.parse\n\n/**\n * Pre-defined IP ranges.\n * @private\n */\n\nvar IP_RANGES = {\n  linklocal: ['169.254.0.0/16', 'fe80::/10'],\n  loopback: ['127.0.0.1/8', '::1/128'],\n  uniquelocal: ['10.0.0.0/8', '172.16.0.0/12', '192.168.0.0/16', 'fc00::/7']\n}\n\n/**\n * Get all addresses in the request, optionally stopping\n * at the first untrusted.\n *\n * @param {Object} request\n * @param {Function|Array|String} [trust]\n * @public\n */\n\nfunction alladdrs (req, trust) {\n  // get addresses\n  var addrs = forwarded(req)\n\n  if (!trust) {\n    // Return all addresses\n    return addrs\n  }\n\n  if (typeof trust !== 'function') {\n    trust = compile(trust)\n  }\n\n  for (var i = 0; i < addrs.length - 1; i++) {\n    if (trust(addrs[i], i)) continue\n\n    addrs.length = i + 1\n  }\n\n  return addrs\n}\n\n/**\n * Compile argument into trust function.\n *\n * @param {Array|String} val\n * @private\n */\n\nfunction compile (val) {\n  if (!val) {\n    throw new TypeError('argument is required')\n  }\n\n  var trust\n\n  if (typeof val === 'string') {\n    trust = [val]\n  } else if (Array.isArray(val)) {\n    trust = val.slice()\n  } else {\n    throw new TypeError('unsupported trust argument')\n  }\n\n  for (var i = 0; i < trust.length; i++) {\n    val = trust[i]\n\n    if (!Object.prototype.hasOwnProperty.call(IP_RANGES, val)) {\n      continue\n    }\n\n    // Splice in pre-defined range\n    val = IP_RANGES[val]\n    trust.splice.apply(trust, [i, 1].concat(val))\n    i += val.length - 1\n  }\n\n  return compileTrust(compileRangeSubnets(trust))\n}\n\n/**\n * Compile `arr` elements into range subnets.\n *\n * @param {Array} arr\n * @private\n */\n\nfunction compileRangeSubnets (arr) {\n  var rangeSubnets = new Array(arr.length)\n\n  for (var i = 0; i < arr.length; i++) {\n    rangeSubnets[i] = parseipNotation(arr[i])\n  }\n\n  return rangeSubnets\n}\n\n/**\n * Compile range subnet array into trust function.\n *\n * @param {Array} rangeSubnets\n * @private\n */\n\nfunction compileTrust (rangeSubnets) {\n  // Return optimized function based on length\n  var len = rangeSubnets.length\n  return len === 0\n    ? trustNone\n    : len === 1\n      ? trustSingle(rangeSubnets[0])\n      : trustMulti(rangeSubnets)\n}\n\n/**\n * Parse IP notation string into range subnet.\n *\n * @param {String} note\n * @private\n */\n\nfunction parseipNotation (note) {\n  var pos = note.lastIndexOf('/')\n  var str = pos !== -1\n    ? note.substring(0, pos)\n    : note\n\n  if (!isip(str)) {\n    throw new TypeError('invalid IP address: ' + str)\n  }\n\n  var ip = parseip(str)\n\n  if (pos === -1 && ip.kind() === 'ipv6' && ip.isIPv4MappedAddress()) {\n    // Store as IPv4\n    ip = ip.toIPv4Address()\n  }\n\n  var max = ip.kind() === 'ipv6'\n    ? 128\n    : 32\n\n  var range = pos !== -1\n    ? note.substring(pos + 1, note.length)\n    : null\n\n  if (range === null) {\n    range = max\n  } else if (DIGIT_REGEXP.test(range)) {\n    range = parseInt(range, 10)\n  } else if (ip.kind() === 'ipv4' && isip(range)) {\n    range = parseNetmask(range)\n  } else {\n    range = null\n  }\n\n  if (range <= 0 || range > max) {\n    throw new TypeError('invalid range on address: ' + note)\n  }\n\n  return [ip, range]\n}\n\n/**\n * Parse netmask string into CIDR range.\n *\n * @param {String} netmask\n * @private\n */\n\nfunction parseNetmask (netmask) {\n  var ip = parseip(netmask)\n  var kind = ip.kind()\n\n  return kind === 'ipv4'\n    ? ip.prefixLengthFromSubnetMask()\n    : null\n}\n\n/**\n * Determine address of proxied request.\n *\n * @param {Object} request\n * @param {Function|Array|String} trust\n * @public\n */\n\nfunction proxyaddr (req, trust) {\n  if (!req) {\n    throw new TypeError('req argument is required')\n  }\n\n  if (!trust) {\n    throw new TypeError('trust argument is required')\n  }\n\n  var addrs = alladdrs(req, trust)\n  var addr = addrs[addrs.length - 1]\n\n  return addr\n}\n\n/**\n * Static trust function to trust nothing.\n *\n * @private\n */\n\nfunction trustNone () {\n  return false\n}\n\n/**\n * Compile trust function for multiple subnets.\n *\n * @param {Array} subnets\n * @private\n */\n\nfunction trustMulti (subnets) {\n  return function trust (addr) {\n    if (!isip(addr)) return false\n\n    var ip = parseip(addr)\n    var ipconv\n    var kind = ip.kind()\n\n    for (var i = 0; i < subnets.length; i++) {\n      var subnet = subnets[i]\n      var subnetip = subnet[0]\n      var subnetkind = subnetip.kind()\n      var subnetrange = subnet[1]\n      var trusted = ip\n\n      if (kind !== subnetkind) {\n        if (subnetkind === 'ipv4' && !ip.isIPv4MappedAddress()) {\n          // Incompatible IP addresses\n          continue\n        }\n\n        if (!ipconv) {\n          // Convert IP to match subnet IP kind\n          ipconv = subnetkind === 'ipv4'\n            ? ip.toIPv4Address()\n            : ip.toIPv4MappedAddress()\n        }\n\n        trusted = ipconv\n      }\n\n      if (trusted.match(subnetip, subnetrange)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n/**\n * Compile trust function for single subnet.\n *\n * @param {Object} subnet\n * @private\n */\n\nfunction trustSingle (subnet) {\n  var subnetip = subnet[0]\n  var subnetkind = subnetip.kind()\n  var subnetisipv4 = subnetkind === 'ipv4'\n  var subnetrange = subnet[1]\n\n  return function trust (addr) {\n    if (!isip(addr)) return false\n\n    var ip = parseip(addr)\n    var kind = ip.kind()\n\n    if (kind !== subnetkind) {\n      if (subnetisipv4 && !ip.isIPv4MappedAddress()) {\n        // Incompatible IP addresses\n        return false\n      }\n\n      // Convert IP to match subnet IP kind\n      ip = subnetisipv4\n        ? ip.toIPv4Address()\n        : ip.toIPv4MappedAddress()\n    }\n\n    return ip.match(subnetip, subnetrange)\n  }\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\proxy-addr\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 557,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\forwarded\\index.js",
    "source": "/*!\n * forwarded\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = forwarded\n\n/**\n * Get all addresses in the request, using the `X-Forwarded-For` header.\n *\n * @param {object} req\n * @return {array}\n * @public\n */\n\nfunction forwarded (req) {\n  if (!req) {\n    throw new TypeError('argument req is required')\n  }\n\n  // simple header parsing\n  var proxyAddrs = parse(req.headers['x-forwarded-for'] || '')\n  var socketAddr = getSocketAddr(req)\n  var addrs = [socketAddr].concat(proxyAddrs)\n\n  // return all addresses\n  return addrs\n}\n\n/**\n * Get the socket address for a request.\n *\n * @param {object} req\n * @return {string}\n * @private\n */\n\nfunction getSocketAddr (req) {\n  return req.socket\n    ? req.socket.remoteAddress\n    : req.connection.remoteAddress\n}\n\n/**\n * Parse the X-Forwarded-For header.\n *\n * @param {string} header\n * @private\n */\n\nfunction parse (header) {\n  var end = header.length\n  var list = []\n  var start = header.length\n\n  // gather addresses, backwards\n  for (var i = header.length - 1; i >= 0; i--) {\n    switch (header.charCodeAt(i)) {\n      case 0x20: /*   */\n        if (start === end) {\n          start = end = i\n        }\n        break\n      case 0x2c: /* , */\n        if (start !== end) {\n          list.push(header.substring(start, end))\n        }\n        start = end = i\n        break\n      default:\n        start = i\n        break\n    }\n  }\n\n  // final address\n  if (start !== end) {\n    list.push(header.substring(start, end))\n  }\n\n  return list\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\forwarded\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 558,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\ipaddr.js\\lib\\ipaddr.js",
    "source": "(function() {\n  var expandIPv6, ipaddr, ipv4Part, ipv4Regexes, ipv6Part, ipv6Regexes, matchCIDR, root, zoneIndex;\n\n  ipaddr = {};\n\n  root = this;\n\n  if ((typeof module !== \"undefined\" && module !== null) && module.exports) {\n    module.exports = ipaddr;\n  } else {\n    root['ipaddr'] = ipaddr;\n  }\n\n  matchCIDR = function(first, second, partSize, cidrBits) {\n    var part, shift;\n    if (first.length !== second.length) {\n      throw new Error(\"ipaddr: cannot match CIDR for objects with different lengths\");\n    }\n    part = 0;\n    while (cidrBits > 0) {\n      shift = partSize - cidrBits;\n      if (shift < 0) {\n        shift = 0;\n      }\n      if (first[part] >> shift !== second[part] >> shift) {\n        return false;\n      }\n      cidrBits -= partSize;\n      part += 1;\n    }\n    return true;\n  };\n\n  ipaddr.subnetMatch = function(address, rangeList, defaultName) {\n    var k, len, rangeName, rangeSubnets, subnet;\n    if (defaultName == null) {\n      defaultName = 'unicast';\n    }\n    for (rangeName in rangeList) {\n      rangeSubnets = rangeList[rangeName];\n      if (rangeSubnets[0] && !(rangeSubnets[0] instanceof Array)) {\n        rangeSubnets = [rangeSubnets];\n      }\n      for (k = 0, len = rangeSubnets.length; k < len; k++) {\n        subnet = rangeSubnets[k];\n        if (address.kind() === subnet[0].kind()) {\n          if (address.match.apply(address, subnet)) {\n            return rangeName;\n          }\n        }\n      }\n    }\n    return defaultName;\n  };\n\n  ipaddr.IPv4 = (function() {\n    function IPv4(octets) {\n      var k, len, octet;\n      if (octets.length !== 4) {\n        throw new Error(\"ipaddr: ipv4 octet count should be 4\");\n      }\n      for (k = 0, len = octets.length; k < len; k++) {\n        octet = octets[k];\n        if (!((0 <= octet && octet <= 255))) {\n          throw new Error(\"ipaddr: ipv4 octet should fit in 8 bits\");\n        }\n      }\n      this.octets = octets;\n    }\n\n    IPv4.prototype.kind = function() {\n      return 'ipv4';\n    };\n\n    IPv4.prototype.toString = function() {\n      return this.octets.join(\".\");\n    };\n\n    IPv4.prototype.toNormalizedString = function() {\n      return this.toString();\n    };\n\n    IPv4.prototype.toByteArray = function() {\n      return this.octets.slice(0);\n    };\n\n    IPv4.prototype.match = function(other, cidrRange) {\n      var ref;\n      if (cidrRange === void 0) {\n        ref = other, other = ref[0], cidrRange = ref[1];\n      }\n      if (other.kind() !== 'ipv4') {\n        throw new Error(\"ipaddr: cannot match ipv4 address with non-ipv4 one\");\n      }\n      return matchCIDR(this.octets, other.octets, 8, cidrRange);\n    };\n\n    IPv4.prototype.SpecialRanges = {\n      unspecified: [[new IPv4([0, 0, 0, 0]), 8]],\n      broadcast: [[new IPv4([255, 255, 255, 255]), 32]],\n      multicast: [[new IPv4([224, 0, 0, 0]), 4]],\n      linkLocal: [[new IPv4([169, 254, 0, 0]), 16]],\n      loopback: [[new IPv4([127, 0, 0, 0]), 8]],\n      carrierGradeNat: [[new IPv4([100, 64, 0, 0]), 10]],\n      \"private\": [[new IPv4([10, 0, 0, 0]), 8], [new IPv4([172, 16, 0, 0]), 12], [new IPv4([192, 168, 0, 0]), 16]],\n      reserved: [[new IPv4([192, 0, 0, 0]), 24], [new IPv4([192, 0, 2, 0]), 24], [new IPv4([192, 88, 99, 0]), 24], [new IPv4([198, 51, 100, 0]), 24], [new IPv4([203, 0, 113, 0]), 24], [new IPv4([240, 0, 0, 0]), 4]]\n    };\n\n    IPv4.prototype.range = function() {\n      return ipaddr.subnetMatch(this, this.SpecialRanges);\n    };\n\n    IPv4.prototype.toIPv4MappedAddress = function() {\n      return ipaddr.IPv6.parse(\"::ffff:\" + (this.toString()));\n    };\n\n    IPv4.prototype.prefixLengthFromSubnetMask = function() {\n      var cidr, i, k, octet, stop, zeros, zerotable;\n      zerotable = {\n        0: 8,\n        128: 7,\n        192: 6,\n        224: 5,\n        240: 4,\n        248: 3,\n        252: 2,\n        254: 1,\n        255: 0\n      };\n      cidr = 0;\n      stop = false;\n      for (i = k = 3; k >= 0; i = k += -1) {\n        octet = this.octets[i];\n        if (octet in zerotable) {\n          zeros = zerotable[octet];\n          if (stop && zeros !== 0) {\n            return null;\n          }\n          if (zeros !== 8) {\n            stop = true;\n          }\n          cidr += zeros;\n        } else {\n          return null;\n        }\n      }\n      return 32 - cidr;\n    };\n\n    return IPv4;\n\n  })();\n\n  ipv4Part = \"(0?\\\\d+|0x[a-f0-9]+)\";\n\n  ipv4Regexes = {\n    fourOctet: new RegExp(\"^\" + ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part + \"$\", 'i'),\n    longValue: new RegExp(\"^\" + ipv4Part + \"$\", 'i')\n  };\n\n  ipaddr.IPv4.parser = function(string) {\n    var match, parseIntAuto, part, shift, value;\n    parseIntAuto = function(string) {\n      if (string[0] === \"0\" && string[1] !== \"x\") {\n        return parseInt(string, 8);\n      } else {\n        return parseInt(string);\n      }\n    };\n    if (match = string.match(ipv4Regexes.fourOctet)) {\n      return (function() {\n        var k, len, ref, results;\n        ref = match.slice(1, 6);\n        results = [];\n        for (k = 0, len = ref.length; k < len; k++) {\n          part = ref[k];\n          results.push(parseIntAuto(part));\n        }\n        return results;\n      })();\n    } else if (match = string.match(ipv4Regexes.longValue)) {\n      value = parseIntAuto(match[1]);\n      if (value > 0xffffffff || value < 0) {\n        throw new Error(\"ipaddr: address outside defined range\");\n      }\n      return ((function() {\n        var k, results;\n        results = [];\n        for (shift = k = 0; k <= 24; shift = k += 8) {\n          results.push((value >> shift) & 0xff);\n        }\n        return results;\n      })()).reverse();\n    } else {\n      return null;\n    }\n  };\n\n  ipaddr.IPv6 = (function() {\n    function IPv6(parts, zoneId) {\n      var i, k, l, len, part, ref;\n      if (parts.length === 16) {\n        this.parts = [];\n        for (i = k = 0; k <= 14; i = k += 2) {\n          this.parts.push((parts[i] << 8) | parts[i + 1]);\n        }\n      } else if (parts.length === 8) {\n        this.parts = parts;\n      } else {\n        throw new Error(\"ipaddr: ipv6 part count should be 8 or 16\");\n      }\n      ref = this.parts;\n      for (l = 0, len = ref.length; l < len; l++) {\n        part = ref[l];\n        if (!((0 <= part && part <= 0xffff))) {\n          throw new Error(\"ipaddr: ipv6 part should fit in 16 bits\");\n        }\n      }\n      if (zoneId) {\n        this.zoneId = zoneId;\n      }\n    }\n\n    IPv6.prototype.kind = function() {\n      return 'ipv6';\n    };\n\n    IPv6.prototype.toString = function() {\n      return this.toNormalizedString().replace(/((^|:)(0(:|$))+)/, '::');\n    };\n\n    IPv6.prototype.toRFC5952String = function() {\n      var bestMatchIndex, bestMatchLength, match, regex, string;\n      regex = /((^|:)(0(:|$)){2,})/g;\n      string = this.toNormalizedString();\n      bestMatchIndex = 0;\n      bestMatchLength = -1;\n      while ((match = regex.exec(string))) {\n        if (match[0].length > bestMatchLength) {\n          bestMatchIndex = match.index;\n          bestMatchLength = match[0].length;\n        }\n      }\n      if (bestMatchLength < 0) {\n        return string;\n      }\n      return string.substring(0, bestMatchIndex) + '::' + string.substring(bestMatchIndex + bestMatchLength);\n    };\n\n    IPv6.prototype.toByteArray = function() {\n      var bytes, k, len, part, ref;\n      bytes = [];\n      ref = this.parts;\n      for (k = 0, len = ref.length; k < len; k++) {\n        part = ref[k];\n        bytes.push(part >> 8);\n        bytes.push(part & 0xff);\n      }\n      return bytes;\n    };\n\n    IPv6.prototype.toNormalizedString = function() {\n      var addr, part, suffix;\n      addr = ((function() {\n        var k, len, ref, results;\n        ref = this.parts;\n        results = [];\n        for (k = 0, len = ref.length; k < len; k++) {\n          part = ref[k];\n          results.push(part.toString(16));\n        }\n        return results;\n      }).call(this)).join(\":\");\n      suffix = '';\n      if (this.zoneId) {\n        suffix = '%' + this.zoneId;\n      }\n      return addr + suffix;\n    };\n\n    IPv6.prototype.toFixedLengthString = function() {\n      var addr, part, suffix;\n      addr = ((function() {\n        var k, len, ref, results;\n        ref = this.parts;\n        results = [];\n        for (k = 0, len = ref.length; k < len; k++) {\n          part = ref[k];\n          results.push(part.toString(16).padStart(4, '0'));\n        }\n        return results;\n      }).call(this)).join(\":\");\n      suffix = '';\n      if (this.zoneId) {\n        suffix = '%' + this.zoneId;\n      }\n      return addr + suffix;\n    };\n\n    IPv6.prototype.match = function(other, cidrRange) {\n      var ref;\n      if (cidrRange === void 0) {\n        ref = other, other = ref[0], cidrRange = ref[1];\n      }\n      if (other.kind() !== 'ipv6') {\n        throw new Error(\"ipaddr: cannot match ipv6 address with non-ipv6 one\");\n      }\n      return matchCIDR(this.parts, other.parts, 16, cidrRange);\n    };\n\n    IPv6.prototype.SpecialRanges = {\n      unspecified: [new IPv6([0, 0, 0, 0, 0, 0, 0, 0]), 128],\n      linkLocal: [new IPv6([0xfe80, 0, 0, 0, 0, 0, 0, 0]), 10],\n      multicast: [new IPv6([0xff00, 0, 0, 0, 0, 0, 0, 0]), 8],\n      loopback: [new IPv6([0, 0, 0, 0, 0, 0, 0, 1]), 128],\n      uniqueLocal: [new IPv6([0xfc00, 0, 0, 0, 0, 0, 0, 0]), 7],\n      ipv4Mapped: [new IPv6([0, 0, 0, 0, 0, 0xffff, 0, 0]), 96],\n      rfc6145: [new IPv6([0, 0, 0, 0, 0xffff, 0, 0, 0]), 96],\n      rfc6052: [new IPv6([0x64, 0xff9b, 0, 0, 0, 0, 0, 0]), 96],\n      '6to4': [new IPv6([0x2002, 0, 0, 0, 0, 0, 0, 0]), 16],\n      teredo: [new IPv6([0x2001, 0, 0, 0, 0, 0, 0, 0]), 32],\n      reserved: [[new IPv6([0x2001, 0xdb8, 0, 0, 0, 0, 0, 0]), 32]]\n    };\n\n    IPv6.prototype.range = function() {\n      return ipaddr.subnetMatch(this, this.SpecialRanges);\n    };\n\n    IPv6.prototype.isIPv4MappedAddress = function() {\n      return this.range() === 'ipv4Mapped';\n    };\n\n    IPv6.prototype.toIPv4Address = function() {\n      var high, low, ref;\n      if (!this.isIPv4MappedAddress()) {\n        throw new Error(\"ipaddr: trying to convert a generic ipv6 address to ipv4\");\n      }\n      ref = this.parts.slice(-2), high = ref[0], low = ref[1];\n      return new ipaddr.IPv4([high >> 8, high & 0xff, low >> 8, low & 0xff]);\n    };\n\n    IPv6.prototype.prefixLengthFromSubnetMask = function() {\n      var cidr, i, k, part, stop, zeros, zerotable;\n      zerotable = {\n        0: 16,\n        32768: 15,\n        49152: 14,\n        57344: 13,\n        61440: 12,\n        63488: 11,\n        64512: 10,\n        65024: 9,\n        65280: 8,\n        65408: 7,\n        65472: 6,\n        65504: 5,\n        65520: 4,\n        65528: 3,\n        65532: 2,\n        65534: 1,\n        65535: 0\n      };\n      cidr = 0;\n      stop = false;\n      for (i = k = 7; k >= 0; i = k += -1) {\n        part = this.parts[i];\n        if (part in zerotable) {\n          zeros = zerotable[part];\n          if (stop && zeros !== 0) {\n            return null;\n          }\n          if (zeros !== 16) {\n            stop = true;\n          }\n          cidr += zeros;\n        } else {\n          return null;\n        }\n      }\n      return 128 - cidr;\n    };\n\n    return IPv6;\n\n  })();\n\n  ipv6Part = \"(?:[0-9a-f]+::?)+\";\n\n  zoneIndex = \"%[0-9a-z]{1,}\";\n\n  ipv6Regexes = {\n    zoneIndex: new RegExp(zoneIndex, 'i'),\n    \"native\": new RegExp(\"^(::)?(\" + ipv6Part + \")?([0-9a-f]+)?(::)?(\" + zoneIndex + \")?$\", 'i'),\n    transitional: new RegExp((\"^((?:\" + ipv6Part + \")|(?:::)(?:\" + ipv6Part + \")?)\") + (ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part) + (\"(\" + zoneIndex + \")?$\"), 'i')\n  };\n\n  expandIPv6 = function(string, parts) {\n    var colonCount, lastColon, part, replacement, replacementCount, zoneId;\n    if (string.indexOf('::') !== string.lastIndexOf('::')) {\n      return null;\n    }\n    zoneId = (string.match(ipv6Regexes['zoneIndex']) || [])[0];\n    if (zoneId) {\n      zoneId = zoneId.substring(1);\n      string = string.replace(/%.+$/, '');\n    }\n    colonCount = 0;\n    lastColon = -1;\n    while ((lastColon = string.indexOf(':', lastColon + 1)) >= 0) {\n      colonCount++;\n    }\n    if (string.substr(0, 2) === '::') {\n      colonCount--;\n    }\n    if (string.substr(-2, 2) === '::') {\n      colonCount--;\n    }\n    if (colonCount > parts) {\n      return null;\n    }\n    replacementCount = parts - colonCount;\n    replacement = ':';\n    while (replacementCount--) {\n      replacement += '0:';\n    }\n    string = string.replace('::', replacement);\n    if (string[0] === ':') {\n      string = string.slice(1);\n    }\n    if (string[string.length - 1] === ':') {\n      string = string.slice(0, -1);\n    }\n    parts = (function() {\n      var k, len, ref, results;\n      ref = string.split(\":\");\n      results = [];\n      for (k = 0, len = ref.length; k < len; k++) {\n        part = ref[k];\n        results.push(parseInt(part, 16));\n      }\n      return results;\n    })();\n    return {\n      parts: parts,\n      zoneId: zoneId\n    };\n  };\n\n  ipaddr.IPv6.parser = function(string) {\n    var addr, k, len, match, octet, octets, zoneId;\n    if (ipv6Regexes['native'].test(string)) {\n      return expandIPv6(string, 8);\n    } else if (match = string.match(ipv6Regexes['transitional'])) {\n      zoneId = match[6] || '';\n      addr = expandIPv6(match[1].slice(0, -1) + zoneId, 6);\n      if (addr.parts) {\n        octets = [parseInt(match[2]), parseInt(match[3]), parseInt(match[4]), parseInt(match[5])];\n        for (k = 0, len = octets.length; k < len; k++) {\n          octet = octets[k];\n          if (!((0 <= octet && octet <= 255))) {\n            return null;\n          }\n        }\n        addr.parts.push(octets[0] << 8 | octets[1]);\n        addr.parts.push(octets[2] << 8 | octets[3]);\n        return {\n          parts: addr.parts,\n          zoneId: addr.zoneId\n        };\n      }\n    }\n    return null;\n  };\n\n  ipaddr.IPv4.isIPv4 = ipaddr.IPv6.isIPv6 = function(string) {\n    return this.parser(string) !== null;\n  };\n\n  ipaddr.IPv4.isValid = function(string) {\n    var e;\n    try {\n      new this(this.parser(string));\n      return true;\n    } catch (error1) {\n      e = error1;\n      return false;\n    }\n  };\n\n  ipaddr.IPv4.isValidFourPartDecimal = function(string) {\n    if (ipaddr.IPv4.isValid(string) && string.match(/^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*)){3}$/)) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  ipaddr.IPv6.isValid = function(string) {\n    var addr, e;\n    if (typeof string === \"string\" && string.indexOf(\":\") === -1) {\n      return false;\n    }\n    try {\n      addr = this.parser(string);\n      new this(addr.parts, addr.zoneId);\n      return true;\n    } catch (error1) {\n      e = error1;\n      return false;\n    }\n  };\n\n  ipaddr.IPv4.parse = function(string) {\n    var parts;\n    parts = this.parser(string);\n    if (parts === null) {\n      throw new Error(\"ipaddr: string is not formatted like ip address\");\n    }\n    return new this(parts);\n  };\n\n  ipaddr.IPv6.parse = function(string) {\n    var addr;\n    addr = this.parser(string);\n    if (addr.parts === null) {\n      throw new Error(\"ipaddr: string is not formatted like ip address\");\n    }\n    return new this(addr.parts, addr.zoneId);\n  };\n\n  ipaddr.IPv4.parseCIDR = function(string) {\n    var maskLength, match, parsed;\n    if (match = string.match(/^(.+)\\/(\\d+)$/)) {\n      maskLength = parseInt(match[2]);\n      if (maskLength >= 0 && maskLength <= 32) {\n        parsed = [this.parse(match[1]), maskLength];\n        Object.defineProperty(parsed, 'toString', {\n          value: function() {\n            return this.join('/');\n          }\n        });\n        return parsed;\n      }\n    }\n    throw new Error(\"ipaddr: string is not formatted like an IPv4 CIDR range\");\n  };\n\n  ipaddr.IPv4.subnetMaskFromPrefixLength = function(prefix) {\n    var filledOctetCount, j, octets;\n    prefix = parseInt(prefix);\n    if (prefix < 0 || prefix > 32) {\n      throw new Error('ipaddr: invalid IPv4 prefix length');\n    }\n    octets = [0, 0, 0, 0];\n    j = 0;\n    filledOctetCount = Math.floor(prefix / 8);\n    while (j < filledOctetCount) {\n      octets[j] = 255;\n      j++;\n    }\n    if (filledOctetCount < 4) {\n      octets[filledOctetCount] = Math.pow(2, prefix % 8) - 1 << 8 - (prefix % 8);\n    }\n    return new this(octets);\n  };\n\n  ipaddr.IPv4.broadcastAddressFromCIDR = function(string) {\n    var cidr, error, i, ipInterfaceOctets, octets, subnetMaskOctets;\n    try {\n      cidr = this.parseCIDR(string);\n      ipInterfaceOctets = cidr[0].toByteArray();\n      subnetMaskOctets = this.subnetMaskFromPrefixLength(cidr[1]).toByteArray();\n      octets = [];\n      i = 0;\n      while (i < 4) {\n        octets.push(parseInt(ipInterfaceOctets[i], 10) | parseInt(subnetMaskOctets[i], 10) ^ 255);\n        i++;\n      }\n      return new this(octets);\n    } catch (error1) {\n      error = error1;\n      throw new Error('ipaddr: the address does not have IPv4 CIDR format');\n    }\n  };\n\n  ipaddr.IPv4.networkAddressFromCIDR = function(string) {\n    var cidr, error, i, ipInterfaceOctets, octets, subnetMaskOctets;\n    try {\n      cidr = this.parseCIDR(string);\n      ipInterfaceOctets = cidr[0].toByteArray();\n      subnetMaskOctets = this.subnetMaskFromPrefixLength(cidr[1]).toByteArray();\n      octets = [];\n      i = 0;\n      while (i < 4) {\n        octets.push(parseInt(ipInterfaceOctets[i], 10) & parseInt(subnetMaskOctets[i], 10));\n        i++;\n      }\n      return new this(octets);\n    } catch (error1) {\n      error = error1;\n      throw new Error('ipaddr: the address does not have IPv4 CIDR format');\n    }\n  };\n\n  ipaddr.IPv6.parseCIDR = function(string) {\n    var maskLength, match, parsed;\n    if (match = string.match(/^(.+)\\/(\\d+)$/)) {\n      maskLength = parseInt(match[2]);\n      if (maskLength >= 0 && maskLength <= 128) {\n        parsed = [this.parse(match[1]), maskLength];\n        Object.defineProperty(parsed, 'toString', {\n          value: function() {\n            return this.join('/');\n          }\n        });\n        return parsed;\n      }\n    }\n    throw new Error(\"ipaddr: string is not formatted like an IPv6 CIDR range\");\n  };\n\n  ipaddr.isValid = function(string) {\n    return ipaddr.IPv6.isValid(string) || ipaddr.IPv4.isValid(string);\n  };\n\n  ipaddr.parse = function(string) {\n    if (ipaddr.IPv6.isValid(string)) {\n      return ipaddr.IPv6.parse(string);\n    } else if (ipaddr.IPv4.isValid(string)) {\n      return ipaddr.IPv4.parse(string);\n    } else {\n      throw new Error(\"ipaddr: the address has neither IPv6 nor IPv4 format\");\n    }\n  };\n\n  ipaddr.parseCIDR = function(string) {\n    var e;\n    try {\n      return ipaddr.IPv6.parseCIDR(string);\n    } catch (error1) {\n      e = error1;\n      try {\n        return ipaddr.IPv4.parseCIDR(string);\n      } catch (error1) {\n        e = error1;\n        throw new Error(\"ipaddr: the address has neither IPv6 nor IPv4 CIDR format\");\n      }\n    }\n  };\n\n  ipaddr.fromByteArray = function(bytes) {\n    var length;\n    length = bytes.length;\n    if (length === 4) {\n      return new ipaddr.IPv4(bytes);\n    } else if (length === 16) {\n      return new ipaddr.IPv6(bytes);\n    } else {\n      throw new Error(\"ipaddr: the binary input is neither an IPv6 nor IPv4 address\");\n    }\n  };\n\n  ipaddr.process = function(string) {\n    var addr;\n    addr = this.parse(string);\n    if (addr.kind() === 'ipv6' && addr.isIPv4MappedAddress()) {\n      return addr.toIPv4Address();\n    } else {\n      return addr;\n    }\n  };\n\n}).call(this);\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\ipaddr.js\\lib\\ipaddr.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 559,
    "sourcePositions": []
  },
  {
    "url": "<unknown>",
    "source": "(function anonymous(fn,log,deprecate,message,site\n) {\n\"use strict\"\nreturn function (arg0, arg1) {log.call(deprecate, message, site)\nreturn fn.apply(this, arguments)\n}\n})",
    "name": "<unknown>",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 560,
    "sourcePositions": []
  },
  {
    "url": "<unknown>",
    "source": "(function anonymous(fn,log,deprecate,message,site\n) {\n\"use strict\"\nreturn function (arg0, arg1) {log.call(deprecate, message, site)\nreturn fn.apply(this, arguments)\n}\n})",
    "name": "<unknown>",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 561,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\request.js",
    "source": "/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar accepts = require('accepts');\nvar deprecate = require('depd')('express');\nvar isIP = require('net').isIP;\nvar typeis = require('type-is');\nvar http = require('http');\nvar fresh = require('fresh');\nvar parseRange = require('range-parser');\nvar parse = require('parseurl');\nvar proxyaddr = require('proxy-addr');\n\n/**\n * Request prototype.\n * @public\n */\n\nvar req = Object.create(http.IncomingMessage.prototype)\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = req\n\n/**\n * Return request header.\n *\n * The `Referrer` header field is special-cased,\n * both `Referrer` and `Referer` are interchangeable.\n *\n * Examples:\n *\n *     req.get('Content-Type');\n *     // => \"text/plain\"\n *\n *     req.get('content-type');\n *     // => \"text/plain\"\n *\n *     req.get('Something');\n *     // => undefined\n *\n * Aliased as `req.header()`.\n *\n * @param {String} name\n * @return {String}\n * @public\n */\n\nreq.get =\nreq.header = function header(name) {\n  if (!name) {\n    throw new TypeError('name argument is required to req.get');\n  }\n\n  if (typeof name !== 'string') {\n    throw new TypeError('name must be a string to req.get');\n  }\n\n  var lc = name.toLowerCase();\n\n  switch (lc) {\n    case 'referer':\n    case 'referrer':\n      return this.headers.referrer\n        || this.headers.referer;\n    default:\n      return this.headers[lc];\n  }\n};\n\n/**\n * To do: update docs.\n *\n * Check if the given `type(s)` is acceptable, returning\n * the best match when true, otherwise `undefined`, in which\n * case you should respond with 406 \"Not Acceptable\".\n *\n * The `type` value may be a single MIME type string\n * such as \"application/json\", an extension name\n * such as \"json\", a comma-delimited list such as \"json, html, text/plain\",\n * an argument list such as `\"json\", \"html\", \"text/plain\"`,\n * or an array `[\"json\", \"html\", \"text/plain\"]`. When a list\n * or array is given, the _best_ match, if any is returned.\n *\n * Examples:\n *\n *     // Accept: text/html\n *     req.accepts('html');\n *     // => \"html\"\n *\n *     // Accept: text/*, application/json\n *     req.accepts('html');\n *     // => \"html\"\n *     req.accepts('text/html');\n *     // => \"text/html\"\n *     req.accepts('json, text');\n *     // => \"json\"\n *     req.accepts('application/json');\n *     // => \"application/json\"\n *\n *     // Accept: text/*, application/json\n *     req.accepts('image/png');\n *     req.accepts('png');\n *     // => undefined\n *\n *     // Accept: text/*;q=.5, application/json\n *     req.accepts(['html', 'json']);\n *     req.accepts('html', 'json');\n *     req.accepts('html, json');\n *     // => \"json\"\n *\n * @param {String|Array} type(s)\n * @return {String|Array|Boolean}\n * @public\n */\n\nreq.accepts = function(){\n  var accept = accepts(this);\n  return accept.types.apply(accept, arguments);\n};\n\n/**\n * Check if the given `encoding`s are accepted.\n *\n * @param {String} ...encoding\n * @return {String|Array}\n * @public\n */\n\nreq.acceptsEncodings = function(){\n  var accept = accepts(this);\n  return accept.encodings.apply(accept, arguments);\n};\n\nreq.acceptsEncoding = deprecate.function(req.acceptsEncodings,\n  'req.acceptsEncoding: Use acceptsEncodings instead');\n\n/**\n * Check if the given `charset`s are acceptable,\n * otherwise you should respond with 406 \"Not Acceptable\".\n *\n * @param {String} ...charset\n * @return {String|Array}\n * @public\n */\n\nreq.acceptsCharsets = function(){\n  var accept = accepts(this);\n  return accept.charsets.apply(accept, arguments);\n};\n\nreq.acceptsCharset = deprecate.function(req.acceptsCharsets,\n  'req.acceptsCharset: Use acceptsCharsets instead');\n\n/**\n * Check if the given `lang`s are acceptable,\n * otherwise you should respond with 406 \"Not Acceptable\".\n *\n * @param {String} ...lang\n * @return {String|Array}\n * @public\n */\n\nreq.acceptsLanguages = function(){\n  var accept = accepts(this);\n  return accept.languages.apply(accept, arguments);\n};\n\nreq.acceptsLanguage = deprecate.function(req.acceptsLanguages,\n  'req.acceptsLanguage: Use acceptsLanguages instead');\n\n/**\n * Parse Range header field, capping to the given `size`.\n *\n * Unspecified ranges such as \"0-\" require knowledge of your resource length. In\n * the case of a byte range this is of course the total number of bytes. If the\n * Range header field is not given `undefined` is returned, `-1` when unsatisfiable,\n * and `-2` when syntactically invalid.\n *\n * When ranges are returned, the array has a \"type\" property which is the type of\n * range that is required (most commonly, \"bytes\"). Each array element is an object\n * with a \"start\" and \"end\" property for the portion of the range.\n *\n * The \"combine\" option can be set to `true` and overlapping & adjacent ranges\n * will be combined into a single range.\n *\n * NOTE: remember that ranges are inclusive, so for example \"Range: users=0-3\"\n * should respond with 4 users when available, not 3.\n *\n * @param {number} size\n * @param {object} [options]\n * @param {boolean} [options.combine=false]\n * @return {number|array}\n * @public\n */\n\nreq.range = function range(size, options) {\n  var range = this.get('Range');\n  if (!range) return;\n  return parseRange(size, range, options);\n};\n\n/**\n * Return the value of param `name` when present or `defaultValue`.\n *\n *  - Checks route placeholders, ex: _/user/:id_\n *  - Checks body params, ex: id=12, {\"id\":12}\n *  - Checks query string params, ex: ?id=12\n *\n * To utilize request bodies, `req.body`\n * should be an object. This can be done by using\n * the `bodyParser()` middleware.\n *\n * @param {String} name\n * @param {Mixed} [defaultValue]\n * @return {String}\n * @public\n */\n\nreq.param = function param(name, defaultValue) {\n  var params = this.params || {};\n  var body = this.body || {};\n  var query = this.query || {};\n\n  var args = arguments.length === 1\n    ? 'name'\n    : 'name, default';\n  deprecate('req.param(' + args + '): Use req.params, req.body, or req.query instead');\n\n  if (null != params[name] && params.hasOwnProperty(name)) return params[name];\n  if (null != body[name]) return body[name];\n  if (null != query[name]) return query[name];\n\n  return defaultValue;\n};\n\n/**\n * Check if the incoming request contains the \"Content-Type\"\n * header field, and it contains the given mime `type`.\n *\n * Examples:\n *\n *      // With Content-Type: text/html; charset=utf-8\n *      req.is('html');\n *      req.is('text/html');\n *      req.is('text/*');\n *      // => true\n *\n *      // When Content-Type is application/json\n *      req.is('json');\n *      req.is('application/json');\n *      req.is('application/*');\n *      // => true\n *\n *      req.is('html');\n *      // => false\n *\n * @param {String|Array} types...\n * @return {String|false|null}\n * @public\n */\n\nreq.is = function is(types) {\n  var arr = types;\n\n  // support flattened arguments\n  if (!Array.isArray(types)) {\n    arr = new Array(arguments.length);\n    for (var i = 0; i < arr.length; i++) {\n      arr[i] = arguments[i];\n    }\n  }\n\n  return typeis(this, arr);\n};\n\n/**\n * Return the protocol string \"http\" or \"https\"\n * when requested with TLS. When the \"trust proxy\"\n * setting trusts the socket address, the\n * \"X-Forwarded-Proto\" header field will be trusted\n * and used if present.\n *\n * If you're running behind a reverse proxy that\n * supplies https for you this may be enabled.\n *\n * @return {String}\n * @public\n */\n\ndefineGetter(req, 'protocol', function protocol(){\n  var proto = this.connection.encrypted\n    ? 'https'\n    : 'http';\n  var trust = this.app.get('trust proxy fn');\n\n  if (!trust(this.connection.remoteAddress, 0)) {\n    return proto;\n  }\n\n  // Note: X-Forwarded-Proto is normally only ever a\n  //       single value, but this is to be safe.\n  var header = this.get('X-Forwarded-Proto') || proto\n  var index = header.indexOf(',')\n\n  return index !== -1\n    ? header.substring(0, index).trim()\n    : header.trim()\n});\n\n/**\n * Short-hand for:\n *\n *    req.protocol === 'https'\n *\n * @return {Boolean}\n * @public\n */\n\ndefineGetter(req, 'secure', function secure(){\n  return this.protocol === 'https';\n});\n\n/**\n * Return the remote address from the trusted proxy.\n *\n * The is the remote address on the socket unless\n * \"trust proxy\" is set.\n *\n * @return {String}\n * @public\n */\n\ndefineGetter(req, 'ip', function ip(){\n  var trust = this.app.get('trust proxy fn');\n  return proxyaddr(this, trust);\n});\n\n/**\n * When \"trust proxy\" is set, trusted proxy addresses + client.\n *\n * For example if the value were \"client, proxy1, proxy2\"\n * you would receive the array `[\"client\", \"proxy1\", \"proxy2\"]`\n * where \"proxy2\" is the furthest down-stream and \"proxy1\" and\n * \"proxy2\" were trusted.\n *\n * @return {Array}\n * @public\n */\n\ndefineGetter(req, 'ips', function ips() {\n  var trust = this.app.get('trust proxy fn');\n  var addrs = proxyaddr.all(this, trust);\n\n  // reverse the order (to farthest -> closest)\n  // and remove socket address\n  addrs.reverse().pop()\n\n  return addrs\n});\n\n/**\n * Return subdomains as an array.\n *\n * Subdomains are the dot-separated parts of the host before the main domain of\n * the app. By default, the domain of the app is assumed to be the last two\n * parts of the host. This can be changed by setting \"subdomain offset\".\n *\n * For example, if the domain is \"tobi.ferrets.example.com\":\n * If \"subdomain offset\" is not set, req.subdomains is `[\"ferrets\", \"tobi\"]`.\n * If \"subdomain offset\" is 3, req.subdomains is `[\"tobi\"]`.\n *\n * @return {Array}\n * @public\n */\n\ndefineGetter(req, 'subdomains', function subdomains() {\n  var hostname = this.hostname;\n\n  if (!hostname) return [];\n\n  var offset = this.app.get('subdomain offset');\n  var subdomains = !isIP(hostname)\n    ? hostname.split('.').reverse()\n    : [hostname];\n\n  return subdomains.slice(offset);\n});\n\n/**\n * Short-hand for `url.parse(req.url).pathname`.\n *\n * @return {String}\n * @public\n */\n\ndefineGetter(req, 'path', function path() {\n  return parse(this).pathname;\n});\n\n/**\n * Parse the \"Host\" header field to a hostname.\n *\n * When the \"trust proxy\" setting trusts the socket\n * address, the \"X-Forwarded-Host\" header field will\n * be trusted.\n *\n * @return {String}\n * @public\n */\n\ndefineGetter(req, 'hostname', function hostname(){\n  var trust = this.app.get('trust proxy fn');\n  var host = this.get('X-Forwarded-Host');\n\n  if (!host || !trust(this.connection.remoteAddress, 0)) {\n    host = this.get('Host');\n  } else if (host.indexOf(',') !== -1) {\n    // Note: X-Forwarded-Host is normally only ever a\n    //       single value, but this is to be safe.\n    host = host.substring(0, host.indexOf(',')).trimRight()\n  }\n\n  if (!host) return;\n\n  // IPv6 literal support\n  var offset = host[0] === '['\n    ? host.indexOf(']') + 1\n    : 0;\n  var index = host.indexOf(':', offset);\n\n  return index !== -1\n    ? host.substring(0, index)\n    : host;\n});\n\n// TODO: change req.host to return host in next major\n\ndefineGetter(req, 'host', deprecate.function(function host(){\n  return this.hostname;\n}, 'req.host: Use req.hostname instead'));\n\n/**\n * Check if the request is fresh, aka\n * Last-Modified and/or the ETag\n * still match.\n *\n * @return {Boolean}\n * @public\n */\n\ndefineGetter(req, 'fresh', function(){\n  var method = this.method;\n  var res = this.res\n  var status = res.statusCode\n\n  // GET or HEAD for weak freshness validation only\n  if ('GET' !== method && 'HEAD' !== method) return false;\n\n  // 2xx or 304 as per rfc2616 14.26\n  if ((status >= 200 && status < 300) || 304 === status) {\n    return fresh(this.headers, {\n      'etag': res.get('ETag'),\n      'last-modified': res.get('Last-Modified')\n    })\n  }\n\n  return false;\n});\n\n/**\n * Check if the request is stale, aka\n * \"Last-Modified\" and / or the \"ETag\" for the\n * resource has changed.\n *\n * @return {Boolean}\n * @public\n */\n\ndefineGetter(req, 'stale', function stale(){\n  return !this.fresh;\n});\n\n/**\n * Check if the request was an _XMLHttpRequest_.\n *\n * @return {Boolean}\n * @public\n */\n\ndefineGetter(req, 'xhr', function xhr(){\n  var val = this.get('X-Requested-With') || '';\n  return val.toLowerCase() === 'xmlhttprequest';\n});\n\n/**\n * Helper function for creating a getter on an object.\n *\n * @param {Object} obj\n * @param {String} name\n * @param {Function} getter\n * @private\n */\nfunction defineGetter(obj, name, getter) {\n  Object.defineProperty(obj, name, {\n    configurable: true,\n    enumerable: true,\n    get: getter\n  });\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\request.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 562,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\accepts\\index.js",
    "source": "/*!\n * accepts\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar Negotiator = require('negotiator')\nvar mime = require('mime-types')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Accepts\n\n/**\n * Create a new Accepts object for the given req.\n *\n * @param {object} req\n * @public\n */\n\nfunction Accepts (req) {\n  if (!(this instanceof Accepts)) {\n    return new Accepts(req)\n  }\n\n  this.headers = req.headers\n  this.negotiator = new Negotiator(req)\n}\n\n/**\n * Check if the given `type(s)` is acceptable, returning\n * the best match when true, otherwise `undefined`, in which\n * case you should respond with 406 \"Not Acceptable\".\n *\n * The `type` value may be a single mime type string\n * such as \"application/json\", the extension name\n * such as \"json\" or an array `[\"json\", \"html\", \"text/plain\"]`. When a list\n * or array is given the _best_ match, if any is returned.\n *\n * Examples:\n *\n *     // Accept: text/html\n *     this.types('html');\n *     // => \"html\"\n *\n *     // Accept: text/*, application/json\n *     this.types('html');\n *     // => \"html\"\n *     this.types('text/html');\n *     // => \"text/html\"\n *     this.types('json', 'text');\n *     // => \"json\"\n *     this.types('application/json');\n *     // => \"application/json\"\n *\n *     // Accept: text/*, application/json\n *     this.types('image/png');\n *     this.types('png');\n *     // => undefined\n *\n *     // Accept: text/*;q=.5, application/json\n *     this.types(['html', 'json']);\n *     this.types('html', 'json');\n *     // => \"json\"\n *\n * @param {String|Array} types...\n * @return {String|Array|Boolean}\n * @public\n */\n\nAccepts.prototype.type =\nAccepts.prototype.types = function (types_) {\n  var types = types_\n\n  // support flattened arguments\n  if (types && !Array.isArray(types)) {\n    types = new Array(arguments.length)\n    for (var i = 0; i < types.length; i++) {\n      types[i] = arguments[i]\n    }\n  }\n\n  // no types, return all requested types\n  if (!types || types.length === 0) {\n    return this.negotiator.mediaTypes()\n  }\n\n  // no accept header, return first given type\n  if (!this.headers.accept) {\n    return types[0]\n  }\n\n  var mimes = types.map(extToMime)\n  var accepts = this.negotiator.mediaTypes(mimes.filter(validMime))\n  var first = accepts[0]\n\n  return first\n    ? types[mimes.indexOf(first)]\n    : false\n}\n\n/**\n * Return accepted encodings or best fit based on `encodings`.\n *\n * Given `Accept-Encoding: gzip, deflate`\n * an array sorted by quality is returned:\n *\n *     ['gzip', 'deflate']\n *\n * @param {String|Array} encodings...\n * @return {String|Array}\n * @public\n */\n\nAccepts.prototype.encoding =\nAccepts.prototype.encodings = function (encodings_) {\n  var encodings = encodings_\n\n  // support flattened arguments\n  if (encodings && !Array.isArray(encodings)) {\n    encodings = new Array(arguments.length)\n    for (var i = 0; i < encodings.length; i++) {\n      encodings[i] = arguments[i]\n    }\n  }\n\n  // no encodings, return all requested encodings\n  if (!encodings || encodings.length === 0) {\n    return this.negotiator.encodings()\n  }\n\n  return this.negotiator.encodings(encodings)[0] || false\n}\n\n/**\n * Return accepted charsets or best fit based on `charsets`.\n *\n * Given `Accept-Charset: utf-8, iso-8859-1;q=0.2, utf-7;q=0.5`\n * an array sorted by quality is returned:\n *\n *     ['utf-8', 'utf-7', 'iso-8859-1']\n *\n * @param {String|Array} charsets...\n * @return {String|Array}\n * @public\n */\n\nAccepts.prototype.charset =\nAccepts.prototype.charsets = function (charsets_) {\n  var charsets = charsets_\n\n  // support flattened arguments\n  if (charsets && !Array.isArray(charsets)) {\n    charsets = new Array(arguments.length)\n    for (var i = 0; i < charsets.length; i++) {\n      charsets[i] = arguments[i]\n    }\n  }\n\n  // no charsets, return all requested charsets\n  if (!charsets || charsets.length === 0) {\n    return this.negotiator.charsets()\n  }\n\n  return this.negotiator.charsets(charsets)[0] || false\n}\n\n/**\n * Return accepted languages or best fit based on `langs`.\n *\n * Given `Accept-Language: en;q=0.8, es, pt`\n * an array sorted by quality is returned:\n *\n *     ['es', 'pt', 'en']\n *\n * @param {String|Array} langs...\n * @return {Array|String}\n * @public\n */\n\nAccepts.prototype.lang =\nAccepts.prototype.langs =\nAccepts.prototype.language =\nAccepts.prototype.languages = function (languages_) {\n  var languages = languages_\n\n  // support flattened arguments\n  if (languages && !Array.isArray(languages)) {\n    languages = new Array(arguments.length)\n    for (var i = 0; i < languages.length; i++) {\n      languages[i] = arguments[i]\n    }\n  }\n\n  // no languages, return all requested languages\n  if (!languages || languages.length === 0) {\n    return this.negotiator.languages()\n  }\n\n  return this.negotiator.languages(languages)[0] || false\n}\n\n/**\n * Convert extnames to mime.\n *\n * @param {String} type\n * @return {String}\n * @private\n */\n\nfunction extToMime (type) {\n  return type.indexOf('/') === -1\n    ? mime.lookup(type)\n    : type\n}\n\n/**\n * Check if mime is valid.\n *\n * @param {String} type\n * @return {String}\n * @private\n */\n\nfunction validMime (type) {\n  return typeof type === 'string'\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\accepts\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 563,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\negotiator\\index.js",
    "source": "/*!\n * negotiator\n * Copyright(c) 2012 Federico Romero\n * Copyright(c) 2012-2014 Isaac Z. Schlueter\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\nvar preferredCharsets = require('./lib/charset')\nvar preferredEncodings = require('./lib/encoding')\nvar preferredLanguages = require('./lib/language')\nvar preferredMediaTypes = require('./lib/mediaType')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Negotiator;\nmodule.exports.Negotiator = Negotiator;\n\n/**\n * Create a Negotiator instance from a request.\n * @param {object} request\n * @public\n */\n\nfunction Negotiator(request) {\n  if (!(this instanceof Negotiator)) {\n    return new Negotiator(request);\n  }\n\n  this.request = request;\n}\n\nNegotiator.prototype.charset = function charset(available) {\n  var set = this.charsets(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.charsets = function charsets(available) {\n  return preferredCharsets(this.request.headers['accept-charset'], available);\n};\n\nNegotiator.prototype.encoding = function encoding(available) {\n  var set = this.encodings(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.encodings = function encodings(available) {\n  return preferredEncodings(this.request.headers['accept-encoding'], available);\n};\n\nNegotiator.prototype.language = function language(available) {\n  var set = this.languages(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.languages = function languages(available) {\n  return preferredLanguages(this.request.headers['accept-language'], available);\n};\n\nNegotiator.prototype.mediaType = function mediaType(available) {\n  var set = this.mediaTypes(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.mediaTypes = function mediaTypes(available) {\n  return preferredMediaTypes(this.request.headers.accept, available);\n};\n\n// Backwards compatibility\nNegotiator.prototype.preferredCharset = Negotiator.prototype.charset;\nNegotiator.prototype.preferredCharsets = Negotiator.prototype.charsets;\nNegotiator.prototype.preferredEncoding = Negotiator.prototype.encoding;\nNegotiator.prototype.preferredEncodings = Negotiator.prototype.encodings;\nNegotiator.prototype.preferredLanguage = Negotiator.prototype.language;\nNegotiator.prototype.preferredLanguages = Negotiator.prototype.languages;\nNegotiator.prototype.preferredMediaType = Negotiator.prototype.mediaType;\nNegotiator.prototype.preferredMediaTypes = Negotiator.prototype.mediaTypes;\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\negotiator\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 564,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\negotiator\\lib\\charset.js",
    "source": "/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = preferredCharsets;\nmodule.exports.preferredCharsets = preferredCharsets;\n\n/**\n * Module variables.\n * @private\n */\n\nvar simpleCharsetRegExp = /^\\s*([^\\s;]+)\\s*(?:;(.*))?$/;\n\n/**\n * Parse the Accept-Charset header.\n * @private\n */\n\nfunction parseAcceptCharset(accept) {\n  var accepts = accept.split(',');\n\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var charset = parseCharset(accepts[i].trim(), i);\n\n    if (charset) {\n      accepts[j++] = charset;\n    }\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n}\n\n/**\n * Parse a charset from the Accept-Charset header.\n * @private\n */\n\nfunction parseCharset(str, i) {\n  var match = simpleCharsetRegExp.exec(str);\n  if (!match) return null;\n\n  var charset = match[1];\n  var q = 1;\n  if (match[2]) {\n    var params = match[2].split(';')\n    for (var j = 0; j < params.length; j++) {\n      var p = params[j].trim().split('=');\n      if (p[0] === 'q') {\n        q = parseFloat(p[1]);\n        break;\n      }\n    }\n  }\n\n  return {\n    charset: charset,\n    q: q,\n    i: i\n  };\n}\n\n/**\n * Get the priority of a charset.\n * @private\n */\n\nfunction getCharsetPriority(charset, accepted, index) {\n  var priority = {o: -1, q: 0, s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(charset, accepted[i], index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\n/**\n * Get the specificity of the charset.\n * @private\n */\n\nfunction specify(charset, spec, index) {\n  var s = 0;\n  if(spec.charset.toLowerCase() === charset.toLowerCase()){\n    s |= 1;\n  } else if (spec.charset !== '*' ) {\n    return null\n  }\n\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s\n  }\n}\n\n/**\n * Get the preferred charsets from an Accept-Charset header.\n * @public\n */\n\nfunction preferredCharsets(accept, provided) {\n  // RFC 2616 sec 14.2: no header = *\n  var accepts = parseAcceptCharset(accept === undefined ? '*' : accept || '');\n\n  if (!provided) {\n    // sorted list of all charsets\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullCharset);\n  }\n\n  var priorities = provided.map(function getPriority(type, index) {\n    return getCharsetPriority(type, accepts, index);\n  });\n\n  // sorted list of accepted charsets\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getCharset(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\n/**\n * Get full charset string.\n * @private\n */\n\nfunction getFullCharset(spec) {\n  return spec.charset;\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\negotiator\\lib\\charset.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 565,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\negotiator\\lib\\encoding.js",
    "source": "/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = preferredEncodings;\nmodule.exports.preferredEncodings = preferredEncodings;\n\n/**\n * Module variables.\n * @private\n */\n\nvar simpleEncodingRegExp = /^\\s*([^\\s;]+)\\s*(?:;(.*))?$/;\n\n/**\n * Parse the Accept-Encoding header.\n * @private\n */\n\nfunction parseAcceptEncoding(accept) {\n  var accepts = accept.split(',');\n  var hasIdentity = false;\n  var minQuality = 1;\n\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var encoding = parseEncoding(accepts[i].trim(), i);\n\n    if (encoding) {\n      accepts[j++] = encoding;\n      hasIdentity = hasIdentity || specify('identity', encoding);\n      minQuality = Math.min(minQuality, encoding.q || 1);\n    }\n  }\n\n  if (!hasIdentity) {\n    /*\n     * If identity doesn't explicitly appear in the accept-encoding header,\n     * it's added to the list of acceptable encoding with the lowest q\n     */\n    accepts[j++] = {\n      encoding: 'identity',\n      q: minQuality,\n      i: i\n    };\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n}\n\n/**\n * Parse an encoding from the Accept-Encoding header.\n * @private\n */\n\nfunction parseEncoding(str, i) {\n  var match = simpleEncodingRegExp.exec(str);\n  if (!match) return null;\n\n  var encoding = match[1];\n  var q = 1;\n  if (match[2]) {\n    var params = match[2].split(';');\n    for (var j = 0; j < params.length; j++) {\n      var p = params[j].trim().split('=');\n      if (p[0] === 'q') {\n        q = parseFloat(p[1]);\n        break;\n      }\n    }\n  }\n\n  return {\n    encoding: encoding,\n    q: q,\n    i: i\n  };\n}\n\n/**\n * Get the priority of an encoding.\n * @private\n */\n\nfunction getEncodingPriority(encoding, accepted, index) {\n  var priority = {o: -1, q: 0, s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(encoding, accepted[i], index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\n/**\n * Get the specificity of the encoding.\n * @private\n */\n\nfunction specify(encoding, spec, index) {\n  var s = 0;\n  if(spec.encoding.toLowerCase() === encoding.toLowerCase()){\n    s |= 1;\n  } else if (spec.encoding !== '*' ) {\n    return null\n  }\n\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s\n  }\n};\n\n/**\n * Get the preferred encodings from an Accept-Encoding header.\n * @public\n */\n\nfunction preferredEncodings(accept, provided) {\n  var accepts = parseAcceptEncoding(accept || '');\n\n  if (!provided) {\n    // sorted list of all encodings\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullEncoding);\n  }\n\n  var priorities = provided.map(function getPriority(type, index) {\n    return getEncodingPriority(type, accepts, index);\n  });\n\n  // sorted list of accepted encodings\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getEncoding(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\n/**\n * Get full encoding string.\n * @private\n */\n\nfunction getFullEncoding(spec) {\n  return spec.encoding;\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\negotiator\\lib\\encoding.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 566,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\negotiator\\lib\\language.js",
    "source": "/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = preferredLanguages;\nmodule.exports.preferredLanguages = preferredLanguages;\n\n/**\n * Module variables.\n * @private\n */\n\nvar simpleLanguageRegExp = /^\\s*([^\\s\\-;]+)(?:-([^\\s;]+))?\\s*(?:;(.*))?$/;\n\n/**\n * Parse the Accept-Language header.\n * @private\n */\n\nfunction parseAcceptLanguage(accept) {\n  var accepts = accept.split(',');\n\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var language = parseLanguage(accepts[i].trim(), i);\n\n    if (language) {\n      accepts[j++] = language;\n    }\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n}\n\n/**\n * Parse a language from the Accept-Language header.\n * @private\n */\n\nfunction parseLanguage(str, i) {\n  var match = simpleLanguageRegExp.exec(str);\n  if (!match) return null;\n\n  var prefix = match[1]\n  var suffix = match[2]\n  var full = prefix\n\n  if (suffix) full += \"-\" + suffix;\n\n  var q = 1;\n  if (match[3]) {\n    var params = match[3].split(';')\n    for (var j = 0; j < params.length; j++) {\n      var p = params[j].split('=');\n      if (p[0] === 'q') q = parseFloat(p[1]);\n    }\n  }\n\n  return {\n    prefix: prefix,\n    suffix: suffix,\n    q: q,\n    i: i,\n    full: full\n  };\n}\n\n/**\n * Get the priority of a language.\n * @private\n */\n\nfunction getLanguagePriority(language, accepted, index) {\n  var priority = {o: -1, q: 0, s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(language, accepted[i], index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\n/**\n * Get the specificity of the language.\n * @private\n */\n\nfunction specify(language, spec, index) {\n  var p = parseLanguage(language)\n  if (!p) return null;\n  var s = 0;\n  if(spec.full.toLowerCase() === p.full.toLowerCase()){\n    s |= 4;\n  } else if (spec.prefix.toLowerCase() === p.full.toLowerCase()) {\n    s |= 2;\n  } else if (spec.full.toLowerCase() === p.prefix.toLowerCase()) {\n    s |= 1;\n  } else if (spec.full !== '*' ) {\n    return null\n  }\n\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s\n  }\n};\n\n/**\n * Get the preferred languages from an Accept-Language header.\n * @public\n */\n\nfunction preferredLanguages(accept, provided) {\n  // RFC 2616 sec 14.4: no header = *\n  var accepts = parseAcceptLanguage(accept === undefined ? '*' : accept || '');\n\n  if (!provided) {\n    // sorted list of all languages\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullLanguage);\n  }\n\n  var priorities = provided.map(function getPriority(type, index) {\n    return getLanguagePriority(type, accepts, index);\n  });\n\n  // sorted list of accepted languages\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getLanguage(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\n/**\n * Get full language string.\n * @private\n */\n\nfunction getFullLanguage(spec) {\n  return spec.full;\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\negotiator\\lib\\language.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 567,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\negotiator\\lib\\mediaType.js",
    "source": "/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = preferredMediaTypes;\nmodule.exports.preferredMediaTypes = preferredMediaTypes;\n\n/**\n * Module variables.\n * @private\n */\n\nvar simpleMediaTypeRegExp = /^\\s*([^\\s\\/;]+)\\/([^;\\s]+)\\s*(?:;(.*))?$/;\n\n/**\n * Parse the Accept header.\n * @private\n */\n\nfunction parseAccept(accept) {\n  var accepts = splitMediaTypes(accept);\n\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var mediaType = parseMediaType(accepts[i].trim(), i);\n\n    if (mediaType) {\n      accepts[j++] = mediaType;\n    }\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n}\n\n/**\n * Parse a media type from the Accept header.\n * @private\n */\n\nfunction parseMediaType(str, i) {\n  var match = simpleMediaTypeRegExp.exec(str);\n  if (!match) return null;\n\n  var params = Object.create(null);\n  var q = 1;\n  var subtype = match[2];\n  var type = match[1];\n\n  if (match[3]) {\n    var kvps = splitParameters(match[3]).map(splitKeyValuePair);\n\n    for (var j = 0; j < kvps.length; j++) {\n      var pair = kvps[j];\n      var key = pair[0].toLowerCase();\n      var val = pair[1];\n\n      // get the value, unwrapping quotes\n      var value = val && val[0] === '\"' && val[val.length - 1] === '\"'\n        ? val.substr(1, val.length - 2)\n        : val;\n\n      if (key === 'q') {\n        q = parseFloat(value);\n        break;\n      }\n\n      // store parameter\n      params[key] = value;\n    }\n  }\n\n  return {\n    type: type,\n    subtype: subtype,\n    params: params,\n    q: q,\n    i: i\n  };\n}\n\n/**\n * Get the priority of a media type.\n * @private\n */\n\nfunction getMediaTypePriority(type, accepted, index) {\n  var priority = {o: -1, q: 0, s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(type, accepted[i], index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\n/**\n * Get the specificity of the media type.\n * @private\n */\n\nfunction specify(type, spec, index) {\n  var p = parseMediaType(type);\n  var s = 0;\n\n  if (!p) {\n    return null;\n  }\n\n  if(spec.type.toLowerCase() == p.type.toLowerCase()) {\n    s |= 4\n  } else if(spec.type != '*') {\n    return null;\n  }\n\n  if(spec.subtype.toLowerCase() == p.subtype.toLowerCase()) {\n    s |= 2\n  } else if(spec.subtype != '*') {\n    return null;\n  }\n\n  var keys = Object.keys(spec.params);\n  if (keys.length > 0) {\n    if (keys.every(function (k) {\n      return spec.params[k] == '*' || (spec.params[k] || '').toLowerCase() == (p.params[k] || '').toLowerCase();\n    })) {\n      s |= 1\n    } else {\n      return null\n    }\n  }\n\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s,\n  }\n}\n\n/**\n * Get the preferred media types from an Accept header.\n * @public\n */\n\nfunction preferredMediaTypes(accept, provided) {\n  // RFC 2616 sec 14.2: no header = */*\n  var accepts = parseAccept(accept === undefined ? '*/*' : accept || '');\n\n  if (!provided) {\n    // sorted list of all types\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullType);\n  }\n\n  var priorities = provided.map(function getPriority(type, index) {\n    return getMediaTypePriority(type, accepts, index);\n  });\n\n  // sorted list of accepted types\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getType(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\n/**\n * Get full type string.\n * @private\n */\n\nfunction getFullType(spec) {\n  return spec.type + '/' + spec.subtype;\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n\n/**\n * Count the number of quotes in a string.\n * @private\n */\n\nfunction quoteCount(string) {\n  var count = 0;\n  var index = 0;\n\n  while ((index = string.indexOf('\"', index)) !== -1) {\n    count++;\n    index++;\n  }\n\n  return count;\n}\n\n/**\n * Split a key value pair.\n * @private\n */\n\nfunction splitKeyValuePair(str) {\n  var index = str.indexOf('=');\n  var key;\n  var val;\n\n  if (index === -1) {\n    key = str;\n  } else {\n    key = str.substr(0, index);\n    val = str.substr(index + 1);\n  }\n\n  return [key, val];\n}\n\n/**\n * Split an Accept header into media types.\n * @private\n */\n\nfunction splitMediaTypes(accept) {\n  var accepts = accept.split(',');\n\n  for (var i = 1, j = 0; i < accepts.length; i++) {\n    if (quoteCount(accepts[j]) % 2 == 0) {\n      accepts[++j] = accepts[i];\n    } else {\n      accepts[j] += ',' + accepts[i];\n    }\n  }\n\n  // trim accepts\n  accepts.length = j + 1;\n\n  return accepts;\n}\n\n/**\n * Split a string of parameters.\n * @private\n */\n\nfunction splitParameters(str) {\n  var parameters = str.split(';');\n\n  for (var i = 1, j = 0; i < parameters.length; i++) {\n    if (quoteCount(parameters[j]) % 2 == 0) {\n      parameters[++j] = parameters[i];\n    } else {\n      parameters[j] += ';' + parameters[i];\n    }\n  }\n\n  // trim parameters\n  parameters.length = j + 1;\n\n  for (var i = 0; i < parameters.length; i++) {\n    parameters[i] = parameters[i].trim();\n  }\n\n  return parameters;\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\negotiator\\lib\\mediaType.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 568,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\mime-types\\index.js",
    "source": "/*!\n * mime-types\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar db = require('mime-db')\nvar extname = require('path').extname\n\n/**\n * Module variables.\n * @private\n */\n\nvar EXTRACT_TYPE_REGEXP = /^\\s*([^;\\s]*)(?:;|\\s|$)/\nvar TEXT_TYPE_REGEXP = /^text\\//i\n\n/**\n * Module exports.\n * @public\n */\n\nexports.charset = charset\nexports.charsets = { lookup: charset }\nexports.contentType = contentType\nexports.extension = extension\nexports.extensions = Object.create(null)\nexports.lookup = lookup\nexports.types = Object.create(null)\n\n// Populate the extensions/types maps\npopulateMaps(exports.extensions, exports.types)\n\n/**\n * Get the default charset for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction charset (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n  var mime = match && db[match[1].toLowerCase()]\n\n  if (mime && mime.charset) {\n    return mime.charset\n  }\n\n  // default text/* to utf-8\n  if (match && TEXT_TYPE_REGEXP.test(match[1])) {\n    return 'UTF-8'\n  }\n\n  return false\n}\n\n/**\n * Create a full Content-Type header given a MIME type or extension.\n *\n * @param {string} str\n * @return {boolean|string}\n */\n\nfunction contentType (str) {\n  // TODO: should this even be in this module?\n  if (!str || typeof str !== 'string') {\n    return false\n  }\n\n  var mime = str.indexOf('/') === -1\n    ? exports.lookup(str)\n    : str\n\n  if (!mime) {\n    return false\n  }\n\n  // TODO: use content-type or other module\n  if (mime.indexOf('charset') === -1) {\n    var charset = exports.charset(mime)\n    if (charset) mime += '; charset=' + charset.toLowerCase()\n  }\n\n  return mime\n}\n\n/**\n * Get the default extension for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction extension (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n\n  // get extensions\n  var exts = match && exports.extensions[match[1].toLowerCase()]\n\n  if (!exts || !exts.length) {\n    return false\n  }\n\n  return exts[0]\n}\n\n/**\n * Lookup the MIME type for a file path/extension.\n *\n * @param {string} path\n * @return {boolean|string}\n */\n\nfunction lookup (path) {\n  if (!path || typeof path !== 'string') {\n    return false\n  }\n\n  // get the extension (\"ext\" or \".ext\" or full path)\n  var extension = extname('x.' + path)\n    .toLowerCase()\n    .substr(1)\n\n  if (!extension) {\n    return false\n  }\n\n  return exports.types[extension] || false\n}\n\n/**\n * Populate the extensions and types maps.\n * @private\n */\n\nfunction populateMaps (extensions, types) {\n  // source preference (least -> most)\n  var preference = ['nginx', 'apache', undefined, 'iana']\n\n  Object.keys(db).forEach(function forEachMimeType (type) {\n    var mime = db[type]\n    var exts = mime.extensions\n\n    if (!exts || !exts.length) {\n      return\n    }\n\n    // mime -> extensions\n    extensions[type] = exts\n\n    // extension -> mime\n    for (var i = 0; i < exts.length; i++) {\n      var extension = exts[i]\n\n      if (types[extension]) {\n        var from = preference.indexOf(db[types[extension]].source)\n        var to = preference.indexOf(mime.source)\n\n        if (types[extension] !== 'application/octet-stream' &&\n          (from > to || (from === to && types[extension].substr(0, 12) === 'application/'))) {\n          // skip the remapping\n          continue\n        }\n      }\n\n      // set the extension -> mime\n      types[extension] = type\n    }\n  })\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\mime-types\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 569,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\mime-db\\index.js",
    "source": "/*!\n * mime-db\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module exports.\n */\n\nmodule.exports = require('./db.json')\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\mime-db\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 570,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\type-is\\index.js",
    "source": "/*!\n * type-is\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar typer = require('media-typer')\nvar mime = require('mime-types')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = typeofrequest\nmodule.exports.is = typeis\nmodule.exports.hasBody = hasbody\nmodule.exports.normalize = normalize\nmodule.exports.match = mimeMatch\n\n/**\n * Compare a `value` content-type with `types`.\n * Each `type` can be an extension like `html`,\n * a special shortcut like `multipart` or `urlencoded`,\n * or a mime type.\n *\n * If no types match, `false` is returned.\n * Otherwise, the first `type` that matches is returned.\n *\n * @param {String} value\n * @param {Array} types\n * @public\n */\n\nfunction typeis (value, types_) {\n  var i\n  var types = types_\n\n  // remove parameters and normalize\n  var val = tryNormalizeType(value)\n\n  // no type or invalid\n  if (!val) {\n    return false\n  }\n\n  // support flattened arguments\n  if (types && !Array.isArray(types)) {\n    types = new Array(arguments.length - 1)\n    for (i = 0; i < types.length; i++) {\n      types[i] = arguments[i + 1]\n    }\n  }\n\n  // no types, return the content type\n  if (!types || !types.length) {\n    return val\n  }\n\n  var type\n  for (i = 0; i < types.length; i++) {\n    if (mimeMatch(normalize(type = types[i]), val)) {\n      return type[0] === '+' || type.indexOf('*') !== -1\n        ? val\n        : type\n    }\n  }\n\n  // no matches\n  return false\n}\n\n/**\n * Check if a request has a request body.\n * A request with a body __must__ either have `transfer-encoding`\n * or `content-length` headers set.\n * http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.3\n *\n * @param {Object} request\n * @return {Boolean}\n * @public\n */\n\nfunction hasbody (req) {\n  return req.headers['transfer-encoding'] !== undefined ||\n    !isNaN(req.headers['content-length'])\n}\n\n/**\n * Check if the incoming request contains the \"Content-Type\"\n * header field, and it contains any of the give mime `type`s.\n * If there is no request body, `null` is returned.\n * If there is no content type, `false` is returned.\n * Otherwise, it returns the first `type` that matches.\n *\n * Examples:\n *\n *     // With Content-Type: text/html; charset=utf-8\n *     this.is('html'); // => 'html'\n *     this.is('text/html'); // => 'text/html'\n *     this.is('text/*', 'application/json'); // => 'text/html'\n *\n *     // When Content-Type is application/json\n *     this.is('json', 'urlencoded'); // => 'json'\n *     this.is('application/json'); // => 'application/json'\n *     this.is('html', 'application/*'); // => 'application/json'\n *\n *     this.is('html'); // => false\n *\n * @param {String|Array} types...\n * @return {String|false|null}\n * @public\n */\n\nfunction typeofrequest (req, types_) {\n  var types = types_\n\n  // no body\n  if (!hasbody(req)) {\n    return null\n  }\n\n  // support flattened arguments\n  if (arguments.length > 2) {\n    types = new Array(arguments.length - 1)\n    for (var i = 0; i < types.length; i++) {\n      types[i] = arguments[i + 1]\n    }\n  }\n\n  // request content type\n  var value = req.headers['content-type']\n\n  return typeis(value, types)\n}\n\n/**\n * Normalize a mime type.\n * If it's a shorthand, expand it to a valid mime type.\n *\n * In general, you probably want:\n *\n *   var type = is(req, ['urlencoded', 'json', 'multipart']);\n *\n * Then use the appropriate body parsers.\n * These three are the most common request body types\n * and are thus ensured to work.\n *\n * @param {String} type\n * @private\n */\n\nfunction normalize (type) {\n  if (typeof type !== 'string') {\n    // invalid type\n    return false\n  }\n\n  switch (type) {\n    case 'urlencoded':\n      return 'application/x-www-form-urlencoded'\n    case 'multipart':\n      return 'multipart/*'\n  }\n\n  if (type[0] === '+') {\n    // \"+json\" -> \"*/*+json\" expando\n    return '*/*' + type\n  }\n\n  return type.indexOf('/') === -1\n    ? mime.lookup(type)\n    : type\n}\n\n/**\n * Check if `expected` mime type\n * matches `actual` mime type with\n * wildcard and +suffix support.\n *\n * @param {String} expected\n * @param {String} actual\n * @return {Boolean}\n * @private\n */\n\nfunction mimeMatch (expected, actual) {\n  // invalid type\n  if (expected === false) {\n    return false\n  }\n\n  // split types\n  var actualParts = actual.split('/')\n  var expectedParts = expected.split('/')\n\n  // invalid format\n  if (actualParts.length !== 2 || expectedParts.length !== 2) {\n    return false\n  }\n\n  // validate type\n  if (expectedParts[0] !== '*' && expectedParts[0] !== actualParts[0]) {\n    return false\n  }\n\n  // validate suffix wildcard\n  if (expectedParts[1].substr(0, 2) === '*+') {\n    return expectedParts[1].length <= actualParts[1].length + 1 &&\n      expectedParts[1].substr(1) === actualParts[1].substr(1 - expectedParts[1].length)\n  }\n\n  // validate subtype\n  if (expectedParts[1] !== '*' && expectedParts[1] !== actualParts[1]) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * Normalize a type and remove parameters.\n *\n * @param {string} value\n * @return {string}\n * @private\n */\n\nfunction normalizeType (value) {\n  // parse the type\n  var type = typer.parse(value)\n\n  // remove the parameters\n  type.parameters = undefined\n\n  // reformat it\n  return typer.format(type)\n}\n\n/**\n * Try to normalize a type and remove parameters.\n *\n * @param {string} value\n * @return {string}\n * @private\n */\n\nfunction tryNormalizeType (value) {\n  if (!value) {\n    return null\n  }\n\n  try {\n    return normalizeType(value)\n  } catch (err) {\n    return null\n  }\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\type-is\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 571,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\media-typer\\index.js",
    "source": "/*!\n * media-typer\n * Copyright(c) 2014 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * RegExp to match *( \";\" parameter ) in RFC 2616 sec 3.7\n *\n * parameter     = token \"=\" ( token | quoted-string )\n * token         = 1*<any CHAR except CTLs or separators>\n * separators    = \"(\" | \")\" | \"<\" | \">\" | \"@\"\n *               | \",\" | \";\" | \":\" | \"\\\" | <\">\n *               | \"/\" | \"[\" | \"]\" | \"?\" | \"=\"\n *               | \"{\" | \"}\" | SP | HT\n * quoted-string = ( <\"> *(qdtext | quoted-pair ) <\"> )\n * qdtext        = <any TEXT except <\">>\n * quoted-pair   = \"\\\" CHAR\n * CHAR          = <any US-ASCII character (octets 0 - 127)>\n * TEXT          = <any OCTET except CTLs, but including LWS>\n * LWS           = [CRLF] 1*( SP | HT )\n * CRLF          = CR LF\n * CR            = <US-ASCII CR, carriage return (13)>\n * LF            = <US-ASCII LF, linefeed (10)>\n * SP            = <US-ASCII SP, space (32)>\n * SHT           = <US-ASCII HT, horizontal-tab (9)>\n * CTL           = <any US-ASCII control character (octets 0 - 31) and DEL (127)>\n * OCTET         = <any 8-bit sequence of data>\n */\nvar paramRegExp = /; *([!#$%&'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+) *= *(\"(?:[ !\\u0023-\\u005b\\u005d-\\u007e\\u0080-\\u00ff]|\\\\[\\u0020-\\u007e])*\"|[!#$%&'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+) */g;\nvar textRegExp = /^[\\u0020-\\u007e\\u0080-\\u00ff]+$/\nvar tokenRegExp = /^[!#$%&'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+$/\n\n/**\n * RegExp to match quoted-pair in RFC 2616\n *\n * quoted-pair = \"\\\" CHAR\n * CHAR        = <any US-ASCII character (octets 0 - 127)>\n */\nvar qescRegExp = /\\\\([\\u0000-\\u007f])/g;\n\n/**\n * RegExp to match chars that must be quoted-pair in RFC 2616\n */\nvar quoteRegExp = /([\\\\\"])/g;\n\n/**\n * RegExp to match type in RFC 6838\n *\n * type-name = restricted-name\n * subtype-name = restricted-name\n * restricted-name = restricted-name-first *126restricted-name-chars\n * restricted-name-first  = ALPHA / DIGIT\n * restricted-name-chars  = ALPHA / DIGIT / \"!\" / \"#\" /\n *                          \"$\" / \"&\" / \"-\" / \"^\" / \"_\"\n * restricted-name-chars =/ \".\" ; Characters before first dot always\n *                              ; specify a facet name\n * restricted-name-chars =/ \"+\" ; Characters after last plus always\n *                              ; specify a structured syntax suffix\n * ALPHA =  %x41-5A / %x61-7A   ; A-Z / a-z\n * DIGIT =  %x30-39             ; 0-9\n */\nvar subtypeNameRegExp = /^[A-Za-z0-9][A-Za-z0-9!#$&^_.-]{0,126}$/\nvar typeNameRegExp = /^[A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126}$/\nvar typeRegExp = /^ *([A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126})\\/([A-Za-z0-9][A-Za-z0-9!#$&^_.+-]{0,126}) *$/;\n\n/**\n * Module exports.\n */\n\nexports.format = format\nexports.parse = parse\n\n/**\n * Format object to media type.\n *\n * @param {object} obj\n * @return {string}\n * @api public\n */\n\nfunction format(obj) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('argument obj is required')\n  }\n\n  var parameters = obj.parameters\n  var subtype = obj.subtype\n  var suffix = obj.suffix\n  var type = obj.type\n\n  if (!type || !typeNameRegExp.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  if (!subtype || !subtypeNameRegExp.test(subtype)) {\n    throw new TypeError('invalid subtype')\n  }\n\n  // format as type/subtype\n  var string = type + '/' + subtype\n\n  // append +suffix\n  if (suffix) {\n    if (!typeNameRegExp.test(suffix)) {\n      throw new TypeError('invalid suffix')\n    }\n\n    string += '+' + suffix\n  }\n\n  // append parameters\n  if (parameters && typeof parameters === 'object') {\n    var param\n    var params = Object.keys(parameters).sort()\n\n    for (var i = 0; i < params.length; i++) {\n      param = params[i]\n\n      if (!tokenRegExp.test(param)) {\n        throw new TypeError('invalid parameter name')\n      }\n\n      string += '; ' + param + '=' + qstring(parameters[param])\n    }\n  }\n\n  return string\n}\n\n/**\n * Parse media type to object.\n *\n * @param {string|object} string\n * @return {Object}\n * @api public\n */\n\nfunction parse(string) {\n  if (!string) {\n    throw new TypeError('argument string is required')\n  }\n\n  // support req/res-like objects as argument\n  if (typeof string === 'object') {\n    string = getcontenttype(string)\n  }\n\n  if (typeof string !== 'string') {\n    throw new TypeError('argument string is required to be a string')\n  }\n\n  var index = string.indexOf(';')\n  var type = index !== -1\n    ? string.substr(0, index)\n    : string\n\n  var key\n  var match\n  var obj = splitType(type)\n  var params = {}\n  var value\n\n  paramRegExp.lastIndex = index\n\n  while (match = paramRegExp.exec(string)) {\n    if (match.index !== index) {\n      throw new TypeError('invalid parameter format')\n    }\n\n    index += match[0].length\n    key = match[1].toLowerCase()\n    value = match[2]\n\n    if (value[0] === '\"') {\n      // remove quotes and escapes\n      value = value\n        .substr(1, value.length - 2)\n        .replace(qescRegExp, '$1')\n    }\n\n    params[key] = value\n  }\n\n  if (index !== -1 && index !== string.length) {\n    throw new TypeError('invalid parameter format')\n  }\n\n  obj.parameters = params\n\n  return obj\n}\n\n/**\n * Get content-type from req/res objects.\n *\n * @param {object}\n * @return {Object}\n * @api private\n */\n\nfunction getcontenttype(obj) {\n  if (typeof obj.getHeader === 'function') {\n    // res-like\n    return obj.getHeader('content-type')\n  }\n\n  if (typeof obj.headers === 'object') {\n    // req-like\n    return obj.headers && obj.headers['content-type']\n  }\n}\n\n/**\n * Quote a string if necessary.\n *\n * @param {string} val\n * @return {string}\n * @api private\n */\n\nfunction qstring(val) {\n  var str = String(val)\n\n  // no need to quote tokens\n  if (tokenRegExp.test(str)) {\n    return str\n  }\n\n  if (str.length > 0 && !textRegExp.test(str)) {\n    throw new TypeError('invalid parameter value')\n  }\n\n  return '\"' + str.replace(quoteRegExp, '\\\\$1') + '\"'\n}\n\n/**\n * Simply \"type/subtype+siffx\" into parts.\n *\n * @param {string} string\n * @return {Object}\n * @api private\n */\n\nfunction splitType(string) {\n  var match = typeRegExp.exec(string.toLowerCase())\n\n  if (!match) {\n    throw new TypeError('invalid media type')\n  }\n\n  var type = match[1]\n  var subtype = match[2]\n  var suffix\n\n  // suffix after last +\n  var index = subtype.lastIndexOf('+')\n  if (index !== -1) {\n    suffix = subtype.substr(index + 1)\n    subtype = subtype.substr(0, index)\n  }\n\n  var obj = {\n    type: type,\n    subtype: subtype,\n    suffix: suffix\n  }\n\n  return obj\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\media-typer\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 572,
    "sourcePositions": []
  },
  {
    "url": "<unknown>",
    "source": "(function anonymous(fn,log,deprecate,message,site\n) {\n\"use strict\"\nreturn function () {log.call(deprecate, message, site)\nreturn fn.apply(this, arguments)\n}\n})",
    "name": "<unknown>",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 573,
    "sourcePositions": []
  },
  {
    "url": "<unknown>",
    "source": "(function anonymous(fn,log,deprecate,message,site\n) {\n\"use strict\"\nreturn function () {log.call(deprecate, message, site)\nreturn fn.apply(this, arguments)\n}\n})",
    "name": "<unknown>",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 574,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\response.js",
    "source": "/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar Buffer = require('safe-buffer').Buffer\nvar contentDisposition = require('content-disposition');\nvar createError = require('http-errors')\nvar deprecate = require('depd')('express');\nvar encodeUrl = require('encodeurl');\nvar escapeHtml = require('escape-html');\nvar http = require('http');\nvar isAbsolute = require('./utils').isAbsolute;\nvar onFinished = require('on-finished');\nvar path = require('path');\nvar statuses = require('statuses')\nvar merge = require('utils-merge');\nvar sign = require('cookie-signature').sign;\nvar normalizeType = require('./utils').normalizeType;\nvar normalizeTypes = require('./utils').normalizeTypes;\nvar setCharset = require('./utils').setCharset;\nvar cookie = require('cookie');\nvar send = require('send');\nvar extname = path.extname;\nvar mime = send.mime;\nvar resolve = path.resolve;\nvar vary = require('vary');\n\n/**\n * Response prototype.\n * @public\n */\n\nvar res = Object.create(http.ServerResponse.prototype)\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = res\n\n/**\n * Module variables.\n * @private\n */\n\nvar charsetRegExp = /;\\s*charset\\s*=/;\n\n/**\n * Set status `code`.\n *\n * @param {Number} code\n * @return {ServerResponse}\n * @public\n */\n\nres.status = function status(code) {\n  if ((typeof code === 'string' || Math.floor(code) !== code) && code > 99 && code < 1000) {\n    deprecate('res.status(' + JSON.stringify(code) + '): use res.status(' + Math.floor(code) + ') instead')\n  }\n  this.statusCode = code;\n  return this;\n};\n\n/**\n * Set Link header field with the given `links`.\n *\n * Examples:\n *\n *    res.links({\n *      next: 'http://api.example.com/users?page=2',\n *      last: 'http://api.example.com/users?page=5'\n *    });\n *\n * @param {Object} links\n * @return {ServerResponse}\n * @public\n */\n\nres.links = function(links){\n  var link = this.get('Link') || '';\n  if (link) link += ', ';\n  return this.set('Link', link + Object.keys(links).map(function(rel){\n    return '<' + links[rel] + '>; rel=\"' + rel + '\"';\n  }).join(', '));\n};\n\n/**\n * Send a response.\n *\n * Examples:\n *\n *     res.send(Buffer.from('wahoo'));\n *     res.send({ some: 'json' });\n *     res.send('<p>some html</p>');\n *\n * @param {string|number|boolean|object|Buffer} body\n * @public\n */\n\nres.send = function send(body) {\n  var chunk = body;\n  var encoding;\n  var req = this.req;\n  var type;\n\n  // settings\n  var app = this.app;\n\n  // allow status / body\n  if (arguments.length === 2) {\n    // res.send(body, status) backwards compat\n    if (typeof arguments[0] !== 'number' && typeof arguments[1] === 'number') {\n      deprecate('res.send(body, status): Use res.status(status).send(body) instead');\n      this.statusCode = arguments[1];\n    } else {\n      deprecate('res.send(status, body): Use res.status(status).send(body) instead');\n      this.statusCode = arguments[0];\n      chunk = arguments[1];\n    }\n  }\n\n  // disambiguate res.send(status) and res.send(status, num)\n  if (typeof chunk === 'number' && arguments.length === 1) {\n    // res.send(status) will set status message as text string\n    if (!this.get('Content-Type')) {\n      this.type('txt');\n    }\n\n    deprecate('res.send(status): Use res.sendStatus(status) instead');\n    this.statusCode = chunk;\n    chunk = statuses.message[chunk]\n  }\n\n  switch (typeof chunk) {\n    // string defaulting to html\n    case 'string':\n      if (!this.get('Content-Type')) {\n        this.type('html');\n      }\n      break;\n    case 'boolean':\n    case 'number':\n    case 'object':\n      if (chunk === null) {\n        chunk = '';\n      } else if (Buffer.isBuffer(chunk)) {\n        if (!this.get('Content-Type')) {\n          this.type('bin');\n        }\n      } else {\n        return this.json(chunk);\n      }\n      break;\n  }\n\n  // write strings in utf-8\n  if (typeof chunk === 'string') {\n    encoding = 'utf8';\n    type = this.get('Content-Type');\n\n    // reflect this in content-type\n    if (typeof type === 'string') {\n      this.set('Content-Type', setCharset(type, 'utf-8'));\n    }\n  }\n\n  // determine if ETag should be generated\n  var etagFn = app.get('etag fn')\n  var generateETag = !this.get('ETag') && typeof etagFn === 'function'\n\n  // populate Content-Length\n  var len\n  if (chunk !== undefined) {\n    if (Buffer.isBuffer(chunk)) {\n      // get length of Buffer\n      len = chunk.length\n    } else if (!generateETag && chunk.length < 1000) {\n      // just calculate length when no ETag + small chunk\n      len = Buffer.byteLength(chunk, encoding)\n    } else {\n      // convert chunk to Buffer and calculate\n      chunk = Buffer.from(chunk, encoding)\n      encoding = undefined;\n      len = chunk.length\n    }\n\n    this.set('Content-Length', len);\n  }\n\n  // populate ETag\n  var etag;\n  if (generateETag && len !== undefined) {\n    if ((etag = etagFn(chunk, encoding))) {\n      this.set('ETag', etag);\n    }\n  }\n\n  // freshness\n  if (req.fresh) this.statusCode = 304;\n\n  // strip irrelevant headers\n  if (204 === this.statusCode || 304 === this.statusCode) {\n    this.removeHeader('Content-Type');\n    this.removeHeader('Content-Length');\n    this.removeHeader('Transfer-Encoding');\n    chunk = '';\n  }\n\n  // alter headers for 205\n  if (this.statusCode === 205) {\n    this.set('Content-Length', '0')\n    this.removeHeader('Transfer-Encoding')\n    chunk = ''\n  }\n\n  if (req.method === 'HEAD') {\n    // skip body for HEAD\n    this.end();\n  } else {\n    // respond\n    this.end(chunk, encoding);\n  }\n\n  return this;\n};\n\n/**\n * Send JSON response.\n *\n * Examples:\n *\n *     res.json(null);\n *     res.json({ user: 'tj' });\n *\n * @param {string|number|boolean|object} obj\n * @public\n */\n\nres.json = function json(obj) {\n  var val = obj;\n\n  // allow status / body\n  if (arguments.length === 2) {\n    // res.json(body, status) backwards compat\n    if (typeof arguments[1] === 'number') {\n      deprecate('res.json(obj, status): Use res.status(status).json(obj) instead');\n      this.statusCode = arguments[1];\n    } else {\n      deprecate('res.json(status, obj): Use res.status(status).json(obj) instead');\n      this.statusCode = arguments[0];\n      val = arguments[1];\n    }\n  }\n\n  // settings\n  var app = this.app;\n  var escape = app.get('json escape')\n  var replacer = app.get('json replacer');\n  var spaces = app.get('json spaces');\n  var body = stringify(val, replacer, spaces, escape)\n\n  // content-type\n  if (!this.get('Content-Type')) {\n    this.set('Content-Type', 'application/json');\n  }\n\n  return this.send(body);\n};\n\n/**\n * Send JSON response with JSONP callback support.\n *\n * Examples:\n *\n *     res.jsonp(null);\n *     res.jsonp({ user: 'tj' });\n *\n * @param {string|number|boolean|object} obj\n * @public\n */\n\nres.jsonp = function jsonp(obj) {\n  var val = obj;\n\n  // allow status / body\n  if (arguments.length === 2) {\n    // res.jsonp(body, status) backwards compat\n    if (typeof arguments[1] === 'number') {\n      deprecate('res.jsonp(obj, status): Use res.status(status).jsonp(obj) instead');\n      this.statusCode = arguments[1];\n    } else {\n      deprecate('res.jsonp(status, obj): Use res.status(status).jsonp(obj) instead');\n      this.statusCode = arguments[0];\n      val = arguments[1];\n    }\n  }\n\n  // settings\n  var app = this.app;\n  var escape = app.get('json escape')\n  var replacer = app.get('json replacer');\n  var spaces = app.get('json spaces');\n  var body = stringify(val, replacer, spaces, escape)\n  var callback = this.req.query[app.get('jsonp callback name')];\n\n  // content-type\n  if (!this.get('Content-Type')) {\n    this.set('X-Content-Type-Options', 'nosniff');\n    this.set('Content-Type', 'application/json');\n  }\n\n  // fixup callback\n  if (Array.isArray(callback)) {\n    callback = callback[0];\n  }\n\n  // jsonp\n  if (typeof callback === 'string' && callback.length !== 0) {\n    this.set('X-Content-Type-Options', 'nosniff');\n    this.set('Content-Type', 'text/javascript');\n\n    // restrict callback charset\n    callback = callback.replace(/[^\\[\\]\\w$.]/g, '');\n\n    if (body === undefined) {\n      // empty argument\n      body = ''\n    } else if (typeof body === 'string') {\n      // replace chars not allowed in JavaScript that are in JSON\n      body = body\n        .replace(/\\u2028/g, '\\\\u2028')\n        .replace(/\\u2029/g, '\\\\u2029')\n    }\n\n    // the /**/ is a specific security mitigation for \"Rosetta Flash JSONP abuse\"\n    // the typeof check is just to reduce client error noise\n    body = '/**/ typeof ' + callback + ' === \\'function\\' && ' + callback + '(' + body + ');';\n  }\n\n  return this.send(body);\n};\n\n/**\n * Send given HTTP status code.\n *\n * Sets the response status to `statusCode` and the body of the\n * response to the standard description from node's http.STATUS_CODES\n * or the statusCode number if no description.\n *\n * Examples:\n *\n *     res.sendStatus(200);\n *\n * @param {number} statusCode\n * @public\n */\n\nres.sendStatus = function sendStatus(statusCode) {\n  var body = statuses.message[statusCode] || String(statusCode)\n\n  this.statusCode = statusCode;\n  this.type('txt');\n\n  return this.send(body);\n};\n\n/**\n * Transfer the file at the given `path`.\n *\n * Automatically sets the _Content-Type_ response header field.\n * The callback `callback(err)` is invoked when the transfer is complete\n * or when an error occurs. Be sure to check `res.headersSent`\n * if you wish to attempt responding, as the header and some data\n * may have already been transferred.\n *\n * Options:\n *\n *   - `maxAge`   defaulting to 0 (can be string converted by `ms`)\n *   - `root`     root directory for relative filenames\n *   - `headers`  object of headers to serve with file\n *   - `dotfiles` serve dotfiles, defaulting to false; can be `\"allow\"` to send them\n *\n * Other options are passed along to `send`.\n *\n * Examples:\n *\n *  The following example illustrates how `res.sendFile()` may\n *  be used as an alternative for the `static()` middleware for\n *  dynamic situations. The code backing `res.sendFile()` is actually\n *  the same code, so HTTP cache support etc is identical.\n *\n *     app.get('/user/:uid/photos/:file', function(req, res){\n *       var uid = req.params.uid\n *         , file = req.params.file;\n *\n *       req.user.mayViewFilesFrom(uid, function(yes){\n *         if (yes) {\n *           res.sendFile('/uploads/' + uid + '/' + file);\n *         } else {\n *           res.send(403, 'Sorry! you cant see that.');\n *         }\n *       });\n *     });\n *\n * @public\n */\n\nres.sendFile = function sendFile(path, options, callback) {\n  var done = callback;\n  var req = this.req;\n  var res = this;\n  var next = req.next;\n  var opts = options || {};\n\n  if (!path) {\n    throw new TypeError('path argument is required to res.sendFile');\n  }\n\n  if (typeof path !== 'string') {\n    throw new TypeError('path must be a string to res.sendFile')\n  }\n\n  // support function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  if (!opts.root && !isAbsolute(path)) {\n    throw new TypeError('path must be absolute or specify root to res.sendFile');\n  }\n\n  // create file stream\n  var pathname = encodeURI(path);\n  var file = send(req, pathname, opts);\n\n  // transfer\n  sendfile(res, file, opts, function (err) {\n    if (done) return done(err);\n    if (err && err.code === 'EISDIR') return next();\n\n    // next() all but write errors\n    if (err && err.code !== 'ECONNABORTED' && err.syscall !== 'write') {\n      next(err);\n    }\n  });\n};\n\n/**\n * Transfer the file at the given `path`.\n *\n * Automatically sets the _Content-Type_ response header field.\n * The callback `callback(err)` is invoked when the transfer is complete\n * or when an error occurs. Be sure to check `res.headersSent`\n * if you wish to attempt responding, as the header and some data\n * may have already been transferred.\n *\n * Options:\n *\n *   - `maxAge`   defaulting to 0 (can be string converted by `ms`)\n *   - `root`     root directory for relative filenames\n *   - `headers`  object of headers to serve with file\n *   - `dotfiles` serve dotfiles, defaulting to false; can be `\"allow\"` to send them\n *\n * Other options are passed along to `send`.\n *\n * Examples:\n *\n *  The following example illustrates how `res.sendfile()` may\n *  be used as an alternative for the `static()` middleware for\n *  dynamic situations. The code backing `res.sendfile()` is actually\n *  the same code, so HTTP cache support etc is identical.\n *\n *     app.get('/user/:uid/photos/:file', function(req, res){\n *       var uid = req.params.uid\n *         , file = req.params.file;\n *\n *       req.user.mayViewFilesFrom(uid, function(yes){\n *         if (yes) {\n *           res.sendfile('/uploads/' + uid + '/' + file);\n *         } else {\n *           res.send(403, 'Sorry! you cant see that.');\n *         }\n *       });\n *     });\n *\n * @public\n */\n\nres.sendfile = function (path, options, callback) {\n  var done = callback;\n  var req = this.req;\n  var res = this;\n  var next = req.next;\n  var opts = options || {};\n\n  // support function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  // create file stream\n  var file = send(req, path, opts);\n\n  // transfer\n  sendfile(res, file, opts, function (err) {\n    if (done) return done(err);\n    if (err && err.code === 'EISDIR') return next();\n\n    // next() all but write errors\n    if (err && err.code !== 'ECONNABORTED' && err.syscall !== 'write') {\n      next(err);\n    }\n  });\n};\n\nres.sendfile = deprecate.function(res.sendfile,\n  'res.sendfile: Use res.sendFile instead');\n\n/**\n * Transfer the file at the given `path` as an attachment.\n *\n * Optionally providing an alternate attachment `filename`,\n * and optional callback `callback(err)`. The callback is invoked\n * when the data transfer is complete, or when an error has\n * occurred. Be sure to check `res.headersSent` if you plan to respond.\n *\n * Optionally providing an `options` object to use with `res.sendFile()`.\n * This function will set the `Content-Disposition` header, overriding\n * any `Content-Disposition` header passed as header options in order\n * to set the attachment and filename.\n *\n * This method uses `res.sendFile()`.\n *\n * @public\n */\n\nres.download = function download (path, filename, options, callback) {\n  var done = callback;\n  var name = filename;\n  var opts = options || null\n\n  // support function as second or third arg\n  if (typeof filename === 'function') {\n    done = filename;\n    name = null;\n    opts = null\n  } else if (typeof options === 'function') {\n    done = options\n    opts = null\n  }\n\n  // support optional filename, where options may be in it's place\n  if (typeof filename === 'object' &&\n    (typeof options === 'function' || options === undefined)) {\n    name = null\n    opts = filename\n  }\n\n  // set Content-Disposition when file is sent\n  var headers = {\n    'Content-Disposition': contentDisposition(name || path)\n  };\n\n  // merge user-provided headers\n  if (opts && opts.headers) {\n    var keys = Object.keys(opts.headers)\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n      if (key.toLowerCase() !== 'content-disposition') {\n        headers[key] = opts.headers[key]\n      }\n    }\n  }\n\n  // merge user-provided options\n  opts = Object.create(opts)\n  opts.headers = headers\n\n  // Resolve the full path for sendFile\n  var fullPath = !opts.root\n    ? resolve(path)\n    : path\n\n  // send file\n  return this.sendFile(fullPath, opts, done)\n};\n\n/**\n * Set _Content-Type_ response header with `type` through `mime.lookup()`\n * when it does not contain \"/\", or set the Content-Type to `type` otherwise.\n *\n * Examples:\n *\n *     res.type('.html');\n *     res.type('html');\n *     res.type('json');\n *     res.type('application/json');\n *     res.type('png');\n *\n * @param {String} type\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.contentType =\nres.type = function contentType(type) {\n  var ct = type.indexOf('/') === -1\n    ? mime.lookup(type)\n    : type;\n\n  return this.set('Content-Type', ct);\n};\n\n/**\n * Respond to the Acceptable formats using an `obj`\n * of mime-type callbacks.\n *\n * This method uses `req.accepted`, an array of\n * acceptable types ordered by their quality values.\n * When \"Accept\" is not present the _first_ callback\n * is invoked, otherwise the first match is used. When\n * no match is performed the server responds with\n * 406 \"Not Acceptable\".\n *\n * Content-Type is set for you, however if you choose\n * you may alter this within the callback using `res.type()`\n * or `res.set('Content-Type', ...)`.\n *\n *    res.format({\n *      'text/plain': function(){\n *        res.send('hey');\n *      },\n *\n *      'text/html': function(){\n *        res.send('<p>hey</p>');\n *      },\n *\n *      'application/json': function () {\n *        res.send({ message: 'hey' });\n *      }\n *    });\n *\n * In addition to canonicalized MIME types you may\n * also use extnames mapped to these types:\n *\n *    res.format({\n *      text: function(){\n *        res.send('hey');\n *      },\n *\n *      html: function(){\n *        res.send('<p>hey</p>');\n *      },\n *\n *      json: function(){\n *        res.send({ message: 'hey' });\n *      }\n *    });\n *\n * By default Express passes an `Error`\n * with a `.status` of 406 to `next(err)`\n * if a match is not made. If you provide\n * a `.default` callback it will be invoked\n * instead.\n *\n * @param {Object} obj\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.format = function(obj){\n  var req = this.req;\n  var next = req.next;\n\n  var keys = Object.keys(obj)\n    .filter(function (v) { return v !== 'default' })\n\n  var key = keys.length > 0\n    ? req.accepts(keys)\n    : false;\n\n  this.vary(\"Accept\");\n\n  if (key) {\n    this.set('Content-Type', normalizeType(key).value);\n    obj[key](req, this, next);\n  } else if (obj.default) {\n    obj.default(req, this, next)\n  } else {\n    next(createError(406, {\n      types: normalizeTypes(keys).map(function (o) { return o.value })\n    }))\n  }\n\n  return this;\n};\n\n/**\n * Set _Content-Disposition_ header to _attachment_ with optional `filename`.\n *\n * @param {String} filename\n * @return {ServerResponse}\n * @public\n */\n\nres.attachment = function attachment(filename) {\n  if (filename) {\n    this.type(extname(filename));\n  }\n\n  this.set('Content-Disposition', contentDisposition(filename));\n\n  return this;\n};\n\n/**\n * Append additional header `field` with value `val`.\n *\n * Example:\n *\n *    res.append('Link', ['<http://localhost/>', '<http://localhost:3000/>']);\n *    res.append('Set-Cookie', 'foo=bar; Path=/; HttpOnly');\n *    res.append('Warning', '199 Miscellaneous warning');\n *\n * @param {String} field\n * @param {String|Array} val\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.append = function append(field, val) {\n  var prev = this.get(field);\n  var value = val;\n\n  if (prev) {\n    // concat the new and prev vals\n    value = Array.isArray(prev) ? prev.concat(val)\n      : Array.isArray(val) ? [prev].concat(val)\n        : [prev, val]\n  }\n\n  return this.set(field, value);\n};\n\n/**\n * Set header `field` to `val`, or pass\n * an object of header fields.\n *\n * Examples:\n *\n *    res.set('Foo', ['bar', 'baz']);\n *    res.set('Accept', 'application/json');\n *    res.set({ Accept: 'text/plain', 'X-API-Key': 'tobi' });\n *\n * Aliased as `res.header()`.\n *\n * @param {String|Object} field\n * @param {String|Array} val\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.set =\nres.header = function header(field, val) {\n  if (arguments.length === 2) {\n    var value = Array.isArray(val)\n      ? val.map(String)\n      : String(val);\n\n    // add charset to content-type\n    if (field.toLowerCase() === 'content-type') {\n      if (Array.isArray(value)) {\n        throw new TypeError('Content-Type cannot be set to an Array');\n      }\n      if (!charsetRegExp.test(value)) {\n        var charset = mime.charsets.lookup(value.split(';')[0]);\n        if (charset) value += '; charset=' + charset.toLowerCase();\n      }\n    }\n\n    this.setHeader(field, value);\n  } else {\n    for (var key in field) {\n      this.set(key, field[key]);\n    }\n  }\n  return this;\n};\n\n/**\n * Get value for header `field`.\n *\n * @param {String} field\n * @return {String}\n * @public\n */\n\nres.get = function(field){\n  return this.getHeader(field);\n};\n\n/**\n * Clear cookie `name`.\n *\n * @param {String} name\n * @param {Object} [options]\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.clearCookie = function clearCookie(name, options) {\n  var opts = merge({ expires: new Date(1), path: '/' }, options);\n\n  return this.cookie(name, '', opts);\n};\n\n/**\n * Set cookie `name` to `value`, with the given `options`.\n *\n * Options:\n *\n *    - `maxAge`   max-age in milliseconds, converted to `expires`\n *    - `signed`   sign the cookie\n *    - `path`     defaults to \"/\"\n *\n * Examples:\n *\n *    // \"Remember Me\" for 15 minutes\n *    res.cookie('rememberme', '1', { expires: new Date(Date.now() + 900000), httpOnly: true });\n *\n *    // same as above\n *    res.cookie('rememberme', '1', { maxAge: 900000, httpOnly: true })\n *\n * @param {String} name\n * @param {String|Object} value\n * @param {Object} [options]\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.cookie = function (name, value, options) {\n  var opts = merge({}, options);\n  var secret = this.req.secret;\n  var signed = opts.signed;\n\n  if (signed && !secret) {\n    throw new Error('cookieParser(\"secret\") required for signed cookies');\n  }\n\n  var val = typeof value === 'object'\n    ? 'j:' + JSON.stringify(value)\n    : String(value);\n\n  if (signed) {\n    val = 's:' + sign(val, secret);\n  }\n\n  if (opts.maxAge != null) {\n    var maxAge = opts.maxAge - 0\n\n    if (!isNaN(maxAge)) {\n      opts.expires = new Date(Date.now() + maxAge)\n      opts.maxAge = Math.floor(maxAge / 1000)\n    }\n  }\n\n  if (opts.path == null) {\n    opts.path = '/';\n  }\n\n  this.append('Set-Cookie', cookie.serialize(name, String(val), opts));\n\n  return this;\n};\n\n/**\n * Set the location header to `url`.\n *\n * The given `url` can also be \"back\", which redirects\n * to the _Referrer_ or _Referer_ headers or \"/\".\n *\n * Examples:\n *\n *    res.location('/foo/bar').;\n *    res.location('http://example.com');\n *    res.location('../login');\n *\n * @param {String} url\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.location = function location(url) {\n  var loc = url;\n\n  // \"back\" is an alias for the referrer\n  if (url === 'back') {\n    loc = this.req.get('Referrer') || '/';\n  }\n\n  // set location\n  return this.set('Location', encodeUrl(loc));\n};\n\n/**\n * Redirect to the given `url` with optional response `status`\n * defaulting to 302.\n *\n * The resulting `url` is determined by `res.location()`, so\n * it will play nicely with mounted apps, relative paths,\n * `\"back\"` etc.\n *\n * Examples:\n *\n *    res.redirect('/foo/bar');\n *    res.redirect('http://example.com');\n *    res.redirect(301, 'http://example.com');\n *    res.redirect('../login'); // /blog/post/1 -> /blog/login\n *\n * @public\n */\n\nres.redirect = function redirect(url) {\n  var address = url;\n  var body;\n  var status = 302;\n\n  // allow status / url\n  if (arguments.length === 2) {\n    if (typeof arguments[0] === 'number') {\n      status = arguments[0];\n      address = arguments[1];\n    } else {\n      deprecate('res.redirect(url, status): Use res.redirect(status, url) instead');\n      status = arguments[1];\n    }\n  }\n\n  // Set location header\n  address = this.location(address).get('Location');\n\n  // Support text/{plain,html} by default\n  this.format({\n    text: function(){\n      body = statuses.message[status] + '. Redirecting to ' + address\n    },\n\n    html: function(){\n      var u = escapeHtml(address);\n      body = '<p>' + statuses.message[status] + '. Redirecting to <a href=\"' + u + '\">' + u + '</a></p>'\n    },\n\n    default: function(){\n      body = '';\n    }\n  });\n\n  // Respond\n  this.statusCode = status;\n  this.set('Content-Length', Buffer.byteLength(body));\n\n  if (this.req.method === 'HEAD') {\n    this.end();\n  } else {\n    this.end(body);\n  }\n};\n\n/**\n * Add `field` to Vary. If already present in the Vary set, then\n * this call is simply ignored.\n *\n * @param {Array|String} field\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.vary = function(field){\n  // checks for back-compat\n  if (!field || (Array.isArray(field) && !field.length)) {\n    deprecate('res.vary(): Provide a field name');\n    return this;\n  }\n\n  vary(this, field);\n\n  return this;\n};\n\n/**\n * Render `view` with the given `options` and optional callback `fn`.\n * When a callback function is given a response will _not_ be made\n * automatically, otherwise a response of _200_ and _text/html_ is given.\n *\n * Options:\n *\n *  - `cache`     boolean hinting to the engine it should cache\n *  - `filename`  filename of the view being rendered\n *\n * @public\n */\n\nres.render = function render(view, options, callback) {\n  var app = this.req.app;\n  var done = callback;\n  var opts = options || {};\n  var req = this.req;\n  var self = this;\n\n  // support callback function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  // merge res.locals\n  opts._locals = self.locals;\n\n  // default callback to respond\n  done = done || function (err, str) {\n    if (err) return req.next(err);\n    self.send(str);\n  };\n\n  // render\n  app.render(view, opts, done);\n};\n\n// pipe the send file stream\nfunction sendfile(res, file, options, callback) {\n  var done = false;\n  var streaming;\n\n  // request aborted\n  function onaborted() {\n    if (done) return;\n    done = true;\n\n    var err = new Error('Request aborted');\n    err.code = 'ECONNABORTED';\n    callback(err);\n  }\n\n  // directory\n  function ondirectory() {\n    if (done) return;\n    done = true;\n\n    var err = new Error('EISDIR, read');\n    err.code = 'EISDIR';\n    callback(err);\n  }\n\n  // errors\n  function onerror(err) {\n    if (done) return;\n    done = true;\n    callback(err);\n  }\n\n  // ended\n  function onend() {\n    if (done) return;\n    done = true;\n    callback();\n  }\n\n  // file\n  function onfile() {\n    streaming = false;\n  }\n\n  // finished\n  function onfinish(err) {\n    if (err && err.code === 'ECONNRESET') return onaborted();\n    if (err) return onerror(err);\n    if (done) return;\n\n    setImmediate(function () {\n      if (streaming !== false && !done) {\n        onaborted();\n        return;\n      }\n\n      if (done) return;\n      done = true;\n      callback();\n    });\n  }\n\n  // streaming\n  function onstream() {\n    streaming = true;\n  }\n\n  file.on('directory', ondirectory);\n  file.on('end', onend);\n  file.on('error', onerror);\n  file.on('file', onfile);\n  file.on('stream', onstream);\n  onFinished(res, onfinish);\n\n  if (options.headers) {\n    // set headers on successful transfer\n    file.on('headers', function headers(res) {\n      var obj = options.headers;\n      var keys = Object.keys(obj);\n\n      for (var i = 0; i < keys.length; i++) {\n        var k = keys[i];\n        res.setHeader(k, obj[k]);\n      }\n    });\n  }\n\n  // pipe\n  file.pipe(res);\n}\n\n/**\n * Stringify JSON, like JSON.stringify, but v8 optimized, with the\n * ability to escape characters that can trigger HTML sniffing.\n *\n * @param {*} value\n * @param {function} replacer\n * @param {number} spaces\n * @param {boolean} escape\n * @returns {string}\n * @private\n */\n\nfunction stringify (value, replacer, spaces, escape) {\n  // v8 checks arguments.length for optimizing simple call\n  // https://bugs.chromium.org/p/v8/issues/detail?id=4730\n  var json = replacer || spaces\n    ? JSON.stringify(value, replacer, spaces)\n    : JSON.stringify(value);\n\n  if (escape && typeof json === 'string') {\n    json = json.replace(/[<>&]/g, function (c) {\n      switch (c.charCodeAt(0)) {\n        case 0x3c:\n          return '\\\\u003c'\n        case 0x3e:\n          return '\\\\u003e'\n        case 0x26:\n          return '\\\\u0026'\n        /* istanbul ignore next: unreachable default */\n        default:\n          return c\n      }\n    })\n  }\n\n  return json\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\express\\lib\\response.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 575,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\cookie-signature\\index.js",
    "source": "/**\n * Module dependencies.\n */\n\nvar crypto = require('crypto');\n\n/**\n * Sign the given `val` with `secret`.\n *\n * @param {String} val\n * @param {String} secret\n * @return {String}\n * @api private\n */\n\nexports.sign = function(val, secret){\n  if ('string' != typeof val) throw new TypeError(\"Cookie value must be provided as a string.\");\n  if ('string' != typeof secret) throw new TypeError(\"Secret string must be provided.\");\n  return val + '.' + crypto\n    .createHmac('sha256', secret)\n    .update(val)\n    .digest('base64')\n    .replace(/\\=+$/, '');\n};\n\n/**\n * Unsign and decode the given `val` with `secret`,\n * returning `false` if the signature is invalid.\n *\n * @param {String} val\n * @param {String} secret\n * @return {String|Boolean}\n * @api private\n */\n\nexports.unsign = function(val, secret){\n  if ('string' != typeof val) throw new TypeError(\"Signed cookie string must be provided.\");\n  if ('string' != typeof secret) throw new TypeError(\"Secret string must be provided.\");\n  var str = val.slice(0, val.lastIndexOf('.'))\n    , mac = exports.sign(str, secret);\n  \n  return sha1(mac) == sha1(val) ? str : false;\n};\n\n/**\n * Private\n */\n\nfunction sha1(str){\n  return crypto.createHash('sha1').update(str).digest('hex');\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\cookie-signature\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 576,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\cookie\\index.js",
    "source": "/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar __toString = Object.prototype.toString\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var dec = opt.decode || decode;\n\n  var index = 0\n  while (index < str.length) {\n    var eqIdx = str.indexOf('=', index)\n\n    // no more cookie pairs\n    if (eqIdx === -1) {\n      break\n    }\n\n    var endIdx = str.indexOf(';', index)\n\n    if (endIdx === -1) {\n      endIdx = str.length\n    } else if (endIdx < eqIdx) {\n      // backtrack on prior semicolon\n      index = str.lastIndexOf(';', eqIdx - 1) + 1\n      continue\n    }\n\n    var key = str.slice(index, eqIdx).trim()\n\n    // only assign once\n    if (undefined === obj[key]) {\n      var val = str.slice(eqIdx + 1, endIdx).trim()\n\n      // quoted values\n      if (val.charCodeAt(0) === 0x22) {\n        val = val.slice(1, -1)\n      }\n\n      obj[key] = tryDecode(val, dec);\n    }\n\n    index = endIdx + 1\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid')\n    }\n\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    var expires = opt.expires\n\n    if (!isDate(expires) || isNaN(expires.valueOf())) {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + expires.toUTCString()\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.priority) {\n    var priority = typeof opt.priority === 'string'\n      ? opt.priority.toLowerCase()\n      : opt.priority\n\n    switch (priority) {\n      case 'low':\n        str += '; Priority=Low'\n        break\n      case 'medium':\n        str += '; Priority=Medium'\n        break\n      case 'high':\n        str += '; Priority=High'\n        break\n      default:\n        throw new TypeError('option priority is invalid')\n    }\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n *\n * @param {string} str\n * @returns {string}\n */\n\nfunction decode (str) {\n  return str.indexOf('%') !== -1\n    ? decodeURIComponent(str)\n    : str\n}\n\n/**\n * URL-encode value.\n *\n * @param {string} str\n * @returns {string}\n */\n\nfunction encode (val) {\n  return encodeURIComponent(val)\n}\n\n/**\n * Determine if value is a Date.\n *\n * @param {*} val\n * @private\n */\n\nfunction isDate (val) {\n  return __toString.call(val) === '[object Date]' ||\n    val instanceof Date\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\cookie\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 577,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\vary\\index.js",
    "source": "/*!\n * vary\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n */\n\nmodule.exports = vary\nmodule.exports.append = append\n\n/**\n * RegExp to match field-name in RFC 7230 sec 3.2\n *\n * field-name    = token\n * token         = 1*tchar\n * tchar         = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\"\n *               / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n *               / DIGIT / ALPHA\n *               ; any VCHAR, except delimiters\n */\n\nvar FIELD_NAME_REGEXP = /^[!#$%&'*+\\-.^_`|~0-9A-Za-z]+$/\n\n/**\n * Append a field to a vary header.\n *\n * @param {String} header\n * @param {String|Array} field\n * @return {String}\n * @public\n */\n\nfunction append (header, field) {\n  if (typeof header !== 'string') {\n    throw new TypeError('header argument is required')\n  }\n\n  if (!field) {\n    throw new TypeError('field argument is required')\n  }\n\n  // get fields array\n  var fields = !Array.isArray(field)\n    ? parse(String(field))\n    : field\n\n  // assert on invalid field names\n  for (var j = 0; j < fields.length; j++) {\n    if (!FIELD_NAME_REGEXP.test(fields[j])) {\n      throw new TypeError('field argument contains an invalid header name')\n    }\n  }\n\n  // existing, unspecified vary\n  if (header === '*') {\n    return header\n  }\n\n  // enumerate current values\n  var val = header\n  var vals = parse(header.toLowerCase())\n\n  // unspecified vary\n  if (fields.indexOf('*') !== -1 || vals.indexOf('*') !== -1) {\n    return '*'\n  }\n\n  for (var i = 0; i < fields.length; i++) {\n    var fld = fields[i].toLowerCase()\n\n    // append value (case-preserving)\n    if (vals.indexOf(fld) === -1) {\n      vals.push(fld)\n      val = val\n        ? val + ', ' + fields[i]\n        : fields[i]\n    }\n  }\n\n  return val\n}\n\n/**\n * Parse a vary header into an array.\n *\n * @param {String} header\n * @return {Array}\n * @private\n */\n\nfunction parse (header) {\n  var end = 0\n  var list = []\n  var start = 0\n\n  // gather tokens\n  for (var i = 0, len = header.length; i < len; i++) {\n    switch (header.charCodeAt(i)) {\n      case 0x20: /*   */\n        if (start === end) {\n          start = end = i + 1\n        }\n        break\n      case 0x2c: /* , */\n        list.push(header.substring(start, end))\n        start = end = i + 1\n        break\n      default:\n        end = i + 1\n        break\n    }\n  }\n\n  // final token\n  list.push(header.substring(start, end))\n\n  return list\n}\n\n/**\n * Mark that a request is varied on a header field.\n *\n * @param {Object} res\n * @param {String|Array} field\n * @public\n */\n\nfunction vary (res, field) {\n  if (!res || !res.getHeader || !res.setHeader) {\n    // quack quack\n    throw new TypeError('res argument is required')\n  }\n\n  // get existing header\n  var val = res.getHeader('Vary') || ''\n  var header = Array.isArray(val)\n    ? val.join(', ')\n    : String(val)\n\n  // set new header\n  if ((val = append(header, field))) {\n    res.setHeader('Vary', val)\n  }\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\vary\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 578,
    "sourcePositions": []
  },
  {
    "url": "<unknown>",
    "source": "(function anonymous(fn,log,deprecate,message,site\n) {\n\"use strict\"\nreturn function (arg0, arg1, arg2) {log.call(deprecate, message, site)\nreturn fn.apply(this, arguments)\n}\n})",
    "name": "<unknown>",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 579,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\body-parser\\lib\\types\\json.js",
    "source": "/*!\n * body-parser\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar bytes = require('bytes')\nvar contentType = require('content-type')\nvar createError = require('http-errors')\nvar debug = require('debug')('body-parser:json')\nvar read = require('../read')\nvar typeis = require('type-is')\n\n/**\n * Module exports.\n */\n\nmodule.exports = json\n\n/**\n * RegExp to match the first non-space in a string.\n *\n * Allowed whitespace is defined in RFC 7159:\n *\n *    ws = *(\n *            %x20 /              ; Space\n *            %x09 /              ; Horizontal tab\n *            %x0A /              ; Line feed or New line\n *            %x0D )              ; Carriage return\n */\n\nvar FIRST_CHAR_REGEXP = /^[\\x20\\x09\\x0a\\x0d]*([^\\x20\\x09\\x0a\\x0d])/ // eslint-disable-line no-control-regex\n\n/**\n * Create a middleware to parse JSON bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @public\n */\n\nfunction json (options) {\n  var opts = options || {}\n\n  var limit = typeof opts.limit !== 'number'\n    ? bytes.parse(opts.limit || '100kb')\n    : opts.limit\n  var inflate = opts.inflate !== false\n  var reviver = opts.reviver\n  var strict = opts.strict !== false\n  var type = opts.type || 'application/json'\n  var verify = opts.verify || false\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function')\n  }\n\n  // create the appropriate type checking function\n  var shouldParse = typeof type !== 'function'\n    ? typeChecker(type)\n    : type\n\n  function parse (body) {\n    if (body.length === 0) {\n      // special-case empty json body, as it's a common client-side mistake\n      // TODO: maybe make this configurable or part of \"strict\" option\n      return {}\n    }\n\n    if (strict) {\n      var first = firstchar(body)\n\n      if (first !== '{' && first !== '[') {\n        debug('strict violation')\n        throw createStrictSyntaxError(body, first)\n      }\n    }\n\n    try {\n      debug('parse json')\n      return JSON.parse(body, reviver)\n    } catch (e) {\n      throw normalizeJsonSyntaxError(e, {\n        message: e.message,\n        stack: e.stack\n      })\n    }\n  }\n\n  return function jsonParser (req, res, next) {\n    if (req._body) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    req.body = req.body || {}\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j', req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next()\n      return\n    }\n\n    // assert charset per RFC 7159 sec 8.1\n    var charset = getCharset(req) || 'utf-8'\n    if (charset.slice(0, 4) !== 'utf-') {\n      debug('invalid charset')\n      next(createError(415, 'unsupported charset \"' + charset.toUpperCase() + '\"', {\n        charset: charset,\n        type: 'charset.unsupported'\n      }))\n      return\n    }\n\n    // read\n    read(req, res, next, parse, debug, {\n      encoding: charset,\n      inflate: inflate,\n      limit: limit,\n      verify: verify\n    })\n  }\n}\n\n/**\n * Create strict violation syntax error matching native error.\n *\n * @param {string} str\n * @param {string} char\n * @return {Error}\n * @private\n */\n\nfunction createStrictSyntaxError (str, char) {\n  var index = str.indexOf(char)\n  var partial = index !== -1\n    ? str.substring(0, index) + '#'\n    : ''\n\n  try {\n    JSON.parse(partial); /* istanbul ignore next */ throw new SyntaxError('strict violation')\n  } catch (e) {\n    return normalizeJsonSyntaxError(e, {\n      message: e.message.replace('#', char),\n      stack: e.stack\n    })\n  }\n}\n\n/**\n * Get the first non-whitespace character in a string.\n *\n * @param {string} str\n * @return {function}\n * @private\n */\n\nfunction firstchar (str) {\n  var match = FIRST_CHAR_REGEXP.exec(str)\n\n  return match\n    ? match[1]\n    : undefined\n}\n\n/**\n * Get the charset of a request.\n *\n * @param {object} req\n * @api private\n */\n\nfunction getCharset (req) {\n  try {\n    return (contentType.parse(req).parameters.charset || '').toLowerCase()\n  } catch (e) {\n    return undefined\n  }\n}\n\n/**\n * Normalize a SyntaxError for JSON.parse.\n *\n * @param {SyntaxError} error\n * @param {object} obj\n * @return {SyntaxError}\n */\n\nfunction normalizeJsonSyntaxError (error, obj) {\n  var keys = Object.getOwnPropertyNames(error)\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i]\n    if (key !== 'stack' && key !== 'message') {\n      delete error[key]\n    }\n  }\n\n  // replace stack before message for Node.js 0.10 and below\n  error.stack = obj.stack.replace(error.message, obj.message)\n  error.message = obj.message\n\n  return error\n}\n\n/**\n * Get the simple type checker.\n *\n * @param {string} type\n * @return {function}\n */\n\nfunction typeChecker (type) {\n  return function checkType (req) {\n    return Boolean(typeis(req, type))\n  }\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\body-parser\\lib\\types\\json.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 580,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\bytes\\index.js",
    "source": "/*!\n * bytes\n * Copyright(c) 2012-2014 TJ Holowaychuk\n * Copyright(c) 2015 Jed Watson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = bytes;\nmodule.exports.format = format;\nmodule.exports.parse = parse;\n\n/**\n * Module variables.\n * @private\n */\n\nvar formatThousandsRegExp = /\\B(?=(\\d{3})+(?!\\d))/g;\n\nvar formatDecimalsRegExp = /(?:\\.0*|(\\.[^0]+)0+)$/;\n\nvar map = {\n  b:  1,\n  kb: 1 << 10,\n  mb: 1 << 20,\n  gb: 1 << 30,\n  tb: Math.pow(1024, 4),\n  pb: Math.pow(1024, 5),\n};\n\nvar parseRegExp = /^((-|\\+)?(\\d+(?:\\.\\d+)?)) *(kb|mb|gb|tb|pb)$/i;\n\n/**\n * Convert the given value in bytes into a string or parse to string to an integer in bytes.\n *\n * @param {string|number} value\n * @param {{\n *  case: [string],\n *  decimalPlaces: [number]\n *  fixedDecimals: [boolean]\n *  thousandsSeparator: [string]\n *  unitSeparator: [string]\n *  }} [options] bytes options.\n *\n * @returns {string|number|null}\n */\n\nfunction bytes(value, options) {\n  if (typeof value === 'string') {\n    return parse(value);\n  }\n\n  if (typeof value === 'number') {\n    return format(value, options);\n  }\n\n  return null;\n}\n\n/**\n * Format the given value in bytes into a string.\n *\n * If the value is negative, it is kept as such. If it is a float,\n * it is rounded.\n *\n * @param {number} value\n * @param {object} [options]\n * @param {number} [options.decimalPlaces=2]\n * @param {number} [options.fixedDecimals=false]\n * @param {string} [options.thousandsSeparator=]\n * @param {string} [options.unit=]\n * @param {string} [options.unitSeparator=]\n *\n * @returns {string|null}\n * @public\n */\n\nfunction format(value, options) {\n  if (!Number.isFinite(value)) {\n    return null;\n  }\n\n  var mag = Math.abs(value);\n  var thousandsSeparator = (options && options.thousandsSeparator) || '';\n  var unitSeparator = (options && options.unitSeparator) || '';\n  var decimalPlaces = (options && options.decimalPlaces !== undefined) ? options.decimalPlaces : 2;\n  var fixedDecimals = Boolean(options && options.fixedDecimals);\n  var unit = (options && options.unit) || '';\n\n  if (!unit || !map[unit.toLowerCase()]) {\n    if (mag >= map.pb) {\n      unit = 'PB';\n    } else if (mag >= map.tb) {\n      unit = 'TB';\n    } else if (mag >= map.gb) {\n      unit = 'GB';\n    } else if (mag >= map.mb) {\n      unit = 'MB';\n    } else if (mag >= map.kb) {\n      unit = 'KB';\n    } else {\n      unit = 'B';\n    }\n  }\n\n  var val = value / map[unit.toLowerCase()];\n  var str = val.toFixed(decimalPlaces);\n\n  if (!fixedDecimals) {\n    str = str.replace(formatDecimalsRegExp, '$1');\n  }\n\n  if (thousandsSeparator) {\n    str = str.split('.').map(function (s, i) {\n      return i === 0\n        ? s.replace(formatThousandsRegExp, thousandsSeparator)\n        : s\n    }).join('.');\n  }\n\n  return str + unitSeparator + unit;\n}\n\n/**\n * Parse the string value into an integer in bytes.\n *\n * If no unit is given, it is assumed the value is in bytes.\n *\n * @param {number|string} val\n *\n * @returns {number|null}\n * @public\n */\n\nfunction parse(val) {\n  if (typeof val === 'number' && !isNaN(val)) {\n    return val;\n  }\n\n  if (typeof val !== 'string') {\n    return null;\n  }\n\n  // Test if the string passed is valid\n  var results = parseRegExp.exec(val);\n  var floatValue;\n  var unit = 'b';\n\n  if (!results) {\n    // Nothing could be extracted from the given string\n    floatValue = parseInt(val, 10);\n    unit = 'b'\n  } else {\n    // Retrieve the value and the unit\n    floatValue = parseFloat(results[1]);\n    unit = results[4].toLowerCase();\n  }\n\n  if (isNaN(floatValue)) {\n    return null;\n  }\n\n  return Math.floor(map[unit] * floatValue);\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\bytes\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 581,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\body-parser\\lib\\read.js",
    "source": "/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar createError = require('http-errors')\nvar destroy = require('destroy')\nvar getBody = require('raw-body')\nvar iconv = require('iconv-lite')\nvar onFinished = require('on-finished')\nvar unpipe = require('unpipe')\nvar zlib = require('zlib')\n\n/**\n * Module exports.\n */\n\nmodule.exports = read\n\n/**\n * Read a request into a buffer and parse.\n *\n * @param {object} req\n * @param {object} res\n * @param {function} next\n * @param {function} parse\n * @param {function} debug\n * @param {object} options\n * @private\n */\n\nfunction read (req, res, next, parse, debug, options) {\n  var length\n  var opts = options\n  var stream\n\n  // flag as parsed\n  req._body = true\n\n  // read options\n  var encoding = opts.encoding !== null\n    ? opts.encoding\n    : null\n  var verify = opts.verify\n\n  try {\n    // get the content stream\n    stream = contentstream(req, debug, opts.inflate)\n    length = stream.length\n    stream.length = undefined\n  } catch (err) {\n    return next(err)\n  }\n\n  // set raw-body options\n  opts.length = length\n  opts.encoding = verify\n    ? null\n    : encoding\n\n  // assert charset is supported\n  if (opts.encoding === null && encoding !== null && !iconv.encodingExists(encoding)) {\n    return next(createError(415, 'unsupported charset \"' + encoding.toUpperCase() + '\"', {\n      charset: encoding.toLowerCase(),\n      type: 'charset.unsupported'\n    }))\n  }\n\n  // read body\n  debug('read body')\n  getBody(stream, opts, function (error, body) {\n    if (error) {\n      var _error\n\n      if (error.type === 'encoding.unsupported') {\n        // echo back charset\n        _error = createError(415, 'unsupported charset \"' + encoding.toUpperCase() + '\"', {\n          charset: encoding.toLowerCase(),\n          type: 'charset.unsupported'\n        })\n      } else {\n        // set status code on error\n        _error = createError(400, error)\n      }\n\n      // unpipe from stream and destroy\n      if (stream !== req) {\n        unpipe(req)\n        destroy(stream, true)\n      }\n\n      // read off entire request\n      dump(req, function onfinished () {\n        next(createError(400, _error))\n      })\n      return\n    }\n\n    // verify\n    if (verify) {\n      try {\n        debug('verify body')\n        verify(req, res, body, encoding)\n      } catch (err) {\n        next(createError(403, err, {\n          body: body,\n          type: err.type || 'entity.verify.failed'\n        }))\n        return\n      }\n    }\n\n    // parse\n    var str = body\n    try {\n      debug('parse body')\n      str = typeof body !== 'string' && encoding !== null\n        ? iconv.decode(body, encoding)\n        : body\n      req.body = parse(str)\n    } catch (err) {\n      next(createError(400, err, {\n        body: str,\n        type: err.type || 'entity.parse.failed'\n      }))\n      return\n    }\n\n    next()\n  })\n}\n\n/**\n * Get the content stream of the request.\n *\n * @param {object} req\n * @param {function} debug\n * @param {boolean} [inflate=true]\n * @return {object}\n * @api private\n */\n\nfunction contentstream (req, debug, inflate) {\n  var encoding = (req.headers['content-encoding'] || 'identity').toLowerCase()\n  var length = req.headers['content-length']\n  var stream\n\n  debug('content-encoding \"%s\"', encoding)\n\n  if (inflate === false && encoding !== 'identity') {\n    throw createError(415, 'content encoding unsupported', {\n      encoding: encoding,\n      type: 'encoding.unsupported'\n    })\n  }\n\n  switch (encoding) {\n    case 'deflate':\n      stream = zlib.createInflate()\n      debug('inflate body')\n      req.pipe(stream)\n      break\n    case 'gzip':\n      stream = zlib.createGunzip()\n      debug('gunzip body')\n      req.pipe(stream)\n      break\n    case 'identity':\n      stream = req\n      stream.length = length\n      break\n    default:\n      throw createError(415, 'unsupported content encoding \"' + encoding + '\"', {\n        encoding: encoding,\n        type: 'encoding.unsupported'\n      })\n  }\n\n  return stream\n}\n\n/**\n * Dump the contents of a request.\n *\n * @param {object} req\n * @param {function} callback\n * @api private\n */\n\nfunction dump (req, callback) {\n  if (onFinished.isFinished(req)) {\n    callback(null)\n  } else {\n    onFinished(req, callback)\n    req.resume()\n  }\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\body-parser\\lib\\read.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 582,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\raw-body\\index.js",
    "source": "/*!\n * raw-body\n * Copyright(c) 2013-2014 Jonathan Ong\n * Copyright(c) 2014-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar asyncHooks = tryRequireAsyncHooks()\nvar bytes = require('bytes')\nvar createError = require('http-errors')\nvar iconv = require('iconv-lite')\nvar unpipe = require('unpipe')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = getRawBody\n\n/**\n * Module variables.\n * @private\n */\n\nvar ICONV_ENCODING_MESSAGE_REGEXP = /^Encoding not recognized: /\n\n/**\n * Get the decoder for a given encoding.\n *\n * @param {string} encoding\n * @private\n */\n\nfunction getDecoder (encoding) {\n  if (!encoding) return null\n\n  try {\n    return iconv.getDecoder(encoding)\n  } catch (e) {\n    // error getting decoder\n    if (!ICONV_ENCODING_MESSAGE_REGEXP.test(e.message)) throw e\n\n    // the encoding was not found\n    throw createError(415, 'specified encoding unsupported', {\n      encoding: encoding,\n      type: 'encoding.unsupported'\n    })\n  }\n}\n\n/**\n * Get the raw body of a stream (typically HTTP).\n *\n * @param {object} stream\n * @param {object|string|function} [options]\n * @param {function} [callback]\n * @public\n */\n\nfunction getRawBody (stream, options, callback) {\n  var done = callback\n  var opts = options || {}\n\n  if (options === true || typeof options === 'string') {\n    // short cut for encoding\n    opts = {\n      encoding: options\n    }\n  }\n\n  if (typeof options === 'function') {\n    done = options\n    opts = {}\n  }\n\n  // validate callback is a function, if provided\n  if (done !== undefined && typeof done !== 'function') {\n    throw new TypeError('argument callback must be a function')\n  }\n\n  // require the callback without promises\n  if (!done && !global.Promise) {\n    throw new TypeError('argument callback is required')\n  }\n\n  // get encoding\n  var encoding = opts.encoding !== true\n    ? opts.encoding\n    : 'utf-8'\n\n  // convert the limit to an integer\n  var limit = bytes.parse(opts.limit)\n\n  // convert the expected length to an integer\n  var length = opts.length != null && !isNaN(opts.length)\n    ? parseInt(opts.length, 10)\n    : null\n\n  if (done) {\n    // classic callback style\n    return readStream(stream, encoding, length, limit, wrap(done))\n  }\n\n  return new Promise(function executor (resolve, reject) {\n    readStream(stream, encoding, length, limit, function onRead (err, buf) {\n      if (err) return reject(err)\n      resolve(buf)\n    })\n  })\n}\n\n/**\n * Halt a stream.\n *\n * @param {Object} stream\n * @private\n */\n\nfunction halt (stream) {\n  // unpipe everything from the stream\n  unpipe(stream)\n\n  // pause stream\n  if (typeof stream.pause === 'function') {\n    stream.pause()\n  }\n}\n\n/**\n * Read the data from the stream.\n *\n * @param {object} stream\n * @param {string} encoding\n * @param {number} length\n * @param {number} limit\n * @param {function} callback\n * @public\n */\n\nfunction readStream (stream, encoding, length, limit, callback) {\n  var complete = false\n  var sync = true\n\n  // check the length and limit options.\n  // note: we intentionally leave the stream paused,\n  // so users should handle the stream themselves.\n  if (limit !== null && length !== null && length > limit) {\n    return done(createError(413, 'request entity too large', {\n      expected: length,\n      length: length,\n      limit: limit,\n      type: 'entity.too.large'\n    }))\n  }\n\n  // streams1: assert request encoding is buffer.\n  // streams2+: assert the stream encoding is buffer.\n  //   stream._decoder: streams1\n  //   state.encoding: streams2\n  //   state.decoder: streams2, specifically < 0.10.6\n  var state = stream._readableState\n  if (stream._decoder || (state && (state.encoding || state.decoder))) {\n    // developer error\n    return done(createError(500, 'stream encoding should not be set', {\n      type: 'stream.encoding.set'\n    }))\n  }\n\n  if (typeof stream.readable !== 'undefined' && !stream.readable) {\n    return done(createError(500, 'stream is not readable', {\n      type: 'stream.not.readable'\n    }))\n  }\n\n  var received = 0\n  var decoder\n\n  try {\n    decoder = getDecoder(encoding)\n  } catch (err) {\n    return done(err)\n  }\n\n  var buffer = decoder\n    ? ''\n    : []\n\n  // attach listeners\n  stream.on('aborted', onAborted)\n  stream.on('close', cleanup)\n  stream.on('data', onData)\n  stream.on('end', onEnd)\n  stream.on('error', onEnd)\n\n  // mark sync section complete\n  sync = false\n\n  function done () {\n    var args = new Array(arguments.length)\n\n    // copy arguments\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n\n    // mark complete\n    complete = true\n\n    if (sync) {\n      process.nextTick(invokeCallback)\n    } else {\n      invokeCallback()\n    }\n\n    function invokeCallback () {\n      cleanup()\n\n      if (args[0]) {\n        // halt the stream on error\n        halt(stream)\n      }\n\n      callback.apply(null, args)\n    }\n  }\n\n  function onAborted () {\n    if (complete) return\n\n    done(createError(400, 'request aborted', {\n      code: 'ECONNABORTED',\n      expected: length,\n      length: length,\n      received: received,\n      type: 'request.aborted'\n    }))\n  }\n\n  function onData (chunk) {\n    if (complete) return\n\n    received += chunk.length\n\n    if (limit !== null && received > limit) {\n      done(createError(413, 'request entity too large', {\n        limit: limit,\n        received: received,\n        type: 'entity.too.large'\n      }))\n    } else if (decoder) {\n      buffer += decoder.write(chunk)\n    } else {\n      buffer.push(chunk)\n    }\n  }\n\n  function onEnd (err) {\n    if (complete) return\n    if (err) return done(err)\n\n    if (length !== null && received !== length) {\n      done(createError(400, 'request size did not match content length', {\n        expected: length,\n        length: length,\n        received: received,\n        type: 'request.size.invalid'\n      }))\n    } else {\n      var string = decoder\n        ? buffer + (decoder.end() || '')\n        : Buffer.concat(buffer)\n      done(null, string)\n    }\n  }\n\n  function cleanup () {\n    buffer = null\n\n    stream.removeListener('aborted', onAborted)\n    stream.removeListener('data', onData)\n    stream.removeListener('end', onEnd)\n    stream.removeListener('error', onEnd)\n    stream.removeListener('close', cleanup)\n  }\n}\n\n/**\n * Try to require async_hooks\n * @private\n */\n\nfunction tryRequireAsyncHooks () {\n  try {\n    return require('async_hooks')\n  } catch (e) {\n    return {}\n  }\n}\n\n/**\n * Wrap function with async resource, if possible.\n * AsyncResource.bind static method backported.\n * @private\n */\n\nfunction wrap (fn) {\n  var res\n\n  // create anonymous resource\n  if (asyncHooks.AsyncResource) {\n    res = new asyncHooks.AsyncResource(fn.name || 'bound-anonymous-fn')\n  }\n\n  // incompatible node.js\n  if (!res || !res.runInAsyncScope) {\n    return fn\n  }\n\n  // return bound function\n  return res.runInAsyncScope.bind(res, fn, null)\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\raw-body\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 583,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\iconv-lite\\lib\\index.js",
    "source": "\"use strict\";\n\n// Some environments don't have global Buffer (e.g. React Native).\n// Solution would be installing npm modules \"buffer\" and \"stream\" explicitly.\nvar Buffer = require(\"safer-buffer\").Buffer;\n\nvar bomHandling = require(\"./bom-handling\"),\n    iconv = module.exports;\n\n// All codecs and aliases are kept here, keyed by encoding name/alias.\n// They are lazy loaded in `iconv.getCodec` from `encodings/index.js`.\niconv.encodings = null;\n\n// Characters emitted in case of error.\niconv.defaultCharUnicode = '�';\niconv.defaultCharSingleByte = '?';\n\n// Public API.\niconv.encode = function encode(str, encoding, options) {\n    str = \"\" + (str || \"\"); // Ensure string.\n\n    var encoder = iconv.getEncoder(encoding, options);\n\n    var res = encoder.write(str);\n    var trail = encoder.end();\n    \n    return (trail && trail.length > 0) ? Buffer.concat([res, trail]) : res;\n}\n\niconv.decode = function decode(buf, encoding, options) {\n    if (typeof buf === 'string') {\n        if (!iconv.skipDecodeWarning) {\n            console.error('Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding');\n            iconv.skipDecodeWarning = true;\n        }\n\n        buf = Buffer.from(\"\" + (buf || \"\"), \"binary\"); // Ensure buffer.\n    }\n\n    var decoder = iconv.getDecoder(encoding, options);\n\n    var res = decoder.write(buf);\n    var trail = decoder.end();\n\n    return trail ? (res + trail) : res;\n}\n\niconv.encodingExists = function encodingExists(enc) {\n    try {\n        iconv.getCodec(enc);\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n\n// Legacy aliases to convert functions\niconv.toEncoding = iconv.encode;\niconv.fromEncoding = iconv.decode;\n\n// Search for a codec in iconv.encodings. Cache codec data in iconv._codecDataCache.\niconv._codecDataCache = {};\niconv.getCodec = function getCodec(encoding) {\n    if (!iconv.encodings)\n        iconv.encodings = require(\"../encodings\"); // Lazy load all encoding definitions.\n    \n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    var enc = iconv._canonicalizeEncoding(encoding);\n\n    // Traverse iconv.encodings to find actual codec.\n    var codecOptions = {};\n    while (true) {\n        var codec = iconv._codecDataCache[enc];\n        if (codec)\n            return codec;\n\n        var codecDef = iconv.encodings[enc];\n\n        switch (typeof codecDef) {\n            case \"string\": // Direct alias to other encoding.\n                enc = codecDef;\n                break;\n\n            case \"object\": // Alias with options. Can be layered.\n                for (var key in codecDef)\n                    codecOptions[key] = codecDef[key];\n\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n                \n                enc = codecDef.type;\n                break;\n\n            case \"function\": // Codec itself.\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n\n                // The codec function must load all tables and return object with .encoder and .decoder methods.\n                // It'll be called only once (for each different options object).\n                codec = new codecDef(codecOptions, iconv);\n\n                iconv._codecDataCache[codecOptions.encodingName] = codec; // Save it to be reused later.\n                return codec;\n\n            default:\n                throw new Error(\"Encoding not recognized: '\" + encoding + \"' (searched as: '\"+enc+\"')\");\n        }\n    }\n}\n\niconv._canonicalizeEncoding = function(encoding) {\n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    return (''+encoding).toLowerCase().replace(/:\\d{4}$|[^0-9a-z]/g, \"\");\n}\n\niconv.getEncoder = function getEncoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        encoder = new codec.encoder(options, codec);\n\n    if (codec.bomAware && options && options.addBOM)\n        encoder = new bomHandling.PrependBOM(encoder, options);\n\n    return encoder;\n}\n\niconv.getDecoder = function getDecoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        decoder = new codec.decoder(options, codec);\n\n    if (codec.bomAware && !(options && options.stripBOM === false))\n        decoder = new bomHandling.StripBOM(decoder, options);\n\n    return decoder;\n}\n\n\n// Load extensions in Node. All of them are omitted in Browserify build via 'browser' field in package.json.\nvar nodeVer = typeof process !== 'undefined' && process.versions && process.versions.node;\nif (nodeVer) {\n\n    // Load streaming support in Node v0.10+\n    var nodeVerArr = nodeVer.split(\".\").map(Number);\n    if (nodeVerArr[0] > 0 || nodeVerArr[1] >= 10) {\n        require(\"./streams\")(iconv);\n    }\n\n    // Load Node primitive extensions.\n    require(\"./extend-node\")(iconv);\n}\n\nif (\"Ā\" != \"\\u0100\") {\n    console.error(\"iconv-lite warning: javascript files use encoding different from utf-8. See https://github.com/ashtuchkin/iconv-lite/wiki/Javascript-source-file-encodings for more info.\");\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\iconv-lite\\lib\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 584,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\safer-buffer\\safer.js",
    "source": "/* eslint-disable node/no-deprecated-api */\n\n'use strict'\n\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\nvar safer = {}\n\nvar key\n\nfor (key in buffer) {\n  if (!buffer.hasOwnProperty(key)) continue\n  if (key === 'SlowBuffer' || key === 'Buffer') continue\n  safer[key] = buffer[key]\n}\n\nvar Safer = safer.Buffer = {}\nfor (key in Buffer) {\n  if (!Buffer.hasOwnProperty(key)) continue\n  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue\n  Safer[key] = Buffer[key]\n}\n\nsafer.Buffer.prototype = Buffer.prototype\n\nif (!Safer.from || Safer.from === Uint8Array.from) {\n  Safer.from = function (value, encodingOrOffset, length) {\n    if (typeof value === 'number') {\n      throw new TypeError('The \"value\" argument must not be of type number. Received type ' + typeof value)\n    }\n    if (value && typeof value.length === 'undefined') {\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value)\n    }\n    return Buffer(value, encodingOrOffset, length)\n  }\n}\n\nif (!Safer.alloc) {\n  Safer.alloc = function (size, fill, encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('The \"size\" argument must be of type number. Received type ' + typeof size)\n    }\n    if (size < 0 || size >= 2 * (1 << 30)) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n    }\n    var buf = Buffer(size)\n    if (!fill || fill.length === 0) {\n      buf.fill(0)\n    } else if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n    return buf\n  }\n}\n\nif (!safer.kStringMaxLength) {\n  try {\n    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength\n  } catch (e) {\n    // we can't determine kStringMaxLength in environments where process.binding\n    // is unsupported, so let's not set it\n  }\n}\n\nif (!safer.constants) {\n  safer.constants = {\n    MAX_LENGTH: safer.kMaxLength\n  }\n  if (safer.kStringMaxLength) {\n    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength\n  }\n}\n\nmodule.exports = safer\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\safer-buffer\\safer.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 585,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\iconv-lite\\lib\\bom-handling.js",
    "source": "\"use strict\";\n\nvar BOMChar = '\\uFEFF';\n\nexports.PrependBOM = PrependBOMWrapper\nfunction PrependBOMWrapper(encoder, options) {\n    this.encoder = encoder;\n    this.addBOM = true;\n}\n\nPrependBOMWrapper.prototype.write = function(str) {\n    if (this.addBOM) {\n        str = BOMChar + str;\n        this.addBOM = false;\n    }\n\n    return this.encoder.write(str);\n}\n\nPrependBOMWrapper.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n//------------------------------------------------------------------------------\n\nexports.StripBOM = StripBOMWrapper;\nfunction StripBOMWrapper(decoder, options) {\n    this.decoder = decoder;\n    this.pass = false;\n    this.options = options || {};\n}\n\nStripBOMWrapper.prototype.write = function(buf) {\n    var res = this.decoder.write(buf);\n    if (this.pass || !res)\n        return res;\n\n    if (res[0] === BOMChar) {\n        res = res.slice(1);\n        if (typeof this.options.stripBOM === 'function')\n            this.options.stripBOM();\n    }\n\n    this.pass = true;\n    return res;\n}\n\nStripBOMWrapper.prototype.end = function() {\n    return this.decoder.end();\n}\n\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\iconv-lite\\lib\\bom-handling.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 586,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\iconv-lite\\lib\\streams.js",
    "source": "\"use strict\";\n\nvar Buffer = require(\"buffer\").Buffer,\n    Transform = require(\"stream\").Transform;\n\n\n// == Exports ==================================================================\nmodule.exports = function(iconv) {\n    \n    // Additional Public API.\n    iconv.encodeStream = function encodeStream(encoding, options) {\n        return new IconvLiteEncoderStream(iconv.getEncoder(encoding, options), options);\n    }\n\n    iconv.decodeStream = function decodeStream(encoding, options) {\n        return new IconvLiteDecoderStream(iconv.getDecoder(encoding, options), options);\n    }\n\n    iconv.supportsStreams = true;\n\n\n    // Not published yet.\n    iconv.IconvLiteEncoderStream = IconvLiteEncoderStream;\n    iconv.IconvLiteDecoderStream = IconvLiteDecoderStream;\n    iconv._collect = IconvLiteDecoderStream.prototype.collect;\n};\n\n\n// == Encoder stream =======================================================\nfunction IconvLiteEncoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.decodeStrings = false; // We accept only strings, so we don't need to decode them.\n    Transform.call(this, options);\n}\n\nIconvLiteEncoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteEncoderStream }\n});\n\nIconvLiteEncoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (typeof chunk != 'string')\n        return done(new Error(\"Iconv encoding stream needs strings as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype.collect = function(cb) {\n    var chunks = [];\n    this.on('error', cb);\n    this.on('data', function(chunk) { chunks.push(chunk); });\n    this.on('end', function() {\n        cb(null, Buffer.concat(chunks));\n    });\n    return this;\n}\n\n\n// == Decoder stream =======================================================\nfunction IconvLiteDecoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.encoding = this.encoding = 'utf8'; // We output strings.\n    Transform.call(this, options);\n}\n\nIconvLiteDecoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteDecoderStream }\n});\n\nIconvLiteDecoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (!Buffer.isBuffer(chunk))\n        return done(new Error(\"Iconv decoding stream needs buffers as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res, this.encoding);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res, this.encoding);                \n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype.collect = function(cb) {\n    var res = '';\n    this.on('error', cb);\n    this.on('data', function(chunk) { res += chunk; });\n    this.on('end', function() {\n        cb(null, res);\n    });\n    return this;\n}\n\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\iconv-lite\\lib\\streams.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 587,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\iconv-lite\\lib\\extend-node.js",
    "source": "\"use strict\";\nvar Buffer = require(\"buffer\").Buffer;\n// Note: not polyfilled with safer-buffer on a purpose, as overrides Buffer\n\n// == Extend Node primitives to use iconv-lite =================================\n\nmodule.exports = function (iconv) {\n    var original = undefined; // Place to keep original methods.\n\n    // Node authors rewrote Buffer internals to make it compatible with\n    // Uint8Array and we cannot patch key functions since then.\n    // Note: this does use older Buffer API on a purpose\n    iconv.supportsNodeEncodingsExtension = !(Buffer.from || new Buffer(0) instanceof Uint8Array);\n\n    iconv.extendNodeEncodings = function extendNodeEncodings() {\n        if (original) return;\n        original = {};\n\n        if (!iconv.supportsNodeEncodingsExtension) {\n            console.error(\"ACTION NEEDED: require('iconv-lite').extendNodeEncodings() is not supported in your version of Node\");\n            console.error(\"See more info at https://github.com/ashtuchkin/iconv-lite/wiki/Node-v4-compatibility\");\n            return;\n        }\n\n        var nodeNativeEncodings = {\n            'hex': true, 'utf8': true, 'utf-8': true, 'ascii': true, 'binary': true, \n            'base64': true, 'ucs2': true, 'ucs-2': true, 'utf16le': true, 'utf-16le': true,\n        };\n\n        Buffer.isNativeEncoding = function(enc) {\n            return enc && nodeNativeEncodings[enc.toLowerCase()];\n        }\n\n        // -- SlowBuffer -----------------------------------------------------------\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        original.SlowBufferToString = SlowBuffer.prototype.toString;\n        SlowBuffer.prototype.toString = function(encoding, start, end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferToString.call(this, encoding, start, end);\n\n            // Otherwise, use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start, end), encoding);\n        }\n\n        original.SlowBufferWrite = SlowBuffer.prototype.write;\n        SlowBuffer.prototype.write = function(string, offset, length, encoding) {\n            // Support both (string, offset, length, encoding)\n            // and the legacy (string, encoding, offset, length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferWrite.call(this, string, offset, length, encoding);\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise, use our encoding method.\n            var buf = iconv.encode(string, encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this, offset, 0, length);\n            return length;\n        }\n\n        // -- Buffer ---------------------------------------------------------------\n\n        original.BufferIsEncoding = Buffer.isEncoding;\n        Buffer.isEncoding = function(encoding) {\n            return Buffer.isNativeEncoding(encoding) || iconv.encodingExists(encoding);\n        }\n\n        original.BufferByteLength = Buffer.byteLength;\n        Buffer.byteLength = SlowBuffer.byteLength = function(str, encoding) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferByteLength.call(this, str, encoding);\n\n            // Slow, I know, but we don't have a better way yet.\n            return iconv.encode(str, encoding).length;\n        }\n\n        original.BufferToString = Buffer.prototype.toString;\n        Buffer.prototype.toString = function(encoding, start, end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferToString.call(this, encoding, start, end);\n\n            // Otherwise, use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start, end), encoding);\n        }\n\n        original.BufferWrite = Buffer.prototype.write;\n        Buffer.prototype.write = function(string, offset, length, encoding) {\n            var _offset = offset, _length = length, _encoding = encoding;\n            // Support both (string, offset, length, encoding)\n            // and the legacy (string, encoding, offset, length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferWrite.call(this, string, _offset, _length, _encoding);\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise, use our encoding method.\n            var buf = iconv.encode(string, encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this, offset, 0, length);\n            return length;\n\n            // TODO: Set _charsWritten.\n        }\n\n\n        // -- Readable -------------------------------------------------------------\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            original.ReadableSetEncoding = Readable.prototype.setEncoding;\n            Readable.prototype.setEncoding = function setEncoding(enc, options) {\n                // Use our own decoder, it has the same interface.\n                // We cannot use original function as it doesn't handle BOM-s.\n                this._readableState.decoder = iconv.getDecoder(enc, options);\n                this._readableState.encoding = enc;\n            }\n\n            Readable.prototype.collect = iconv._collect;\n        }\n    }\n\n    // Remove iconv-lite Node primitive extensions.\n    iconv.undoExtendNodeEncodings = function undoExtendNodeEncodings() {\n        if (!iconv.supportsNodeEncodingsExtension)\n            return;\n        if (!original)\n            throw new Error(\"require('iconv-lite').undoExtendNodeEncodings(): Nothing to undo; extendNodeEncodings() is not called.\")\n\n        delete Buffer.isNativeEncoding;\n\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        SlowBuffer.prototype.toString = original.SlowBufferToString;\n        SlowBuffer.prototype.write = original.SlowBufferWrite;\n\n        Buffer.isEncoding = original.BufferIsEncoding;\n        Buffer.byteLength = original.BufferByteLength;\n        Buffer.prototype.toString = original.BufferToString;\n        Buffer.prototype.write = original.BufferWrite;\n\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            Readable.prototype.setEncoding = original.ReadableSetEncoding;\n            delete Readable.prototype.collect;\n        }\n\n        original = undefined;\n    }\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\iconv-lite\\lib\\extend-node.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 588,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\body-parser\\lib\\types\\raw.js",
    "source": "/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n */\n\nvar bytes = require('bytes')\nvar debug = require('debug')('body-parser:raw')\nvar read = require('../read')\nvar typeis = require('type-is')\n\n/**\n * Module exports.\n */\n\nmodule.exports = raw\n\n/**\n * Create a middleware to parse raw bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @api public\n */\n\nfunction raw (options) {\n  var opts = options || {}\n\n  var inflate = opts.inflate !== false\n  var limit = typeof opts.limit !== 'number'\n    ? bytes.parse(opts.limit || '100kb')\n    : opts.limit\n  var type = opts.type || 'application/octet-stream'\n  var verify = opts.verify || false\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function')\n  }\n\n  // create the appropriate type checking function\n  var shouldParse = typeof type !== 'function'\n    ? typeChecker(type)\n    : type\n\n  function parse (buf) {\n    return buf\n  }\n\n  return function rawParser (req, res, next) {\n    if (req._body) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    req.body = req.body || {}\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j', req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next()\n      return\n    }\n\n    // read\n    read(req, res, next, parse, debug, {\n      encoding: null,\n      inflate: inflate,\n      limit: limit,\n      verify: verify\n    })\n  }\n}\n\n/**\n * Get the simple type checker.\n *\n * @param {string} type\n * @return {function}\n */\n\nfunction typeChecker (type) {\n  return function checkType (req) {\n    return Boolean(typeis(req, type))\n  }\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\body-parser\\lib\\types\\raw.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 589,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\serve-static\\index.js",
    "source": "/*!\n * serve-static\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * Copyright(c) 2014-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar encodeUrl = require('encodeurl')\nvar escapeHtml = require('escape-html')\nvar parseUrl = require('parseurl')\nvar resolve = require('path').resolve\nvar send = require('send')\nvar url = require('url')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = serveStatic\nmodule.exports.mime = send.mime\n\n/**\n * @param {string} root\n * @param {object} [options]\n * @return {function}\n * @public\n */\n\nfunction serveStatic (root, options) {\n  if (!root) {\n    throw new TypeError('root path required')\n  }\n\n  if (typeof root !== 'string') {\n    throw new TypeError('root path must be a string')\n  }\n\n  // copy options object\n  var opts = Object.create(options || null)\n\n  // fall-though\n  var fallthrough = opts.fallthrough !== false\n\n  // default redirect\n  var redirect = opts.redirect !== false\n\n  // headers listener\n  var setHeaders = opts.setHeaders\n\n  if (setHeaders && typeof setHeaders !== 'function') {\n    throw new TypeError('option setHeaders must be function')\n  }\n\n  // setup options for send\n  opts.maxage = opts.maxage || opts.maxAge || 0\n  opts.root = resolve(root)\n\n  // construct directory listener\n  var onDirectory = redirect\n    ? createRedirectDirectoryListener()\n    : createNotFoundDirectoryListener()\n\n  return function serveStatic (req, res, next) {\n    if (req.method !== 'GET' && req.method !== 'HEAD') {\n      if (fallthrough) {\n        return next()\n      }\n\n      // method not allowed\n      res.statusCode = 405\n      res.setHeader('Allow', 'GET, HEAD')\n      res.setHeader('Content-Length', '0')\n      res.end()\n      return\n    }\n\n    var forwardError = !fallthrough\n    var originalUrl = parseUrl.original(req)\n    var path = parseUrl(req).pathname\n\n    // make sure redirect occurs at mount\n    if (path === '/' && originalUrl.pathname.substr(-1) !== '/') {\n      path = ''\n    }\n\n    // create send stream\n    var stream = send(req, path, opts)\n\n    // add directory handler\n    stream.on('directory', onDirectory)\n\n    // add headers listener\n    if (setHeaders) {\n      stream.on('headers', setHeaders)\n    }\n\n    // add file listener for fallthrough\n    if (fallthrough) {\n      stream.on('file', function onFile () {\n        // once file is determined, always forward error\n        forwardError = true\n      })\n    }\n\n    // forward errors\n    stream.on('error', function error (err) {\n      if (forwardError || !(err.statusCode < 500)) {\n        next(err)\n        return\n      }\n\n      next()\n    })\n\n    // pipe\n    stream.pipe(res)\n  }\n}\n\n/**\n * Collapse all leading slashes into a single slash\n * @private\n */\nfunction collapseLeadingSlashes (str) {\n  for (var i = 0; i < str.length; i++) {\n    if (str.charCodeAt(i) !== 0x2f /* / */) {\n      break\n    }\n  }\n\n  return i > 1\n    ? '/' + str.substr(i)\n    : str\n}\n\n/**\n * Create a minimal HTML document.\n *\n * @param {string} title\n * @param {string} body\n * @private\n */\n\nfunction createHtmlDocument (title, body) {\n  return '<!DOCTYPE html>\\n' +\n    '<html lang=\"en\">\\n' +\n    '<head>\\n' +\n    '<meta charset=\"utf-8\">\\n' +\n    '<title>' + title + '</title>\\n' +\n    '</head>\\n' +\n    '<body>\\n' +\n    '<pre>' + body + '</pre>\\n' +\n    '</body>\\n' +\n    '</html>\\n'\n}\n\n/**\n * Create a directory listener that just 404s.\n * @private\n */\n\nfunction createNotFoundDirectoryListener () {\n  return function notFound () {\n    this.error(404)\n  }\n}\n\n/**\n * Create a directory listener that performs a redirect.\n * @private\n */\n\nfunction createRedirectDirectoryListener () {\n  return function redirect (res) {\n    if (this.hasTrailingSlash()) {\n      this.error(404)\n      return\n    }\n\n    // get original URL\n    var originalUrl = parseUrl.original(this.req)\n\n    // append trailing slash\n    originalUrl.path = null\n    originalUrl.pathname = collapseLeadingSlashes(originalUrl.pathname + '/')\n\n    // reformat the URL\n    var loc = encodeUrl(url.format(originalUrl))\n    var doc = createHtmlDocument('Redirecting', 'Redirecting to <a href=\"' + escapeHtml(loc) + '\">' +\n      escapeHtml(loc) + '</a>')\n\n    // send redirect response\n    res.statusCode = 301\n    res.setHeader('Content-Type', 'text/html; charset=UTF-8')\n    res.setHeader('Content-Length', Buffer.byteLength(doc))\n    res.setHeader('Content-Security-Policy', \"default-src 'none'\")\n    res.setHeader('X-Content-Type-Options', 'nosniff')\n    res.setHeader('Location', loc)\n    res.end(doc)\n  }\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\serve-static\\index.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 590,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\body-parser\\lib\\types\\text.js",
    "source": "/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n */\n\nvar bytes = require('bytes')\nvar contentType = require('content-type')\nvar debug = require('debug')('body-parser:text')\nvar read = require('../read')\nvar typeis = require('type-is')\n\n/**\n * Module exports.\n */\n\nmodule.exports = text\n\n/**\n * Create a middleware to parse text bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @api public\n */\n\nfunction text (options) {\n  var opts = options || {}\n\n  var defaultCharset = opts.defaultCharset || 'utf-8'\n  var inflate = opts.inflate !== false\n  var limit = typeof opts.limit !== 'number'\n    ? bytes.parse(opts.limit || '100kb')\n    : opts.limit\n  var type = opts.type || 'text/plain'\n  var verify = opts.verify || false\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function')\n  }\n\n  // create the appropriate type checking function\n  var shouldParse = typeof type !== 'function'\n    ? typeChecker(type)\n    : type\n\n  function parse (buf) {\n    return buf\n  }\n\n  return function textParser (req, res, next) {\n    if (req._body) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    req.body = req.body || {}\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j', req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next()\n      return\n    }\n\n    // get charset\n    var charset = getCharset(req) || defaultCharset\n\n    // read\n    read(req, res, next, parse, debug, {\n      encoding: charset,\n      inflate: inflate,\n      limit: limit,\n      verify: verify\n    })\n  }\n}\n\n/**\n * Get the charset of a request.\n *\n * @param {object} req\n * @api private\n */\n\nfunction getCharset (req) {\n  try {\n    return (contentType.parse(req).parameters.charset || '').toLowerCase()\n  } catch (e) {\n    return undefined\n  }\n}\n\n/**\n * Get the simple type checker.\n *\n * @param {string} type\n * @return {function}\n */\n\nfunction typeChecker (type) {\n  return function checkType (req) {\n    return Boolean(typeis(req, type))\n  }\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\body-parser\\lib\\types\\text.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 591,
    "sourcePositions": []
  },
  {
    "url": "D:\\doc\\node.js\\mfg\\node_modules\\body-parser\\lib\\types\\urlencoded.js",
    "source": "/*!\n * body-parser\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar bytes = require('bytes')\nvar contentType = require('content-type')\nvar createError = require('http-errors')\nvar debug = require('debug')('body-parser:urlencoded')\nvar deprecate = require('depd')('body-parser')\nvar read = require('../read')\nvar typeis = require('type-is')\n\n/**\n * Module exports.\n */\n\nmodule.exports = urlencoded\n\n/**\n * Cache of parser modules.\n */\n\nvar parsers = Object.create(null)\n\n/**\n * Create a middleware to parse urlencoded bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @public\n */\n\nfunction urlencoded (options) {\n  var opts = options || {}\n\n  // notice because option default will flip in next major\n  if (opts.extended === undefined) {\n    deprecate('undefined extended: provide extended option')\n  }\n\n  var extended = opts.extended !== false\n  var inflate = opts.inflate !== false\n  var limit = typeof opts.limit !== 'number'\n    ? bytes.parse(opts.limit || '100kb')\n    : opts.limit\n  var type = opts.type || 'application/x-www-form-urlencoded'\n  var verify = opts.verify || false\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function')\n  }\n\n  // create the appropriate query parser\n  var queryparse = extended\n    ? extendedparser(opts)\n    : simpleparser(opts)\n\n  // create the appropriate type checking function\n  var shouldParse = typeof type !== 'function'\n    ? typeChecker(type)\n    : type\n\n  function parse (body) {\n    return body.length\n      ? queryparse(body)\n      : {}\n  }\n\n  return function urlencodedParser (req, res, next) {\n    if (req._body) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    req.body = req.body || {}\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j', req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next()\n      return\n    }\n\n    // assert charset\n    var charset = getCharset(req) || 'utf-8'\n    if (charset !== 'utf-8') {\n      debug('invalid charset')\n      next(createError(415, 'unsupported charset \"' + charset.toUpperCase() + '\"', {\n        charset: charset,\n        type: 'charset.unsupported'\n      }))\n      return\n    }\n\n    // read\n    read(req, res, next, parse, debug, {\n      debug: debug,\n      encoding: charset,\n      inflate: inflate,\n      limit: limit,\n      verify: verify\n    })\n  }\n}\n\n/**\n * Get the extended query parser.\n *\n * @param {object} options\n */\n\nfunction extendedparser (options) {\n  var parameterLimit = options.parameterLimit !== undefined\n    ? options.parameterLimit\n    : 1000\n  var parse = parser('qs')\n\n  if (isNaN(parameterLimit) || parameterLimit < 1) {\n    throw new TypeError('option parameterLimit must be a positive number')\n  }\n\n  if (isFinite(parameterLimit)) {\n    parameterLimit = parameterLimit | 0\n  }\n\n  return function queryparse (body) {\n    var paramCount = parameterCount(body, parameterLimit)\n\n    if (paramCount === undefined) {\n      debug('too many parameters')\n      throw createError(413, 'too many parameters', {\n        type: 'parameters.too.many'\n      })\n    }\n\n    var arrayLimit = Math.max(100, paramCount)\n\n    debug('parse extended urlencoding')\n    return parse(body, {\n      allowPrototypes: true,\n      arrayLimit: arrayLimit,\n      depth: Infinity,\n      parameterLimit: parameterLimit\n    })\n  }\n}\n\n/**\n * Get the charset of a request.\n *\n * @param {object} req\n * @api private\n */\n\nfunction getCharset (req) {\n  try {\n    return (contentType.parse(req).parameters.charset || '').toLowerCase()\n  } catch (e) {\n    return undefined\n  }\n}\n\n/**\n * Count the number of parameters, stopping once limit reached\n *\n * @param {string} body\n * @param {number} limit\n * @api private\n */\n\nfunction parameterCount (body, limit) {\n  var count = 0\n  var index = 0\n\n  while ((index = body.indexOf('&', index)) !== -1) {\n    count++\n    index++\n\n    if (count === limit) {\n      return undefined\n    }\n  }\n\n  return count\n}\n\n/**\n * Get parser for module name dynamically.\n *\n * @param {string} name\n * @return {function}\n * @api private\n */\n\nfunction parser (name) {\n  var mod = parsers[name]\n\n  if (mod !== undefined) {\n    return mod.parse\n  }\n\n  // this uses a switch for static require analysis\n  switch (name) {\n    case 'qs':\n      mod = require('qs')\n      break\n    case 'querystring':\n      mod = require('querystring')\n      break\n  }\n\n  // store to prevent invoking require()\n  parsers[name] = mod\n\n  return mod.parse\n}\n\n/**\n * Get the simple query parser.\n *\n * @param {object} options\n */\n\nfunction simpleparser (options) {\n  var parameterLimit = options.parameterLimit !== undefined\n    ? options.parameterLimit\n    : 1000\n  var parse = parser('querystring')\n\n  if (isNaN(parameterLimit) || parameterLimit < 1) {\n    throw new TypeError('option parameterLimit must be a positive number')\n  }\n\n  if (isFinite(parameterLimit)) {\n    parameterLimit = parameterLimit | 0\n  }\n\n  return function queryparse (body) {\n    var paramCount = parameterCount(body, parameterLimit)\n\n    if (paramCount === undefined) {\n      debug('too many parameters')\n      throw createError(413, 'too many parameters', {\n        type: 'parameters.too.many'\n      })\n    }\n\n    debug('parse urlencoding')\n    return parse(body, undefined, undefined, { maxKeys: parameterLimit })\n  }\n}\n\n/**\n * Get the simple type checker.\n *\n * @param {string} type\n * @return {function}\n */\n\nfunction typeChecker (type) {\n  return function checkType (req) {\n    return Boolean(typeis(req, type))\n  }\n}\n",
    "name": "D:\\doc\\node.js\\mfg\\node_modules\\body-parser\\lib\\types\\urlencoded.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 592,
    "sourcePositions": []
  },
  {
    "url": "node:cluster",
    "source": "// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n'use strict';\r\n\r\nconst childOrPrimary = 'NODE_UNIQUE_ID' in process.env ? 'child' : 'primary';\r\nmodule.exports = require(`internal/cluster/${childOrPrimary}`);\r\n",
    "name": "node:cluster",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 593,
    "sourcePositions": []
  },
  {
    "url": "node:internal/cluster/primary",
    "source": "'use strict';\r\n\r\nconst {\r\n  ArrayPrototypePush,\r\n  ArrayPrototypeSlice,\r\n  ArrayPrototypeSome,\r\n  ObjectKeys,\r\n  ObjectValues,\r\n  SafeMap,\r\n  StringPrototypeStartsWith,\r\n} = primordials;\r\nconst {\r\n  codes: {\r\n    ERR_SOCKET_BAD_PORT,\r\n  }\r\n} = require('internal/errors');\r\n\r\nconst assert = require('internal/assert');\r\nconst { fork } = require('child_process');\r\nconst path = require('path');\r\nconst EventEmitter = require('events');\r\nconst RoundRobinHandle = require('internal/cluster/round_robin_handle');\r\nconst SharedHandle = require('internal/cluster/shared_handle');\r\nconst Worker = require('internal/cluster/worker');\r\nconst { getInspectPort, isUsingInspector } = require('internal/util/inspector');\r\nconst { internal, sendHelper } = require('internal/cluster/utils');\r\nconst cluster = new EventEmitter();\r\nconst intercom = new EventEmitter();\r\nconst SCHED_NONE = 1;\r\nconst SCHED_RR = 2;\r\n\r\nmodule.exports = cluster;\r\n\r\nconst handles = new SafeMap();\r\ncluster.isWorker = false;\r\ncluster.isMaster = true; // Deprecated alias. Must be same as isPrimary.\r\ncluster.isPrimary = true;\r\ncluster.Worker = Worker;\r\ncluster.workers = {};\r\ncluster.settings = {};\r\ncluster.SCHED_NONE = SCHED_NONE;  // Leave it to the operating system.\r\ncluster.SCHED_RR = SCHED_RR;      // Primary distributes connections.\r\n\r\nlet ids = 0;\r\nlet initialized = false;\r\n\r\n// XXX(bnoordhuis) Fold cluster.schedulingPolicy into cluster.settings?\r\nlet schedulingPolicy = process.env.NODE_CLUSTER_SCHED_POLICY;\r\nif (schedulingPolicy === 'rr')\r\n  schedulingPolicy = SCHED_RR;\r\nelse if (schedulingPolicy === 'none')\r\n  schedulingPolicy = SCHED_NONE;\r\nelse if (process.platform === 'win32') {\r\n  // Round-robin doesn't perform well on\r\n  // Windows due to the way IOCP is wired up.\r\n  schedulingPolicy = SCHED_NONE;\r\n} else\r\n  schedulingPolicy = SCHED_RR;\r\n\r\ncluster.schedulingPolicy = schedulingPolicy;\r\n\r\ncluster.setupPrimary = function(options) {\r\n  const settings = {\r\n    args: ArrayPrototypeSlice(process.argv, 2),\r\n    exec: process.argv[1],\r\n    execArgv: process.execArgv,\r\n    silent: false,\r\n    ...cluster.settings,\r\n    ...options\r\n  };\r\n\r\n  // Tell V8 to write profile data for each process to a separate file.\r\n  // Without --logfile=v8-%p.log, everything ends up in a single, unusable\r\n  // file. (Unusable because what V8 logs are memory addresses and each\r\n  // process has its own memory mappings.)\r\n  if (ArrayPrototypeSome(settings.execArgv,\r\n                         (s) => StringPrototypeStartsWith(s, '--prof')) &&\r\n      !ArrayPrototypeSome(settings.execArgv,\r\n                          (s) => StringPrototypeStartsWith(s, '--logfile='))) {\r\n    settings.execArgv = [...settings.execArgv, '--logfile=v8-%p.log'];\r\n  }\r\n\r\n  cluster.settings = settings;\r\n\r\n  if (initialized === true)\r\n    return process.nextTick(setupSettingsNT, settings);\r\n\r\n  initialized = true;\r\n  schedulingPolicy = cluster.schedulingPolicy;  // Freeze policy.\r\n  assert(schedulingPolicy === SCHED_NONE || schedulingPolicy === SCHED_RR,\r\n         `Bad cluster.schedulingPolicy: ${schedulingPolicy}`);\r\n\r\n  process.nextTick(setupSettingsNT, settings);\r\n\r\n  process.on('internalMessage', (message) => {\r\n    if (message.cmd !== 'NODE_DEBUG_ENABLED')\r\n      return;\r\n\r\n    for (const worker of ObjectValues(cluster.workers)) {\r\n      if (worker.state === 'online' || worker.state === 'listening') {\r\n        process._debugProcess(worker.process.pid);\r\n      } else {\r\n        worker.once('online', function() {\r\n          process._debugProcess(this.process.pid);\r\n        });\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\n// Deprecated alias must be same as setupPrimary\r\ncluster.setupMaster = cluster.setupPrimary;\r\n\r\nfunction setupSettingsNT(settings) {\r\n  cluster.emit('setup', settings);\r\n}\r\n\r\nfunction createWorkerProcess(id, env) {\r\n  const workerEnv = { ...process.env, ...env, NODE_UNIQUE_ID: `${id}` };\r\n  const execArgv = [...cluster.settings.execArgv];\r\n\r\n  if (cluster.settings.inspectPort === null) {\r\n    throw new ERR_SOCKET_BAD_PORT('Port', null, true);\r\n  }\r\n  if (isUsingInspector(cluster.settings.execArgv)) {\r\n    ArrayPrototypePush(execArgv, `--inspect-port=${getInspectPort(cluster.settings.inspectPort)}`);\r\n  }\r\n\r\n  return fork(cluster.settings.exec, cluster.settings.args, {\r\n    cwd: cluster.settings.cwd,\r\n    env: workerEnv,\r\n    serialization: cluster.settings.serialization,\r\n    silent: cluster.settings.silent,\r\n    windowsHide: cluster.settings.windowsHide,\r\n    execArgv: execArgv,\r\n    stdio: cluster.settings.stdio,\r\n    gid: cluster.settings.gid,\r\n    uid: cluster.settings.uid\r\n  });\r\n}\r\n\r\nfunction removeWorker(worker) {\r\n  assert(worker);\r\n  delete cluster.workers[worker.id];\r\n\r\n  if (ObjectKeys(cluster.workers).length === 0) {\r\n    assert(handles.size === 0, 'Resource leak detected.');\r\n    intercom.emit('disconnect');\r\n  }\r\n}\r\n\r\nfunction removeHandlesForWorker(worker) {\r\n  assert(worker);\r\n\r\n  handles.forEach((handle, key) => {\r\n    if (handle.remove(worker))\r\n      handles.delete(key);\r\n  });\r\n}\r\n\r\ncluster.fork = function(env) {\r\n  cluster.setupPrimary();\r\n  const id = ++ids;\r\n  const workerProcess = createWorkerProcess(id, env);\r\n  const worker = new Worker({\r\n    id: id,\r\n    process: workerProcess\r\n  });\r\n\r\n  worker.on('message', function(message, handle) {\r\n    cluster.emit('message', this, message, handle);\r\n  });\r\n\r\n  worker.process.once('exit', (exitCode, signalCode) => {\r\n    /*\r\n     * Remove the worker from the workers list only\r\n     * if it has disconnected, otherwise we might\r\n     * still want to access it.\r\n     */\r\n    if (!worker.isConnected()) {\r\n      removeHandlesForWorker(worker);\r\n      removeWorker(worker);\r\n    }\r\n\r\n    worker.exitedAfterDisconnect = !!worker.exitedAfterDisconnect;\r\n    worker.state = 'dead';\r\n    worker.emit('exit', exitCode, signalCode);\r\n    cluster.emit('exit', worker, exitCode, signalCode);\r\n  });\r\n\r\n  worker.process.once('disconnect', () => {\r\n    /*\r\n     * Now is a good time to remove the handles\r\n     * associated with this worker because it is\r\n     * not connected to the primary anymore.\r\n     */\r\n    removeHandlesForWorker(worker);\r\n\r\n    /*\r\n     * Remove the worker from the workers list only\r\n     * if its process has exited. Otherwise, we might\r\n     * still want to access it.\r\n     */\r\n    if (worker.isDead())\r\n      removeWorker(worker);\r\n\r\n    worker.exitedAfterDisconnect = !!worker.exitedAfterDisconnect;\r\n    worker.state = 'disconnected';\r\n    worker.emit('disconnect');\r\n    cluster.emit('disconnect', worker);\r\n  });\r\n\r\n  worker.process.on('internalMessage', internal(worker, onmessage));\r\n  process.nextTick(emitForkNT, worker);\r\n  cluster.workers[worker.id] = worker;\r\n  return worker;\r\n};\r\n\r\nfunction emitForkNT(worker) {\r\n  cluster.emit('fork', worker);\r\n}\r\n\r\ncluster.disconnect = function(cb) {\r\n  const workers = ObjectKeys(cluster.workers);\r\n\r\n  if (workers.length === 0) {\r\n    process.nextTick(() => intercom.emit('disconnect'));\r\n  } else {\r\n    for (const worker of ObjectValues(cluster.workers)) {\r\n      if (worker.isConnected()) {\r\n        worker.disconnect();\r\n      }\r\n    }\r\n  }\r\n\r\n  if (typeof cb === 'function')\r\n    intercom.once('disconnect', cb);\r\n};\r\n\r\nconst methodMessageMapping = {\r\n  close,\r\n  exitedAfterDisconnect,\r\n  listening,\r\n  online,\r\n  queryServer,\r\n};\r\n\r\nfunction onmessage(message, handle) {\r\n  const worker = this;\r\n\r\n  const fn = methodMessageMapping[message.act];\r\n\r\n  if (typeof fn === 'function')\r\n    fn(worker, message);\r\n}\r\n\r\nfunction online(worker) {\r\n  worker.state = 'online';\r\n  worker.emit('online');\r\n  cluster.emit('online', worker);\r\n}\r\n\r\nfunction exitedAfterDisconnect(worker, message) {\r\n  worker.exitedAfterDisconnect = true;\r\n  send(worker, { ack: message.seq });\r\n}\r\n\r\nfunction queryServer(worker, message) {\r\n  // Stop processing if worker already disconnecting\r\n  if (worker.exitedAfterDisconnect)\r\n    return;\r\n\r\n  const key = `${message.address}:${message.port}:${message.addressType}:` +\r\n              `${message.fd}:${message.index}`;\r\n  let handle = handles.get(key);\r\n\r\n  if (handle === undefined) {\r\n    let address = message.address;\r\n\r\n    // Find shortest path for unix sockets because of the ~100 byte limit\r\n    if (message.port < 0 && typeof address === 'string' &&\r\n        process.platform !== 'win32') {\r\n\r\n      address = path.relative(process.cwd(), address);\r\n\r\n      if (message.address.length < address.length)\r\n        address = message.address;\r\n    }\r\n\r\n    // UDP is exempt from round-robin connection balancing for what should\r\n    // be obvious reasons: it's connectionless. There is nothing to send to\r\n    // the workers except raw datagrams and that's pointless.\r\n    if (schedulingPolicy !== SCHED_RR ||\r\n        message.addressType === 'udp4' ||\r\n        message.addressType === 'udp6') {\r\n      handle = new SharedHandle(key, address, message);\r\n    } else {\r\n      handle = new RoundRobinHandle(key, address, message);\r\n    }\r\n\r\n    handles.set(key, handle);\r\n  }\r\n\r\n  if (!handle.data)\r\n    handle.data = message.data;\r\n\r\n  // Set custom server data\r\n  handle.add(worker, (errno, reply, handle) => {\r\n    const { data } = handles.get(key);\r\n\r\n    if (errno)\r\n      handles.delete(key);  // Gives other workers a chance to retry.\r\n\r\n    send(worker, {\r\n      errno,\r\n      key,\r\n      ack: message.seq,\r\n      data,\r\n      ...reply\r\n    }, handle);\r\n  });\r\n}\r\n\r\nfunction listening(worker, message) {\r\n  const info = {\r\n    addressType: message.addressType,\r\n    address: message.address,\r\n    port: message.port,\r\n    fd: message.fd\r\n  };\r\n\r\n  worker.state = 'listening';\r\n  worker.emit('listening', info);\r\n  cluster.emit('listening', worker, info);\r\n}\r\n\r\n// Server in worker is closing, remove from list. The handle may have been\r\n// removed by a prior call to removeHandlesForWorker() so guard against that.\r\nfunction close(worker, message) {\r\n  const key = message.key;\r\n  const handle = handles.get(key);\r\n\r\n  if (handle && handle.remove(worker))\r\n    handles.delete(key);\r\n}\r\n\r\nfunction send(worker, message, handle, cb) {\r\n  return sendHelper(worker.process, message, handle, cb);\r\n}\r\n\r\n// Extend generic Worker with methods specific to the primary process.\r\nWorker.prototype.disconnect = function() {\r\n  this.exitedAfterDisconnect = true;\r\n  send(this, { act: 'disconnect' });\r\n  removeHandlesForWorker(this);\r\n  removeWorker(this);\r\n  return this;\r\n};\r\n\r\nWorker.prototype.destroy = function(signo) {\r\n  const proc = this.process;\r\n  const signal = signo || 'SIGTERM';\r\n\r\n  proc.kill(signal);\r\n};\r\n",
    "name": "primary",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 594,
    "sourcePositions": []
  },
  {
    "url": "node:child_process",
    "source": "// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n'use strict';\r\n\r\nconst {\r\n  ArrayIsArray,\r\n  ArrayPrototypeFilter,\r\n  ArrayPrototypeIncludes,\r\n  ArrayPrototypeJoin,\r\n  ArrayPrototypeLastIndexOf,\r\n  ArrayPrototypePush,\r\n  ArrayPrototypeSlice,\r\n  ArrayPrototypeSort,\r\n  ArrayPrototypeSplice,\r\n  ArrayPrototypeUnshift,\r\n  ArrayPrototypePushApply,\r\n  NumberIsInteger,\r\n  ObjectAssign,\r\n  ObjectDefineProperty,\r\n  ObjectPrototypeHasOwnProperty,\r\n  RegExpPrototypeExec,\r\n  SafeSet,\r\n  StringPrototypeIncludes,\r\n  StringPrototypeSlice,\r\n  StringPrototypeToUpperCase,\r\n} = primordials;\r\n\r\nconst {\r\n  convertToValidSignal,\r\n  createDeferredPromise,\r\n  getSystemErrorName,\r\n  kEmptyObject,\r\n  promisify,\r\n} = require('internal/util');\r\nconst { isArrayBufferView } = require('internal/util/types');\r\nlet debug = require('internal/util/debuglog').debuglog(\r\n  'child_process',\r\n  (fn) => {\r\n    debug = fn;\r\n  }\r\n);\r\nconst { Buffer } = require('buffer');\r\nconst { Pipe, constants: PipeConstants } = internalBinding('pipe_wrap');\r\n\r\nconst {\r\n  AbortError,\r\n  codes: errorCodes,\r\n  genericNodeError,\r\n} = require('internal/errors');\r\nconst {\r\n  ERR_INVALID_ARG_VALUE,\r\n  ERR_CHILD_PROCESS_IPC_REQUIRED,\r\n  ERR_CHILD_PROCESS_STDIO_MAXBUFFER,\r\n  ERR_INVALID_ARG_TYPE,\r\n  ERR_OUT_OF_RANGE,\r\n} = errorCodes;\r\nconst { clearTimeout, setTimeout } = require('timers');\r\nconst { getValidatedPath } = require('internal/fs/utils');\r\nconst {\r\n  isInt32,\r\n  validateAbortSignal,\r\n  validateArray,\r\n  validateBoolean,\r\n  validateFunction,\r\n  validateObject,\r\n  validateString,\r\n} = require('internal/validators');\r\nconst child_process = require('internal/child_process');\r\nconst {\r\n  getValidStdio,\r\n  setupChannel,\r\n  ChildProcess,\r\n  stdioStringToArray\r\n} = child_process;\r\n\r\nconst MAX_BUFFER = 1024 * 1024;\r\n\r\nconst isZOS = process.platform === 'os390';\r\n\r\n/**\r\n * Spawns a new Node.js process + fork.\r\n * @param {string|URL} modulePath\r\n * @param {string[]} [args]\r\n * @param {{\r\n *   cwd?: string;\r\n *   detached?: boolean;\r\n *   env?: Record<string, string>;\r\n *   execPath?: string;\r\n *   execArgv?: string[];\r\n *   gid?: number;\r\n *   serialization?: string;\r\n *   signal?: AbortSignal;\r\n *   killSignal?: string | number;\r\n *   silent?: boolean;\r\n *   stdio?: Array | string;\r\n *   uid?: number;\r\n *   windowsVerbatimArguments?: boolean;\r\n *   timeout?: number;\r\n *   }} [options]\r\n * @returns {ChildProcess}\r\n */\r\nfunction fork(modulePath, args = [], options) {\r\n  modulePath = getValidatedPath(modulePath, 'modulePath');\r\n\r\n  // Get options and args arguments.\r\n  let execArgv;\r\n\r\n  if (args == null) {\r\n    args = [];\r\n  } else if (typeof args === 'object' && !ArrayIsArray(args)) {\r\n    options = args;\r\n    args = [];\r\n  } else {\r\n    validateArray(args, 'args');\r\n  }\r\n\r\n  if (options != null) {\r\n    validateObject(options, 'options');\r\n  }\r\n  options = { ...options, shell: false };\r\n  options.execPath = options.execPath || process.execPath;\r\n  validateArgumentNullCheck(options.execPath, 'options.execPath');\r\n\r\n  // Prepare arguments for fork:\r\n  execArgv = options.execArgv || process.execArgv;\r\n  validateArgumentsNullCheck(execArgv, 'options.execArgv');\r\n\r\n  if (execArgv === process.execArgv && process._eval != null) {\r\n    const index = ArrayPrototypeLastIndexOf(execArgv, process._eval);\r\n    if (index > 0) {\r\n      // Remove the -e switch to avoid fork bombing ourselves.\r\n      execArgv = ArrayPrototypeSlice(execArgv);\r\n      ArrayPrototypeSplice(execArgv, index - 1, 2);\r\n    }\r\n  }\r\n\r\n  args = [...execArgv, modulePath, ...args];\r\n\r\n  if (typeof options.stdio === 'string') {\r\n    options.stdio = stdioStringToArray(options.stdio, 'ipc');\r\n  } else if (!ArrayIsArray(options.stdio)) {\r\n    // Use a separate fd=3 for the IPC channel. Inherit stdin, stdout,\r\n    // and stderr from the parent if silent isn't set.\r\n    options.stdio = stdioStringToArray(\r\n      options.silent ? 'pipe' : 'inherit',\r\n      'ipc');\r\n  } else if (!ArrayPrototypeIncludes(options.stdio, 'ipc')) {\r\n    throw new ERR_CHILD_PROCESS_IPC_REQUIRED('options.stdio');\r\n  }\r\n\r\n  return spawn(options.execPath, args, options);\r\n}\r\n\r\nfunction _forkChild(fd, serializationMode) {\r\n  // set process.send()\r\n  const p = new Pipe(PipeConstants.IPC);\r\n  p.open(fd);\r\n  p.unref();\r\n  const control = setupChannel(process, p, serializationMode);\r\n  process.on('newListener', function onNewListener(name) {\r\n    if (name === 'message' || name === 'disconnect') control.refCounted();\r\n  });\r\n  process.on('removeListener', function onRemoveListener(name) {\r\n    if (name === 'message' || name === 'disconnect') control.unrefCounted();\r\n  });\r\n}\r\n\r\nfunction normalizeExecArgs(command, options, callback) {\r\n  validateString(command, 'command');\r\n  validateArgumentNullCheck(command, 'command');\r\n\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = undefined;\r\n  }\r\n\r\n  // Make a shallow copy so we don't clobber the user's options object.\r\n  options = { ...options };\r\n  options.shell = typeof options.shell === 'string' ? options.shell : true;\r\n\r\n  return {\r\n    file: command,\r\n    options: options,\r\n    callback: callback\r\n  };\r\n}\r\n\r\n/**\r\n * Spawns a shell executing the given command.\r\n * @param {string} command\r\n * @param {{\r\n *   cmd?: string;\r\n *   env?: Record<string, string>;\r\n *   encoding?: string;\r\n *   shell?: string;\r\n *   signal?: AbortSignal;\r\n *   timeout?: number;\r\n *   maxBuffer?: number;\r\n *   killSignal?: string | number;\r\n *   uid?: number;\r\n *   gid?: number;\r\n *   windowsHide?: boolean;\r\n *   }} [options]\r\n * @param {(\r\n *   error?: Error,\r\n *   stdout?: string | Buffer,\r\n *   stderr?: string | Buffer\r\n *   ) => any} [callback]\r\n * @returns {ChildProcess}\r\n */\r\nfunction exec(command, options, callback) {\r\n  const opts = normalizeExecArgs(command, options, callback);\r\n  return module.exports.execFile(opts.file,\r\n                                 opts.options,\r\n                                 opts.callback);\r\n}\r\n\r\nconst customPromiseExecFunction = (orig) => {\r\n  return (...args) => {\r\n    const { promise, resolve, reject } = createDeferredPromise();\r\n\r\n    promise.child = orig(...args, (err, stdout, stderr) => {\r\n      if (err !== null) {\r\n        err.stdout = stdout;\r\n        err.stderr = stderr;\r\n        reject(err);\r\n      } else {\r\n        resolve({ stdout, stderr });\r\n      }\r\n    });\r\n\r\n    return promise;\r\n  };\r\n};\r\n\r\nObjectDefineProperty(exec, promisify.custom, {\r\n  __proto__: null,\r\n  enumerable: false,\r\n  value: customPromiseExecFunction(exec)\r\n});\r\n\r\nfunction normalizeExecFileArgs(file, args, options, callback) {\r\n  if (ArrayIsArray(args)) {\r\n    args = ArrayPrototypeSlice(args);\r\n  } else if (args != null && typeof args === 'object') {\r\n    callback = options;\r\n    options = args;\r\n    args = null;\r\n  } else if (typeof args === 'function') {\r\n    callback = args;\r\n    options = null;\r\n    args = null;\r\n  }\r\n\r\n  if (args == null) {\r\n    args = [];\r\n  }\r\n\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n  } else if (options != null) {\r\n    validateObject(options, 'options');\r\n  }\r\n\r\n  if (options == null) {\r\n    options = kEmptyObject;\r\n  }\r\n\r\n  if (callback != null) {\r\n    validateFunction(callback, 'callback');\r\n  }\r\n\r\n  // Validate argv0, if present.\r\n  if (options.argv0 != null) {\r\n    validateString(options.argv0, 'options.argv0');\r\n    validateArgumentNullCheck(options.argv0, 'options.argv0');\r\n  }\r\n\r\n  return { file, args, options, callback };\r\n}\r\n\r\n/**\r\n * Spawns the specified file as a shell.\r\n * @param {string} file\r\n * @param {string[]} [args]\r\n * @param {{\r\n *   cwd?: string;\r\n *   env?: Record<string, string>;\r\n *   encoding?: string;\r\n *   timeout?: number;\r\n *   maxBuffer?: number;\r\n *   killSignal?: string | number;\r\n *   uid?: number;\r\n *   gid?: number;\r\n *   windowsHide?: boolean;\r\n *   windowsVerbatimArguments?: boolean;\r\n *   shell?: boolean | string;\r\n *   signal?: AbortSignal;\r\n *   }} [options]\r\n * @param {(\r\n *   error?: Error,\r\n *   stdout?: string | Buffer,\r\n *   stderr?: string | Buffer\r\n *   ) => any} [callback]\r\n * @returns {ChildProcess}\r\n */\r\nfunction execFile(file, args, options, callback) {\r\n  ({ file, args, options, callback } = normalizeExecFileArgs(file, args, options, callback));\r\n\r\n  options = {\r\n    encoding: 'utf8',\r\n    timeout: 0,\r\n    maxBuffer: MAX_BUFFER,\r\n    killSignal: 'SIGTERM',\r\n    cwd: null,\r\n    env: null,\r\n    shell: false,\r\n    ...options\r\n  };\r\n\r\n  // Validate the timeout, if present.\r\n  validateTimeout(options.timeout);\r\n\r\n  // Validate maxBuffer, if present.\r\n  validateMaxBuffer(options.maxBuffer);\r\n\r\n  options.killSignal = sanitizeKillSignal(options.killSignal);\r\n\r\n  const child = spawn(file, args, {\r\n    cwd: options.cwd,\r\n    env: options.env,\r\n    gid: options.gid,\r\n    shell: options.shell,\r\n    signal: options.signal,\r\n    uid: options.uid,\r\n    windowsHide: !!options.windowsHide,\r\n    windowsVerbatimArguments: !!options.windowsVerbatimArguments\r\n  });\r\n\r\n  let encoding;\r\n  const _stdout = [];\r\n  const _stderr = [];\r\n  if (options.encoding !== 'buffer' && Buffer.isEncoding(options.encoding)) {\r\n    encoding = options.encoding;\r\n  } else {\r\n    encoding = null;\r\n  }\r\n  let stdoutLen = 0;\r\n  let stderrLen = 0;\r\n  let killed = false;\r\n  let exited = false;\r\n  let timeoutId;\r\n\r\n  let ex = null;\r\n\r\n  let cmd = file;\r\n\r\n  function exithandler(code, signal) {\r\n    if (exited) return;\r\n    exited = true;\r\n\r\n    if (timeoutId) {\r\n      clearTimeout(timeoutId);\r\n      timeoutId = null;\r\n    }\r\n\r\n    if (!callback) return;\r\n\r\n    // merge chunks\r\n    let stdout;\r\n    let stderr;\r\n    if (encoding ||\r\n      (\r\n        child.stdout &&\r\n        child.stdout.readableEncoding\r\n      )) {\r\n      stdout = ArrayPrototypeJoin(_stdout, '');\r\n    } else {\r\n      stdout = Buffer.concat(_stdout);\r\n    }\r\n    if (encoding ||\r\n      (\r\n        child.stderr &&\r\n        child.stderr.readableEncoding\r\n      )) {\r\n      stderr = ArrayPrototypeJoin(_stderr, '');\r\n    } else {\r\n      stderr = Buffer.concat(_stderr);\r\n    }\r\n\r\n    if (!ex && code === 0 && signal === null) {\r\n      callback(null, stdout, stderr);\r\n      return;\r\n    }\r\n\r\n    if (args?.length)\r\n      cmd += ` ${ArrayPrototypeJoin(args, ' ')}`;\r\n\r\n    if (!ex) {\r\n      ex = genericNodeError(`Command failed: ${cmd}\\n${stderr}`, {\r\n        code: code < 0 ? getSystemErrorName(code) : code,\r\n        killed: child.killed || killed,\r\n        signal: signal\r\n      });\r\n    }\r\n\r\n    ex.cmd = cmd;\r\n    callback(ex, stdout, stderr);\r\n  }\r\n\r\n  function errorhandler(e) {\r\n    ex = e;\r\n\r\n    if (child.stdout)\r\n      child.stdout.destroy();\r\n\r\n    if (child.stderr)\r\n      child.stderr.destroy();\r\n\r\n    exithandler();\r\n  }\r\n\r\n  function kill() {\r\n    if (child.stdout)\r\n      child.stdout.destroy();\r\n\r\n    if (child.stderr)\r\n      child.stderr.destroy();\r\n\r\n    killed = true;\r\n    try {\r\n      child.kill(options.killSignal);\r\n    } catch (e) {\r\n      ex = e;\r\n      exithandler();\r\n    }\r\n  }\r\n\r\n  if (options.timeout > 0) {\r\n    timeoutId = setTimeout(function delayedKill() {\r\n      kill();\r\n      timeoutId = null;\r\n    }, options.timeout);\r\n  }\r\n\r\n  if (child.stdout) {\r\n    if (encoding)\r\n      child.stdout.setEncoding(encoding);\r\n\r\n    child.stdout.on('data', function onChildStdout(chunk) {\r\n      // Do not need to count the length\r\n      if (options.maxBuffer === Infinity) {\r\n        ArrayPrototypePush(_stdout, chunk);\r\n        return;\r\n      }\r\n      const encoding = child.stdout.readableEncoding;\r\n      const length = encoding ?\r\n        Buffer.byteLength(chunk, encoding) :\r\n        chunk.length;\r\n      const slice = encoding ? StringPrototypeSlice :\r\n        (buf, ...args) => buf.slice(...args);\r\n      stdoutLen += length;\r\n\r\n      if (stdoutLen > options.maxBuffer) {\r\n        const truncatedLen = options.maxBuffer - (stdoutLen - length);\r\n        ArrayPrototypePush(_stdout, slice(chunk, 0, truncatedLen));\r\n\r\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stdout');\r\n        kill();\r\n      } else {\r\n        ArrayPrototypePush(_stdout, chunk);\r\n      }\r\n    });\r\n  }\r\n\r\n  if (child.stderr) {\r\n    if (encoding)\r\n      child.stderr.setEncoding(encoding);\r\n\r\n    child.stderr.on('data', function onChildStderr(chunk) {\r\n      // Do not need to count the length\r\n      if (options.maxBuffer === Infinity) {\r\n        ArrayPrototypePush(_stderr, chunk);\r\n        return;\r\n      }\r\n      const encoding = child.stderr.readableEncoding;\r\n      const length = encoding ?\r\n        Buffer.byteLength(chunk, encoding) :\r\n        chunk.length;\r\n      stderrLen += length;\r\n\r\n      if (stderrLen > options.maxBuffer) {\r\n        const truncatedLen = options.maxBuffer - (stderrLen - length);\r\n        ArrayPrototypePush(_stderr,\r\n                           chunk.slice(0, truncatedLen));\r\n\r\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stderr');\r\n        kill();\r\n      } else {\r\n        ArrayPrototypePush(_stderr, chunk);\r\n      }\r\n    });\r\n  }\r\n\r\n  child.addListener('close', exithandler);\r\n  child.addListener('error', errorhandler);\r\n\r\n  return child;\r\n}\r\n\r\nObjectDefineProperty(execFile, promisify.custom, {\r\n  __proto__: null,\r\n  enumerable: false,\r\n  value: customPromiseExecFunction(execFile)\r\n});\r\n\r\nfunction copyProcessEnvToEnv(env, name, optionEnv) {\r\n  if (process.env[name] &&\r\n      (!optionEnv ||\r\n       !ObjectPrototypeHasOwnProperty(optionEnv, name))) {\r\n    env[name] = process.env[name];\r\n  }\r\n}\r\n\r\nfunction normalizeSpawnArguments(file, args, options) {\r\n  validateString(file, 'file');\r\n  validateArgumentNullCheck(file, 'file');\r\n\r\n  if (file.length === 0)\r\n    throw new ERR_INVALID_ARG_VALUE('file', file, 'cannot be empty');\r\n\r\n  if (ArrayIsArray(args)) {\r\n    args = ArrayPrototypeSlice(args);\r\n  } else if (args == null) {\r\n    args = [];\r\n  } else if (typeof args !== 'object') {\r\n    throw new ERR_INVALID_ARG_TYPE('args', 'object', args);\r\n  } else {\r\n    options = args;\r\n    args = [];\r\n  }\r\n\r\n  validateArgumentsNullCheck(args, 'args');\r\n\r\n  if (options === undefined)\r\n    options = kEmptyObject;\r\n  else\r\n    validateObject(options, 'options');\r\n\r\n  let cwd = options.cwd;\r\n\r\n  // Validate the cwd, if present.\r\n  if (cwd != null) {\r\n    cwd = getValidatedPath(cwd, 'options.cwd');\r\n  }\r\n\r\n  // Validate detached, if present.\r\n  if (options.detached != null) {\r\n    validateBoolean(options.detached, 'options.detached');\r\n  }\r\n\r\n  // Validate the uid, if present.\r\n  if (options.uid != null && !isInt32(options.uid)) {\r\n    throw new ERR_INVALID_ARG_TYPE('options.uid', 'int32', options.uid);\r\n  }\r\n\r\n  // Validate the gid, if present.\r\n  if (options.gid != null && !isInt32(options.gid)) {\r\n    throw new ERR_INVALID_ARG_TYPE('options.gid', 'int32', options.gid);\r\n  }\r\n\r\n  // Validate the shell, if present.\r\n  if (options.shell != null &&\r\n      typeof options.shell !== 'boolean' &&\r\n      typeof options.shell !== 'string') {\r\n    throw new ERR_INVALID_ARG_TYPE('options.shell',\r\n                                   ['boolean', 'string'], options.shell);\r\n  }\r\n\r\n  // Validate argv0, if present.\r\n  if (options.argv0 != null) {\r\n    validateString(options.argv0, 'options.argv0');\r\n    validateArgumentNullCheck(options.argv0, 'options.argv0');\r\n  }\r\n\r\n  // Validate windowsHide, if present.\r\n  if (options.windowsHide != null) {\r\n    validateBoolean(options.windowsHide, 'options.windowsHide');\r\n  }\r\n\r\n  // Validate windowsVerbatimArguments, if present.\r\n  let { windowsVerbatimArguments } = options;\r\n  if (windowsVerbatimArguments != null) {\r\n    validateBoolean(windowsVerbatimArguments,\r\n                    'options.windowsVerbatimArguments');\r\n  }\r\n\r\n  if (options.shell) {\r\n    validateArgumentNullCheck(options.shell, 'options.shell');\r\n    const command = ArrayPrototypeJoin([file, ...args], ' ');\r\n    // Set the shell, switches, and commands.\r\n    if (process.platform === 'win32') {\r\n      if (typeof options.shell === 'string')\r\n        file = options.shell;\r\n      else\r\n        file = process.env.comspec || 'cmd.exe';\r\n      // '/d /s /c' is used only for cmd.exe.\r\n      if (RegExpPrototypeExec(/^(?:.*\\\\)?cmd(?:\\.exe)?$/i, file) !== null) {\r\n        args = ['/d', '/s', '/c', `\"${command}\"`];\r\n        windowsVerbatimArguments = true;\r\n      } else {\r\n        args = ['-c', command];\r\n      }\r\n    } else {\r\n      if (typeof options.shell === 'string')\r\n        file = options.shell;\r\n      else if (process.platform === 'android')\r\n        file = '/system/bin/sh';\r\n      else\r\n        file = '/bin/sh';\r\n      args = ['-c', command];\r\n    }\r\n  }\r\n\r\n  if (typeof options.argv0 === 'string') {\r\n    ArrayPrototypeUnshift(args, options.argv0);\r\n  } else {\r\n    ArrayPrototypeUnshift(args, file);\r\n  }\r\n\r\n  const env = options.env || process.env;\r\n  const envPairs = [];\r\n\r\n  // process.env.NODE_V8_COVERAGE always propagates, making it possible to\r\n  // collect coverage for programs that spawn with white-listed environment.\r\n  copyProcessEnvToEnv(env, 'NODE_V8_COVERAGE', options.env);\r\n\r\n  if (isZOS) {\r\n    // The following environment variables must always propagate if set.\r\n    copyProcessEnvToEnv(env, '_BPXK_AUTOCVT', options.env);\r\n    copyProcessEnvToEnv(env, '_CEE_RUNOPTS', options.env);\r\n    copyProcessEnvToEnv(env, '_TAG_REDIR_ERR', options.env);\r\n    copyProcessEnvToEnv(env, '_TAG_REDIR_IN', options.env);\r\n    copyProcessEnvToEnv(env, '_TAG_REDIR_OUT', options.env);\r\n    copyProcessEnvToEnv(env, 'STEPLIB', options.env);\r\n    copyProcessEnvToEnv(env, 'LIBPATH', options.env);\r\n    copyProcessEnvToEnv(env, '_EDC_SIG_DFLT', options.env);\r\n    copyProcessEnvToEnv(env, '_EDC_SUSV3', options.env);\r\n  }\r\n\r\n  let envKeys = [];\r\n  // Prototype values are intentionally included.\r\n  for (const key in env) {\r\n    ArrayPrototypePush(envKeys, key);\r\n  }\r\n\r\n  if (process.platform === 'win32') {\r\n    // On Windows env keys are case insensitive. Filter out duplicates,\r\n    // keeping only the first one (in lexicographic order)\r\n    const sawKey = new SafeSet();\r\n    envKeys = ArrayPrototypeFilter(\r\n      ArrayPrototypeSort(envKeys),\r\n      (key) => {\r\n        const uppercaseKey = StringPrototypeToUpperCase(key);\r\n        if (sawKey.has(uppercaseKey)) {\r\n          return false;\r\n        }\r\n        sawKey.add(uppercaseKey);\r\n        return true;\r\n      }\r\n    );\r\n  }\r\n\r\n  for (const key of envKeys) {\r\n    const value = env[key];\r\n    if (value !== undefined) {\r\n      validateArgumentNullCheck(key, `options.env['${key}']`);\r\n      validateArgumentNullCheck(value, `options.env['${key}']`);\r\n      ArrayPrototypePush(envPairs, `${key}=${value}`);\r\n    }\r\n  }\r\n\r\n  return {\r\n    // Make a shallow copy so we don't clobber the user's options object.\r\n    ...options,\r\n    args,\r\n    cwd,\r\n    detached: !!options.detached,\r\n    envPairs,\r\n    file,\r\n    windowsHide: !!options.windowsHide,\r\n    windowsVerbatimArguments: !!windowsVerbatimArguments,\r\n  };\r\n}\r\n\r\nfunction abortChildProcess(child, killSignal) {\r\n  if (!child)\r\n    return;\r\n  try {\r\n    if (child.kill(killSignal)) {\r\n      child.emit('error', new AbortError());\r\n    }\r\n  } catch (err) {\r\n    child.emit('error', err);\r\n  }\r\n}\r\n\r\n/**\r\n * Spawns a new process using the given `file`.\r\n * @param {string} file\r\n * @param {string[]} [args]\r\n * @param {{\r\n *   cwd?: string;\r\n *   env?: Record<string, string>;\r\n *   argv0?: string;\r\n *   stdio?: Array | string;\r\n *   detached?: boolean;\r\n *   uid?: number;\r\n *   gid?: number;\r\n *   serialization?: string;\r\n *   shell?: boolean | string;\r\n *   windowsVerbatimArguments?: boolean;\r\n *   windowsHide?: boolean;\r\n *   signal?: AbortSignal;\r\n *   timeout?: number;\r\n *   killSignal?: string | number;\r\n *   }} [options]\r\n * @returns {ChildProcess}\r\n */\r\nfunction spawn(file, args, options) {\r\n  options = normalizeSpawnArguments(file, args, options);\r\n  validateTimeout(options.timeout);\r\n  validateAbortSignal(options.signal, 'options.signal');\r\n  const killSignal = sanitizeKillSignal(options.killSignal);\r\n  const child = new ChildProcess();\r\n\r\n  debug('spawn', options);\r\n  child.spawn(options);\r\n\r\n  if (options.timeout > 0) {\r\n    let timeoutId = setTimeout(() => {\r\n      if (timeoutId) {\r\n        try {\r\n          child.kill(killSignal);\r\n        } catch (err) {\r\n          child.emit('error', err);\r\n        }\r\n        timeoutId = null;\r\n      }\r\n    }, options.timeout);\r\n\r\n    child.once('exit', () => {\r\n      if (timeoutId) {\r\n        clearTimeout(timeoutId);\r\n        timeoutId = null;\r\n      }\r\n    });\r\n  }\r\n\r\n  if (options.signal) {\r\n    const signal = options.signal;\r\n    if (signal.aborted) {\r\n      process.nextTick(onAbortListener);\r\n    } else {\r\n      signal.addEventListener('abort', onAbortListener, { once: true });\r\n      child.once('exit',\r\n                 () => signal.removeEventListener('abort', onAbortListener));\r\n    }\r\n\r\n    function onAbortListener() {\r\n      abortChildProcess(child, killSignal);\r\n    }\r\n  }\r\n\r\n  return child;\r\n}\r\n\r\n/**\r\n * Spawns a new process synchronously using the given `file`.\r\n * @param {string} file\r\n * @param {string[]} [args]\r\n * @param {{\r\n *   cwd?: string;\r\n *   input?: string | Buffer | TypedArray | DataView;\r\n *   argv0?: string;\r\n *   stdio?: string | Array;\r\n *   env?: Record<string, string>;\r\n *   uid?: number;\r\n *   gid?: number;\r\n *   timeout?: number;\r\n *   killSignal?: string | number;\r\n *   maxBuffer?: number;\r\n *   encoding?: string;\r\n *   shell?: boolean | string;\r\n *   windowsVerbatimArguments?: boolean;\r\n *   windowsHide?: boolean;\r\n *   }} [options]\r\n * @returns {{\r\n *   pid: number;\r\n *   output: Array;\r\n *   stdout: Buffer | string;\r\n *   stderr: Buffer | string;\r\n *   status: number | null;\r\n *   signal: string | null;\r\n *   error: Error;\r\n *   }}\r\n */\r\nfunction spawnSync(file, args, options) {\r\n  options = {\r\n    maxBuffer: MAX_BUFFER,\r\n    ...normalizeSpawnArguments(file, args, options)\r\n  };\r\n\r\n  debug('spawnSync', options);\r\n\r\n  // Validate the timeout, if present.\r\n  validateTimeout(options.timeout);\r\n\r\n  // Validate maxBuffer, if present.\r\n  validateMaxBuffer(options.maxBuffer);\r\n\r\n  // Validate and translate the kill signal, if present.\r\n  options.killSignal = sanitizeKillSignal(options.killSignal);\r\n\r\n  options.stdio = getValidStdio(options.stdio || 'pipe', true).stdio;\r\n\r\n  if (options.input) {\r\n    const stdin = options.stdio[0] = { ...options.stdio[0] };\r\n    stdin.input = options.input;\r\n  }\r\n\r\n  // We may want to pass data in on any given fd, ensure it is a valid buffer\r\n  for (let i = 0; i < options.stdio.length; i++) {\r\n    const input = options.stdio[i] && options.stdio[i].input;\r\n    if (input != null) {\r\n      const pipe = options.stdio[i] = { ...options.stdio[i] };\r\n      if (isArrayBufferView(input)) {\r\n        pipe.input = input;\r\n      } else if (typeof input === 'string') {\r\n        pipe.input = Buffer.from(input, options.encoding);\r\n      } else {\r\n        throw new ERR_INVALID_ARG_TYPE(`options.stdio[${i}]`,\r\n                                       ['Buffer',\r\n                                        'TypedArray',\r\n                                        'DataView',\r\n                                        'string'],\r\n                                       input);\r\n      }\r\n    }\r\n  }\r\n\r\n  return child_process.spawnSync(options);\r\n}\r\n\r\n\r\nfunction checkExecSyncError(ret, args, cmd) {\r\n  let err;\r\n  if (ret.error) {\r\n    err = ret.error;\r\n    ObjectAssign(err, ret);\r\n  } else if (ret.status !== 0) {\r\n    let msg = 'Command failed: ';\r\n    msg += cmd || ArrayPrototypeJoin(args, ' ');\r\n    if (ret.stderr && ret.stderr.length > 0)\r\n      msg += `\\n${ret.stderr.toString()}`;\r\n    err = genericNodeError(msg, ret);\r\n  }\r\n  return err;\r\n}\r\n\r\n/**\r\n * Spawns a file as a shell synchronously.\r\n * @param {string} file\r\n * @param {string[]} [args]\r\n * @param {{\r\n *   cwd?: string;\r\n *   input?: string | Buffer | TypedArray | DataView;\r\n *   stdio?: string | Array;\r\n *   env?: Record<string, string>;\r\n *   uid?: number;\r\n *   gid?: number;\r\n *   timeout?: number;\r\n *   killSignal?: string | number;\r\n *   maxBuffer?: number;\r\n *   encoding?: string;\r\n *   windowsHide?: boolean;\r\n *   shell?: boolean | string;\r\n *   }} [options]\r\n * @returns {Buffer | string}\r\n */\r\nfunction execFileSync(file, args, options) {\r\n  ({ file, args, options } = normalizeExecFileArgs(file, args, options));\r\n\r\n  const inheritStderr = !options.stdio;\r\n  const ret = spawnSync(file, args, options);\r\n\r\n  if (inheritStderr && ret.stderr)\r\n    process.stderr.write(ret.stderr);\r\n\r\n  const errArgs = [options.argv0 || file];\r\n  ArrayPrototypePushApply(errArgs, args);\r\n  const err = checkExecSyncError(ret, errArgs);\r\n\r\n  if (err)\r\n    throw err;\r\n\r\n  return ret.stdout;\r\n}\r\n\r\n/**\r\n * Spawns a shell executing the given `command` synchronously.\r\n * @param {string} command\r\n * @param {{\r\n *   cwd?: string;\r\n *   input?: string | Buffer | TypedArray | DataView;\r\n *   stdio?: string | Array;\r\n *   env?: Record<string, string>;\r\n *   shell?: string;\r\n *   uid?: number;\r\n *   gid?: number;\r\n *   timeout?: number;\r\n *   killSignal?: string | number;\r\n *   maxBuffer?: number;\r\n *   encoding?: string;\r\n *   windowsHide?: boolean;\r\n *   }} [options]\r\n * @returns {Buffer | string}\r\n */\r\nfunction execSync(command, options) {\r\n  const opts = normalizeExecArgs(command, options, null);\r\n  const inheritStderr = !opts.options.stdio;\r\n\r\n  const ret = spawnSync(opts.file, opts.options);\r\n\r\n  if (inheritStderr && ret.stderr)\r\n    process.stderr.write(ret.stderr);\r\n\r\n  const err = checkExecSyncError(ret, undefined, command);\r\n\r\n  if (err)\r\n    throw err;\r\n\r\n  return ret.stdout;\r\n}\r\n\r\n\r\nfunction validateArgumentNullCheck(arg, propName) {\r\n  if (typeof arg === 'string' && StringPrototypeIncludes(arg, '\\u0000')) {\r\n    throw new ERR_INVALID_ARG_VALUE(propName, arg, 'must be a string without null bytes');\r\n  }\r\n}\r\n\r\n\r\nfunction validateArgumentsNullCheck(args, propName) {\r\n  for (let i = 0; i < args.length; ++i) {\r\n    validateArgumentNullCheck(args[i], `${propName}[${i}]`);\r\n  }\r\n}\r\n\r\n\r\nfunction validateTimeout(timeout) {\r\n  if (timeout != null && !(NumberIsInteger(timeout) && timeout >= 0)) {\r\n    throw new ERR_OUT_OF_RANGE('timeout', 'an unsigned integer', timeout);\r\n  }\r\n}\r\n\r\n\r\nfunction validateMaxBuffer(maxBuffer) {\r\n  if (maxBuffer != null && !(typeof maxBuffer === 'number' && maxBuffer >= 0)) {\r\n    throw new ERR_OUT_OF_RANGE('options.maxBuffer',\r\n                               'a positive number',\r\n                               maxBuffer);\r\n  }\r\n}\r\n\r\n\r\nfunction sanitizeKillSignal(killSignal) {\r\n  if (typeof killSignal === 'string' || typeof killSignal === 'number') {\r\n    return convertToValidSignal(killSignal);\r\n  } else if (killSignal != null) {\r\n    throw new ERR_INVALID_ARG_TYPE('options.killSignal',\r\n                                   ['string', 'number'],\r\n                                   killSignal);\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  _forkChild,\r\n  ChildProcess,\r\n  exec,\r\n  execFile,\r\n  execFileSync,\r\n  execSync,\r\n  fork,\r\n  spawn,\r\n  spawnSync\r\n};\r\n",
    "name": "node:child_process",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 595,
    "sourcePositions": []
  },
  {
    "url": "node:internal/child_process",
    "source": "'use strict';\r\n\r\nconst {\r\n  ArrayIsArray,\r\n  ArrayPrototypePush,\r\n  ArrayPrototypeReduce,\r\n  ArrayPrototypeSlice,\r\n  FunctionPrototype,\r\n  FunctionPrototypeCall,\r\n  ObjectDefineProperty,\r\n  ObjectSetPrototypeOf,\r\n  ReflectApply,\r\n  StringPrototypeSlice,\r\n  Symbol,\r\n  Uint8Array,\r\n} = primordials;\r\n\r\nconst {\r\n  errnoException,\r\n  codes: {\r\n    ERR_INVALID_ARG_TYPE,\r\n    ERR_INVALID_ARG_VALUE,\r\n    ERR_INVALID_HANDLE_TYPE,\r\n    ERR_INVALID_SYNC_FORK_INPUT,\r\n    ERR_IPC_CHANNEL_CLOSED,\r\n    ERR_IPC_DISCONNECTED,\r\n    ERR_IPC_ONE_PIPE,\r\n    ERR_IPC_SYNC_FORK,\r\n    ERR_MISSING_ARGS\r\n  }\r\n} = require('internal/errors');\r\nconst {\r\n  validateArray,\r\n  validateObject,\r\n  validateOneOf,\r\n  validateString,\r\n} = require('internal/validators');\r\nconst EventEmitter = require('events');\r\nconst net = require('net');\r\nconst dgram = require('dgram');\r\nconst inspect = require('internal/util/inspect').inspect;\r\nconst assert = require('internal/assert');\r\n\r\nconst { Process } = internalBinding('process_wrap');\r\nconst {\r\n  WriteWrap,\r\n  kReadBytesOrError,\r\n  kArrayBufferOffset,\r\n  kLastWriteWasAsync,\r\n  streamBaseState\r\n} = internalBinding('stream_wrap');\r\nconst { Pipe, constants: PipeConstants } = internalBinding('pipe_wrap');\r\nconst { TCP } = internalBinding('tcp_wrap');\r\nconst { TTY } = internalBinding('tty_wrap');\r\nconst { UDP } = internalBinding('udp_wrap');\r\nconst SocketList = require('internal/socket_list');\r\nconst { owner_symbol } = require('internal/async_hooks').symbols;\r\nconst { convertToValidSignal, deprecate } = require('internal/util');\r\nconst { isArrayBufferView } = require('internal/util/types');\r\nconst spawn_sync = internalBinding('spawn_sync');\r\nconst { kStateSymbol } = require('internal/dgram');\r\n\r\nconst {\r\n  UV_EACCES,\r\n  UV_EAGAIN,\r\n  UV_EINVAL,\r\n  UV_EMFILE,\r\n  UV_ENFILE,\r\n  UV_ENOENT,\r\n  UV_ENOSYS,\r\n  UV_ESRCH\r\n} = internalBinding('uv');\r\n\r\nconst { SocketListSend, SocketListReceive } = SocketList;\r\n\r\n// Lazy loaded for startup performance and to allow monkey patching of\r\n// internalBinding('http_parser').HTTPParser.\r\nlet freeParser;\r\nlet HTTPParser;\r\n\r\nconst MAX_HANDLE_RETRANSMISSIONS = 3;\r\nconst kChannelHandle = Symbol('kChannelHandle');\r\nconst kIsUsedAsStdio = Symbol('kIsUsedAsStdio');\r\nconst kPendingMessages = Symbol('kPendingMessages');\r\n\r\n// This object contain function to convert TCP objects to native handle objects\r\n// and back again.\r\nconst handleConversion = {\r\n  'net.Native': {\r\n    simultaneousAccepts: true,\r\n\r\n    send(message, handle, options) {\r\n      return handle;\r\n    },\r\n\r\n    got(message, handle, emit) {\r\n      emit(handle);\r\n    }\r\n  },\r\n\r\n  'net.Server': {\r\n    simultaneousAccepts: true,\r\n\r\n    send(message, server, options) {\r\n      return server._handle;\r\n    },\r\n\r\n    got(message, handle, emit) {\r\n      const server = new net.Server();\r\n      server.listen(handle, () => {\r\n        emit(server);\r\n      });\r\n    }\r\n  },\r\n\r\n  'net.Socket': {\r\n    send(message, socket, options) {\r\n      if (!socket._handle)\r\n        return;\r\n\r\n      // If the socket was created by net.Server\r\n      if (socket.server) {\r\n        // The worker should keep track of the socket\r\n        message.key = socket.server._connectionKey;\r\n\r\n        const firstTime = !this[kChannelHandle].sockets.send[message.key];\r\n        const socketList = getSocketList('send', this, message.key);\r\n\r\n        // The server should no longer expose a .connection property\r\n        // and when asked to close it should query the socket status from\r\n        // the workers\r\n        if (firstTime) socket.server._setupWorker(socketList);\r\n\r\n        // Act like socket is detached\r\n        if (!options.keepOpen)\r\n          socket.server._connections--;\r\n      }\r\n\r\n      const handle = socket._handle;\r\n\r\n      // Remove handle from socket object, it will be closed when the socket\r\n      // will be sent\r\n      if (!options.keepOpen) {\r\n        handle.onread = nop;\r\n        socket._handle = null;\r\n        socket.setTimeout(0);\r\n\r\n        if (freeParser === undefined)\r\n          freeParser = require('_http_common').freeParser;\r\n        if (HTTPParser === undefined)\r\n          HTTPParser = require('_http_common').HTTPParser;\r\n\r\n        // In case of an HTTP connection socket, release the associated\r\n        // resources\r\n        if (socket.parser && socket.parser instanceof HTTPParser) {\r\n          freeParser(socket.parser, null, socket);\r\n          if (socket._httpMessage)\r\n            socket._httpMessage.detachSocket(socket);\r\n        }\r\n      }\r\n\r\n      return handle;\r\n    },\r\n\r\n    postSend(message, handle, options, callback, target) {\r\n      // Store the handle after successfully sending it, so it can be closed\r\n      // when the NODE_HANDLE_ACK is received. If the handle could not be sent,\r\n      // just close it.\r\n      if (handle && !options.keepOpen) {\r\n        if (target) {\r\n          // There can only be one _pendingMessage as passing handles are\r\n          // processed one at a time: handles are stored in _handleQueue while\r\n          // waiting for the NODE_HANDLE_ACK of the current passing handle.\r\n          assert(!target._pendingMessage);\r\n          target._pendingMessage =\r\n              { callback, message, handle, options, retransmissions: 0 };\r\n        } else {\r\n          handle.close();\r\n        }\r\n      }\r\n    },\r\n\r\n    got(message, handle, emit) {\r\n      const socket = new net.Socket({\r\n        handle: handle,\r\n        readable: true,\r\n        writable: true\r\n      });\r\n\r\n      // If the socket was created by net.Server we will track the socket\r\n      if (message.key) {\r\n\r\n        // Add socket to connections list\r\n        const socketList = getSocketList('got', this, message.key);\r\n        socketList.add({\r\n          socket: socket\r\n        });\r\n      }\r\n\r\n      emit(socket);\r\n    }\r\n  },\r\n\r\n  'dgram.Native': {\r\n    simultaneousAccepts: false,\r\n\r\n    send(message, handle, options) {\r\n      return handle;\r\n    },\r\n\r\n    got(message, handle, emit) {\r\n      emit(handle);\r\n    }\r\n  },\r\n\r\n  'dgram.Socket': {\r\n    simultaneousAccepts: false,\r\n\r\n    send(message, socket, options) {\r\n      message.dgramType = socket.type;\r\n\r\n      return socket[kStateSymbol].handle;\r\n    },\r\n\r\n    got(message, handle, emit) {\r\n      const socket = new dgram.Socket(message.dgramType);\r\n\r\n      socket.bind(handle, () => {\r\n        emit(socket);\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\nfunction stdioStringToArray(stdio, channel) {\r\n  const options = [];\r\n\r\n  switch (stdio) {\r\n    case 'ignore':\r\n    case 'overlapped':\r\n    case 'pipe': ArrayPrototypePush(options, stdio, stdio, stdio); break;\r\n    case 'inherit': ArrayPrototypePush(options, 0, 1, 2); break;\r\n    default:\r\n      throw new ERR_INVALID_ARG_VALUE('stdio', stdio);\r\n  }\r\n\r\n  if (channel) ArrayPrototypePush(options, channel);\r\n\r\n  return options;\r\n}\r\n\r\nfunction ChildProcess() {\r\n  FunctionPrototypeCall(EventEmitter, this);\r\n\r\n  this._closesNeeded = 1;\r\n  this._closesGot = 0;\r\n  this.connected = false;\r\n\r\n  this.signalCode = null;\r\n  this.exitCode = null;\r\n  this.killed = false;\r\n  this.spawnfile = null;\r\n\r\n  this._handle = new Process();\r\n  this._handle[owner_symbol] = this;\r\n\r\n  this._handle.onexit = (exitCode, signalCode) => {\r\n    if (signalCode) {\r\n      this.signalCode = signalCode;\r\n    } else {\r\n      this.exitCode = exitCode;\r\n    }\r\n\r\n    if (this.stdin) {\r\n      this.stdin.destroy();\r\n    }\r\n\r\n    this._handle.close();\r\n    this._handle = null;\r\n\r\n    if (exitCode < 0) {\r\n      const syscall = this.spawnfile ? 'spawn ' + this.spawnfile : 'spawn';\r\n      const err = errnoException(exitCode, syscall);\r\n\r\n      if (this.spawnfile)\r\n        err.path = this.spawnfile;\r\n\r\n      err.spawnargs = ArrayPrototypeSlice(this.spawnargs, 1);\r\n      this.emit('error', err);\r\n    } else {\r\n      this.emit('exit', this.exitCode, this.signalCode);\r\n    }\r\n\r\n    // If any of the stdio streams have not been touched,\r\n    // then pull all the data through so that it can get the\r\n    // eof and emit a 'close' event.\r\n    // Do it on nextTick so that the user has one last chance\r\n    // to consume the output, if for example they only want to\r\n    // start reading the data once the process exits.\r\n    process.nextTick(flushStdio, this);\r\n\r\n    maybeClose(this);\r\n  };\r\n}\r\nObjectSetPrototypeOf(ChildProcess.prototype, EventEmitter.prototype);\r\nObjectSetPrototypeOf(ChildProcess, EventEmitter);\r\n\r\n\r\nfunction flushStdio(subprocess) {\r\n  const stdio = subprocess.stdio;\r\n\r\n  if (stdio == null) return;\r\n\r\n  for (let i = 0; i < stdio.length; i++) {\r\n    const stream = stdio[i];\r\n    // TODO(addaleax): This doesn't necessarily account for all the ways in\r\n    // which data can be read from a stream, e.g. being consumed on the\r\n    // native layer directly as a StreamBase.\r\n    if (!stream || !stream.readable || stream[kIsUsedAsStdio]) {\r\n      continue;\r\n    }\r\n    stream.resume();\r\n  }\r\n}\r\n\r\n\r\nfunction createSocket(pipe, readable) {\r\n  return net.Socket({ handle: pipe, readable });\r\n}\r\n\r\n\r\nfunction getHandleWrapType(stream) {\r\n  if (stream instanceof Pipe) return 'pipe';\r\n  if (stream instanceof TTY) return 'tty';\r\n  if (stream instanceof TCP) return 'tcp';\r\n  if (stream instanceof UDP) return 'udp';\r\n\r\n  return false;\r\n}\r\n\r\nfunction closePendingHandle(target) {\r\n  target._pendingMessage.handle.close();\r\n  target._pendingMessage = null;\r\n}\r\n\r\n\r\nChildProcess.prototype.spawn = function(options) {\r\n  let i = 0;\r\n\r\n  validateObject(options, 'options');\r\n\r\n  // If no `stdio` option was given - use default\r\n  let stdio = options.stdio || 'pipe';\r\n\r\n  stdio = getValidStdio(stdio, false);\r\n\r\n  const ipc = stdio.ipc;\r\n  const ipcFd = stdio.ipcFd;\r\n  stdio = options.stdio = stdio.stdio;\r\n\r\n\r\n  validateOneOf(options.serialization, 'options.serialization',\r\n                [undefined, 'json', 'advanced']);\r\n  const serialization = options.serialization || 'json';\r\n\r\n  if (ipc !== undefined) {\r\n    // Let child process know about opened IPC channel\r\n    if (options.envPairs === undefined)\r\n      options.envPairs = [];\r\n    else\r\n      validateArray(options.envPairs, 'options.envPairs');\r\n\r\n    ArrayPrototypePush(options.envPairs, `NODE_CHANNEL_FD=${ipcFd}`);\r\n    ArrayPrototypePush(options.envPairs,\r\n                       `NODE_CHANNEL_SERIALIZATION_MODE=${serialization}`);\r\n  }\r\n\r\n  validateString(options.file, 'options.file');\r\n  this.spawnfile = options.file;\r\n\r\n  if (options.args === undefined) {\r\n    this.spawnargs = [];\r\n  } else {\r\n    validateArray(options.args, 'options.args');\r\n    this.spawnargs = options.args;\r\n  }\r\n\r\n  const err = this._handle.spawn(options);\r\n\r\n  // Run-time errors should emit an error, not throw an exception.\r\n  if (err === UV_EACCES ||\r\n      err === UV_EAGAIN ||\r\n      err === UV_EMFILE ||\r\n      err === UV_ENFILE ||\r\n      err === UV_ENOENT) {\r\n    process.nextTick(onErrorNT, this, err);\r\n\r\n    // There is no point in continuing when we've hit EMFILE or ENFILE\r\n    // because we won't be able to set up the stdio file descriptors.\r\n    if (err === UV_EMFILE || err === UV_ENFILE)\r\n      return err;\r\n  } else if (err) {\r\n    // Close all opened fds on error\r\n    for (i = 0; i < stdio.length; i++) {\r\n      const stream = stdio[i];\r\n      if (stream.type === 'pipe') {\r\n        stream.handle.close();\r\n      }\r\n    }\r\n\r\n    this._handle.close();\r\n    this._handle = null;\r\n    throw errnoException(err, 'spawn');\r\n  } else {\r\n    process.nextTick(onSpawnNT, this);\r\n  }\r\n\r\n  this.pid = this._handle.pid;\r\n\r\n  for (i = 0; i < stdio.length; i++) {\r\n    const stream = stdio[i];\r\n    if (stream.type === 'ignore') continue;\r\n\r\n    if (stream.ipc) {\r\n      this._closesNeeded++;\r\n      continue;\r\n    }\r\n\r\n    // The stream is already cloned and piped, thus stop its readable side,\r\n    // otherwise we might attempt to read from the stream when at the same time\r\n    // the child process does.\r\n    if (stream.type === 'wrap') {\r\n      stream.handle.reading = false;\r\n      stream.handle.readStop();\r\n      stream._stdio.pause();\r\n      stream._stdio.readableFlowing = false;\r\n      stream._stdio._readableState.reading = false;\r\n      stream._stdio[kIsUsedAsStdio] = true;\r\n      continue;\r\n    }\r\n\r\n    if (stream.handle) {\r\n      stream.socket = createSocket(this.pid !== 0 ?\r\n        stream.handle : null, i > 0);\r\n\r\n      if (i > 0 && this.pid !== 0) {\r\n        this._closesNeeded++;\r\n        stream.socket.on('close', () => {\r\n          maybeClose(this);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  this.stdin = stdio.length >= 1 && stdio[0].socket !== undefined ?\r\n    stdio[0].socket : null;\r\n  this.stdout = stdio.length >= 2 && stdio[1].socket !== undefined ?\r\n    stdio[1].socket : null;\r\n  this.stderr = stdio.length >= 3 && stdio[2].socket !== undefined ?\r\n    stdio[2].socket : null;\r\n\r\n  this.stdio = [];\r\n\r\n  for (i = 0; i < stdio.length; i++)\r\n    ArrayPrototypePush(this.stdio,\r\n                       stdio[i].socket === undefined ? null : stdio[i].socket);\r\n\r\n  // Add .send() method and start listening for IPC data\r\n  if (ipc !== undefined) setupChannel(this, ipc, serialization);\r\n\r\n  return err;\r\n};\r\n\r\n\r\nfunction onErrorNT(self, err) {\r\n  self._handle.onexit(err);\r\n}\r\n\r\n\r\nfunction onSpawnNT(self) {\r\n  self.emit('spawn');\r\n}\r\n\r\n\r\nChildProcess.prototype.kill = function(sig) {\r\n\r\n  const signal = sig === 0 ? sig :\r\n    convertToValidSignal(sig === undefined ? 'SIGTERM' : sig);\r\n\r\n  if (this._handle) {\r\n    const err = this._handle.kill(signal);\r\n    if (err === 0) {\r\n      /* Success. */\r\n      this.killed = true;\r\n      return true;\r\n    }\r\n    if (err === UV_ESRCH) {\r\n      /* Already dead. */\r\n    } else if (err === UV_EINVAL || err === UV_ENOSYS) {\r\n      /* The underlying platform doesn't support this signal. */\r\n      throw errnoException(err, 'kill');\r\n    } else {\r\n      /* Other error, almost certainly EPERM. */\r\n      this.emit('error', errnoException(err, 'kill'));\r\n    }\r\n  }\r\n\r\n  /* Kill didn't succeed. */\r\n  return false;\r\n};\r\n\r\n\r\nChildProcess.prototype.ref = function() {\r\n  if (this._handle) this._handle.ref();\r\n};\r\n\r\n\r\nChildProcess.prototype.unref = function() {\r\n  if (this._handle) this._handle.unref();\r\n};\r\n\r\nclass Control extends EventEmitter {\r\n  #channel = null;\r\n  #refs = 0;\r\n  #refExplicitlySet = false;\r\n\r\n  constructor(channel) {\r\n    super();\r\n    this.#channel = channel;\r\n    this[kPendingMessages] = [];\r\n  }\r\n\r\n  // The methods keeping track of the counter are being used to track the\r\n  // listener count on the child process object as well as when writes are\r\n  // in progress. Once the user has explicitly requested a certain state, these\r\n  // methods become no-ops in order to not interfere with the user's intentions.\r\n  refCounted() {\r\n    if (++this.#refs === 1 && !this.#refExplicitlySet) {\r\n      this.#channel.ref();\r\n    }\r\n  }\r\n\r\n  unrefCounted() {\r\n    if (--this.#refs === 0 && !this.#refExplicitlySet) {\r\n      this.#channel.unref();\r\n      this.emit('unref');\r\n    }\r\n  }\r\n\r\n  ref() {\r\n    this.#refExplicitlySet = true;\r\n    this.#channel.ref();\r\n  }\r\n\r\n  unref() {\r\n    this.#refExplicitlySet = true;\r\n    this.#channel.unref();\r\n  }\r\n\r\n  get fd() {\r\n    return this.#channel ? this.#channel.fd : undefined;\r\n  }\r\n}\r\n\r\nconst channelDeprecationMsg = '_channel is deprecated. ' +\r\n                              'Use ChildProcess.channel instead.';\r\n\r\nlet serialization;\r\nfunction setupChannel(target, channel, serializationMode) {\r\n  const control = new Control(channel);\r\n  target.channel = control;\r\n  target[kChannelHandle] = channel;\r\n\r\n  ObjectDefineProperty(target, '_channel', {\r\n    __proto__: null,\r\n    get: deprecate(() => {\r\n      return target.channel;\r\n    }, channelDeprecationMsg, 'DEP0129'),\r\n    set: deprecate((val) => {\r\n      target.channel = val;\r\n    }, channelDeprecationMsg, 'DEP0129'),\r\n    configurable: true,\r\n    enumerable: false\r\n  });\r\n\r\n  target._handleQueue = null;\r\n  target._pendingMessage = null;\r\n\r\n  if (serialization === undefined)\r\n    serialization = require('internal/child_process/serialization');\r\n  const {\r\n    initMessageChannel,\r\n    parseChannelMessages,\r\n    writeChannelMessage\r\n  } = serialization[serializationMode];\r\n\r\n  let pendingHandle = null;\r\n  initMessageChannel(channel);\r\n  channel.pendingHandle = null;\r\n  channel.onread = function(arrayBuffer) {\r\n    const recvHandle = channel.pendingHandle;\r\n    channel.pendingHandle = null;\r\n    if (arrayBuffer) {\r\n      const nread = streamBaseState[kReadBytesOrError];\r\n      const offset = streamBaseState[kArrayBufferOffset];\r\n      const pool = new Uint8Array(arrayBuffer, offset, nread);\r\n      if (recvHandle)\r\n        pendingHandle = recvHandle;\r\n\r\n      for (const message of parseChannelMessages(channel, pool)) {\r\n        // There will be at most one NODE_HANDLE message in every chunk we\r\n        // read because SCM_RIGHTS messages don't get coalesced. Make sure\r\n        // that we deliver the handle with the right message however.\r\n        if (isInternal(message)) {\r\n          if (message.cmd === 'NODE_HANDLE') {\r\n            handleMessage(message, pendingHandle, true);\r\n            pendingHandle = null;\r\n          } else {\r\n            handleMessage(message, undefined, true);\r\n          }\r\n        } else {\r\n          handleMessage(message, undefined, false);\r\n        }\r\n      }\r\n    } else {\r\n      this.buffering = false;\r\n      target.disconnect();\r\n      channel.onread = nop;\r\n      channel.close();\r\n      target.channel = null;\r\n      maybeClose(target);\r\n    }\r\n  };\r\n\r\n  // Object where socket lists will live\r\n  channel.sockets = { got: {}, send: {} };\r\n\r\n  // Handlers will go through this\r\n  target.on('internalMessage', function(message, handle) {\r\n    // Once acknowledged - continue sending handles.\r\n    if (message.cmd === 'NODE_HANDLE_ACK' ||\r\n        message.cmd === 'NODE_HANDLE_NACK') {\r\n\r\n      if (target._pendingMessage) {\r\n        if (message.cmd === 'NODE_HANDLE_ACK') {\r\n          closePendingHandle(target);\r\n        } else if (target._pendingMessage.retransmissions++ ===\r\n                   MAX_HANDLE_RETRANSMISSIONS) {\r\n          closePendingHandle(target);\r\n          process.emitWarning('Handle did not reach the receiving process ' +\r\n                              'correctly', 'SentHandleNotReceivedWarning');\r\n        }\r\n      }\r\n\r\n      assert(ArrayIsArray(target._handleQueue));\r\n      const queue = target._handleQueue;\r\n      target._handleQueue = null;\r\n\r\n      if (target._pendingMessage) {\r\n        target._send(target._pendingMessage.message,\r\n                     target._pendingMessage.handle,\r\n                     target._pendingMessage.options,\r\n                     target._pendingMessage.callback);\r\n      }\r\n\r\n      for (let i = 0; i < queue.length; i++) {\r\n        const args = queue[i];\r\n        target._send(args.message, args.handle, args.options, args.callback);\r\n      }\r\n\r\n      // Process a pending disconnect (if any).\r\n      if (!target.connected && target.channel && !target._handleQueue)\r\n        target._disconnect();\r\n\r\n      return;\r\n    }\r\n\r\n    if (message.cmd !== 'NODE_HANDLE') return;\r\n\r\n    // It is possible that the handle is not received because of some error on\r\n    // ancillary data reception such as MSG_CTRUNC. In this case, report the\r\n    // sender about it by sending a NODE_HANDLE_NACK message.\r\n    if (!handle)\r\n      return target._send({ cmd: 'NODE_HANDLE_NACK' }, null, true);\r\n\r\n    // Acknowledge handle receival. Don't emit error events (for example if\r\n    // the other side has disconnected) because this call to send() is not\r\n    // initiated by the user and it shouldn't be fatal to be unable to ACK\r\n    // a message.\r\n    target._send({ cmd: 'NODE_HANDLE_ACK' }, null, true);\r\n\r\n    const obj = handleConversion[message.type];\r\n\r\n    // Update simultaneous accepts on Windows\r\n    if (process.platform === 'win32') {\r\n      handle.setSimultaneousAccepts(false);\r\n    }\r\n\r\n    // Convert handle object\r\n    obj.got.call(this, message, handle, (handle) => {\r\n      handleMessage(message.msg, handle, isInternal(message.msg));\r\n    });\r\n  });\r\n\r\n  target.on('newListener', function() {\r\n\r\n    process.nextTick(() => {\r\n      if (!target.channel || !target.listenerCount('message'))\r\n        return;\r\n\r\n      const messages = target.channel[kPendingMessages];\r\n      const { length } = messages;\r\n      if (!length) return;\r\n\r\n      for (let i = 0; i < length; i++) {\r\n        ReflectApply(target.emit, target, messages[i]);\r\n      }\r\n\r\n      target.channel[kPendingMessages] = [];\r\n    });\r\n  });\r\n\r\n  target.send = function(message, handle, options, callback) {\r\n    if (typeof handle === 'function') {\r\n      callback = handle;\r\n      handle = undefined;\r\n      options = undefined;\r\n    } else if (typeof options === 'function') {\r\n      callback = options;\r\n      options = undefined;\r\n    } else if (options !== undefined) {\r\n      validateObject(options, 'options');\r\n    }\r\n\r\n    options = { swallowErrors: false, ...options };\r\n\r\n    if (this.connected) {\r\n      return this._send(message, handle, options, callback);\r\n    }\r\n    const ex = new ERR_IPC_CHANNEL_CLOSED();\r\n    if (typeof callback === 'function') {\r\n      process.nextTick(callback, ex);\r\n    } else {\r\n      process.nextTick(() => this.emit('error', ex));\r\n    }\r\n    return false;\r\n  };\r\n\r\n  target._send = function(message, handle, options, callback) {\r\n    assert(this.connected || this.channel);\r\n\r\n    if (message === undefined)\r\n      throw new ERR_MISSING_ARGS('message');\r\n\r\n    // Non-serializable messages should not reach the remote\r\n    // end point; as any failure in the stringification there\r\n    // will result in error message that is weakly consumable.\r\n    // So perform a final check on message prior to sending.\r\n    if (typeof message !== 'string' &&\r\n        typeof message !== 'object' &&\r\n        typeof message !== 'number' &&\r\n        typeof message !== 'boolean') {\r\n      throw new ERR_INVALID_ARG_TYPE(\r\n        'message', ['string', 'object', 'number', 'boolean'], message);\r\n    }\r\n\r\n    // Support legacy function signature\r\n    if (typeof options === 'boolean') {\r\n      options = { swallowErrors: options };\r\n    }\r\n\r\n    let obj;\r\n\r\n    // Package messages with a handle object\r\n    if (handle) {\r\n      // This message will be handled by an internalMessage event handler\r\n      message = {\r\n        cmd: 'NODE_HANDLE',\r\n        type: null,\r\n        msg: message\r\n      };\r\n\r\n      if (handle instanceof net.Socket) {\r\n        message.type = 'net.Socket';\r\n      } else if (handle instanceof net.Server) {\r\n        message.type = 'net.Server';\r\n      } else if (handle instanceof TCP || handle instanceof Pipe) {\r\n        message.type = 'net.Native';\r\n      } else if (handle instanceof dgram.Socket) {\r\n        message.type = 'dgram.Socket';\r\n      } else if (handle instanceof UDP) {\r\n        message.type = 'dgram.Native';\r\n      } else {\r\n        throw new ERR_INVALID_HANDLE_TYPE();\r\n      }\r\n\r\n      // Queue-up message and handle if we haven't received ACK yet.\r\n      if (this._handleQueue) {\r\n        ArrayPrototypePush(this._handleQueue, {\r\n          callback: callback,\r\n          handle: handle,\r\n          options: options,\r\n          message: message.msg,\r\n        });\r\n        return this._handleQueue.length === 1;\r\n      }\r\n\r\n      obj = handleConversion[message.type];\r\n\r\n      // convert TCP object to native handle object\r\n      handle = ReflectApply(handleConversion[message.type].send,\r\n                            target, [message, handle, options]);\r\n\r\n      // If handle was sent twice, or it is impossible to get native handle\r\n      // out of it - just send a text without the handle.\r\n      if (!handle)\r\n        message = message.msg;\r\n\r\n      // Update simultaneous accepts on Windows\r\n      if (obj.simultaneousAccepts && process.platform === 'win32') {\r\n        handle.setSimultaneousAccepts(true);\r\n      }\r\n    } else if (this._handleQueue &&\r\n               !(message && (message.cmd === 'NODE_HANDLE_ACK' ||\r\n                             message.cmd === 'NODE_HANDLE_NACK'))) {\r\n      // Queue request anyway to avoid out-of-order messages.\r\n      ArrayPrototypePush(this._handleQueue, {\r\n        callback: callback,\r\n        handle: null,\r\n        options: options,\r\n        message: message,\r\n      });\r\n      return this._handleQueue.length === 1;\r\n    }\r\n\r\n    const req = new WriteWrap();\r\n\r\n    const err = writeChannelMessage(channel, req, message, handle);\r\n    const wasAsyncWrite = streamBaseState[kLastWriteWasAsync];\r\n\r\n    if (err === 0) {\r\n      if (handle) {\r\n        if (!this._handleQueue)\r\n          this._handleQueue = [];\r\n        if (obj && obj.postSend)\r\n          obj.postSend(message, handle, options, callback, target);\r\n      }\r\n\r\n      if (wasAsyncWrite) {\r\n        req.oncomplete = () => {\r\n          control.unrefCounted();\r\n          if (typeof callback === 'function')\r\n            callback(null);\r\n        };\r\n        control.refCounted();\r\n      } else if (typeof callback === 'function') {\r\n        process.nextTick(callback, null);\r\n      }\r\n    } else {\r\n      // Cleanup handle on error\r\n      if (obj && obj.postSend)\r\n        obj.postSend(message, handle, options, callback);\r\n\r\n      if (!options.swallowErrors) {\r\n        const ex = errnoException(err, 'write');\r\n        if (typeof callback === 'function') {\r\n          process.nextTick(callback, ex);\r\n        } else {\r\n          process.nextTick(() => this.emit('error', ex));\r\n        }\r\n      }\r\n    }\r\n\r\n    /* If the primary is > 2 read() calls behind, please stop sending. */\r\n    return channel.writeQueueSize < (65536 * 2);\r\n  };\r\n\r\n  // Connected will be set to false immediately when a disconnect() is\r\n  // requested, even though the channel might still be alive internally to\r\n  // process queued messages. The three states are distinguished as follows:\r\n  // - disconnect() never requested: channel is not null and connected\r\n  //   is true\r\n  // - disconnect() requested, messages in the queue: channel is not null\r\n  //   and connected is false\r\n  // - disconnect() requested, channel actually disconnected: channel is\r\n  //   null and connected is false\r\n  target.connected = true;\r\n\r\n  target.disconnect = function() {\r\n    if (!this.connected) {\r\n      this.emit('error', new ERR_IPC_DISCONNECTED());\r\n      return;\r\n    }\r\n\r\n    // Do not allow any new messages to be written.\r\n    this.connected = false;\r\n\r\n    // If there are no queued messages, disconnect immediately. Otherwise,\r\n    // postpone the disconnect so that it happens internally after the\r\n    // queue is flushed.\r\n    if (!this._handleQueue)\r\n      this._disconnect();\r\n  };\r\n\r\n  target._disconnect = function() {\r\n    assert(this.channel);\r\n\r\n    // This marks the fact that the channel is actually disconnected.\r\n    this.channel = null;\r\n    this[kChannelHandle] = null;\r\n\r\n    if (this._pendingMessage)\r\n      closePendingHandle(this);\r\n\r\n    let fired = false;\r\n    function finish() {\r\n      if (fired) return;\r\n      fired = true;\r\n\r\n      channel.close();\r\n      target.emit('disconnect');\r\n    }\r\n\r\n    // If a message is being read, then wait for it to complete.\r\n    if (channel.buffering) {\r\n      this.once('message', finish);\r\n      this.once('internalMessage', finish);\r\n\r\n      return;\r\n    }\r\n\r\n    process.nextTick(finish);\r\n  };\r\n\r\n  function emit(event, message, handle) {\r\n    if ('internalMessage' === event || target.listenerCount('message')) {\r\n      target.emit(event, message, handle);\r\n      return;\r\n    }\r\n\r\n    ArrayPrototypePush(\r\n      target.channel[kPendingMessages],\r\n      [event, message, handle]\r\n    );\r\n  }\r\n\r\n  function handleMessage(message, handle, internal) {\r\n    if (!target.channel)\r\n      return;\r\n\r\n    const eventName = (internal ? 'internalMessage' : 'message');\r\n\r\n    process.nextTick(emit, eventName, message, handle);\r\n  }\r\n\r\n  channel.readStart();\r\n  return control;\r\n}\r\n\r\nconst INTERNAL_PREFIX = 'NODE_';\r\nfunction isInternal(message) {\r\n  return (message !== null &&\r\n          typeof message === 'object' &&\r\n          typeof message.cmd === 'string' &&\r\n          message.cmd.length > INTERNAL_PREFIX.length &&\r\n          StringPrototypeSlice(message.cmd, 0, INTERNAL_PREFIX.length) ===\r\n            INTERNAL_PREFIX);\r\n}\r\n\r\nconst nop = FunctionPrototype;\r\n\r\nfunction getValidStdio(stdio, sync) {\r\n  let ipc;\r\n  let ipcFd;\r\n\r\n  // Replace shortcut with an array\r\n  if (typeof stdio === 'string') {\r\n    stdio = stdioStringToArray(stdio);\r\n  } else if (!ArrayIsArray(stdio)) {\r\n    throw new ERR_INVALID_ARG_VALUE('stdio', stdio);\r\n  }\r\n\r\n  // At least 3 stdio will be created\r\n  // Don't concat() a new Array() because it would be sparse, and\r\n  // stdio.reduce() would skip the sparse elements of stdio.\r\n  // See https://stackoverflow.com/a/5501711/3561\r\n  while (stdio.length < 3) ArrayPrototypePush(stdio, undefined);\r\n\r\n  // Translate stdio into C++-readable form\r\n  // (i.e. PipeWraps or fds)\r\n  stdio = ArrayPrototypeReduce(stdio, (acc, stdio, i) => {\r\n    function cleanup() {\r\n      for (let i = 0; i < acc.length; i++) {\r\n        if ((acc[i].type === 'pipe' || acc[i].type === 'ipc') && acc[i].handle)\r\n          acc[i].handle.close();\r\n      }\r\n    }\r\n\r\n    // Defaults\r\n    if (stdio == null) {\r\n      stdio = i < 3 ? 'pipe' : 'ignore';\r\n    }\r\n\r\n    if (stdio === 'ignore') {\r\n      ArrayPrototypePush(acc, { type: 'ignore' });\r\n    } else if (stdio === 'pipe' || stdio === 'overlapped' ||\r\n               (typeof stdio === 'number' && stdio < 0)) {\r\n      const a = {\r\n        type: stdio === 'overlapped' ? 'overlapped' : 'pipe',\r\n        readable: i === 0,\r\n        writable: i !== 0\r\n      };\r\n\r\n      if (!sync)\r\n        a.handle = new Pipe(PipeConstants.SOCKET);\r\n\r\n      ArrayPrototypePush(acc, a);\r\n    } else if (stdio === 'ipc') {\r\n      if (sync || ipc !== undefined) {\r\n        // Cleanup previously created pipes\r\n        cleanup();\r\n        if (!sync)\r\n          throw new ERR_IPC_ONE_PIPE();\r\n        else\r\n          throw new ERR_IPC_SYNC_FORK();\r\n      }\r\n\r\n      ipc = new Pipe(PipeConstants.IPC);\r\n      ipcFd = i;\r\n\r\n      ArrayPrototypePush(acc, {\r\n        type: 'pipe',\r\n        handle: ipc,\r\n        ipc: true\r\n      });\r\n    } else if (stdio === 'inherit') {\r\n      ArrayPrototypePush(acc, {\r\n        type: 'inherit',\r\n        fd: i\r\n      });\r\n    } else if (typeof stdio === 'number' || typeof stdio.fd === 'number') {\r\n      ArrayPrototypePush(acc, {\r\n        type: 'fd',\r\n        fd: typeof stdio === 'number' ? stdio : stdio.fd\r\n      });\r\n    } else if (getHandleWrapType(stdio) || getHandleWrapType(stdio.handle) ||\r\n               getHandleWrapType(stdio._handle)) {\r\n      const handle = getHandleWrapType(stdio) ?\r\n        stdio :\r\n        getHandleWrapType(stdio.handle) ? stdio.handle : stdio._handle;\r\n\r\n      ArrayPrototypePush(acc, {\r\n        type: 'wrap',\r\n        wrapType: getHandleWrapType(handle),\r\n        handle: handle,\r\n        _stdio: stdio\r\n      });\r\n    } else if (isArrayBufferView(stdio) || typeof stdio === 'string') {\r\n      if (!sync) {\r\n        cleanup();\r\n        throw new ERR_INVALID_SYNC_FORK_INPUT(inspect(stdio));\r\n      }\r\n    } else {\r\n      // Cleanup\r\n      cleanup();\r\n      throw new ERR_INVALID_ARG_VALUE('stdio', stdio);\r\n    }\r\n\r\n    return acc;\r\n  }, []);\r\n\r\n  return { stdio, ipc, ipcFd };\r\n}\r\n\r\n\r\nfunction getSocketList(type, worker, key) {\r\n  const sockets = worker[kChannelHandle].sockets[type];\r\n  let socketList = sockets[key];\r\n  if (!socketList) {\r\n    const Construct = type === 'send' ? SocketListSend : SocketListReceive;\r\n    socketList = sockets[key] = new Construct(worker, key);\r\n  }\r\n  return socketList;\r\n}\r\n\r\n\r\nfunction maybeClose(subprocess) {\r\n  subprocess._closesGot++;\r\n\r\n  if (subprocess._closesGot === subprocess._closesNeeded) {\r\n    subprocess.emit('close', subprocess.exitCode, subprocess.signalCode);\r\n  }\r\n}\r\n\r\nfunction spawnSync(options) {\r\n  const result = spawn_sync.spawn(options);\r\n\r\n  if (result.output && options.encoding && options.encoding !== 'buffer') {\r\n    for (let i = 0; i < result.output.length; i++) {\r\n      if (!result.output[i])\r\n        continue;\r\n      result.output[i] = result.output[i].toString(options.encoding);\r\n    }\r\n  }\r\n\r\n  result.stdout = result.output && result.output[1];\r\n  result.stderr = result.output && result.output[2];\r\n\r\n  if (result.error) {\r\n    result.error = errnoException(result.error, 'spawnSync ' + options.file);\r\n    result.error.path = options.file;\r\n    result.error.spawnargs = ArrayPrototypeSlice(options.args, 1);\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nmodule.exports = {\r\n  ChildProcess,\r\n  kChannelHandle,\r\n  setupChannel,\r\n  getValidStdio,\r\n  stdioStringToArray,\r\n  spawnSync\r\n};\r\n",
    "name": "child_process",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 596,
    "sourcePositions": []
  },
  {
    "url": "node:dgram",
    "source": "// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n'use strict';\r\n\r\nconst {\r\n  Array,\r\n  ArrayIsArray,\r\n  ArrayPrototypePush,\r\n  FunctionPrototypeBind,\r\n  FunctionPrototypeCall,\r\n  ObjectDefineProperty,\r\n  ObjectSetPrototypeOf,\r\n  ReflectApply,\r\n} = primordials;\r\n\r\nconst errors = require('internal/errors');\r\nconst {\r\n  kStateSymbol,\r\n  _createSocketHandle,\r\n  newHandle,\r\n} = require('internal/dgram');\r\nconst { guessHandleType } = internalBinding('util');\r\nconst {\r\n  ERR_BUFFER_OUT_OF_BOUNDS,\r\n  ERR_INVALID_ARG_TYPE,\r\n  ERR_MISSING_ARGS,\r\n  ERR_SOCKET_ALREADY_BOUND,\r\n  ERR_SOCKET_BAD_BUFFER_SIZE,\r\n  ERR_SOCKET_BUFFER_SIZE,\r\n  ERR_SOCKET_DGRAM_IS_CONNECTED,\r\n  ERR_SOCKET_DGRAM_NOT_CONNECTED,\r\n  ERR_SOCKET_DGRAM_NOT_RUNNING,\r\n  ERR_INVALID_FD_TYPE\r\n} = errors.codes;\r\nconst {\r\n  isInt32,\r\n  validateAbortSignal,\r\n  validateString,\r\n  validateNumber,\r\n  validatePort,\r\n} = require('internal/validators');\r\nconst { Buffer } = require('buffer');\r\nconst { deprecate } = require('internal/util');\r\nconst { isArrayBufferView } = require('internal/util/types');\r\nconst EventEmitter = require('events');\r\nconst {\r\n  defaultTriggerAsyncIdScope,\r\n  symbols: { async_id_symbol, owner_symbol }\r\n} = require('internal/async_hooks');\r\nconst { UV_UDP_REUSEADDR } = internalBinding('constants').os;\r\n\r\nconst {\r\n  constants: { UV_UDP_IPV6ONLY },\r\n  UDP,\r\n  SendWrap\r\n} = internalBinding('udp_wrap');\r\n\r\nconst dc = require('diagnostics_channel');\r\nconst udpSocketChannel = dc.channel('udp.socket');\r\n\r\nconst BIND_STATE_UNBOUND = 0;\r\nconst BIND_STATE_BINDING = 1;\r\nconst BIND_STATE_BOUND = 2;\r\n\r\nconst CONNECT_STATE_DISCONNECTED = 0;\r\nconst CONNECT_STATE_CONNECTING = 1;\r\nconst CONNECT_STATE_CONNECTED = 2;\r\n\r\nconst RECV_BUFFER = true;\r\nconst SEND_BUFFER = false;\r\n\r\n// Lazily loaded\r\nlet _cluster = null;\r\nfunction lazyLoadCluster() {\r\n  if (!_cluster) _cluster = require('cluster');\r\n  return _cluster;\r\n}\r\n\r\nconst errnoException = errors.errnoException;\r\nconst exceptionWithHostPort = errors.exceptionWithHostPort;\r\n\r\n\r\nfunction Socket(type, listener) {\r\n  FunctionPrototypeCall(EventEmitter, this);\r\n  let lookup;\r\n  let recvBufferSize;\r\n  let sendBufferSize;\r\n\r\n  let options;\r\n  if (type !== null && typeof type === 'object') {\r\n    options = type;\r\n    type = options.type;\r\n    lookup = options.lookup;\r\n    recvBufferSize = options.recvBufferSize;\r\n    sendBufferSize = options.sendBufferSize;\r\n  }\r\n\r\n  const handle = newHandle(type, lookup);\r\n  handle[owner_symbol] = this;\r\n\r\n  this[async_id_symbol] = handle.getAsyncId();\r\n  this.type = type;\r\n\r\n  if (typeof listener === 'function')\r\n    this.on('message', listener);\r\n\r\n  this[kStateSymbol] = {\r\n    handle,\r\n    receiving: false,\r\n    bindState: BIND_STATE_UNBOUND,\r\n    connectState: CONNECT_STATE_DISCONNECTED,\r\n    queue: undefined,\r\n    reuseAddr: options && options.reuseAddr, // Use UV_UDP_REUSEADDR if true.\r\n    ipv6Only: options && options.ipv6Only,\r\n    recvBufferSize,\r\n    sendBufferSize\r\n  };\r\n\r\n  if (options?.signal !== undefined) {\r\n    const { signal } = options;\r\n    validateAbortSignal(signal, 'options.signal');\r\n    const onAborted = () => {\r\n      this.close();\r\n    };\r\n    if (signal.aborted) {\r\n      onAborted();\r\n    } else {\r\n      signal.addEventListener('abort', onAborted);\r\n      this.once('close', () => signal.removeEventListener('abort', onAborted));\r\n    }\r\n  }\r\n  if (udpSocketChannel.hasSubscribers) {\r\n    udpSocketChannel.publish({\r\n      socket: this,\r\n    });\r\n  }\r\n}\r\nObjectSetPrototypeOf(Socket.prototype, EventEmitter.prototype);\r\nObjectSetPrototypeOf(Socket, EventEmitter);\r\n\r\n\r\nfunction createSocket(type, listener) {\r\n  return new Socket(type, listener);\r\n}\r\n\r\n\r\nfunction startListening(socket) {\r\n  const state = socket[kStateSymbol];\r\n\r\n  state.handle.onmessage = onMessage;\r\n  state.handle.onerror = onError;\r\n  state.handle.recvStart();\r\n  state.receiving = true;\r\n  state.bindState = BIND_STATE_BOUND;\r\n\r\n  if (state.recvBufferSize)\r\n    bufferSize(socket, state.recvBufferSize, RECV_BUFFER);\r\n\r\n  if (state.sendBufferSize)\r\n    bufferSize(socket, state.sendBufferSize, SEND_BUFFER);\r\n\r\n  socket.emit('listening');\r\n}\r\n\r\nfunction replaceHandle(self, newHandle) {\r\n  const state = self[kStateSymbol];\r\n  const oldHandle = state.handle;\r\n  // Sync the old handle state to new handle\r\n  if (!oldHandle.hasRef() && typeof newHandle.unref === 'function') {\r\n    newHandle.unref();\r\n  }\r\n  // Set up the handle that we got from primary.\r\n  newHandle.lookup = oldHandle.lookup;\r\n  newHandle.bind = oldHandle.bind;\r\n  newHandle.send = oldHandle.send;\r\n  newHandle[owner_symbol] = self;\r\n\r\n  // Replace the existing handle by the handle we got from primary.\r\n  oldHandle.close();\r\n  state.handle = newHandle;\r\n}\r\n\r\nfunction bufferSize(self, size, buffer) {\r\n  if (size >>> 0 !== size)\r\n    throw new ERR_SOCKET_BAD_BUFFER_SIZE();\r\n\r\n  const ctx = {};\r\n  const ret = self[kStateSymbol].handle.bufferSize(size, buffer, ctx);\r\n  if (ret === undefined) {\r\n    throw new ERR_SOCKET_BUFFER_SIZE(ctx);\r\n  }\r\n  return ret;\r\n}\r\n\r\n// Query primary process to get the server handle and utilize it.\r\nfunction bindServerHandle(self, options, errCb) {\r\n  const cluster = lazyLoadCluster();\r\n\r\n  const state = self[kStateSymbol];\r\n  cluster._getServer(self, options, (err, handle) => {\r\n    if (err) {\r\n      errCb(err);\r\n      return;\r\n    }\r\n\r\n    if (!state.handle) {\r\n      // Handle has been closed in the mean time.\r\n      return handle.close();\r\n    }\r\n\r\n    replaceHandle(self, handle);\r\n    startListening(self);\r\n  });\r\n}\r\n\r\nSocket.prototype.bind = function(port_, address_ /* , callback */) {\r\n  let port = port_;\r\n\r\n  healthCheck(this);\r\n  const state = this[kStateSymbol];\r\n\r\n  if (state.bindState !== BIND_STATE_UNBOUND)\r\n    throw new ERR_SOCKET_ALREADY_BOUND();\r\n\r\n  state.bindState = BIND_STATE_BINDING;\r\n\r\n  const cb = arguments.length && arguments[arguments.length - 1];\r\n  if (typeof cb === 'function') {\r\n    function removeListeners() {\r\n      this.removeListener('error', removeListeners);\r\n      this.removeListener('listening', onListening);\r\n    }\r\n\r\n    function onListening() {\r\n      FunctionPrototypeCall(removeListeners, this);\r\n      FunctionPrototypeCall(cb, this);\r\n    }\r\n\r\n    this.on('error', removeListeners);\r\n    this.on('listening', onListening);\r\n  }\r\n\r\n  if (port !== null &&\r\n      typeof port === 'object' &&\r\n      typeof port.recvStart === 'function') {\r\n    replaceHandle(this, port);\r\n    startListening(this);\r\n    return this;\r\n  }\r\n\r\n  // Open an existing fd instead of creating a new one.\r\n  if (port !== null && typeof port === 'object' &&\r\n      isInt32(port.fd) && port.fd > 0) {\r\n    const fd = port.fd;\r\n    const exclusive = !!port.exclusive;\r\n    const state = this[kStateSymbol];\r\n\r\n    const cluster = lazyLoadCluster();\r\n\r\n    if (cluster.isWorker && !exclusive) {\r\n      bindServerHandle(this, {\r\n        address: null,\r\n        port: null,\r\n        addressType: this.type,\r\n        fd,\r\n        flags: null\r\n      }, (err) => {\r\n        // Callback to handle error.\r\n        const ex = errnoException(err, 'open');\r\n        state.bindState = BIND_STATE_UNBOUND;\r\n        this.emit('error', ex);\r\n      });\r\n      return this;\r\n    }\r\n\r\n    const type = guessHandleType(fd);\r\n    if (type !== 'UDP')\r\n      throw new ERR_INVALID_FD_TYPE(type);\r\n    const err = state.handle.open(fd);\r\n\r\n    if (err)\r\n      throw errnoException(err, 'open');\r\n\r\n    startListening(this);\r\n    return this;\r\n  }\r\n\r\n  let address;\r\n  let exclusive;\r\n\r\n  if (port !== null && typeof port === 'object') {\r\n    address = port.address || '';\r\n    exclusive = !!port.exclusive;\r\n    port = port.port;\r\n  } else {\r\n    address = typeof address_ === 'function' ? '' : address_;\r\n    exclusive = false;\r\n  }\r\n\r\n  // Defaulting address for bind to all interfaces\r\n  if (!address) {\r\n    if (this.type === 'udp4')\r\n      address = '0.0.0.0';\r\n    else\r\n      address = '::';\r\n  }\r\n\r\n  // Resolve address first\r\n  state.handle.lookup(address, (err, ip) => {\r\n    if (err) {\r\n      state.bindState = BIND_STATE_UNBOUND;\r\n      this.emit('error', err);\r\n      return;\r\n    }\r\n\r\n    const cluster = lazyLoadCluster();\r\n\r\n    let flags = 0;\r\n    if (state.reuseAddr)\r\n      flags |= UV_UDP_REUSEADDR;\r\n    if (state.ipv6Only)\r\n      flags |= UV_UDP_IPV6ONLY;\r\n\r\n    if (cluster.isWorker && !exclusive) {\r\n      bindServerHandle(this, {\r\n        address: ip,\r\n        port: port,\r\n        addressType: this.type,\r\n        fd: -1,\r\n        flags: flags\r\n      }, (err) => {\r\n        // Callback to handle error.\r\n        const ex = exceptionWithHostPort(err, 'bind', ip, port);\r\n        state.bindState = BIND_STATE_UNBOUND;\r\n        this.emit('error', ex);\r\n      });\r\n    } else {\r\n      if (!state.handle)\r\n        return; // Handle has been closed in the mean time\r\n\r\n      const err = state.handle.bind(ip, port || 0, flags);\r\n      if (err) {\r\n        const ex = exceptionWithHostPort(err, 'bind', ip, port);\r\n        state.bindState = BIND_STATE_UNBOUND;\r\n        this.emit('error', ex);\r\n        // Todo: close?\r\n        return;\r\n      }\r\n\r\n      startListening(this);\r\n    }\r\n  });\r\n\r\n  return this;\r\n};\r\n\r\nSocket.prototype.connect = function(port, address, callback) {\r\n  port = validatePort(port, 'Port', false);\r\n  if (typeof address === 'function') {\r\n    callback = address;\r\n    address = '';\r\n  } else if (address === undefined) {\r\n    address = '';\r\n  }\r\n\r\n  validateString(address, 'address');\r\n\r\n  const state = this[kStateSymbol];\r\n\r\n  if (state.connectState !== CONNECT_STATE_DISCONNECTED)\r\n    throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\r\n\r\n  state.connectState = CONNECT_STATE_CONNECTING;\r\n  if (state.bindState === BIND_STATE_UNBOUND)\r\n    this.bind({ port: 0, exclusive: true }, null);\r\n\r\n  if (state.bindState !== BIND_STATE_BOUND) {\r\n    enqueue(this, FunctionPrototypeBind(_connect, this,\r\n                                        port, address, callback));\r\n    return;\r\n  }\r\n\r\n  ReflectApply(_connect, this, [port, address, callback]);\r\n};\r\n\r\n\r\nfunction _connect(port, address, callback) {\r\n  const state = this[kStateSymbol];\r\n  if (callback)\r\n    this.once('connect', callback);\r\n\r\n  const afterDns = (ex, ip) => {\r\n    defaultTriggerAsyncIdScope(\r\n      this[async_id_symbol],\r\n      doConnect,\r\n      ex, this, ip, address, port, callback\r\n    );\r\n  };\r\n\r\n  state.handle.lookup(address, afterDns);\r\n}\r\n\r\n\r\nfunction doConnect(ex, self, ip, address, port, callback) {\r\n  const state = self[kStateSymbol];\r\n  if (!state.handle)\r\n    return;\r\n\r\n  if (!ex) {\r\n    const err = state.handle.connect(ip, port);\r\n    if (err) {\r\n      ex = exceptionWithHostPort(err, 'connect', address, port);\r\n    }\r\n  }\r\n\r\n  if (ex) {\r\n    state.connectState = CONNECT_STATE_DISCONNECTED;\r\n    return process.nextTick(() => {\r\n      if (callback) {\r\n        self.removeListener('connect', callback);\r\n        callback(ex);\r\n      } else {\r\n        self.emit('error', ex);\r\n      }\r\n    });\r\n  }\r\n\r\n  state.connectState = CONNECT_STATE_CONNECTED;\r\n  process.nextTick(() => self.emit('connect'));\r\n}\r\n\r\n\r\nSocket.prototype.disconnect = function() {\r\n  const state = this[kStateSymbol];\r\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\r\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\r\n\r\n  const err = state.handle.disconnect();\r\n  if (err)\r\n    throw errnoException(err, 'connect');\r\n  else\r\n    state.connectState = CONNECT_STATE_DISCONNECTED;\r\n};\r\n\r\n\r\n// Thin wrapper around `send`, here for compatibility with dgram_legacy.js\r\nSocket.prototype.sendto = function(buffer,\r\n                                   offset,\r\n                                   length,\r\n                                   port,\r\n                                   address,\r\n                                   callback) {\r\n  validateNumber(offset, 'offset');\r\n  validateNumber(length, 'length');\r\n  validateNumber(port, 'port');\r\n  validateString(address, 'address');\r\n\r\n  this.send(buffer, offset, length, port, address, callback);\r\n};\r\n\r\n\r\nfunction sliceBuffer(buffer, offset, length) {\r\n  if (typeof buffer === 'string') {\r\n    buffer = Buffer.from(buffer);\r\n  } else if (!isArrayBufferView(buffer)) {\r\n    throw new ERR_INVALID_ARG_TYPE('buffer',\r\n                                   ['Buffer',\r\n                                    'TypedArray',\r\n                                    'DataView',\r\n                                    'string'],\r\n                                   buffer);\r\n  }\r\n\r\n  offset = offset >>> 0;\r\n  length = length >>> 0;\r\n  if (offset > buffer.byteLength) {\r\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\r\n  }\r\n\r\n  if (offset + length > buffer.byteLength) {\r\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\r\n  }\r\n\r\n  return Buffer.from(buffer.buffer, buffer.byteOffset + offset, length);\r\n}\r\n\r\n\r\nfunction fixBufferList(list) {\r\n  const newlist = new Array(list.length);\r\n\r\n  for (let i = 0, l = list.length; i < l; i++) {\r\n    const buf = list[i];\r\n    if (typeof buf === 'string')\r\n      newlist[i] = Buffer.from(buf);\r\n    else if (!isArrayBufferView(buf))\r\n      return null;\r\n    else\r\n      newlist[i] = Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength);\r\n  }\r\n\r\n  return newlist;\r\n}\r\n\r\n\r\nfunction enqueue(self, toEnqueue) {\r\n  const state = self[kStateSymbol];\r\n\r\n  // If the send queue hasn't been initialized yet, do it, and install an\r\n  // event handler that flushes the send queue after binding is done.\r\n  if (state.queue === undefined) {\r\n    state.queue = [];\r\n    self.once(EventEmitter.errorMonitor, onListenError);\r\n    self.once('listening', onListenSuccess);\r\n  }\r\n  ArrayPrototypePush(state.queue, toEnqueue);\r\n}\r\n\r\n\r\nfunction onListenSuccess() {\r\n  this.removeListener(EventEmitter.errorMonitor, onListenError);\r\n  FunctionPrototypeCall(clearQueue, this);\r\n}\r\n\r\n\r\nfunction onListenError(err) {\r\n  this.removeListener('listening', onListenSuccess);\r\n  this[kStateSymbol].queue = undefined;\r\n}\r\n\r\n\r\nfunction clearQueue() {\r\n  const state = this[kStateSymbol];\r\n  const queue = state.queue;\r\n  state.queue = undefined;\r\n\r\n  // Flush the send queue.\r\n  for (const queueEntry of queue)\r\n    queueEntry();\r\n}\r\n\r\n// valid combinations\r\n// For connectionless sockets\r\n// send(buffer, offset, length, port, address, callback)\r\n// send(buffer, offset, length, port, address)\r\n// send(buffer, offset, length, port, callback)\r\n// send(buffer, offset, length, port)\r\n// send(bufferOrList, port, address, callback)\r\n// send(bufferOrList, port, address)\r\n// send(bufferOrList, port, callback)\r\n// send(bufferOrList, port)\r\n// For connected sockets\r\n// send(buffer, offset, length, callback)\r\n// send(buffer, offset, length)\r\n// send(bufferOrList, callback)\r\n// send(bufferOrList)\r\nSocket.prototype.send = function(buffer,\r\n                                 offset,\r\n                                 length,\r\n                                 port,\r\n                                 address,\r\n                                 callback) {\r\n\r\n  let list;\r\n  const state = this[kStateSymbol];\r\n  const connected = state.connectState === CONNECT_STATE_CONNECTED;\r\n  if (!connected) {\r\n    if (address || (port && typeof port !== 'function')) {\r\n      buffer = sliceBuffer(buffer, offset, length);\r\n    } else {\r\n      callback = port;\r\n      port = offset;\r\n      address = length;\r\n    }\r\n  } else {\r\n    if (typeof length === 'number') {\r\n      buffer = sliceBuffer(buffer, offset, length);\r\n      if (typeof port === 'function') {\r\n        callback = port;\r\n        port = null;\r\n      }\r\n    } else {\r\n      callback = offset;\r\n    }\r\n\r\n    if (port || address)\r\n      throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\r\n  }\r\n\r\n  if (!ArrayIsArray(buffer)) {\r\n    if (typeof buffer === 'string') {\r\n      list = [ Buffer.from(buffer) ];\r\n    } else if (!isArrayBufferView(buffer)) {\r\n      throw new ERR_INVALID_ARG_TYPE('buffer',\r\n                                     ['Buffer',\r\n                                      'TypedArray',\r\n                                      'DataView',\r\n                                      'string'],\r\n                                     buffer);\r\n    } else {\r\n      list = [ buffer ];\r\n    }\r\n  } else if (!(list = fixBufferList(buffer))) {\r\n    throw new ERR_INVALID_ARG_TYPE('buffer list arguments',\r\n                                   ['Buffer',\r\n                                    'TypedArray',\r\n                                    'DataView',\r\n                                    'string'],\r\n                                   buffer);\r\n  }\r\n\r\n  if (!connected)\r\n    port = validatePort(port, 'Port', false);\r\n\r\n  // Normalize callback so it's either a function or undefined but not anything\r\n  // else.\r\n  if (typeof callback !== 'function')\r\n    callback = undefined;\r\n\r\n  if (typeof address === 'function') {\r\n    callback = address;\r\n    address = undefined;\r\n  } else if (address != null) {\r\n    validateString(address, 'address');\r\n  }\r\n\r\n  healthCheck(this);\r\n\r\n  if (state.bindState === BIND_STATE_UNBOUND)\r\n    this.bind({ port: 0, exclusive: true }, null);\r\n\r\n  if (list.length === 0)\r\n    ArrayPrototypePush(list, Buffer.alloc(0));\r\n\r\n  // If the socket hasn't been bound yet, push the outbound packet onto the\r\n  // send queue and send after binding is complete.\r\n  if (state.bindState !== BIND_STATE_BOUND) {\r\n    enqueue(this, FunctionPrototypeBind(this.send, this,\r\n                                        list, port, address, callback));\r\n    return;\r\n  }\r\n\r\n  const afterDns = (ex, ip) => {\r\n    defaultTriggerAsyncIdScope(\r\n      this[async_id_symbol],\r\n      doSend,\r\n      ex, this, ip, list, address, port, callback\r\n    );\r\n  };\r\n\r\n  if (!connected) {\r\n    state.handle.lookup(address, afterDns);\r\n  } else {\r\n    afterDns(null, null);\r\n  }\r\n};\r\n\r\nfunction doSend(ex, self, ip, list, address, port, callback) {\r\n  const state = self[kStateSymbol];\r\n\r\n  if (ex) {\r\n    if (typeof callback === 'function') {\r\n      process.nextTick(callback, ex);\r\n      return;\r\n    }\r\n\r\n    process.nextTick(() => self.emit('error', ex));\r\n    return;\r\n  } else if (!state.handle) {\r\n    return;\r\n  }\r\n\r\n  const req = new SendWrap();\r\n  req.list = list;  // Keep reference alive.\r\n  req.address = address;\r\n  req.port = port;\r\n  if (callback) {\r\n    req.callback = callback;\r\n    req.oncomplete = afterSend;\r\n  }\r\n\r\n  let err;\r\n  if (port)\r\n    err = state.handle.send(req, list, list.length, port, ip, !!callback);\r\n  else\r\n    err = state.handle.send(req, list, list.length, !!callback);\r\n\r\n  if (err >= 1) {\r\n    // Synchronous finish. The return code is msg_length + 1 so that we can\r\n    // distinguish between synchronous success and asynchronous success.\r\n    if (callback)\r\n      process.nextTick(callback, null, err - 1);\r\n    return;\r\n  }\r\n\r\n  if (err && callback) {\r\n    // Don't emit as error, dgram_legacy.js compatibility\r\n    const ex = exceptionWithHostPort(err, 'send', address, port);\r\n    process.nextTick(callback, ex);\r\n  }\r\n}\r\n\r\nfunction afterSend(err, sent) {\r\n  if (err) {\r\n    err = exceptionWithHostPort(err, 'send', this.address, this.port);\r\n  } else {\r\n    err = null;\r\n  }\r\n\r\n  this.callback(err, sent);\r\n}\r\n\r\nSocket.prototype.close = function(callback) {\r\n  const state = this[kStateSymbol];\r\n  const queue = state.queue;\r\n\r\n  if (typeof callback === 'function')\r\n    this.on('close', callback);\r\n\r\n  if (queue !== undefined) {\r\n    ArrayPrototypePush(queue, FunctionPrototypeBind(this.close, this));\r\n    return this;\r\n  }\r\n\r\n  healthCheck(this);\r\n  stopReceiving(this);\r\n  state.handle.close();\r\n  state.handle = null;\r\n  defaultTriggerAsyncIdScope(this[async_id_symbol],\r\n                             process.nextTick,\r\n                             socketCloseNT,\r\n                             this);\r\n\r\n  return this;\r\n};\r\n\r\n\r\nfunction socketCloseNT(self) {\r\n  self.emit('close');\r\n}\r\n\r\n\r\nSocket.prototype.address = function() {\r\n  healthCheck(this);\r\n\r\n  const out = {};\r\n  const err = this[kStateSymbol].handle.getsockname(out);\r\n  if (err) {\r\n    throw errnoException(err, 'getsockname');\r\n  }\r\n\r\n  return out;\r\n};\r\n\r\nSocket.prototype.remoteAddress = function() {\r\n  healthCheck(this);\r\n\r\n  const state = this[kStateSymbol];\r\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\r\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\r\n\r\n  const out = {};\r\n  const err = state.handle.getpeername(out);\r\n  if (err)\r\n    throw errnoException(err, 'getpeername');\r\n\r\n  return out;\r\n};\r\n\r\n\r\nSocket.prototype.setBroadcast = function(arg) {\r\n  const err = this[kStateSymbol].handle.setBroadcast(arg ? 1 : 0);\r\n  if (err) {\r\n    throw errnoException(err, 'setBroadcast');\r\n  }\r\n};\r\n\r\n\r\nSocket.prototype.setTTL = function(ttl) {\r\n  validateNumber(ttl, 'ttl');\r\n\r\n  const err = this[kStateSymbol].handle.setTTL(ttl);\r\n  if (err) {\r\n    throw errnoException(err, 'setTTL');\r\n  }\r\n\r\n  return ttl;\r\n};\r\n\r\n\r\nSocket.prototype.setMulticastTTL = function(ttl) {\r\n  validateNumber(ttl, 'ttl');\r\n\r\n  const err = this[kStateSymbol].handle.setMulticastTTL(ttl);\r\n  if (err) {\r\n    throw errnoException(err, 'setMulticastTTL');\r\n  }\r\n\r\n  return ttl;\r\n};\r\n\r\n\r\nSocket.prototype.setMulticastLoopback = function(arg) {\r\n  const err = this[kStateSymbol].handle.setMulticastLoopback(arg ? 1 : 0);\r\n  if (err) {\r\n    throw errnoException(err, 'setMulticastLoopback');\r\n  }\r\n\r\n  return arg; // 0.4 compatibility\r\n};\r\n\r\n\r\nSocket.prototype.setMulticastInterface = function(interfaceAddress) {\r\n  healthCheck(this);\r\n  validateString(interfaceAddress, 'interfaceAddress');\r\n\r\n  const err = this[kStateSymbol].handle.setMulticastInterface(interfaceAddress);\r\n  if (err) {\r\n    throw errnoException(err, 'setMulticastInterface');\r\n  }\r\n};\r\n\r\nSocket.prototype.addMembership = function(multicastAddress,\r\n                                          interfaceAddress) {\r\n  healthCheck(this);\r\n\r\n  if (!multicastAddress) {\r\n    throw new ERR_MISSING_ARGS('multicastAddress');\r\n  }\r\n\r\n  const { handle } = this[kStateSymbol];\r\n  const err = handle.addMembership(multicastAddress, interfaceAddress);\r\n  if (err) {\r\n    throw errnoException(err, 'addMembership');\r\n  }\r\n};\r\n\r\n\r\nSocket.prototype.dropMembership = function(multicastAddress,\r\n                                           interfaceAddress) {\r\n  healthCheck(this);\r\n\r\n  if (!multicastAddress) {\r\n    throw new ERR_MISSING_ARGS('multicastAddress');\r\n  }\r\n\r\n  const { handle } = this[kStateSymbol];\r\n  const err = handle.dropMembership(multicastAddress, interfaceAddress);\r\n  if (err) {\r\n    throw errnoException(err, 'dropMembership');\r\n  }\r\n};\r\n\r\nSocket.prototype.addSourceSpecificMembership = function(sourceAddress,\r\n                                                        groupAddress,\r\n                                                        interfaceAddress) {\r\n  healthCheck(this);\r\n\r\n  validateString(sourceAddress, 'sourceAddress');\r\n  validateString(groupAddress, 'groupAddress');\r\n\r\n  const err =\r\n    this[kStateSymbol].handle.addSourceSpecificMembership(sourceAddress,\r\n                                                          groupAddress,\r\n                                                          interfaceAddress);\r\n  if (err) {\r\n    throw errnoException(err, 'addSourceSpecificMembership');\r\n  }\r\n};\r\n\r\n\r\nSocket.prototype.dropSourceSpecificMembership = function(sourceAddress,\r\n                                                         groupAddress,\r\n                                                         interfaceAddress) {\r\n  healthCheck(this);\r\n\r\n  validateString(sourceAddress, 'sourceAddress');\r\n  validateString(groupAddress, 'groupAddress');\r\n\r\n  const err =\r\n    this[kStateSymbol].handle.dropSourceSpecificMembership(sourceAddress,\r\n                                                           groupAddress,\r\n                                                           interfaceAddress);\r\n  if (err) {\r\n    throw errnoException(err, 'dropSourceSpecificMembership');\r\n  }\r\n};\r\n\r\n\r\nfunction healthCheck(socket) {\r\n  if (!socket[kStateSymbol].handle) {\r\n    // Error message from dgram_legacy.js.\r\n    throw new ERR_SOCKET_DGRAM_NOT_RUNNING();\r\n  }\r\n}\r\n\r\n\r\nfunction stopReceiving(socket) {\r\n  const state = socket[kStateSymbol];\r\n\r\n  if (!state.receiving)\r\n    return;\r\n\r\n  state.handle.recvStop();\r\n  state.receiving = false;\r\n}\r\n\r\n\r\nfunction onMessage(nread, handle, buf, rinfo) {\r\n  const self = handle[owner_symbol];\r\n  if (nread < 0) {\r\n    return self.emit('error', errnoException(nread, 'recvmsg'));\r\n  }\r\n  rinfo.size = buf.length; // compatibility\r\n  self.emit('message', buf, rinfo);\r\n}\r\n\r\n\r\nfunction onError(nread, handle, error) {\r\n  const self = handle[owner_symbol];\r\n  return self.emit('error', error);\r\n}\r\n\r\n\r\nSocket.prototype.ref = function() {\r\n  const handle = this[kStateSymbol].handle;\r\n\r\n  if (handle)\r\n    handle.ref();\r\n\r\n  return this;\r\n};\r\n\r\n\r\nSocket.prototype.unref = function() {\r\n  const handle = this[kStateSymbol].handle;\r\n\r\n  if (handle)\r\n    handle.unref();\r\n\r\n  return this;\r\n};\r\n\r\n\r\nSocket.prototype.setRecvBufferSize = function(size) {\r\n  bufferSize(this, size, RECV_BUFFER);\r\n};\r\n\r\n\r\nSocket.prototype.setSendBufferSize = function(size) {\r\n  bufferSize(this, size, SEND_BUFFER);\r\n};\r\n\r\n\r\nSocket.prototype.getRecvBufferSize = function() {\r\n  return bufferSize(this, 0, RECV_BUFFER);\r\n};\r\n\r\n\r\nSocket.prototype.getSendBufferSize = function() {\r\n  return bufferSize(this, 0, SEND_BUFFER);\r\n};\r\n\r\nSocket.prototype.getSendQueueSize = function() {\r\n  return this[kStateSymbol].handle.getSendQueueSize();\r\n};\r\n\r\nSocket.prototype.getSendQueueCount = function() {\r\n  return this[kStateSymbol].handle.getSendQueueCount();\r\n};\r\n\r\n// Deprecated private APIs.\r\nObjectDefineProperty(Socket.prototype, '_handle', {\r\n  __proto__: null,\r\n  get: deprecate(function() {\r\n    return this[kStateSymbol].handle;\r\n  }, 'Socket.prototype._handle is deprecated', 'DEP0112'),\r\n  set: deprecate(function(val) {\r\n    this[kStateSymbol].handle = val;\r\n  }, 'Socket.prototype._handle is deprecated', 'DEP0112')\r\n});\r\n\r\n\r\nObjectDefineProperty(Socket.prototype, '_receiving', {\r\n  __proto__: null,\r\n  get: deprecate(function() {\r\n    return this[kStateSymbol].receiving;\r\n  }, 'Socket.prototype._receiving is deprecated', 'DEP0112'),\r\n  set: deprecate(function(val) {\r\n    this[kStateSymbol].receiving = val;\r\n  }, 'Socket.prototype._receiving is deprecated', 'DEP0112')\r\n});\r\n\r\n\r\nObjectDefineProperty(Socket.prototype, '_bindState', {\r\n  __proto__: null,\r\n  get: deprecate(function() {\r\n    return this[kStateSymbol].bindState;\r\n  }, 'Socket.prototype._bindState is deprecated', 'DEP0112'),\r\n  set: deprecate(function(val) {\r\n    this[kStateSymbol].bindState = val;\r\n  }, 'Socket.prototype._bindState is deprecated', 'DEP0112')\r\n});\r\n\r\n\r\nObjectDefineProperty(Socket.prototype, '_queue', {\r\n  __proto__: null,\r\n  get: deprecate(function() {\r\n    return this[kStateSymbol].queue;\r\n  }, 'Socket.prototype._queue is deprecated', 'DEP0112'),\r\n  set: deprecate(function(val) {\r\n    this[kStateSymbol].queue = val;\r\n  }, 'Socket.prototype._queue is deprecated', 'DEP0112')\r\n});\r\n\r\n\r\nObjectDefineProperty(Socket.prototype, '_reuseAddr', {\r\n  __proto__: null,\r\n  get: deprecate(function() {\r\n    return this[kStateSymbol].reuseAddr;\r\n  }, 'Socket.prototype._reuseAddr is deprecated', 'DEP0112'),\r\n  set: deprecate(function(val) {\r\n    this[kStateSymbol].reuseAddr = val;\r\n  }, 'Socket.prototype._reuseAddr is deprecated', 'DEP0112')\r\n});\r\n\r\n\r\nSocket.prototype._healthCheck = deprecate(function() {\r\n  healthCheck(this);\r\n}, 'Socket.prototype._healthCheck() is deprecated', 'DEP0112');\r\n\r\n\r\nSocket.prototype._stopReceiving = deprecate(function() {\r\n  stopReceiving(this);\r\n}, 'Socket.prototype._stopReceiving() is deprecated', 'DEP0112');\r\n\r\n\r\n// Legacy alias on the C++ wrapper object. This is not public API, so we may\r\n// want to runtime-deprecate it at some point. There's no hurry, though.\r\nObjectDefineProperty(UDP.prototype, 'owner', {\r\n  __proto__: null,\r\n  get() { return this[owner_symbol]; },\r\n  set(v) { return this[owner_symbol] = v; }\r\n});\r\n\r\n\r\nmodule.exports = {\r\n  _createSocketHandle: deprecate(\r\n    _createSocketHandle,\r\n    'dgram._createSocketHandle() is deprecated',\r\n    'DEP0112'\r\n  ),\r\n  createSocket,\r\n  Socket\r\n};\r\n",
    "name": "node:dgram",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 597,
    "sourcePositions": []
  },
  {
    "url": "node:internal/dgram",
    "source": "'use strict';\r\n\r\nconst {\r\n  FunctionPrototypeBind,\r\n  Symbol,\r\n} = primordials;\r\n\r\nconst { codes } = require('internal/errors');\r\nconst { UDP } = internalBinding('udp_wrap');\r\nconst { guessHandleType } = internalBinding('util');\r\nconst {\r\n  isInt32,\r\n  validateFunction,\r\n} = require('internal/validators');\r\nconst { UV_EINVAL } = internalBinding('uv');\r\nconst {\r\n  ERR_SOCKET_BAD_TYPE,\r\n} = codes;\r\nconst kStateSymbol = Symbol('state symbol');\r\nlet dns;  // Lazy load for startup performance.\r\n\r\n\r\nfunction lookup4(lookup, address, callback) {\r\n  return lookup(address || '127.0.0.1', 4, callback);\r\n}\r\n\r\n\r\nfunction lookup6(lookup, address, callback) {\r\n  return lookup(address || '::1', 6, callback);\r\n}\r\n\r\nfunction newHandle(type, lookup) {\r\n  if (lookup === undefined) {\r\n    if (dns === undefined) {\r\n      dns = require('dns');\r\n    }\r\n\r\n    lookup = dns.lookup;\r\n  } else {\r\n    validateFunction(lookup, 'lookup');\r\n  }\r\n\r\n  if (type === 'udp4') {\r\n    const handle = new UDP();\r\n\r\n    handle.lookup = FunctionPrototypeBind(lookup4, handle, lookup);\r\n    return handle;\r\n  }\r\n\r\n  if (type === 'udp6') {\r\n    const handle = new UDP();\r\n\r\n    handle.lookup = FunctionPrototypeBind(lookup6, handle, lookup);\r\n    handle.bind = handle.bind6;\r\n    handle.connect = handle.connect6;\r\n    handle.send = handle.send6;\r\n    return handle;\r\n  }\r\n\r\n  throw new ERR_SOCKET_BAD_TYPE();\r\n}\r\n\r\n\r\nfunction _createSocketHandle(address, port, addressType, fd, flags) {\r\n  const handle = newHandle(addressType);\r\n  let err;\r\n\r\n  if (isInt32(fd) && fd > 0) {\r\n    const type = guessHandleType(fd);\r\n    if (type !== 'UDP') {\r\n      err = UV_EINVAL;\r\n    } else {\r\n      err = handle.open(fd);\r\n    }\r\n  } else if (port || address) {\r\n    err = handle.bind(address, port || 0, flags);\r\n  }\r\n\r\n  if (err) {\r\n    handle.close();\r\n    return err;\r\n  }\r\n\r\n  return handle;\r\n}\r\n\r\n\r\nmodule.exports = {\r\n  kStateSymbol,\r\n  _createSocketHandle,\r\n  newHandle\r\n};\r\n",
    "name": "dgram",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 598,
    "sourcePositions": []
  },
  {
    "url": "node:internal/socket_list",
    "source": "'use strict';\r\n\r\nconst { ERR_CHILD_CLOSED_BEFORE_REPLY } = require('internal/errors').codes;\r\n\r\nconst EventEmitter = require('events');\r\n\r\n// This object keeps track of the sockets that are sent\r\nclass SocketListSend extends EventEmitter {\r\n  constructor(child, key) {\r\n    super();\r\n    this.key = key;\r\n    this.child = child;\r\n    child.once('exit', () => this.emit('exit', this));\r\n  }\r\n\r\n  _request(msg, cmd, swallowErrors, callback) {\r\n    const self = this;\r\n\r\n    if (!this.child.connected) return onclose();\r\n    this.child._send(msg, undefined, swallowErrors);\r\n\r\n    function onclose() {\r\n      self.child.removeListener('internalMessage', onreply);\r\n      callback(new ERR_CHILD_CLOSED_BEFORE_REPLY());\r\n    }\r\n\r\n    function onreply(msg) {\r\n      if (!(msg.cmd === cmd && msg.key === self.key)) return;\r\n      self.child.removeListener('disconnect', onclose);\r\n      self.child.removeListener('internalMessage', onreply);\r\n\r\n      callback(null, msg);\r\n    }\r\n\r\n    this.child.once('disconnect', onclose);\r\n    this.child.on('internalMessage', onreply);\r\n  }\r\n\r\n  close(callback) {\r\n    this._request({\r\n      cmd: 'NODE_SOCKET_NOTIFY_CLOSE',\r\n      key: this.key\r\n    }, 'NODE_SOCKET_ALL_CLOSED', true, callback);\r\n  }\r\n\r\n  getConnections(callback) {\r\n    this._request({\r\n      cmd: 'NODE_SOCKET_GET_COUNT',\r\n      key: this.key\r\n    }, 'NODE_SOCKET_COUNT', false, (err, msg) => {\r\n      if (err) return callback(err);\r\n      callback(null, msg.count);\r\n    });\r\n  }\r\n}\r\n\r\n\r\n// This object keeps track of the sockets that are received\r\nclass SocketListReceive extends EventEmitter {\r\n  constructor(child, key) {\r\n    super();\r\n\r\n    this.connections = 0;\r\n    this.key = key;\r\n    this.child = child;\r\n\r\n    function onempty(self) {\r\n      if (!self.child.connected) return;\r\n\r\n      self.child._send({\r\n        cmd: 'NODE_SOCKET_ALL_CLOSED',\r\n        key: self.key\r\n      }, undefined, true);\r\n    }\r\n\r\n    this.child.on('internalMessage', (msg) => {\r\n      if (msg.key !== this.key) return;\r\n\r\n      if (msg.cmd === 'NODE_SOCKET_NOTIFY_CLOSE') {\r\n        // Already empty\r\n        if (this.connections === 0) return onempty(this);\r\n\r\n        // Wait for sockets to get closed\r\n        this.once('empty', onempty);\r\n      } else if (msg.cmd === 'NODE_SOCKET_GET_COUNT') {\r\n        if (!this.child.connected) return;\r\n        this.child._send({\r\n          cmd: 'NODE_SOCKET_COUNT',\r\n          key: this.key,\r\n          count: this.connections\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  add(obj) {\r\n    this.connections++;\r\n\r\n    // Notify the previous owner of the socket about its state change\r\n    obj.socket.once('close', () => {\r\n      this.connections--;\r\n\r\n      if (this.connections === 0) this.emit('empty', this);\r\n    });\r\n  }\r\n}\r\n\r\nmodule.exports = { SocketListSend, SocketListReceive };\r\n",
    "name": "socket_list",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 599,
    "sourcePositions": []
  },
  {
    "url": "node:internal/cluster/round_robin_handle",
    "source": "'use strict';\r\n\r\nconst {\r\n  ArrayIsArray,\r\n  Boolean,\r\n  ObjectCreate,\r\n  SafeMap,\r\n} = primordials;\r\n\r\nconst assert = require('internal/assert');\r\nconst net = require('net');\r\nconst { sendHelper } = require('internal/cluster/utils');\r\nconst { append, init, isEmpty, peek, remove } = require('internal/linkedlist');\r\nconst { constants } = internalBinding('tcp_wrap');\r\n\r\nmodule.exports = RoundRobinHandle;\r\n\r\nfunction RoundRobinHandle(key, address, { port, fd, flags, backlog, readableAll, writableAll }) {\r\n  this.key = key;\r\n  this.all = new SafeMap();\r\n  this.free = new SafeMap();\r\n  this.handles = init(ObjectCreate(null));\r\n  this.handle = null;\r\n  this.server = net.createServer(assert.fail);\r\n\r\n  if (fd >= 0)\r\n    this.server.listen({ fd, backlog });\r\n  else if (port >= 0) {\r\n    this.server.listen({\r\n      port,\r\n      host: address,\r\n      // Currently, net module only supports `ipv6Only` option in `flags`.\r\n      ipv6Only: Boolean(flags & constants.UV_TCP_IPV6ONLY),\r\n      backlog,\r\n    });\r\n  } else\r\n    this.server.listen({\r\n      path: address,\r\n      backlog,\r\n      readableAll,\r\n      writableAll,\r\n    });  // UNIX socket path.\r\n  this.server.once('listening', () => {\r\n    this.handle = this.server._handle;\r\n    this.handle.onconnection = (err, handle) => this.distribute(err, handle);\r\n    this.server._handle = null;\r\n    this.server = null;\r\n  });\r\n}\r\n\r\nRoundRobinHandle.prototype.add = function(worker, send) {\r\n  assert(this.all.has(worker.id) === false);\r\n  this.all.set(worker.id, worker);\r\n\r\n  const done = () => {\r\n    if (this.handle.getsockname) {\r\n      const out = {};\r\n      this.handle.getsockname(out);\r\n      // TODO(bnoordhuis) Check err.\r\n      send(null, { sockname: out }, null);\r\n    } else {\r\n      send(null, null, null);  // UNIX socket.\r\n    }\r\n\r\n    this.handoff(worker);  // In case there are connections pending.\r\n  };\r\n\r\n  if (this.server === null)\r\n    return done();\r\n\r\n  // Still busy binding.\r\n  this.server.once('listening', done);\r\n  this.server.once('error', (err) => {\r\n    send(err.errno, null);\r\n  });\r\n};\r\n\r\nRoundRobinHandle.prototype.remove = function(worker) {\r\n  const existed = this.all.delete(worker.id);\r\n\r\n  if (!existed)\r\n    return false;\r\n\r\n  this.free.delete(worker.id);\r\n\r\n  if (this.all.size !== 0)\r\n    return false;\r\n\r\n  while (!isEmpty(this.handles)) {\r\n    const handle = peek(this.handles);\r\n    handle.close();\r\n    remove(handle);\r\n  }\r\n\r\n  this.handle.close();\r\n  this.handle = null;\r\n  return true;\r\n};\r\n\r\nRoundRobinHandle.prototype.distribute = function(err, handle) {\r\n  // If `accept` fails just skip it (handle is undefined)\r\n  if (err) {\r\n    return;\r\n  }\r\n  append(this.handles, handle);\r\n  // eslint-disable-next-line node-core/no-array-destructuring\r\n  const [ workerEntry ] = this.free; // this.free is a SafeMap\r\n\r\n  if (ArrayIsArray(workerEntry)) {\r\n    const { 0: workerId, 1: worker } = workerEntry;\r\n    this.free.delete(workerId);\r\n    this.handoff(worker);\r\n  }\r\n};\r\n\r\nRoundRobinHandle.prototype.handoff = function(worker) {\r\n  if (!this.all.has(worker.id)) {\r\n    return;  // Worker is closing (or has closed) the server.\r\n  }\r\n\r\n  const handle = peek(this.handles);\r\n\r\n  if (handle === null) {\r\n    this.free.set(worker.id, worker);  // Add to ready queue again.\r\n    return;\r\n  }\r\n\r\n  remove(handle);\r\n\r\n  const message = { act: 'newconn', key: this.key };\r\n\r\n  sendHelper(worker.process, message, handle, (reply) => {\r\n    if (reply.accepted)\r\n      handle.close();\r\n    else\r\n      this.distribute(0, handle);  // Worker is shutting down. Send to another.\r\n\r\n    this.handoff(worker);\r\n  });\r\n};\r\n",
    "name": "round_robin_handle",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 600,
    "sourcePositions": []
  },
  {
    "url": "node:internal/cluster/utils",
    "source": "'use strict';\r\n\r\nconst {\r\n  ReflectApply,\r\n  SafeMap,\r\n} = primordials;\r\n\r\nmodule.exports = {\r\n  sendHelper,\r\n  internal\r\n};\r\n\r\nconst callbacks = new SafeMap();\r\nlet seq = 0;\r\n\r\nfunction sendHelper(proc, message, handle, cb) {\r\n  if (!proc.connected)\r\n    return false;\r\n\r\n  // Mark message as internal. See INTERNAL_PREFIX\r\n  // in lib/internal/child_process.js\r\n  message = { cmd: 'NODE_CLUSTER', ...message, seq };\r\n\r\n  if (typeof cb === 'function')\r\n    callbacks.set(seq, cb);\r\n\r\n  seq += 1;\r\n  return proc.send(message, handle);\r\n}\r\n\r\n// Returns an internalMessage listener that hands off normal messages\r\n// to the callback but intercepts and redirects ACK messages.\r\nfunction internal(worker, cb) {\r\n  return function onInternalMessage(message, handle) {\r\n    if (message.cmd !== 'NODE_CLUSTER')\r\n      return;\r\n\r\n    let fn = cb;\r\n\r\n    if (message.ack !== undefined) {\r\n      const callback = callbacks.get(message.ack);\r\n\r\n      if (callback !== undefined) {\r\n        fn = callback;\r\n        callbacks.delete(message.ack);\r\n      }\r\n    }\r\n\r\n    ReflectApply(fn, worker, arguments);\r\n  };\r\n}\r\n",
    "name": "node:internal/cluster/utils",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 601,
    "sourcePositions": []
  },
  {
    "url": "node:internal/cluster/shared_handle",
    "source": "'use strict';\r\nconst { SafeMap } = primordials;\r\nconst assert = require('internal/assert');\r\nconst dgram = require('internal/dgram');\r\nconst net = require('net');\r\n\r\nmodule.exports = SharedHandle;\r\n\r\nfunction SharedHandle(key, address, { port, addressType, fd, flags }) {\r\n  this.key = key;\r\n  this.workers = new SafeMap();\r\n  this.handle = null;\r\n  this.errno = 0;\r\n\r\n  let rval;\r\n  if (addressType === 'udp4' || addressType === 'udp6')\r\n    rval = dgram._createSocketHandle(address, port, addressType, fd, flags);\r\n  else\r\n    rval = net._createServerHandle(address, port, addressType, fd, flags);\r\n\r\n  if (typeof rval === 'number')\r\n    this.errno = rval;\r\n  else\r\n    this.handle = rval;\r\n}\r\n\r\nSharedHandle.prototype.add = function(worker, send) {\r\n  assert(!this.workers.has(worker.id));\r\n  this.workers.set(worker.id, worker);\r\n  send(this.errno, null, this.handle);\r\n};\r\n\r\nSharedHandle.prototype.remove = function(worker) {\r\n  if (!this.workers.has(worker.id))\r\n    return false;\r\n\r\n  this.workers.delete(worker.id);\r\n\r\n  if (this.workers.size !== 0)\r\n    return false;\r\n\r\n  this.handle.close();\r\n  this.handle = null;\r\n  return true;\r\n};\r\n",
    "name": "shared_handle",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 602,
    "sourcePositions": []
  },
  {
    "url": "node:internal/cluster/worker",
    "source": "'use strict';\r\n\r\nconst {\r\n  ObjectSetPrototypeOf,\r\n  ReflectApply,\r\n} = primordials;\r\n\r\nconst EventEmitter = require('events');\r\n\r\nconst { kEmptyObject } = require('internal/util');\r\n\r\nmodule.exports = Worker;\r\n\r\n// Common Worker implementation shared between the cluster primary and workers.\r\nfunction Worker(options) {\r\n  if (!(this instanceof Worker))\r\n    return new Worker(options);\r\n\r\n  ReflectApply(EventEmitter, this, []);\r\n\r\n  if (options === null || typeof options !== 'object')\r\n    options = kEmptyObject;\r\n\r\n  this.exitedAfterDisconnect = undefined;\r\n\r\n  this.state = options.state || 'none';\r\n  this.id = options.id | 0;\r\n\r\n  if (options.process) {\r\n    this.process = options.process;\r\n    this.process.on('error', (code, signal) =>\r\n      this.emit('error', code, signal)\r\n    );\r\n    this.process.on('message', (message, handle) =>\r\n      this.emit('message', message, handle)\r\n    );\r\n  }\r\n}\r\n\r\nObjectSetPrototypeOf(Worker.prototype, EventEmitter.prototype);\r\nObjectSetPrototypeOf(Worker, EventEmitter);\r\n\r\nWorker.prototype.kill = function() {\r\n  ReflectApply(this.destroy, this, arguments);\r\n};\r\n\r\nWorker.prototype.send = function() {\r\n  return ReflectApply(this.process.send, this.process, arguments);\r\n};\r\n\r\nWorker.prototype.isDead = function() {\r\n  return this.process.exitCode != null || this.process.signalCode != null;\r\n};\r\n\r\nWorker.prototype.isConnected = function() {\r\n  return this.process.connected;\r\n};\r\n",
    "name": "worker",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 603,
    "sourcePositions": []
  }
]}
